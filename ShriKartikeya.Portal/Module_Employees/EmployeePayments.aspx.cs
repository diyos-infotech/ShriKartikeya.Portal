using System;
using System.Web;
using System.Collections;
using System.Data;
using System.Web.UI.HtmlControls;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Globalization;
using System.IO;
using iTextSharp.text;
using iTextSharp.text.pdf;
using KLTS.Data;
using System.Collections.Generic;
using ShriKartikeya.Portal.DAL;

namespace ShriKartikeya.Portal
{
    public partial class EmployeePayments : System.Web.UI.Page
    {
        AppConfiguration config = new AppConfiguration();
        GridViewExportUtil gve = new GridViewExportUtil();
        string EmpIDPrefix = "";
        string CmpIDPrefix = "";
        string UserId = "";
        string Emp_Id = "";
        string Fontstyle = "";
        string CFontstyle = "";
        string BranchID = "";

        protected void Page_Load(object sender, EventArgs e)
        {

            try
            {

                lblpayment.Text = "";
                GetWebConfigdata();
                if (!IsPostBack)
                {
                    if (Session["UserId"] != null && Session["AccessLevel"] != null)
                    {

                    }
                    else
                    {
                        Response.Redirect("login.aspx");
                    }
                    if (this.Master != null)
                    {
                        HtmlControl emplink = (HtmlControl)this.Master.Master.FindControl("ContentPlaceHolder1").FindControl("s4");
                        if (emplink != null)
                        {
                            emplink.Attributes["class"] = "current";
                        }
                    }
                    // ddlcname.Items.Add("--Select--");
                    //LoadClientNames();
                    //LoadClientList();
                    var formatInfoinfo = new DateTimeFormatInfo();
                    string[] monthName = formatInfoinfo.MonthNames;
                    string month = monthName[DateTime.Now.Month - 1];

                    ddlmonth.Items.Add(month);
                    try
                    {
                        month = monthName[DateTime.Now.Month - 2];
                    }
                    catch (IndexOutOfRangeException ex)
                    {
                        month = monthName[12 - (2 - DateTime.Now.Month)];
                    }
                    ddlmonth.Items.Add(month);
                    try
                    {
                        month = monthName[DateTime.Now.Month - 3];
                    }
                    catch (IndexOutOfRangeException ex)
                    {
                        month = monthName[12 - (3 - DateTime.Now.Month)];
                    }
                    ddlmonth.Items.Add(month);

                    ddlmonth.Items.Insert(0, "-Select-");
                }
            }
            catch (Exception ex)
            {

                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Your Session Expired');", true);
                Response.Redirect("~/Login.aspx");
            }
        }

        protected void GetWebConfigdata()
        {

            EmpIDPrefix = Session["EmpIDPrefix"].ToString();
            CmpIDPrefix = Session["CmpIDPrefix"].ToString();
            BranchID = Session["BranchID"].ToString();
            UserId = Session["UserId"].ToString();
            Emp_Id = Session["Emp_Id"].ToString();

        }

        public void VisibleGeneratebutton()
        {

        }

        protected void Fillcname()
        {
            if (ddlClients.SelectedIndex > 0)
            {
                ddlcname.SelectedValue = ddlClients.SelectedValue;
            }
            else
            {
                ddlcname.SelectedIndex = 0;
            }
        }

        protected void FillClientid()
        {
            if (ddlcname.SelectedIndex > 0)
            {
                ddlClients.SelectedValue = ddlcname.SelectedValue;
            }
            else
            {
                ddlClients.SelectedIndex = 0;
            }
        }

        protected void LoadClientNames()
        {
            DataTable dtBranch = GlobalData.Instance.LoadBranchOnUserID(BranchID);

            DataTable DtClientids = GlobalData.Instance.LoadCNames(CmpIDPrefix, dtBranch);
            if (DtClientids.Rows.Count > 0)
            {
                ddlcname.DataValueField = "Clientid";
                ddlcname.DataTextField = "clientname";
                ddlcname.DataSource = DtClientids;
                ddlcname.DataBind();
            }
            ddlcname.Items.Insert(0, "-Select-");

        }

        protected void LoadClientList()
        {
            DataTable dtBranch = GlobalData.Instance.LoadBranchOnUserID(BranchID);

            DataTable DtClientNames = GlobalData.Instance.LoadCIds(CmpIDPrefix, dtBranch);
            if (DtClientNames.Rows.Count > 0)
            {
                ddlClients.DataValueField = "Clientid";
                ddlClients.DataTextField = "Clientid";
                ddlClients.DataSource = DtClientNames;
                ddlClients.DataBind();
            }
            ddlClients.Items.Insert(0, "-Select-");
        }

        protected int GetMonth(string NameOfmonth)
        {
            int month = -1;
            var formatInfoinfo = new DateTimeFormatInfo();
            string[] monthName = formatInfoinfo.MonthNames;
            for (int i = 0; i < monthName.Length; i++)
            {
                if (monthName[i].CompareTo(NameOfmonth) == 0)
                {
                    month = i + 1;
                    break;
                }
            }
            return month;
        }

        protected void ddlmonth_SelectedIndexChanged(object sender, EventArgs e)
        {
            Cleardata();
            ClearNonPaysheetGenerated();
            bool SelectAll = false;
            string BillType = "";
            int Month = GetMonthBasedOnSelectionDateorMonth();
            SelectAll = false;
            if (chkalllist.Checked == true)
                SelectAll = true;

            bool excludeList = false;
            if (chkexcludelist.Checked == true)
                excludeList = false;
            BillType = "PaySheet";
            LoadClientIDBasedonMonth(Month, BillType, SelectAll, excludeList);
            ClearNonPaysheetGenerated();
            NonGeneratedPaysheetList();
            DisplayData();

            GetBillingDuties();
        }

        public void GetBillingDuties()
        {
            int month = GetMonthBasedOnSelectionDateorMonth();


            #region  Begin Get Contract Id Based on The Last Day

            var ContractID = "";

            DateTime LastDay = DateTime.Now;
            if (Chk_Month.Checked == false)
            {
                LastDay = Timings.Instance.GetLastDayForSelectedMonth(ddlmonth.SelectedIndex);
            }
            if (Chk_Month.Checked == true)
            {
                LastDay = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
            }

            Hashtable HtGetContractID = new Hashtable();
            var SPNameForGetContractID = "GetContractIDBasedOnthMonth";
            HtGetContractID.Add("@clientid", ddlClients.SelectedValue);
            HtGetContractID.Add("@LastDay", LastDay);
            DataTable DTContractID = config.ExecuteAdaptorAsyncWithParams(SPNameForGetContractID, HtGetContractID).Result;

            if (DTContractID.Rows.Count > 0)
            {
                ContractID = DTContractID.Rows[0]["contractid"].ToString();

            }
            else
            {

            }

            #endregion  End Get Contract Id Based on The Last Day

            Hashtable HtGetDutiesData = new Hashtable();
            var SPName = "BillandPaysheetDutiesSummary";
            HtGetDutiesData.Add("@clientid", ddlClients.SelectedValue);
            HtGetDutiesData.Add("@contractid", ContractID);
            HtGetDutiesData.Add("@month", month);

            DataTable dt = config.ExecuteAdaptorAsyncWithParams(SPName, HtGetDutiesData).Result;
            if (dt.Rows.Count > 0)
            {
                GvBillVsPaysheet.Visible = true;
                GvBillVsPaysheet.DataSource = dt;
                GvBillVsPaysheet.DataBind();

            }
            else
            {
                GvBillVsPaysheet.Visible = false;
                GvBillVsPaysheet.DataSource = null;
                GvBillVsPaysheet.DataBind();
            }

        }
        protected void DisplayData()
        {
            if (ddlClients.SelectedIndex > 0)
            {
                try
                {
                    int payMonth = 0;
                    if (ddlmonth.SelectedIndex >= 0)
                        payMonth = GetMonth(ddlmonth.SelectedValue);
                    else
                        return;

                    //selected months year
                    //int month = Timings.Instance.GetIdForSelectedMonth(ddlmonth.SelectedIndex);// GlobalData.Instance.GetMonth(ddlmonth.SelectedIndex);

                    int month = GetMonthBasedOnSelectionDateorMonth();

                    #region Begin New Code As on [28-10-2013]
                    #region Begin Code For Declaration As on [28-10-2013]
                    var SPName = "";
                    Hashtable HtPaysheet = new Hashtable();
                    var CLIENTID = "";
                    var MONTH = 0;
                    DataTable dt = null;

                    #endregion  End Code For Declaration As on [28-10-2013]

                    #region Begin Code Assign Values To the variables  As on [28-10-2013]
                    SPName = "GetEmppaysheetBasedonClientandmonth";
                    CLIENTID = ddlClients.SelectedValue;
                    MONTH = month;
                    #endregion  End Code Assign Values To the variables  As on [28-10-2013]

                    #region  Begin Code For HT Parameters as on [28-10-2013]
                    HtPaysheet.Add("@clientid", CLIENTID);
                    HtPaysheet.Add("@month", month);
                    #endregion End  Code For HT Parameters as on [28-10-2013]

                    #region  Begin Code For Calling Stored Procedure as on [28-10-2013]
                    dt = config.ExecuteAdaptorAsyncWithParams(SPName, HtPaysheet).Result;
                    #endregion End  Code For Calling Stored Procedure as on [28-10-2013]
                    #endregion  End New Code As on [28-10-2013]


                    if (dt.Rows.Count > 0)
                    {
                        gvattendancezero.DataSource = dt;
                        gvattendancezero.DataBind();
                        VisibleFreeze();


                        float totalActualamount = 0;
                        float totalctcamount = 0;
                        decimal totalDuties = 0;
                        decimal totalOts = 0;
                        decimal totalwo = 0;
                        decimal totalnhs = 0;
                        decimal totalnpots = 0;
                        float totaltempgross = 0;
                        float totalBasic = 0;
                        float totalDA = 0;
                        float totalHRA = 0;
                        float totalCCA = 0;
                        float totalConveyance = 0;
                        float totalWA = 0;
                        float totalOA = 0;
                        float totalGrass = 0;
                        float totalOTAmount = 0;
                        float totalPF = 0;
                        float totalVPF = 0;
                        float totalESI = 0;
                        float totalProfTax = 0;
                        float totalSalAdv = 0;
                        float totalUniformDed = 0;
                        float totalAdvDed = 0;
                        float totalWCDed = 0;
                        float totalCanteenAdv = 0;
                        float totalLeaveEncashAmt = 0;
                        float totalGratuity = 0;
                        float totalBonus = 0;
                        float totalnfhs = 0;
                        float totalDed = 0;
                        float totalOtherDed = 0;
                        float totalIncentivs = 0;
                        float totalWoAmt = 0;
                        float totalNhsAmt = 0;
                        float totalNpotsAmt = 0;
                        float totalPenalty = 0;
                        float totalRC = 0;
                        float totalCS = 0;
                        float totalOWF = 0;
                        float totalSecDepDed = 0;
                        float totalloanded = 0;
                        float totalGenDed = 0;
                        float totalctc = 0;

                        float totalAttBonus = 0;
                        float totalTravelAllw = 0;
                        float totalNightShiftAllw = 0;
                        float totalFoodAllowance = 0;
                        float totalmedicalallowance = 0;
                        float totalUniformAllw = 0;

                        float totalAdv4Ded = 0;
                        float totalNightRoundDed = 0;
                        float totalManpowerMobDed = 0;
                        float totalMobileusageDed = 0;
                        float totalMediClaimDed = 0;
                        float totalCrisisDed = 0;
                        float totalMobInstDed = 0;
                        float totalTDSDed = 0;


                        float totalSpecialAllowance = 0;
                        float totalMobileAllowance = 0;
                        float totalNPCl25Per = 0;
                        float totalTransport6Per = 0;
                        float totalTransport = 0;

                        float totalRentDed = 0;
                        float totalMedicalDed = 0;
                        float totalMLWFDed = 0;
                        float totalFoodDed = 0;
                        float totalAddlAmount = 0;


                        float totalElectricityDed = 0;
                        float totalTransportDed = 0;
                        float totalDccDed = 0;
                        float totalLeaveDed = 0;
                        float totalLicenseDed = 0;
                        float totalpfempr = 0;
                        float totalesiempr = 0;
                        float totalDiv = 0;
                        float totalArea = 0;
                        float totalTelephoneBillDed = 0;
                        float totalADDL4HR = 0;
                        float totalQTRALLOW = 0;
                        float totalRELALLOW = 0;
                        float totalSITEALLOW = 0;
                        float totalGunAllw = 0;
                        float totalFireAllw = 0;
                        float totalTelephoneAllw = 0;
                        float totalReimbursement = 0;
                        float totalHardshipAllw = 0;
                        float totalPaidHolidayAllw = 0;
                        float totalRegistrationFee = 0;
                        float totalDriverSalary = 0;
                        for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            float actAmount = 0;
                            string actualAmount = dt.Rows[i]["ActualAmount"].ToString();
                            if (actualAmount.Trim().Length > 0)
                            {
                                actAmount = Convert.ToSingle(actualAmount);
                            }
                            if (actAmount >= 0)
                            {
                                #region
                                totalActualamount += actAmount;

                                string Div = dt.Rows[i]["DivisionName"].ToString();
                                if (Div.Trim().Length > 0)
                                {
                                    totalDiv += Convert.ToSingle(Div);
                                }

                                string duties = dt.Rows[i]["NoOfDuties"].ToString();
                                if (duties.Trim().Length > 0)
                                {
                                    totalDuties += Convert.ToDecimal(duties);
                                }
                                string ots = dt.Rows[i]["OTs"].ToString();
                                if (ots.Trim().Length > 0)
                                {
                                    totalOts += Convert.ToDecimal(ots);
                                }

                                string wos = dt.Rows[i]["wo"].ToString();
                                if (wos.Trim().Length > 0)
                                {
                                    totalwo += Convert.ToDecimal(wos);
                                }
                                string nhs = dt.Rows[i]["nhs"].ToString();
                                if (nhs.Trim().Length > 0)
                                {
                                    totalnhs += Convert.ToDecimal(nhs);
                                }
                                string npots = dt.Rows[i]["pldays"].ToString();
                                if (npots.Trim().Length > 0)
                                {
                                    totalnpots += Convert.ToDecimal(npots);
                                }
                                string ntempgross = dt.Rows[i]["tempgross"].ToString();
                                if (ntempgross.Trim().Length > 0)
                                {
                                    totaltempgross += Convert.ToSingle(ntempgross);
                                }

                                string strBasic = dt.Rows[i]["Basic"].ToString();
                                if (strBasic.Trim().Length > 0)
                                {
                                    totalBasic += Convert.ToSingle(strBasic);
                                }
                                string strDA = dt.Rows[i]["DA"].ToString();
                                if (strDA.Trim().Length > 0)
                                {
                                    totalDA += Convert.ToSingle(strDA);
                                }
                                string strhHRA = dt.Rows[i]["HRA"].ToString();
                                if (strhHRA.Trim().Length > 0)
                                {
                                    totalHRA += Convert.ToSingle(strhHRA);
                                }
                                string strCCA = dt.Rows[i]["CCA"].ToString();
                                if (strCCA.Trim().Length > 0)
                                {
                                    totalCCA += Convert.ToSingle(strCCA);
                                }
                                string strConveyance = dt.Rows[i]["Conveyance"].ToString();
                                if (strConveyance.Trim().Length > 0)
                                {
                                    totalConveyance += Convert.ToSingle(strConveyance);
                                }
                                string strWA = dt.Rows[i]["WashAllowance"].ToString();
                                if (strWA.Trim().Length > 0)
                                {
                                    totalWA += Convert.ToSingle(strWA);
                                }
                                string strOA = dt.Rows[i]["OtherAllowance"].ToString();
                                if (strOA.Trim().Length > 0)
                                {
                                    totalOA += Convert.ToSingle(strOA);
                                }

                                string strLeaveEncashAmt = dt.Rows[i]["LeaveEncashAmt"].ToString();
                                if (strCCA.Trim().Length > 0)
                                {
                                    totalLeaveEncashAmt += Convert.ToSingle(strLeaveEncashAmt);
                                }
                                string strGratuity = dt.Rows[i]["Gratuity"].ToString();
                                if (strGratuity.Trim().Length > 0)
                                {
                                    totalGratuity += Convert.ToSingle(strGratuity);
                                }
                                string strBonus = dt.Rows[i]["Bonus"].ToString();
                                if (strBonus.Trim().Length > 0)
                                {
                                    totalBonus += Convert.ToSingle(strBonus);
                                }
                                string strNfhs = dt.Rows[i]["Nfhs"].ToString();
                                if (strNfhs.Trim().Length > 0)
                                {
                                    totalnfhs += Convert.ToSingle(strNfhs);
                                }

                                string strAddlAmount = dt.Rows[i]["AddlAmount"].ToString();
                                if (strAddlAmount.Trim().Length > 0)
                                {
                                    totalAddlAmount += Convert.ToSingle(strAddlAmount);
                                }

                                string strGross = dt.Rows[i]["Gross"].ToString();
                                if (strGross.Trim().Length > 0)
                                {
                                    totalGrass += Convert.ToSingle(strGross);
                                }


                                string strIncentivs = dt.Rows[i]["Incentivs"].ToString();
                                if (strIncentivs.Trim().Length > 0)
                                {
                                    totalIncentivs += Convert.ToSingle(strIncentivs);
                                }

                                string strOTAmount = dt.Rows[i]["OTAmt"].ToString();
                                if (strOTAmount.Trim().Length > 0)
                                {
                                    totalOTAmount += Convert.ToSingle(strOTAmount);
                                }
                                string strSpecialAllowance = dt.Rows[i]["SpecialAllowance"].ToString();
                                if (strSpecialAllowance.Trim().Length > 0)
                                {
                                    totalSpecialAllowance += Convert.ToSingle(strSpecialAllowance);
                                }
                                string strMobileAllowance = dt.Rows[i]["Arrears"].ToString();
                                if (strMobileAllowance.Trim().Length > 0)
                                {
                                    totalMobileAllowance += Convert.ToSingle(strMobileAllowance);
                                }
                                string strNPCl25Per = dt.Rows[i]["OTHrs"].ToString();
                                if (strNPCl25Per.Trim().Length > 0)
                                {
                                    totalNPCl25Per += Convert.ToSingle(strNPCl25Per);
                                }
                                string strTransport6Per = dt.Rows[i]["ServiceWeightage"].ToString();
                                if (strTransport6Per.Trim().Length > 0)
                                {
                                    totalTransport6Per += Convert.ToSingle(strTransport6Per);
                                }
                                string strTransport = dt.Rows[i]["OTHrsAmt"].ToString();
                                if (strTransport.Trim().Length > 0)
                                {
                                    totalTransport += Convert.ToSingle(strTransport);
                                }
                                string strVPF = dt.Rows[i]["VPF"].ToString();
                                if (strVPF.Trim().Length > 0)
                                {
                                    totalVPF += Convert.ToSingle(strVPF);
                                }

                                string strPF = dt.Rows[i]["PF"].ToString();
                                if (strPF.Trim().Length > 0)
                                {
                                    totalPF += Convert.ToSingle(strPF);
                                }
                                string strESI = dt.Rows[i]["ESI"].ToString();
                                if (strESI.Trim().Length > 0)
                                {
                                    totalESI += Convert.ToSingle(strESI);
                                }
                                string strProfTax = dt.Rows[i]["ProfTax"].ToString();
                                if (strProfTax.Trim().Length > 0)
                                {
                                    totalProfTax += Convert.ToSingle(strProfTax);
                                }

                                string strSalAdv = dt.Rows[i]["SalAdvDed"].ToString();
                                if (strSalAdv.Trim().Length > 0)
                                {
                                    totalSalAdv += Convert.ToSingle(strSalAdv);
                                }

                                string strAdvDed = dt.Rows[i]["ADVDed"].ToString();
                                if (strAdvDed.Trim().Length > 0)
                                {
                                    totalAdvDed += Convert.ToSingle(strAdvDed);
                                }

                                string strWCDed = dt.Rows[i]["WCDed"].ToString();
                                if (strWCDed.Trim().Length > 0)
                                {
                                    totalWCDed += Convert.ToSingle(strWCDed);
                                }


                                string strUniformDed = dt.Rows[i]["UniformDed"].ToString();
                                if (strUniformDed.Trim().Length > 0)
                                {
                                    totalUniformDed += Convert.ToSingle(strUniformDed);
                                }


                                string strOtherDed = dt.Rows[i]["OtherDed"].ToString();
                                if (strOtherDed.Trim().Length > 0)
                                {
                                    totalOtherDed += Convert.ToSingle(strOtherDed);
                                }
                                string strCanteenAdv = dt.Rows[i]["CanteenAdv"].ToString();
                                if (strCanteenAdv.Trim().Length > 0)
                                {
                                    totalCanteenAdv += Convert.ToSingle(strCanteenAdv);
                                }
                                string strRentDed = dt.Rows[i]["atmDed"].ToString();
                                if (strRentDed.Trim().Length > 0)
                                {
                                    totalRentDed += Convert.ToSingle(strRentDed);
                                }
                                string strMedicalDed = dt.Rows[i]["MedicalDed"].ToString();
                                if (strMedicalDed.Trim().Length > 0)
                                {
                                    totalMedicalDed += Convert.ToSingle(strMedicalDed);
                                }
                                string strMLWFDed = dt.Rows[i]["MLWFDed"].ToString();
                                if (strMLWFDed.Trim().Length > 0)
                                {
                                    totalMLWFDed += Convert.ToSingle(strMLWFDed);
                                }
                                string strFoodDed = dt.Rows[i]["FoodDed"].ToString();
                                if (strFoodDed.Trim().Length > 0)
                                {
                                    totalFoodDed += Convert.ToSingle(strFoodDed);
                                }

                                string strElectricityDed = dt.Rows[i]["IDCardDed"].ToString();
                                if (strElectricityDed.Trim().Length > 0)
                                {
                                    totalElectricityDed += Convert.ToSingle(strElectricityDed);
                                }


                                string strTransportDed = dt.Rows[i]["RentDed1"].ToString();
                                if (strTransportDed.Trim().Length > 0)
                                {
                                    totalTransportDed += Convert.ToSingle(strTransportDed);
                                }
                                string strDccDed = dt.Rows[i]["Finesded1"].ToString();
                                if (strDccDed.Trim().Length > 0)
                                {
                                    totalDccDed += Convert.ToSingle(strDccDed);
                                }


                                string strLeaveDed = dt.Rows[i]["PVCDed"].ToString();
                                if (strLeaveDed.Trim().Length > 0)
                                {
                                    totalLeaveDed += Convert.ToSingle(strLeaveDed);
                                }
                                string strLicenseDed = dt.Rows[i]["LicenseDed"].ToString();
                                if (strLicenseDed.Trim().Length > 0)
                                {
                                    totalLicenseDed += Convert.ToSingle(strLicenseDed);
                                }

                                //
                                string strAdv4Ded = dt.Rows[i]["Adv4Ded"].ToString();
                                if (strAdv4Ded.Trim().Length > 0)
                                {
                                    totalAdv4Ded += Convert.ToSingle(strAdv4Ded);
                                }
                                string strNightRoundDed = dt.Rows[i]["TDSDed"].ToString();
                                if (strNightRoundDed.Trim().Length > 0)
                                {
                                    totalNightRoundDed += Convert.ToSingle(strNightRoundDed);
                                }

                                string strManpowerMobDed = dt.Rows[i]["ManpowerMobDed"].ToString();
                                if (strManpowerMobDed.Trim().Length > 0)
                                {
                                    totalManpowerMobDed += Convert.ToSingle(strManpowerMobDed);
                                }

                                string strMobileusageDed = dt.Rows[i]["MobileusageDed"].ToString();
                                if (strMobileusageDed.Trim().Length > 0)
                                {
                                    totalMobileusageDed += Convert.ToSingle(strMobileusageDed);
                                }

                                string strMediClaimDed = dt.Rows[i]["MediClaimDed"].ToString();
                                if (strMediClaimDed.Trim().Length > 0)
                                {
                                    totalMediClaimDed += Convert.ToSingle(strMediClaimDed);
                                }

                                string strCrisisDed = dt.Rows[i]["CrisisDed"].ToString();
                                if (strCrisisDed.Trim().Length > 0)
                                {
                                    totalCrisisDed += Convert.ToSingle(strCrisisDed);
                                }

                                string strMobInstDed = dt.Rows[i]["MobInstDed"].ToString();
                                if (strMobInstDed.Trim().Length > 0)
                                {
                                    totalMobInstDed += Convert.ToSingle(strMobInstDed);
                                }

                                string strTDSDed = dt.Rows[i]["TDSDed"].ToString();
                                if (strTDSDed.Trim().Length > 0)
                                {
                                    totalTDSDed += Convert.ToSingle(strTDSDed);
                                }

                                //




                                string strDed = dt.Rows[i]["TotalDeductions"].ToString();
                                if (strDed.Trim().Length > 0)
                                {
                                    totalDed += Convert.ToSingle(strDed);
                                }



                                string strWoAmt = dt.Rows[i]["WOAmt"].ToString();
                                if (strWoAmt.Trim().Length > 0)
                                {
                                    totalWoAmt += Convert.ToSingle(strWoAmt);
                                }

                                string strNhsAmt = dt.Rows[i]["Nhsamt"].ToString();
                                if (strNhsAmt.Trim().Length > 0)
                                {
                                    totalNhsAmt += Convert.ToSingle(strNhsAmt);
                                }

                                string strNpotsAmt = dt.Rows[i]["Npotsamt"].ToString();
                                if (strNpotsAmt.Trim().Length > 0)
                                {
                                    totalNpotsAmt += Convert.ToSingle(strNpotsAmt);
                                }

                                string strPenalty = dt.Rows[i]["Penalty"].ToString();
                                if (strPenalty.Trim().Length > 0)
                                {
                                    totalPenalty += Convert.ToSingle(strPenalty);
                                }

                                string strRC = dt.Rows[i]["RC"].ToString();
                                if (strRC.Trim().Length > 0)
                                {
                                    totalRC += Convert.ToSingle(strRC);
                                }

                                string strCS = dt.Rows[i]["CS"].ToString();
                                if (strCS.Trim().Length > 0)
                                {
                                    totalCS += Convert.ToSingle(strCS);
                                }

                                string strOWF = dt.Rows[i]["OWF"].ToString();
                                if (strOWF.Trim().Length > 0)
                                {
                                    totalOWF += Convert.ToSingle(strOWF);
                                }

                                string strSecDep = dt.Rows[i]["SecurityDepDed"].ToString();
                                if (strSecDep.Trim().Length > 0)
                                {
                                    totalSecDepDed += Convert.ToSingle(strSecDep);
                                }

                                string strLoanDed = dt.Rows[i]["LoanDed"].ToString();
                                if (strLoanDed.Trim().Length > 0)
                                {
                                    totalloanded += Convert.ToSingle(strLoanDed);
                                }

                                string strGeneralDed = dt.Rows[i]["GeneralDed"].ToString();
                                if (strGeneralDed.Trim().Length > 0)
                                {
                                    totalGenDed += Convert.ToSingle(strGeneralDed);
                                }

                                string strAttBonus = dt.Rows[i]["AttBonus"].ToString();
                                if (strAttBonus.Trim().Length > 0)
                                {
                                    totalAttBonus += Convert.ToSingle(strAttBonus);
                                }

                                string strTravelAllw = dt.Rows[i]["TravelAllw"].ToString();
                                if (strTravelAllw.Trim().Length > 0)
                                {
                                    totalTravelAllw += Convert.ToSingle(strTravelAllw);
                                }

                                string strNightShiftAllw = dt.Rows[i]["PerformanceAllw"].ToString();
                                if (strNightShiftAllw.Trim().Length > 0)
                                {
                                    totalNightShiftAllw += Convert.ToSingle(strNightShiftAllw);
                                }

                                string strFoodAllowance = dt.Rows[i]["FoodAllowance"].ToString();
                                if (strFoodAllowance.Trim().Length > 0)
                                {
                                    totalFoodAllowance += Convert.ToSingle(strFoodAllowance);
                                }

                                string strmedicalallowance = dt.Rows[i]["medicalallowance"].ToString();
                                if (strmedicalallowance.Trim().Length > 0)
                                {
                                    totalmedicalallowance += Convert.ToSingle(strmedicalallowance);
                                }

                                string strUniformAllw = dt.Rows[i]["UniformAllw"].ToString();
                                if (strUniformAllw.Trim().Length > 0)
                                {
                                    totalUniformAllw += Convert.ToSingle(strUniformAllw);
                                }

                                string strTelephoneBillDed = dt.Rows[i]["TelephoneBillDed"].ToString();
                                if (strTelephoneBillDed.Trim().Length > 0)
                                {
                                    totalTelephoneBillDed += Convert.ToSingle(strTelephoneBillDed);
                                }

                                string strpfempr = dt.Rows[i]["pfempr"].ToString();
                                if (strpfempr.Trim().Length > 0)
                                {
                                    totalpfempr += Convert.ToSingle(strpfempr);
                                }

                                string stresiempr = dt.Rows[i]["esiempr"].ToString();
                                if (stresiempr.Trim().Length > 0)
                                {
                                    totalesiempr += Convert.ToSingle(stresiempr);
                                }

                                string strctc = dt.Rows[i]["CTC"].ToString();
                                if (strctc.Trim().Length > 0)
                                {
                                    totalctc += Convert.ToSingle(strctc);
                                }

                                string strADDL4HR = dt.Rows[i]["ADDL4HR"].ToString();
                                if (strADDL4HR.Trim().Length > 0)
                                {
                                    totalADDL4HR += Convert.ToSingle(strADDL4HR);

                                }

                                string strQTRALLOW = dt.Rows[i]["QTRALLOW"].ToString();
                                if (strQTRALLOW.Trim().Length > 0)
                                {
                                    totalQTRALLOW += Convert.ToSingle(strQTRALLOW);

                                }

                                string strRELALLOW = dt.Rows[i]["RELALLOW"].ToString();
                                if (strRELALLOW.Trim().Length > 0)
                                {
                                    totalRELALLOW += Convert.ToSingle(strRELALLOW);

                                }

                                string strSITEALLOW = dt.Rows[i]["SITEALLOW"].ToString();
                                if (strSITEALLOW.Trim().Length > 0)
                                {
                                    totalSITEALLOW += Convert.ToSingle(strSITEALLOW);

                                }

                                string strGunAllw = dt.Rows[i]["GunAllw"].ToString();
                                if (strGunAllw.Trim().Length > 0)
                                {
                                    totalGunAllw += Convert.ToSingle(strGunAllw);

                                }

                                string strFireAllw = dt.Rows[i]["FireAllw"].ToString();
                                if (strFireAllw.Trim().Length > 0)
                                {
                                    totalFireAllw += Convert.ToSingle(strFireAllw);

                                }

                                string strTelephoneAllw = dt.Rows[i]["TelephoneAllw"].ToString();
                                if (strTelephoneAllw.Trim().Length > 0)
                                {
                                    totalTelephoneAllw += Convert.ToSingle(strTelephoneAllw);

                                }

                                string strReimbursement = dt.Rows[i]["Reimbursement"].ToString();
                                if (strReimbursement.Trim().Length > 0)
                                {
                                    totalReimbursement += Convert.ToSingle(strReimbursement);

                                }

                                string strHardshipAllw = dt.Rows[i]["HardshipAllw"].ToString();
                                if (strHardshipAllw.Trim().Length > 0)
                                {
                                    totalHardshipAllw += Convert.ToSingle(strHardshipAllw);

                                }

                                string strPaidHolidayAllw = dt.Rows[i]["PaidHolidayAllw"].ToString();
                                if (strPaidHolidayAllw.Trim().Length > 0)
                                {
                                    totalPaidHolidayAllw += Convert.ToSingle(strPaidHolidayAllw);

                                }

                                string strRegistrationFee = dt.Rows[i]["RegistrationFee"].ToString();
                                if (strRegistrationFee.Trim().Length > 0)
                                {
                                    totalRegistrationFee += Convert.ToSingle(strRegistrationFee);

                                }

                                string strDriverSalary = dt.Rows[i]["DriverSalary"].ToString();
                                if (strDriverSalary.Trim().Length > 0)
                                {
                                    totalDriverSalary += Convert.ToSingle(strDriverSalary);

                                }

                                #endregion

                            }
                        }

                        #region for total

                        Label tot = gvattendancezero.FooterRow.FindControl("lblTotalNetAmount") as Label;
                        tot.Text = Math.Round(totalActualamount).ToString();

                        Label lblTotalDuties = gvattendancezero.FooterRow.FindControl("lblTotalDuties") as Label;
                        lblTotalDuties.Text = (totalDuties).ToString();


                        //Label lblTotalZoneName = gvattendancezero.FooterRow.FindControl("lblTotalZoneName") as Label;
                        //lblTotalZoneName.Text = Math.Round(totalDiv).ToString();

                        if (totalDiv > 0)
                        {
                            //gvattendancezero.Columns[4].Visible = true;
                        }
                        else
                        {
                            //gvattendancezero.Columns[4].Visible = false;
                            gvattendancezero.Columns[2].Visible = false;
                            gvattendancezero.Columns[3].Visible = false;
                            gvattendancezero.Columns[7].Visible = false;
                            gvattendancezero.Columns[9].Visible = false;

                        }


                        Label lblTotalOTs = gvattendancezero.FooterRow.FindControl("lblTotalOTs") as Label;
                        lblTotalOTs.Text = (totalOts).ToString();

                        if (totalOts > 0)
                        {
                            gvattendancezero.Columns[11].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[11].Visible = false;

                        }

                        Label lblTotalNPCl25Per = gvattendancezero.FooterRow.FindControl("lblTotalNPCl25Per") as Label;
                        lblTotalNPCl25Per.Text = (totalNPCl25Per).ToString();

                        if (totalNPCl25Per > 0)
                        {
                            gvattendancezero.Columns[12].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[12].Visible = false;

                        }
                        Label lblTotalwos = gvattendancezero.FooterRow.FindControl("lblTotalwos") as Label;

                        lblTotalwos.Text = (totalwo).ToString();

                        if (totalwo > 0)
                        {
                            gvattendancezero.Columns[13].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[13].Visible = false;

                        }

                        Label lblTotalNhs = gvattendancezero.FooterRow.FindControl("lblTotalNhs") as Label;
                        lblTotalNhs.Text = (totalnhs).ToString();

                        if (totalnhs > 0)
                        {
                            gvattendancezero.Columns[14].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[14].Visible = false;

                        }



                        Label lblTotalNpots = gvattendancezero.FooterRow.FindControl("lblTotalNpots") as Label;
                        lblTotalNpots.Text = (totalnpots).ToString();

                        if (totalnpots > 0)
                        {
                            gvattendancezero.Columns[15].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[15].Visible = false;

                        }

                        Label lblTotaltempgross = gvattendancezero.FooterRow.FindControl("lblTotaltempgross") as Label;
                        lblTotaltempgross.Text = Math.Round(totaltempgross).ToString();
                        if (totaltempgross > 0)
                        {
                            gvattendancezero.Columns[16].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[16].Visible = false;

                        }
                        Label lblTotalBasic = gvattendancezero.FooterRow.FindControl("lblTotalBasic") as Label;
                        lblTotalBasic.Text = Math.Round(totalBasic).ToString();
                        if (totalBasic > 0)
                        {
                            gvattendancezero.Columns[17].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[17].Visible = false;

                        }
                        Label lblTotalDA = gvattendancezero.FooterRow.FindControl("lblTotalDA") as Label;
                        lblTotalDA.Text = Math.Round(totalDA).ToString();

                        if (totalDA > 0)
                        {
                            gvattendancezero.Columns[18].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[18].Visible = false;

                        }

                        Label lblTotalHRA = gvattendancezero.FooterRow.FindControl("lblTotalHRA") as Label;
                        lblTotalHRA.Text = Math.Round(totalHRA).ToString();

                        if (totalHRA > 0)
                        {
                            gvattendancezero.Columns[19].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[19].Visible = false;

                        }

                        Label lblTotalCCA = gvattendancezero.FooterRow.FindControl("lblTotalCCA") as Label;
                        lblTotalCCA.Text = Math.Round(totalCCA).ToString();

                        if (totalCCA > 0)
                        {
                            gvattendancezero.Columns[20].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[20].Visible = false;

                        }

                        Label lblTotalConveyance = gvattendancezero.FooterRow.FindControl("lblTotalConveyance") as Label;
                        lblTotalConveyance.Text = Math.Round(totalConveyance).ToString();

                        if (totalConveyance > 0)
                        {
                            gvattendancezero.Columns[21].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[21].Visible = false;

                        }

                        Label lblTotalWA = gvattendancezero.FooterRow.FindControl("lblTotalWA") as Label;
                        lblTotalWA.Text = Math.Round(totalWA).ToString();

                        if (totalWA > 0)
                        {
                            gvattendancezero.Columns[22].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[22].Visible = false;

                        }

                        Label lblTotalOA = gvattendancezero.FooterRow.FindControl("lblTotalOA") as Label;
                        lblTotalOA.Text = Math.Round(totalOA).ToString();

                        if (totalOA > 0)
                        {
                            gvattendancezero.Columns[23].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[23].Visible = false;

                        }

                        Label lblTotalSpecialAllowance = gvattendancezero.FooterRow.FindControl("lblTotalSpecialAllowance") as Label;
                        lblTotalSpecialAllowance.Text = Math.Round(totalSpecialAllowance).ToString();

                        if (totalSpecialAllowance > 0)
                        {
                            gvattendancezero.Columns[24].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[24].Visible = false;

                        }

                        Label lblTotalUniformAllw = gvattendancezero.FooterRow.FindControl("lblTotalUniformAllw") as Label;
                        lblTotalUniformAllw.Text = Math.Round(totalUniformAllw).ToString();

                        if (totalUniformAllw > 0)
                        {
                            gvattendancezero.Columns[25].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[25].Visible = false;
                        }


                        Label lblTotalMobileAllowance = gvattendancezero.FooterRow.FindControl("lblTotalMobileAllowance") as Label;
                        lblTotalMobileAllowance.Text = Math.Round(totalMobileAllowance).ToString();

                        if (totalMobileAllowance > 0)
                        {
                            gvattendancezero.Columns[26].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[26].Visible = true;

                        }


                        Label lblTotalmedicalallowance = gvattendancezero.FooterRow.FindControl("lblTotalmedicalallowance") as Label;
                        lblTotalmedicalallowance.Text = Math.Round(totalmedicalallowance).ToString();

                        if (totalmedicalallowance > 0)
                        {
                            gvattendancezero.Columns[27].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[27].Visible = false;
                        }



                        Label lblTotalFoodAllowance = gvattendancezero.FooterRow.FindControl("lblTotalFoodAllowance") as Label;
                        lblTotalFoodAllowance.Text = Math.Round(totalFoodAllowance).ToString();

                        if (totalFoodAllowance > 0)
                        {
                            gvattendancezero.Columns[28].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[28].Visible = false;
                        }

                        Label lblTotalNightShiftAllw = gvattendancezero.FooterRow.FindControl("lblTotalNightShiftAllw") as Label;
                        lblTotalNightShiftAllw.Text = Math.Round(totalNightShiftAllw).ToString();

                        if (totalNightShiftAllw > 0)
                        {
                            gvattendancezero.Columns[29].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[29].Visible = false;
                        }


                        Label lblTotalTravelAllw = gvattendancezero.FooterRow.FindControl("lblTotalTravelAllw") as Label;
                        lblTotalTravelAllw.Text = Math.Round(totalTravelAllw).ToString();

                        if (totalTravelAllw > 0)
                        {
                            gvattendancezero.Columns[30].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[30].Visible = false;
                        }

                        Label lblTotalLeaveEncashAmt = gvattendancezero.FooterRow.FindControl("lblTotalLeaveEncashAmt") as Label;
                        lblTotalLeaveEncashAmt.Text = Math.Round(totalLeaveEncashAmt).ToString();

                        if (totalLeaveEncashAmt > 0)
                        {
                            gvattendancezero.Columns[31].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[31].Visible = false;

                        }
                        Label lblTotalGratuity = gvattendancezero.FooterRow.FindControl("lblTotalGratuity") as Label;
                        lblTotalGratuity.Text = Math.Round(totalGratuity).ToString();

                        if (totalGratuity > 0)
                        {
                            gvattendancezero.Columns[32].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[32].Visible = false;

                        }

                        Label lblTotalBonus = gvattendancezero.FooterRow.FindControl("lblTotalBonus") as Label;
                        lblTotalBonus.Text = Math.Round(totalBonus).ToString();


                        if (totalBonus > 0)
                        {
                            gvattendancezero.Columns[33].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[33].Visible = false;

                        }

                        Label lblTotalNfhs = gvattendancezero.FooterRow.FindControl("lblTotalNfhs") as Label;
                        lblTotalNfhs.Text = Math.Round(totalnfhs).ToString();

                        if (totalnfhs > 0)
                        {
                            gvattendancezero.Columns[34].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[34].Visible = false;

                        }

                        Label lblTotalrc = gvattendancezero.FooterRow.FindControl("lblTotalrc") as Label;
                        lblTotalrc.Text = Math.Round(totalRC).ToString();

                        if (totalRC > 0)
                        {
                            gvattendancezero.Columns[35].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[35].Visible = false;

                        }

                        Label lblTotalcs = gvattendancezero.FooterRow.FindControl("lblTotalcs") as Label;
                        lblTotalcs.Text = Math.Round(totalCS).ToString();

                        if (totalCS > 0)
                        {
                            gvattendancezero.Columns[36].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[36].Visible = false;

                        }


                        Label lblTotalIncentivs = gvattendancezero.FooterRow.FindControl("lblTotalIncentivs") as Label;
                        lblTotalIncentivs.Text = Math.Round(totalIncentivs).ToString();
                        if (totalIncentivs > 0)
                        {
                            gvattendancezero.Columns[37].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[37].Visible = true;

                        }
                        Label lblTotalWOAmount = gvattendancezero.FooterRow.FindControl("lblTotalWOAmount") as Label;
                        lblTotalWOAmount.Text = Math.Round(totalWoAmt).ToString();

                        if (totalWoAmt > 0)
                        {
                            gvattendancezero.Columns[38].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[38].Visible = false;

                        }

                        Label lblTotalNhsAmount = gvattendancezero.FooterRow.FindControl("lblTotalNhsAmount") as Label;
                        lblTotalNhsAmount.Text = Math.Round(totalNhsAmt).ToString();

                        if (totalNhsAmt > 0)
                        {
                            gvattendancezero.Columns[39].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[39].Visible = false;

                        }


                        Label lblTotalNpotsAmount = gvattendancezero.FooterRow.FindControl("lblTotalNpotsAmount") as Label;
                        lblTotalNpotsAmount.Text = Math.Round(totalNpotsAmt).ToString();

                        if (totalNpotsAmt > 0)
                        {
                            gvattendancezero.Columns[40].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[40].Visible = false;

                        }

                        Label lblTotalAttBonus = gvattendancezero.FooterRow.FindControl("lblTotalAttBonus") as Label;
                        lblTotalAttBonus.Text = Math.Round(totalAttBonus).ToString();

                        if (totalAttBonus > 0)
                        {
                            gvattendancezero.Columns[41].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[41].Visible = false;

                        }



                        Label lblTotalTransport6Per = gvattendancezero.FooterRow.FindControl("lblTotalTransport6Per") as Label;
                        lblTotalTransport6Per.Text = Math.Round(totalTransport6Per).ToString();

                        if (totalTransport6Per > 0)
                        {
                            gvattendancezero.Columns[42].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[42].Visible = false;

                        }

                        Label lbltTotalAddlAmount = gvattendancezero.FooterRow.FindControl("lbltTotalAddlAmount") as Label;
                        lbltTotalAddlAmount.Text = Math.Round(totalAddlAmount).ToString();

                        if (totalAddlAmount > 0)
                        {
                            gvattendancezero.Columns[43].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[43].Visible = false;

                        }

                        Label lblTotalADDL4HR = gvattendancezero.FooterRow.FindControl("lblTotalADDL4HR") as Label;
                        lblTotalADDL4HR.Text = Math.Round(totalADDL4HR).ToString();

                        if (totalADDL4HR > 0)
                        {
                            gvattendancezero.Columns[44].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[44].Visible = false;

                        }
                        Label lblTotalQTRALLOW = gvattendancezero.FooterRow.FindControl("lblTotalQTRALLOW") as Label;
                        lblTotalQTRALLOW.Text = Math.Round(totalQTRALLOW).ToString();

                        if (totalQTRALLOW > 0)
                        {
                            gvattendancezero.Columns[45].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[45].Visible = false;

                        }

                        Label lblTotalRELALLOW = gvattendancezero.FooterRow.FindControl("lblTotalRELALLOW") as Label;
                        lblTotalRELALLOW.Text = Math.Round(totalRELALLOW).ToString();
                        if (totalRELALLOW > 0)
                        {
                            gvattendancezero.Columns[46].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[46].Visible = false;

                        }
                        Label lblTotalSITEALLOW = gvattendancezero.FooterRow.FindControl("lblTotalSITEALLOW") as Label;
                        lblTotalSITEALLOW.Text = Math.Round(totalSITEALLOW).ToString();
                        if (totalSITEALLOW > 0)
                        {
                            gvattendancezero.Columns[47].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[47].Visible = false;

                        }

                        Label lblTotalGunAllw = gvattendancezero.FooterRow.FindControl("lblTotalGunAllw") as Label;
                        lblTotalGunAllw.Text = Math.Round(totalGunAllw).ToString();
                        if (totalGunAllw > 0)
                        {
                            gvattendancezero.Columns[48].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[48].Visible = false;

                        }
                        Label lblTotalFireAllw = gvattendancezero.FooterRow.FindControl("lblTotalFireAllw") as Label;
                        lblTotalFireAllw.Text = Math.Round(totalFireAllw).ToString();
                        if (totalFireAllw > 0)
                        {
                            gvattendancezero.Columns[49].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[49].Visible = false;

                        }

                        Label lblTotalTelephoneAllw = gvattendancezero.FooterRow.FindControl("lblTotalTelephoneAllw") as Label;
                        lblTotalTelephoneAllw.Text = Math.Round(totalTelephoneAllw).ToString();
                        if (totalTelephoneAllw > 0)
                        {
                            gvattendancezero.Columns[50].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[50].Visible = false;

                        }
                        Label lblTotalReimbursement = gvattendancezero.FooterRow.FindControl("lblTotalReimbursement") as Label;
                        lblTotalReimbursement.Text = Math.Round(totalReimbursement).ToString();
                        if (totalReimbursement > 0)
                        {
                            gvattendancezero.Columns[51].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[51].Visible = false;

                        }

                        Label lblTotalHardshipAllw = gvattendancezero.FooterRow.FindControl("lblTotalHardshipAllw") as Label;
                        lblTotalHardshipAllw.Text = Math.Round(totalHardshipAllw).ToString();
                        if (totalHardshipAllw > 0)
                        {
                            gvattendancezero.Columns[52].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[52].Visible = false;

                        }
                        Label lblTotalPaidHolidayAllw = gvattendancezero.FooterRow.FindControl("lblTotalPaidHolidayAllw") as Label;
                        lblTotalPaidHolidayAllw.Text = Math.Round(totalPaidHolidayAllw).ToString();
                        if (totalPaidHolidayAllw > 0)
                        {
                            gvattendancezero.Columns[53].Visible = true;

                        }
                        else
                        {
                            gvattendancezero.Columns[53].Visible = false;

                        }


                        Label lblTotalGross = gvattendancezero.FooterRow.FindControl("lblTotalGross") as Label;
                        lblTotalGross.Text = Math.Round(totalGrass).ToString();
                        if (totalGrass > 0)
                        {
                            gvattendancezero.Columns[54].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[54].Visible = false;

                        }

                        Label lblTotalOTAmount = gvattendancezero.FooterRow.FindControl("lblTotalOTAmount") as Label;
                        lblTotalOTAmount.Text = Math.Round(totalOTAmount).ToString();

                        if (totalOTAmount > 0)
                        {
                            gvattendancezero.Columns[55].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[55].Visible = false;

                        }

                        Label lblTotalTransport = gvattendancezero.FooterRow.FindControl("lblTotalTransport") as Label;
                        lblTotalTransport.Text = Math.Round(totalTransport).ToString();

                        if (totalTransport > 0)
                        {
                            gvattendancezero.Columns[56].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[56].Visible = false;

                        }

                        Label lblTotalVPF = gvattendancezero.FooterRow.FindControl("lblTotalVPF") as Label;
                        lblTotalVPF.Text = Math.Round(totalVPF).ToString();

                        Label lblTotalPF = gvattendancezero.FooterRow.FindControl("lblTotalPF") as Label;
                        lblTotalPF.Text = Math.Round(totalPF).ToString();

                        Label lblTotalESI = gvattendancezero.FooterRow.FindControl("lblTotalESI") as Label;
                        lblTotalESI.Text = Math.Round(totalESI).ToString();

                        Label lblTotalProfTax = gvattendancezero.FooterRow.FindControl("lblTotalProfTax") as Label;
                        lblTotalProfTax.Text = Math.Round(totalProfTax).ToString();
                        if (totalProfTax > 0)
                        {
                            gvattendancezero.Columns[60].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[60].Visible = true;

                        }


                        Label lblTotalsaladv = gvattendancezero.FooterRow.FindControl("lblTotalsaladv") as Label;
                        lblTotalsaladv.Text = Math.Round(totalSalAdv).ToString();

                        if (totalSalAdv > 0)
                        {
                            gvattendancezero.Columns[61].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[61].Visible = false;

                        }

                        Label lblTotaladvded = gvattendancezero.FooterRow.FindControl("lblTotaladvded") as Label;
                        lblTotaladvded.Text = Math.Round(totalAdvDed).ToString();
                        if (totalAdvDed > 0)
                        {
                            gvattendancezero.Columns[62].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[62].Visible = false;

                        }

                        Label lblTotalwcded = gvattendancezero.FooterRow.FindControl("lblTotalwcded") as Label;
                        lblTotalwcded.Text = Math.Round(totalWCDed).ToString();
                        if (totalWCDed > 0)
                        {
                            gvattendancezero.Columns[63].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[63].Visible = false;

                        }

                        Label lblTotalUniformDed = gvattendancezero.FooterRow.FindControl("lblTotalUniformDed") as Label;
                        lblTotalUniformDed.Text = Math.Round(totalUniformDed).ToString();

                        if (totalUniformDed > 0)
                        {
                            gvattendancezero.Columns[64].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[64].Visible = false;

                        }


                        Label lblTotalOtherDed = gvattendancezero.FooterRow.FindControl("lblTotalOtherDed") as Label;
                        lblTotalOtherDed.Text = Math.Round(totalOtherDed).ToString();

                        if (totalOtherDed > 0)
                        {
                            gvattendancezero.Columns[65].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[65].Visible = false;

                        }

                        Label lbltotalloanded = gvattendancezero.FooterRow.FindControl("lblTotaltotalloanded") as Label;
                        lbltotalloanded.Text = Math.Round(totalloanded).ToString();

                        if (totalloanded > 0)
                        {
                            gvattendancezero.Columns[66].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[66].Visible = false;

                        }

                        Label lblTotalCanteenAdv = gvattendancezero.FooterRow.FindControl("lblTotalcantadv") as Label;
                        lblTotalCanteenAdv.Text = Math.Round(totalCanteenAdv).ToString();

                        if (totalCanteenAdv > 0)
                        {
                            gvattendancezero.Columns[67].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[67].Visible = false;

                        }


                        Label lblTotalSecDepDed = gvattendancezero.FooterRow.FindControl("lblTotalSecDepDed") as Label;
                        lblTotalSecDepDed.Text = Math.Round(totalSecDepDed).ToString();


                        if (totalSecDepDed > 0)
                        {
                            gvattendancezero.Columns[68].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[68].Visible = false;

                        }



                        Label lblTotalGeneralDed = gvattendancezero.FooterRow.FindControl("lblTotalGeneralDed") as Label;
                        lblTotalGeneralDed.Text = Math.Round(totalGenDed).ToString();


                        if (totalGenDed > 0)
                        {
                            gvattendancezero.Columns[69].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[69].Visible = false;

                        }

                        Label lblTotalowf = gvattendancezero.FooterRow.FindControl("lblTotalowf") as Label;
                        lblTotalowf.Text = Math.Round(totalOWF).ToString();

                        if (totalOWF > 0)
                        {
                            gvattendancezero.Columns[70].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[70].Visible = false;

                        }

                        Label lblTotalPenalty = gvattendancezero.FooterRow.FindControl("lblTotalPenalty") as Label;
                        lblTotalPenalty.Text = Math.Round(totalPenalty).ToString();

                        if (totalPenalty > 0)
                        {
                            gvattendancezero.Columns[71].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[71].Visible = false;

                        }


                        Label lblTotalRentDed = gvattendancezero.FooterRow.FindControl("lblTotalRentDed") as Label;
                        lblTotalRentDed.Text = Math.Round(totalRentDed).ToString();

                        if (totalRentDed > 0)
                        {
                            gvattendancezero.Columns[72].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[72].Visible = false;

                        }


                        Label lblTotalMedicalDed = gvattendancezero.FooterRow.FindControl("lblTotalMedicalDed") as Label;
                        lblTotalMedicalDed.Text = Math.Round(totalMedicalDed).ToString();

                        if (totalMedicalDed > 0)
                        {
                            gvattendancezero.Columns[73].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[73].Visible = false;

                        }

                        Label lblTotalMLWFDed = gvattendancezero.FooterRow.FindControl("lblTotalMLWFDed") as Label;
                        lblTotalMLWFDed.Text = Math.Round(totalMLWFDed).ToString();

                        if (totalMLWFDed > 0)
                        {
                            gvattendancezero.Columns[74].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[74].Visible = false;

                        }

                        Label lblTotalFoodDed = gvattendancezero.FooterRow.FindControl("lblTotalFoodDed") as Label;
                        lblTotalFoodDed.Text = Math.Round(totalFoodDed).ToString();

                        if (totalFoodDed > 0)
                        {
                            gvattendancezero.Columns[75].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[75].Visible = false;

                        }


                        ///

                        Label lblTotalElectricityDed = gvattendancezero.FooterRow.FindControl("lblTotalElectricityDed") as Label;
                        lblTotalElectricityDed.Text = Math.Round(totalElectricityDed).ToString();

                        if (totalElectricityDed > 0)
                        {
                            gvattendancezero.Columns[76].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[76].Visible = false;
                        }

                        Label lblTotalTransportDed = gvattendancezero.FooterRow.FindControl("lblTotalTransportDed") as Label;
                        lblTotalTransportDed.Text = Math.Round(totalTransportDed).ToString();

                        if (totalTransportDed > 0)
                        {
                            gvattendancezero.Columns[77].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[77].Visible = false;
                        }


                        Label lblTotalDccDed = gvattendancezero.FooterRow.FindControl("lblTotalDccDed") as Label;
                        lblTotalDccDed.Text = Math.Round(totalDccDed).ToString();

                        if (totalDccDed > 0)
                        {
                            gvattendancezero.Columns[78].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[78].Visible = false;
                        }

                        Label lblTotalLeaveDed = gvattendancezero.FooterRow.FindControl("lblTotalLeaveDed") as Label;
                        lblTotalLeaveDed.Text = Math.Round(totalLeaveDed).ToString();

                        if (totalLeaveDed > 0)
                        {
                            gvattendancezero.Columns[79].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[79].Visible = false;
                        }

                        Label lblTotalLicenseDed = gvattendancezero.FooterRow.FindControl("lblTotalLicenseDed") as Label;
                        lblTotalLicenseDed.Text = Math.Round(totalLicenseDed).ToString();

                        if (totalLicenseDed > 0)
                        {
                            gvattendancezero.Columns[80].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[80].Visible = false;
                        }


                        ///

                        Label lblTotalAdv4Ded = gvattendancezero.FooterRow.FindControl("lblTotalAdv4Ded") as Label;
                        lblTotalAdv4Ded.Text = Math.Round(totalAdv4Ded).ToString();
                        if (totalAdv4Ded > 0)
                        {
                            gvattendancezero.Columns[81].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[81].Visible = false;

                        }

                        Label lblTotalNightRoundDed = gvattendancezero.FooterRow.FindControl("lblTotalNightRoundDed") as Label;
                        lblTotalNightRoundDed.Text = Math.Round(totalNightRoundDed).ToString();
                        if (totalNightRoundDed > 0)
                        {
                            gvattendancezero.Columns[82].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[82].Visible = false;

                        }

                        Label lblTotalManpowerMobDed = gvattendancezero.FooterRow.FindControl("lblTotalManpowerMobDed") as Label;
                        lblTotalManpowerMobDed.Text = Math.Round(totalManpowerMobDed).ToString();
                        if (totalManpowerMobDed > 0)
                        {
                            gvattendancezero.Columns[83].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[83].Visible = false;

                        }


                        Label lblTotalMobileusageDed = gvattendancezero.FooterRow.FindControl("lblTotalMobileusageDed") as Label;
                        lblTotalMobileusageDed.Text = Math.Round(totalMobileusageDed).ToString();
                        if (totalMobileusageDed > 0)
                        {
                            gvattendancezero.Columns[84].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[84].Visible = false;

                        }

                        Label lblTotalMediClaimDed = gvattendancezero.FooterRow.FindControl("lblTotalMediClaimDed") as Label;
                        lblTotalMediClaimDed.Text = Math.Round(totalMediClaimDed).ToString();
                        if (totalMediClaimDed > 0)
                        {
                            gvattendancezero.Columns[85].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[85].Visible = false;

                        }


                        Label lblTotalCrisisDed = gvattendancezero.FooterRow.FindControl("lblTotalCrisisDed") as Label;
                        lblTotalCrisisDed.Text = Math.Round(totalCrisisDed).ToString();
                        if (totalCrisisDed > 0)
                        {
                            gvattendancezero.Columns[86].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[86].Visible = false;

                        }

                        Label lblTotalTelephoneBillDed = gvattendancezero.FooterRow.FindControl("lblTotalTelephoneBillDed") as Label;
                        lblTotalTelephoneBillDed.Text = Math.Round(totalTelephoneBillDed).ToString();
                        if (totalTelephoneBillDed > 0)
                        {
                            gvattendancezero.Columns[87].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[87].Visible = false;

                        }


                        Label lblTotalRegistrationFee = gvattendancezero.FooterRow.FindControl("lblTotalRegistrationFee") as Label;
                        lblTotalRegistrationFee.Text = Math.Round(totalTelephoneBillDed).ToString();
                        if (totalRegistrationFee > 0)
                        {
                            gvattendancezero.Columns[88].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[88].Visible = false;
                        }

                        Label lblTotalDriverSalary = gvattendancezero.FooterRow.FindControl("lblTotalDriverSalary") as Label;
                        lblTotalDriverSalary.Text = Math.Round(totalDriverSalary).ToString();
                        if (totalDriverSalary > 0)
                        {
                            gvattendancezero.Columns[90].Visible = true;
                        }
                        else
                        {
                            gvattendancezero.Columns[90].Visible = false;
                        }

                        //NEW CODE add bu dhana on 10-6-2022 ref:009362
                        //New code add as on 24/12/2013 by venkat

                        #endregion

                    }
                    else
                    {
                        gvattendancezero.DataSource = null;
                        gvattendancezero.DataBind();
                    }
                }
                catch (Exception ex)
                {
                }
            }
        }

        public void NonGeneratedPaysheetList()
        {
            var month = 0;
            month = GetMonthBasedOnSelectionDateorMonth();

            string qry = "select Timings from emppaysheet where clientid='" + ddlClients.SelectedValue + "' and month='" + month + "'";
            DataTable dts = config.ExecuteAdaptorAsyncWithQueryParams(qry).Result;
            string date = "";

            if (dts.Rows.Count > 0)
            {
                date = dts.Rows[0]["Timings"].ToString();
                PnlNonGeneratedPaysheet.Visible = true;

                lblPaysheetGeneratedTime.Text = "<b>Paysheet generated on  " + date + "</b>";

            }
            else
            {
                lblPaysheetGeneratedTime.Text = "";
            }

            string query = "";
            DataTable dt = null;

            query = "select wagetype from contracts where clientid='" + ddlClients.SelectedValue + "'";
            dt = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

            string WageType = "";

            if (dt.Rows.Count > 0)
            {
                WageType = dt.Rows[0]["wagetype"].ToString();

            }

            if (WageType == "2")
            {
                query = "select ea.Design,d.design as Designation,ClientId,NoOfDuties,MONTH from EmpAttendance ea inner join Designations d on d.DesignId=ea.Design  " +
                               " where ea.Design not in (select Designations from contractdetailssw where clientid='" + ddlClients.SelectedValue + "') and ea.Design>0 and (NoOfDuties+OT)>0  and ClientId='" + ddlClients.SelectedValue + "' and MONTH='" + month + "'  group by ea.Design,ClientId,NoOfDuties,MONTH,d.design";

                dt = config.ExecuteAdaptorAsyncWithQueryParams(query).Result;

                if (dt.Rows.Count > 0)
                {
                    PnlNonGeneratedPaysheet.Visible = true;
                    lblText.Visible = true;
                    lblReason.Visible = true;
                    GvNonGeneratedEmp.Visible = true;
                    GvEmpList.Visible = true;
                    lblEmplist.Visible = true;

                    lblText.Text = "Paysheet is not generated for the employees with the following Designations";
                    lblReason.Text = "(<b>Reason : Please check the designation of the employees given in the below table. <br> Update the Salary Structure in Contracts Special Wages Table ,<br> or change the designation of the employee(s) in attendance. </b>)";

                    GvNonGeneratedEmp.DataSource = dt;
                    GvNonGeneratedEmp.DataBind();

                    lblEmplist.Text = "List of employees for whom paysheet is not generated are ";

                    string Empetails = "select ea.EmpId,ea.Design,d.design as Designation,ClientId,NoOfDuties,MONTH,(empfname+' '+empmname+' '+emplname) as empname from EmpAttendance ea inner join Designations d on d.DesignId=ea.Design inner join empdetails ed on ed.empid=ea.empid  " +
                               " where ea.Design not in (select Designations from contractdetailssw  where clientid='" + ddlClients.SelectedValue + "') and ea.Design>0 and (NoOfDuties+OT)>0  and ClientId='" + ddlClients.SelectedValue + "' and MONTH='" + month + "' ";
                    DataTable dtEmpetails = config.ExecuteAdaptorAsyncWithQueryParams(Empetails).Result;

                    if (dtEmpetails.Rows.Count > 0)
                    {
                        GvEmpList.DataSource = dtEmpetails;
                        GvEmpList.DataBind();
                    }
                    else
                    {
                        GvEmpList.DataSource = null;
                        GvEmpList.DataBind();
                        lblText.Text = "";
                        lblReason.Text = "";
                        lblEmplist.Text = "";
                    }


                }
                else
                {
                    GvEmpList.DataSource = null;
                    GvEmpList.DataBind();
                    GvNonGeneratedEmp.DataSource = null;
                    GvNonGeneratedEmp.DataBind();
                    lblText.Text = "";
                    lblReason.Text = "";
                    lblEmplist.Text = "";
                }
            }

            else
            {
                GvEmpList.DataSource = null;
                GvEmpList.DataBind();
                GvNonGeneratedEmp.DataSource = null;
                GvNonGeneratedEmp.DataBind();
                lblText.Text = "";
                lblReason.Text = "";
                lblEmplist.Text = "";
            }

        }

        public void getpaysheetVsbills()
        {

            GvBillVsPaysheet.DataSource = null;
            GvBillVsPaysheet.DataBind();

            int month = GetMonthBasedOnSelectionDateorMonth();


            string sqlqry = "select 'Total Bill Amount' as Text1,isnull(round((ub.GrandTotal ),0),0) as grandtotal,'Total Billing Duties' as Text2,isnull(round(sum(cast(ubb.DutyHours as float)),0),0) as dutyhours from unitbill ub left join UnitBillBreakup ubb on ub.unitid=ubb.UnitId and ub.month=ubb.month where ub.Month='" + month + "' and ub.unitid='" + ddlClients.SelectedValue + "' group by grandtotal " +
                            " union " +
                            "select 'Total Paysheet Amount' as Text1,round(sum(ActualAmount),0) as ActualAmount,'Total Paysheet Duties' as Text2,round(sum(NoOfDuties+ots+ots1+nhs+wo),0) as NoOfDuties from EmpPaySheet where clientid='" + ddlClients.SelectedValue + "' and MONTH='" + month + "'" +
                            " union " +
                            "select 'Difference' as Text1, (select round(sum(cast(GrandTotal as float) ),0)as grandtotal from UnitBill  where Month='" + month + "' and unitid='" + ddlClients.SelectedValue + "')-(select round(sum(ActualAmount),0) as ActualAmount from EmpPaySheet where MONTH='" + month + "' and clientid='" + ddlClients.SelectedValue + "')" +
                            ",'' as Text2,(select isnull(round(sum(cast(DutyHours as float)),0),0) as dutyhours from UnitBill ub  left join UnitBillBreakup ubb on ub.unitid=ubb.UnitId and ub.month=ubb.month where ub.unitid='" + ddlClients.SelectedValue + "' and  ub.Month='" + month + "')-(Select round(sum(NoOfDuties+ots+ots1+nhs+wo),0) as NoOfDuties from EmpPaySheet where clientid='" + ddlClients.SelectedValue + "' and MONTH='" + month + "')";
            //" union " +
            //"select 'No PF' as Text1,( select COUNT(Pf) from EmpPaySheet where clientid='" + ddlClients.SelectedValue + "' and MONTH='" + month + "' and PF=0)," +
            //"'No ESI' as Text2,(select count(esi) from EmpPaySheet where clientid='" + ddlClients.SelectedValue + "' and MONTH='" + month + "' and esi=0 )";

            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(sqlqry).Result;
            if (dt.Rows.Count > 0)
            {

                GvBillVsPaysheet.DataSource = dt;
                GvBillVsPaysheet.DataBind();
                GvBillVsPaysheet.HeaderRow.Visible = false;


                if ((dt.Rows[1]["grandtotal"].ToString().Length > 0 || dt.Rows[1]["dutyhours"].ToString().Length > 0) && (dt.Rows[0]["grandtotal"].ToString().Length > 0 || dt.Rows[0]["dutyhours"].ToString().Length > 0))
                {
                    GvBillVsPaysheet.Visible = true;
                }
                else
                {
                    GvBillVsPaysheet.Visible = false;

                }
            }
            else
            {
                GvBillVsPaysheet.Visible = false;
                GvBillVsPaysheet.DataSource = null;
                GvBillVsPaysheet.DataBind();
                GvBillVsPaysheet.HeaderRow.Visible = false;
            }

        }

        public string GetMonthNew()
        {
            //string month = "";
            //string year = "";
            string DateVal = "";
            //DateTime date;

            var testDate = 0;
            string EnteredDate = "";

            #region Validation

            if (Txt_Month.Text.Trim().Length > 0)
            {

                try
                {

                    testDate = GlobalData.Instance.CheckEnteredDate(Txt_Month.Text);
                    if (testDate > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('You Are Entered Invalid  DATE.Date Format Should be [DD/MM/YYYY].Ex.01/01/1990');", true);
                        return "0";
                    }
                    EnteredDate = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb")).ToString();
                }
                catch (Exception ex)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('You Are Entered Invalid  DATE.Date Format Should be [DD/MM/YYYY].Ex.01/01/1990');", true);
                    return "0";
                }
            }
            #endregion


            #region  Month Get Based on the Control Selection
            int month = 0;
            if (Chk_Month.Checked == false)
            {
                month = Timings.Instance.GetIdForSelectedMonth(ddlmonth.SelectedIndex);
                DateVal = monthval(month);

            }
            if (Chk_Month.Checked == true)
            {
                DateTime date = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                month = Timings.Instance.GetIdForEnteredMOnth(date);
                DateVal = monthval(month);
            }
            return DateVal;

            #endregion


        }

        public string monthval(int month)
        {
            string monthnew = "";

            if (month.ToString().Length == 3)
            {
                monthnew = month.ToString().Substring(1, 2) + 0 + month.ToString().Substring(0, 1);
            }
            else
            {
                monthnew = month.ToString().Substring(2, 2) + month.ToString().Substring(0, 2);
            }

            return monthnew;

        }

        protected void btnpayment_Click(object sender, EventArgs e)
        {
            try
            {
                var month = 0;
                month = GetMonthBasedOnSelectionDateorMonth();
                var monthnew = "0";
                monthnew = GetMonthNew();

                string QueryWages = "select wagetype from contracts where clientid='" + ddlClients.SelectedValue + "'";
                DataTable dtWages = config.ExecuteAdaptorAsyncWithQueryParams(QueryWages).Result;

                string WagesType = "";

                if (dtWages.Rows.Count > 0)
                {

                    WagesType = dtWages.Rows[0]["wagetype"].ToString();
                }



                #region  Begin Code For Validations as on [18-03-2014]
                if (ddlClients.SelectedIndex == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Please Select Unit Id');", true);
                    return;
                }
                if (Chk_Month.Checked == false)
                {
                    if (ddlmonth.SelectedIndex == 0)
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Please Select Month');", true);
                        return;
                    }
                }
                if (Chk_Month.Checked == true)
                {
                    if (Txt_Month.Text.Trim().Length == 0)
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Please Enter Month');", true);
                        return;
                    }
                }
                #endregion End Code For Validations as on [18-03-2014]

                #region  Begin Code For Variable Declarations as on [18-03-2014]
                var ClientID = "";

                DateTime LastDay = DateTime.Now;
                if (Chk_Month.Checked == false)
                {
                    LastDay = Timings.Instance.GetLastDayForSelectedMonth(ddlmonth.SelectedIndex);
                }
                if (Chk_Month.Checked == true)
                {
                    LastDay = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                }
                DataTable DtEmppaysheet = null;
                Hashtable HTEmppaysheet = new Hashtable();

                var Gendays = 0;
                var G_Sdays = 0;

                var ContractID = "";
                var bBillDates = 0;
                var bPaySheetDates = 0;

                #endregion End Code For Variable Declarations    as on [18-03-2014]




                #region  Begin Get Contract Id Based on The Last Day


                Hashtable HtGetContractID = new Hashtable();
                var SPNameForGetContractID = "GetContractIDBasedOnthMonth";
                HtGetContractID.Add("@clientid", ddlClients.SelectedValue);
                HtGetContractID.Add("@LastDay", LastDay);
                DataTable DTContractID = config.ExecuteAdaptorAsyncWithParams(SPNameForGetContractID, HtGetContractID).Result;

                if (DTContractID.Rows.Count > 0)
                {
                    ContractID = DTContractID.Rows[0]["contractid"].ToString();
                    bBillDates = int.Parse(DTContractID.Rows[0]["BillDates"].ToString());
                    bPaySheetDates = int.Parse(DTContractID.Rows[0]["PaySheetDates"].ToString());
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "", "alert('Contract Details Are Not  Avaialable For This Client.');", true);
                    return;
                }

                #endregion  End Get Contract Id Based on The Last Day


                if (Chk_Month.Checked == false)
                {
                    //Gendays = Timings.Instance.GetNoofDaysForSelectedMonth(ddlmonth.SelectedIndex, bBillDates);
                    Gendays = Timings.Instance.GetNoofDaysForSelectedMonth(ddlmonth.SelectedIndex, bPaySheetDates);
                }

                //New Code when select month in Textbox
                if (Chk_Month.Checked == true)
                {
                    DateTime mGendays = DateTime.Now;
                    DateTime date = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                    mGendays = DateTime.Parse(date.ToString());
                    // Gendays = Timings.Instance.GetNoofDaysForEnteredMonth(mGendays, bBillDates);
                    Gendays = Timings.Instance.GetNoofDaysForEnteredMonth(mGendays, bPaySheetDates);
                }
                G_Sdays = Timings.Instance.Get_GS_Days(month, Gendays);

                var SPName = "";

                if (WagesType != "3")
                {
                    SPName = "IMGenratePaysheet";
                }
                else
                {
                    SPName = "IMGenratePaysheet";

                }

                #region  Begin Code For Assign Values To the  Variable  as on [18-03-2014]


                HTEmppaysheet.Add("@Gendays", Gendays);
                HTEmppaysheet.Add("@G_Sdays", G_Sdays);
                HTEmppaysheet.Add("@clientid", ddlClients.SelectedValue);
                HTEmppaysheet.Add("@month", month);
                HTEmppaysheet.Add("@lastday", LastDay);
                HTEmppaysheet.Add("@monthnew", monthnew);
                HTEmppaysheet.Add("@Created_By", UserId);

                #endregion End Code For  Assign Values To the Variable  as on [18-03-2014]

                #region Begin Code For Calling Stored procedure as on [18-03-2014]
                DtEmppaysheet = config.ExecuteAdaptorAsyncWithParamsNew(SPName, HTEmppaysheet).Result;
                #endregion  end Code For Calling Stored procedure as on [18-03-2014]

                #region Begin Code For Resulted Messages as on [ 18-03-2014]
                if (DtEmppaysheet.Rows.Count <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert(' Attendance Not  avaialable For This client');", true);
                    return;
                }
                else
                {
                    GetBillingDuties();
                    DisplayData();
                }
                //bool SelectAll = false;
                //if (chkalllist.Checked == true)
                //    SelectAll = true;

                //bool excludeList = false;
                //if (chkexcludelist.Checked == true)
                //    excludeList = true;
                //string BillType = "PaySheet";
                // month = GetMonthBasedOnSelectionDateorMonth();
                //LoadClientIDBasedonMonth(month, BillType, SelectAll, excludeList);
                #endregion End Code For Resulted Messages as on [ 18-03-2014]

                // NonGeneratedPaysheetList();


            }
            catch (Exception ex)
            {
                lblpayment.Text = ex.Message;
            }
        }

        public int GetMonthBasedOnSelectionDateorMonth()
        {

            var testDate = 0;
            string EnteredDate = "";

            #region Validation

            if (Txt_Month.Text.Trim().Length > 0)
            {

                try
                {

                    testDate = GlobalData.Instance.CheckEnteredDate(Txt_Month.Text);
                    if (testDate > 0)
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('You Are Entered Invalid  DATE.Date Format Should be [DD/MM/YYYY].Ex.01/01/1990');", true);
                        return 0;
                    }
                    EnteredDate = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb")).ToString();
                }
                catch (Exception ex)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('You Are Entered Invalid  DATE.Date Format Should be [DD/MM/YYYY].Ex.01/01/1990');", true);
                    return 0;
                }
            }
            #endregion


            #region  Month Get Based on the Control Selection
            int month = 0;
            if (Chk_Month.Checked == false)
            {
                month = Timings.Instance.GetIdForSelectedMonth(ddlmonth.SelectedIndex);
                //return month;
            }
            if (Chk_Month.Checked == true)
            {
                DateTime date = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                month = Timings.Instance.GetIdForEnteredMOnth(date);
                return month;
            }
            return month;

            #endregion
        }

        protected void gvattendancezero_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            gvattendancezero.PageIndex = e.NewPageIndex;
            gvattendancezero.DataBind();
        }
        public class PageEventHelperL : PdfPageEventHelper
        {
            PdfContentByte cb;
            PdfTemplate template;

            BaseFont bf = BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

            public override void OnOpenDocument(PdfWriter writer, Document document)
            {
                cb = writer.DirectContent;
                template = cb.CreateTemplate(10, 10);
            }
            public override void OnEndPage(PdfWriter writer, Document document)
            {
                base.OnEndPage(writer, document);


                iTextSharp.text.Image imghead = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("~/assets/HeaderPayslip.jpg"));
                iTextSharp.text.Image imgfoot = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("~/assets/FooterPayslip.jpg"));
                //iTextSharp.text.Image imgmiddile = iTextSharp.text.Image.GetInstance(HttpContext.Current.Server.MapPath("~/assets/middileslip.png"));

                //imgfoot.SetAbsolutePosition(0, 0);
                imghead.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                imghead.ScalePercent(58f);//55
                imghead.SetAbsolutePosition(23, 100);

                PdfContentByte cbhead = writer.DirectContent;
                PdfTemplate tpl = cbhead.CreateTemplate(600, 160);
                tpl.AddImage(imghead);


                //imgmiddile.Alignment = (iTextSharp.text.Image.ALIGN_CENTER | iTextSharp.text.Image.UNDERLYING);
                //imgmiddile.ScalePercent(50f);//55
                //imgmiddile.SetAbsolutePosition(5, 100);

                //PdfContentByte cbmiddile = writer.DirectContent;
                //PdfTemplate tp3 = cbmiddile.CreateTemplate(580, 160);
                //tp3.AddImage(imgmiddile);




                imgfoot.ScalePercent(58f);//55
                imgfoot.SetAbsolutePosition(23, 10);

                PdfContentByte cbfoot = writer.DirectContent;
                PdfTemplate tp = cbfoot.CreateTemplate(600, 120);
                tp.AddImage(imgfoot);


                cbfoot.AddTemplate(tp, 8, 10);
                //19,27
                cbhead.AddTemplate(tpl, 8, 790);

                // cbmiddile.AddTemplate(tp3, 8, 600);


                Phrase headPhraseImg = new Phrase(cbfoot + "", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 7, iTextSharp.text.Font.NORMAL));
                Phrase footPhraseImg = new Phrase(cbhead + "", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 7, iTextSharp.text.Font.NORMAL));
                // Phrase middilePhraseImg = new Phrase(cbmiddile + "", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 7, iTextSharp.text.Font.NORMAL));
            }
        }
        protected void btnEmpWageSlip_Click(object sender, EventArgs e)
        {
            try
            {
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Unit ID/Name')", true);
                    return;
                }

                var formatInfoinfo = new DateTimeFormatInfo();
                string[] monthName = formatInfoinfo.MonthNames;
                int payMonth = GetMonth(ddlmonth.SelectedValue);

                int month = GetMonthBasedOnSelectionDateorMonth();
                string selectmonth = string.Empty;

                int Fontsize = int.Parse(ddlfontSize.SelectedValue);
                string fontsyle = "verdana";

                string selectclientaddress = "select * from clients where clientid= '" + ddlClients.SelectedValue + "'";
                DataTable dtclientaddress = config.ExecuteAdaptorAsyncWithQueryParams(selectclientaddress).Result;
                string AddrHno = ""; string AddrColony = ""; string AddrArea = ""; string AddrStreet = ""; string Addrcity = ""; string Addrstate = ""; string Addrpin = "";
                if (dtclientaddress.Rows.Count > 0)
                {

                    AddrHno = dtclientaddress.Rows[0]["ClientAddrHno"].ToString();
                    AddrStreet = dtclientaddress.Rows[0]["ClientAddrStreet"].ToString();
                    AddrArea = dtclientaddress.Rows[0]["ClientAddrArea"].ToString();
                    AddrColony = dtclientaddress.Rows[0]["ClientAddrColony"].ToString();
                    Addrcity = dtclientaddress.Rows[0]["ClientAddrcity"].ToString();
                    Addrstate = dtclientaddress.Rows[0]["ClientAddrstate"].ToString();
                    Addrpin = dtclientaddress.Rows[0]["ClientAddrpin"].ToString();
                }

                string[] ClientAdress = new string[7];
                if (AddrHno.Length > 0)
                {
                    ClientAdress[0] = AddrHno;
                }
                else
                {
                    ClientAdress[0] = "";
                }
                if (AddrStreet.Length > 0)
                {
                    ClientAdress[1] = AddrStreet;
                }
                else
                {
                    ClientAdress[1] = "";
                }
                if (AddrArea.Length > 0)
                {
                    ClientAdress[2] = AddrArea;
                }
                else
                {
                    ClientAdress[2] = "";
                }
                if (AddrColony.Length > 0)
                {
                    ClientAdress[3] = AddrArea;
                }
                else
                {
                    ClientAdress[3] = "";
                }
                if (Addrcity.Length > 0)
                {
                    ClientAdress[4] = AddrColony;
                }
                else
                {
                    ClientAdress[4] = "";
                }
                if (Addrstate.Length > 0)
                {
                    ClientAdress[5] = Addrcity;
                }
                else
                {
                    ClientAdress[5] = "";
                }
                if (Addrpin.Length > 0)
                {
                    ClientAdress[6] = Addrstate;
                }
                else
                {
                    ClientAdress[6] = "";
                }


                string Address1 = string.Empty;

                for (int i = 0; i < 7; i++)
                {
                    Address1 += "  " + ClientAdress[i];
                }


                var list = new List<string>();

                if (gvattendancezero.Rows.Count > 0)
                {
                    for (int i = 0; i < gvattendancezero.Rows.Count; i++)
                    {
                        CheckBox chkEmpid = gvattendancezero.Rows[i].FindControl("chkindividual") as CheckBox;
                        Label lblempid = gvattendancezero.Rows[i].FindControl("lblempid") as Label;

                        if (chkEmpid.Checked == true)
                        {
                            list.Add(lblempid.Text);
                        }

                    }
                }

                string Empids = string.Join(",", list.ToArray());

                if (list.Count == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Empids');", true);
                    return;
                }

                DataTable dtEmpidsList = new DataTable();
                dtEmpidsList.Columns.Add("Empid");
                if (list.Count != 0)
                {
                    foreach (string s in list)
                    {
                        DataRow row = dtEmpidsList.NewRow();
                        row["Empid"] = s;
                        dtEmpidsList.Rows.Add(row);
                    }
                }



                int ChkBonus = 0;
                if (chkbonus.Checked == true)
                {
                    ChkBonus = 1;
                }


                var spname = "EMPWAGESLIPS";
                int option = 0;
                Hashtable ht = new Hashtable();
                ht.Add("@clientid", ddlClients.SelectedValue);
                ht.Add("@month", month);
                ht.Add("@Option", option);
                ht.Add("@EmpIDList", dtEmpidsList);
                ht.Add("@ChkBonus", ChkBonus);
                DataTable dt = config.ExecuteAdaptorAsyncWithParams(spname, ht).Result;


                MemoryStream ms = new MemoryStream();

                int slipsCount = 0;
                string UANNumber = "";

                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL);
                    var writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                    string imagepath1 = Server.MapPath("images");

                    string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                    DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                    string companyName = "Your Company Name";
                    string companyAddress = "Your Company Address";
                    string PFNOForms = "";
                    string TotalPFNOForms = "";
                    if (compInfo.Rows.Count > 0)
                    {
                        companyName = compInfo.Rows[0]["CompanyName"].ToString();
                        companyAddress = compInfo.Rows[0]["Address"].ToString();
                        //PFNOForms = compInfo.Rows[0]["PFNoForms"].ToString();
                    }

                    float forConvert = 0;
                    float forConvert1 = 0;
                    float forConvert5 = 0;

                    float PFEmployer = 0;
                    float ESIEmployer = 0;





                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        PFEmployer = 0;
                        ESIEmployer = 0;

                        if (dt.Rows[i]["ActualAmount"].ToString().Trim().Length > 0)
                            forConvert = Convert.ToSingle(dt.Rows[i]["ActualAmount"].ToString());

                        forConvert = Convert.ToSingle(dt.Rows[i]["noofduties"].ToString()) + Convert.ToSingle(dt.Rows[i]["wo"].ToString()) + Convert.ToSingle(dt.Rows[i]["ots"].ToString()) + Convert.ToSingle(dt.Rows[i]["nhs"].ToString());


                        if (forConvert > 0)
                        {


                            strQry = "Select p.EmpEpfNo,e.EmpESINo from EMPESICodes AS e INNER JOIN EMPEPFCodes as p ON e.Empid = p.Empid AND e.Empid='" + dt.Rows[i]["EmpId"].ToString() + "'";
                            string pfNo = "";
                            string esiNo = "";
                            DataTable PfTable = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                            if (PfTable.Rows.Count > 0)
                            {
                                pfNo = PfTable.Rows[0]["EmpEpfNo"].ToString();
                                esiNo = PfTable.Rows[0]["EmpESINo"].ToString();
                            }

                            float totalotrate = 0;
                            float totalcdBasic = 0;
                            float totalcdDA = 0;
                            float totalcdHRA = 0;
                            float totaltempgross2 = 0;
                            float totalcdNFhs = 0;
                            float totaltempgross1 = 0;
                            float totaltempgross = 0;
                            float totalcdBonus = 0;
                            float totalcdCCA = 0;
                            float totalcdGratuity = 0;
                            float totalcdotherAllowance = 0;
                            float totalcdLeaveAmount = 0;
                            float totalcdConveyance = 0;
                            float totalcdWashAllowance = 0;
                            float totalstandradamt = 0;
                            float totalcdMedicalallw = 0;
                            float totalcdfoodallw = 0;
                            float totalcdSplAllowance = 0;
                            float totalNpotsamt = 0;
                            float totaladdlamount = 0;
                            float totalrc = 0;
                            float totalcs = 0;
                            float totalcdTravelAllw = 0;
                            float totalcdPerformanceallw = 0;
                            float totalcdMobileallw = 0;
                            float totalcdServiceweightage = 0;

                            float totalcdFixedADDL4HR = 0;
                            float totalcdFixedQTRALLOW = 0;
                            float totalcdFixedRELALLOW = 0;
                            float totalcdFixedSITEALLOW = 0;
                            float totalcdFixedGunAllw = 0;
                            float totalcdFixedFireAllw = 0;
                            float totalcdFixedTelephoneAllw = 0;
                            float totalcdFixedReimbursement = 0;
                            float totalcdFixedHardshipAllw = 0;
                            float totalcdFixedPaidHolidayAllw = 0;
                            float totalcdFixedServiceCharge = 0;
                            float totalcdFixedRankAllw = 0;


                            //float totalcdTravellingAllowance = 0;
                            //float totalcdPerformanceAllowance = 0;

                            // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                            #region




                            PageEventHelperL pageEventHelper = new PageEventHelperL();
                            writer.PageEvent = pageEventHelper;

                            PdfPTable tablewageslip = new PdfPTable(5);
                            tablewageslip.TotalWidth = 550f;
                            tablewageslip.LockedWidth = true;
                            float[] width = new float[] { 2f, 2f, 2f, 2f, 2f };
                            tablewageslip.SetWidths(width);


                            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellspace.Colspan = 5;
                            cellspace.Border = 0;
                            tablewageslip.AddCell(cellspace);

                            PdfPCell cellHead1 = new PdfPCell(new Phrase("Pay Slip  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead1.HorizontalAlignment = 1;
                            cellHead1.Colspan = 5;
                            cellHead1.Border = 0;
                            cellHead1.PaddingLeft = 10;
                            cellHead1.PaddingTop = -45;
                            //tablewageslip.AddCell(cellHead1);

                            //PdfPCell cellHead2 = new PdfPCell(new Phrase("M/s " + companyName, FontFactory.GetFont(fontsyle, 13, Font.NORMAL, BaseColor.BLACK)));
                            //cellHead2.HorizontalAlignment = 1;
                            //cellHead2.Colspan = 5;
                            //cellHead2.Border = 0;
                            //cellHead2.PaddingTop = -35;
                            ////tablewageslip.AddCell(cellHead2);

                            //  PdfPCell cellHead31C = new PdfPCell(new Phrase("M/s " + companyName, FontFactory.GetFont(fontsyle, 13, Font.NORMAL, BaseColor.BLACK)));

                            PdfPCell cellHead31C = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 13, Font.NORMAL, BaseColor.BLACK)));
                            cellHead31C.HorizontalAlignment = 1;
                            cellHead31C.Colspan = 5;
                            cellHead31C.Border = 0;
                            if (ChkPerOne.Checked == true)
                            {
                                cellHead31C.PaddingTop = 35;

                            }
                            else
                            {
                                cellHead31C.PaddingTop = 85;

                            }
                            cellHead31C.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead31C);


                            PdfPCell cellHead31 = new PdfPCell(new Phrase(companyAddress, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead31.HorizontalAlignment = 1;
                            cellHead31.Colspan = 5;
                            cellHead31.Border = 0;
                            //cellHead31.PaddingTop = 5;
                            cellHead31.SetLeading(0, 1.2f);
                            //  tablewageslip.AddCell(cellHead31);



                            PdfPCell cellHead4 = new PdfPCell(new Phrase("Pay Slip for month of " + GetMonthName() + " " + GetMonthOfYear(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead4.HorizontalAlignment = 1;
                            cellHead4.Colspan = 5;
                            cellHead4.Border = 0;
                            //cellHead4.PaddingTop = 5;
                            cellHead4.PaddingBottom = 5;
                            tablewageslip.AddCell(cellHead4);



                            PdfPCell cellHead5 = new PdfPCell(new Phrase("NAME : " + dt.Rows[i]["EmpmName"].ToString() + "            S/o : " + dt.Rows[i]["EmpfatherName"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead5.HorizontalAlignment = 0;
                            cellHead5.Colspan = 3;
                            cellHead5.PaddingTop = 5;
                            // cellHead5.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead5);

                            PdfPCell cellHead711 = new PdfPCell(new Phrase("Designation - " + dt.Rows[i]["Desgn"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead711.HorizontalAlignment = 0;
                            cellHead711.Colspan = 2;
                            //cellHead711.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead711);

                            //"Old ID -  " + dt.Rows[i]["Oldempid"].ToString()
                            PdfPCell cellHead51 = new PdfPCell(new Phrase("" + dt.Rows[i]["Oldempid"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellHead51.HorizontalAlignment = 0;
                            cellHead51.Colspan = 1;
                            cellHead51.SetLeading(0, 1.2f);
                            //tablewageslip.AddCell(cellHead51);

                            cellHead51 = new PdfPCell(new Phrase("Employee ID -  " + dt.Rows[i]["Empid"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead51.HorizontalAlignment = 0;
                            cellHead51.Colspan = 2;
                            cellHead51.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead51);

                            PdfPCell cellHead51A = new PdfPCell(new Phrase("DOJ - " + dt.Rows[i]["EmpDtofJoining"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead51A.HorizontalAlignment = 0;
                            cellHead51A.Colspan = 1;
                            cellHead51A.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead51A);


                            PdfPCell cellHead101 = new PdfPCell(new Phrase("EPF No - " + pfNo, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead101.HorizontalAlignment = 0;
                            cellHead101.Colspan = 2;
                            tablewageslip.AddCell(cellHead101);

                            PdfPCell cellHead71 = new PdfPCell(new Phrase("Bank Account No - " + dt.Rows[i]["EmpBankAcNo"].ToString() + " & Bank Name - " + dt.Rows[i]["Bankname"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead71.HorizontalAlignment = 0;
                            cellHead71.Colspan = 3;
                            //cellHead71.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead71);

                            PdfPCell cellHead121 = new PdfPCell(new Phrase("ESI No - " + esiNo, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead121.HorizontalAlignment = 0;
                            cellHead121.Colspan = 2;
                            tablewageslip.AddCell(cellHead121);



                            forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("Working Days - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Wo"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("WO - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["ots"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellHead1112 = new PdfPCell(new Phrase("OT's - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead1112.HorizontalAlignment = 0;
                                cellHead1112.Colspan = 1;
                                //cellHead1112.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead1112);
                            }

                            else
                            {
                                PdfPCell cellHead11124 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead11124.HorizontalAlignment = 0;
                                cellHead11124.Colspan = 1;
                                //cellHead11124.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead11124);

                            }

                            UANNumber = dt.Rows[i]["EmpUANNumber"].ToString();

                            if (UANNumber.Trim().Length > 0)
                            {

                                PdfPCell cellHeadUANNo = new PdfPCell(new Phrase("UAN No - " + UANNumber, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHeadUANNo.HorizontalAlignment = 0;
                                cellHeadUANNo.Colspan = 2;
                                //cellHead71.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHeadUANNo);
                            }

                            else
                            {
                                PdfPCell cellHeadUANNo = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHeadUANNo.HorizontalAlignment = 0;
                                cellHeadUANNo.Colspan = 2;
                                //cellHead71.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHeadUANNo);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["nhs"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("NHs - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["pldays"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("Spl Duties - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["OTHrs"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("OT Hrs - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }
                            if (ChkWithoutClient.Checked == true)
                            {
                                PdfPCell cellHead7 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead7.HorizontalAlignment = 0;
                                cellHead7.Colspan = 2;
                                tablewageslip.AddCell(cellHead7);
                            }
                            else
                            {
                                PdfPCell cellHead7 = new PdfPCell(new Phrase("Work Location : " + ddlcname.SelectedItem, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead7.HorizontalAlignment = 0;
                                cellHead7.Colspan = 2;
                                tablewageslip.AddCell(cellHead7);
                            }


                            BaseColor color = new BaseColor(221, 226, 222);



                            PdfPTable tableEarnings = new PdfPTable(3);
                            tableEarnings.TotalWidth = 330;
                            tableEarnings.LockedWidth = true;
                            float[] width1 = new float[] { 2f, 2f, 2f };

                            tableEarnings.SetWidths(width1);

                            PdfPCell cellHead9 = new PdfPCell(new Phrase("Description", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead9.HorizontalAlignment = 1;
                            cellHead9.Colspan = 1;
                            cellHead9.MinimumHeight = 20;
                            cellHead9.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead9);

                            PdfPCell cellHead1011 = new PdfPCell(new Phrase("Standard Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead1011.HorizontalAlignment = 1;
                            cellHead1011.Colspan = 1;
                            cellHead1011.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead1011);

                            PdfPCell cellHead10 = new PdfPCell(new Phrase("Earnings Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead10.HorizontalAlignment = 1;
                            cellHead10.Colspan = 1;
                            cellHead10.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead10);

                            forConvert = Convert.ToSingle(dt.Rows[i]["Basic"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBasic"].ToString());



                            if (forConvert > 0)
                            {
                                PdfPCell cellbascic = new PdfPCell(new Phrase("Basic+DA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic.HorizontalAlignment = 0;
                                cellbascic.Colspan = 1;
                                //cellbascic.MinimumHeight = 20;
                                tableEarnings.AddCell(cellbascic);

                                PdfPCell cellbascic11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic11.HorizontalAlignment = 2;
                                cellbascic11.Colspan = 1;
                                tableEarnings.AddCell(cellbascic11);
                                totalcdBasic += forConvert1;



                                PdfPCell cellbascic1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic1.HorizontalAlignment = 2;
                                cellbascic1.Colspan = 1;
                                tableEarnings.AddCell(cellbascic1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["DA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdDA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellDearness = new PdfPCell(new Phrase("Dearness Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellDearness.HorizontalAlignment = 0;
                                cellDearness.Colspan = 1;
                                //cellDearness.MinimumHeight = 20;
                                tableEarnings.AddCell(cellDearness);


                                PdfPCell cellbascic111 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic111.HorizontalAlignment = 2;
                                cellbascic111.Colspan = 1;
                                tableEarnings.AddCell(cellbascic111);
                                totalcdDA += forConvert1;


                                PdfPCell cellDearness1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellDearness1.HorizontalAlignment = 2;
                                cellDearness1.Colspan = 1;
                                tableEarnings.AddCell(cellDearness1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["HRA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdHRA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellHRA = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHRA.HorizontalAlignment = 0;
                                cellHRA.Colspan = 1;
                                //cellHRA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellHRA);


                                PdfPCell ccellHRA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA11.HorizontalAlignment = 2;
                                ccellHRA11.Colspan = 1;
                                tableEarnings.AddCell(ccellHRA11);
                                totalcdHRA += forConvert1;



                                PdfPCell ccellHRA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA1.HorizontalAlignment = 2;
                                ccellHRA1.Colspan = 1;
                                tableEarnings.AddCell(ccellHRA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["WashAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdWashAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellWAAmt = new PdfPCell(new Phrase("Wash Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt.HorizontalAlignment = 0;
                                cellWAAmt.Colspan = 1;
                                //cellWAAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt);
                                totalcdWashAllowance += forConvert1;


                                PdfPCell cellWAAmt11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt11.HorizontalAlignment = 2;
                                cellWAAmt11.Colspan = 1;
                                //////cellWAAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt11);


                                PdfPCell cellWAAmt112 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt112.HorizontalAlignment = 2;
                                cellWAAmt112.Colspan = 1;
                                //cellWAAmt112.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt112);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdConveyance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellConveyance = new PdfPCell(new Phrase("Conveyance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance.HorizontalAlignment = 0;
                                cellConveyance.Colspan = 1;
                                //cellConveyance.MinimumHeight = 20;
                                tableEarnings.AddCell(cellConveyance);


                                PdfPCell cellConveyance11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance11.HorizontalAlignment = 2;
                                cellConveyance11.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance11);
                                totalcdConveyance += forConvert1;


                                PdfPCell cellConveyance1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance1.HorizontalAlignment = 2;
                                cellConveyance1.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance1);
                            }


                            if (chkbonus.Checked == false)
                            {
                                forConvert = Convert.ToSingle(dt.Rows[i]["Bonus"].ToString());
                                forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBonus"].ToString());

                                if (forConvert > 0)
                                {
                                    PdfPCell cellbonus = new PdfPCell(new Phrase("Adv Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellbonus.HorizontalAlignment = 0;
                                    cellbonus.Colspan = 1;
                                    //cellbonus.MinimumHeight = 20;
                                    tableEarnings.AddCell(cellbonus);

                                    PdfPCell cellbonus11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellbonus11.HorizontalAlignment = 2;
                                    cellbonus11.Colspan = 1;
                                    tableEarnings.AddCell(cellbonus11);
                                    totalcdBonus += forConvert1;


                                    PdfPCell cellbonus1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellbonus1.HorizontalAlignment = 2;
                                    cellbonus1.Colspan = 1;
                                    tableEarnings.AddCell(cellbonus1);
                                }
                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["LeaveEncashAmt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdLeaveAmount"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellLeave = new PdfPCell(new Phrase("Adv Leave Wage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave.HorizontalAlignment = 0;
                                cellLeave.Colspan = 1;
                                //cellLeave.MinimumHeight = 20;
                                tableEarnings.AddCell(cellLeave);


                                PdfPCell cellLeave11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave11.HorizontalAlignment = 2;
                                cellLeave11.Colspan = 1;
                                tableEarnings.AddCell(cellLeave11);
                                totalcdLeaveAmount += forConvert1;


                                PdfPCell cellLeave1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave1.HorizontalAlignment = 2;
                                cellLeave1.Colspan = 1;
                                tableEarnings.AddCell(cellLeave1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdotherAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Other Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdotherAllowance += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["MedicalAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdMedicalAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Medical Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdMedicalallw += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["FoodAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdFoodAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Food Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdfoodallw += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdSplAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Spl. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdSplAllowance += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }


                            //for contracts

                            forConvert = Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdTravelAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Travel. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdTravelAllw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdPerformanceAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Performance. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdPerformanceallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdMobileAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Mobile. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Arrears"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Arrears", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AttBonus"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Att Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Specialallowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdSpecialallowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplAllow = new PdfPCell(new Phrase("Spl Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplAllow.HorizontalAlignment = 0;
                                cellSplAllow.Colspan = 1;
                                //cellSplAllow.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplAllow);


                                PdfPCell cellSplAllow11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplAllow11.HorizontalAlignment = 2;
                                cellSplAllow11.Colspan = 1;
                                tableEarnings.AddCell(cellSplAllow11);
                                totalcdSplAllowance += forConvert1;



                                PdfPCell cellSplAllow1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplAllow1.HorizontalAlignment = 2;
                                cellSplAllow1.Colspan = 1;
                                tableEarnings.AddCell(cellSplAllow1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdGratuity"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("Adv Gratuity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalcdGratuity += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["CCA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("CCA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);
                                totalcdCCA += forConvert1;




                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RC"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdrc"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("RC", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalrc += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["CS"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdcs"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("CS", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalcs += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["Incentivs"].ToString());
                            //forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Reimbursement", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);





                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AddlAmount"].ToString());
                            //forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Addl Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);





                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            //forConvert = Convert.ToSingle(dt.Rows[i]["OTAmt"].ToString());
                            //if (forConvert > 0)
                            //{
                            //    PdfPCell cellOT = new PdfPCell(new Phrase("OT Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            //    cellOT.HorizontalAlignment = 0;
                            //    cellOT.Colspan = 1;
                            //    cellOT.MinimumHeight = 20;
                            //    tableEarnings.AddCell(cellOT);


                            //    PdfPCell cellOT1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            //    cellOT1.HorizontalAlignment = 2;
                            //    cellOT1.Colspan = 1;
                            //    tableEarnings.AddCell(cellOT1);
                            //}

                            forConvert = Convert.ToSingle(dt.Rows[i]["Nhsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellNHSAmt = new PdfPCell(new Phrase("NHS Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt.HorizontalAlignment = 0;
                                cellNHSAmt.Colspan = 1;
                                //cellNHSAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt);


                                PdfPCell cellNHSAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt11.HorizontalAlignment = 2;
                                cellNHSAmt11.Colspan = 1;
                                //cellNHSAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt11);
                                // totaltempgross += forConvert1;



                                PdfPCell cellNHSAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt1.HorizontalAlignment = 2;
                                cellNHSAmt1.Colspan = 1;
                                //cellNHSAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt1);
                            }



                            ///nhs,Wo 've same components in contractdetailssw
                            forConvert = Convert.ToSingle(dt.Rows[i]["WOAmt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellWOAmt = new PdfPCell(new Phrase("WO Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt.HorizontalAlignment = 0;
                                cellWOAmt.Colspan = 1;
                                //cellWOAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt);

                                PdfPCell cellWOAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt11.HorizontalAlignment = 2;
                                cellWOAmt11.Colspan = 1;
                                //cellWOAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt11);
                                // totaltempgross1 += forConvert1;


                                PdfPCell cellWOAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt1.HorizontalAlignment = 2;
                                cellWOAmt1.Colspan = 1;
                                //cellWOAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdNFhs"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellNFHSAmt = new PdfPCell(new Phrase("NFHS Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt.HorizontalAlignment = 0;
                                cellNFHSAmt.Colspan = 1;
                                //cellNFHSAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt);

                                PdfPCell cellNFHSAmt11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt11.HorizontalAlignment = 2;
                                cellNFHSAmt11.Colspan = 1;
                                //cellNFHSAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt11);
                                totalcdNFhs += forConvert1;



                                PdfPCell cellNFHSAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt1.HorizontalAlignment = 2;
                                cellNFHSAmt1.Colspan = 1;
                                //cellNFHSAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplDutiesAmt = new PdfPCell(new Phrase("Spl Duties Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt.HorizontalAlignment = 0;
                                cellSplDutiesAmt.Colspan = 1;
                                //cellSplDutiesAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt);

                                PdfPCell cellSplDutiesAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt11.HorizontalAlignment = 2;
                                cellSplDutiesAmt11.Colspan = 1;
                                //cellSplDutiesAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt11);
                                // totaltempgross2 += forConvert1;

                                PdfPCell cellSplDutiesAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt1.HorizontalAlignment = 2;
                                cellSplDutiesAmt1.Colspan = 1;
                                //cellSplDutiesAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Otamt"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellIncentives = new PdfPCell(new Phrase("OT Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellIncentives.HorizontalAlignment = 0;
                                cellIncentives.Colspan = 1;
                                //cellIncentives.MinimumHeight = 20;
                                tableEarnings.AddCell(cellIncentives);

                                forConvert1 = Convert.ToSingle(dt.Rows[i]["otrate"].ToString());
                                PdfPCell cellotrate11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellotrate11.HorizontalAlignment = 2;
                                cellotrate11.Colspan = 1;
                                //cellIncentives11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellotrate11);
                                // totalotrate += forConvert1;

                                PdfPCell cellotamt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellotamt1.HorizontalAlignment = 2;
                                cellotamt1.Colspan = 1;
                                tableEarnings.AddCell(cellotamt1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplDutiesAmt = new PdfPCell(new Phrase("Spl Duties Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt.HorizontalAlignment = 0;
                                cellSplDutiesAmt.Colspan = 1;
                                //cellSplDutiesAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt);

                                PdfPCell cellSplDutiesAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt11.HorizontalAlignment = 2;
                                cellSplDutiesAmt11.Colspan = 1;
                                //cellSplDutiesAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt11);
                                // totaltempgross2 += forConvert1;

                                PdfPCell cellSplDutiesAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt1.HorizontalAlignment = 2;
                                cellSplDutiesAmt1.Colspan = 1;
                                //cellSplDutiesAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["Serviceweightage"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdServiceweightage"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdServiceweightage += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["ADDL4HR"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedADDL4HR"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("ADDL4HR", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedADDL4HR += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["QTRALLOW"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedQTRALLOW"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Qtr Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedQTRALLOW += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RELALLOW"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedRELALLOW"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("REL Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedRELALLOW += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["SITEALLOW"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedSITEALLOW"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Site Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedSITEALLOW += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["GunAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedGunAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Gun Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedGunAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["FireAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedFireAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Fire Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedFireAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TelephoneAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedTelephoneAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Telephone Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedTelephoneAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Reimbursement"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedReimbursement"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Re-imbursement", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedReimbursement += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["HardshipAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedHardshipAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Hardship Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedHardshipAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RankAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedRankAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Rank Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedRankAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["PaidHolidayAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedPaidHolidayAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("PaidHoliday Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedPaidHolidayAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["ServiceCharge"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedServiceCharge"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedServiceCharge += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["OTHrsAmt"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("OT Hours Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);
                                totalcdServiceweightage += forConvert1;




                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }




                            PdfPCell ChildTable1 = new PdfPCell(tableEarnings);
                            ChildTable1.Colspan = 3;
                            ChildTable1.BorderWidthLeft = 0;
                            ChildTable1.BorderWidthRight = 0;
                            ChildTable1.BorderWidthLeft = 0;
                            ChildTable1.BorderWidthLeft = 0;
                            tablewageslip.AddCell(ChildTable1);



                            PdfPTable tableDeductions = new PdfPTable(2);
                            tableDeductions.TotalWidth = 220;
                            tableDeductions.LockedWidth = true;
                            float[] width2 = new float[] { 2f, 2f };
                            tableDeductions.SetWidths(width2);


                            PdfPCell cellHead11 = new PdfPCell(new Phrase("Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead11.HorizontalAlignment = 1;
                            cellHead11.Colspan = 1;
                            cellHead11.MinimumHeight = 20;
                            cellHead11.BackgroundColor = color;
                            tableDeductions.AddCell(cellHead11);


                            PdfPCell cellHead12 = new PdfPCell(new Phrase("Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead12.HorizontalAlignment = 1;
                            cellHead12.Colspan = 1;
                            cellHead12.BackgroundColor = color;
                            tableDeductions.AddCell(cellHead12);
                            //VPF code changes by dhana 10/6/2022 009362
                            forConvert = Convert.ToSingle(dt.Rows[i]["VPF"].ToString());
                            

                            if (forConvert  > 0)
                            {

                                PdfPCell cellPF2 = new PdfPCell(new Phrase("VPF", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF2.HorizontalAlignment = 0;
                                cellPF2.Colspan = 1;
                                //cellPF2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellPF2);


                                PdfPCell cellPF = new PdfPCell(new Phrase(forConvert .ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF.HorizontalAlignment = 2;
                                cellPF.Colspan = 1;
                                tableDeductions.AddCell(cellPF);
                            }

                           
                            forConvert = Convert.ToSingle(dt.Rows[i]["PF"].ToString());
                            PFEmployer = Convert.ToSingle(dt.Rows[i]["PFEmpr"].ToString());

                            if ((forConvert + PFEmployer) > 0)
                            {

                                PdfPCell cellPF2 = new PdfPCell(new Phrase("PF Contribution", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF2.HorizontalAlignment = 0;
                                cellPF2.Colspan = 1;
                                //cellPF2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellPF2);


                                PdfPCell cellPF = new PdfPCell(new Phrase((forConvert + PFEmployer).ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF.HorizontalAlignment = 2;
                                cellPF.Colspan = 1;
                                tableDeductions.AddCell(cellPF);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["ESI"].ToString());
                            ESIEmployer = Convert.ToSingle(dt.Rows[i]["ESIEmpr"].ToString());

                            if ((forConvert + ESIEmployer) > 0)
                            {

                                PdfPCell cellESI2 = new PdfPCell(new Phrase("ESI Contribution", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellESI2.HorizontalAlignment = 0;
                                cellESI2.Colspan = 1;
                                //cellESI2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellESI2);


                                PdfPCell cellESI3 = new PdfPCell(new Phrase((forConvert + ESIEmployer).ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellESI3.HorizontalAlignment = 2;
                                cellESI3.Colspan = 1;
                                tableDeductions.AddCell(cellESI3);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell ccellHRA2 = new PdfPCell(new Phrase("Professional Tax", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA2.HorizontalAlignment = 0;
                                ccellHRA2.Colspan = 1;
                                //ccellHRA2.MinimumHeight = 20;
                                tableDeductions.AddCell(ccellHRA2);


                                PdfPCell ccellHRA3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA3.HorizontalAlignment = 2;
                                ccellHRA3.Colspan = 1;
                                tableDeductions.AddCell(ccellHRA3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Penalty"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell ccellHRA2 = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA2.HorizontalAlignment = 0;
                                ccellHRA2.Colspan = 1;
                                //ccellHRA2.MinimumHeight = 20;
                                tableDeductions.AddCell(ccellHRA2);


                                PdfPCell ccellHRA3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA3.HorizontalAlignment = 2;
                                ccellHRA3.Colspan = 1;
                                tableDeductions.AddCell(ccellHRA3);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["TDS"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTDS2 = new PdfPCell(new Phrase("TDS", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS2.HorizontalAlignment = 0;
                                cellTDS2.Colspan = 1;
                                //cellTDS2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellTDS2);


                                PdfPCell cellTDS3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS3.HorizontalAlignment = 2;
                                cellTDS3.Colspan = 1;
                                tableDeductions.AddCell(cellTDS3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["SecurityDepDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTDS2 = new PdfPCell(new Phrase("Security Dep", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS2.HorizontalAlignment = 0;
                                cellTDS2.Colspan = 1;
                                //cellTDS2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellTDS2);


                                PdfPCell cellTDS3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS3.HorizontalAlignment = 2;
                                cellTDS3.Colspan = 1;
                                tableDeductions.AddCell(cellTDS3);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString()); ;

                            if (forConvert > 0)
                            {
                                PdfPCell cellAdvances2 = new PdfPCell(new Phrase("CanteenAdv", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellAdvances2.HorizontalAlignment = 0;
                                cellAdvances2.Colspan = 1;
                                //cellAdvances2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellAdvances2);


                                PdfPCell cellAdvances3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellAdvances3.HorizontalAlignment = 2;
                                cellAdvances3.Colspan = 1;
                                tableDeductions.AddCell(cellAdvances3);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Fines"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellFines2 = new PdfPCell(new Phrase("Fines/Damage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellFines2.HorizontalAlignment = 0;
                                cellFines2.Colspan = 1;
                                cellFines2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellFines2);


                                PdfPCell cellFines3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellFines3.HorizontalAlignment = 2;
                                cellFines3.Colspan = 1;
                                tableDeductions.AddCell(cellFines3);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell celluniformded = new PdfPCell(new Phrase("Uniform", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celluniformded.HorizontalAlignment = 0;
                                celluniformded.Colspan = 1;
                                // celluniformded.MinimumHeight = 20;
                                tableDeductions.AddCell(celluniformded);


                                PdfPCell celluniformded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celluniformded1.HorizontalAlignment = 2;
                                celluniformded1.Colspan = 1;
                                tableDeductions.AddCell(celluniformded1);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["SalAdvDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsaladvded = new PdfPCell(new Phrase("Salary Advance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded.HorizontalAlignment = 0;
                                cellsaladvded.Colspan = 1;
                                //cellsaladvded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsaladvded);


                                PdfPCell cellsaladvded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded1.HorizontalAlignment = 2;
                                cellsaladvded1.Colspan = 1;
                                tableDeductions.AddCell(cellsaladvded1);

                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["atmded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsaladvded = new PdfPCell(new Phrase("ATM Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded.HorizontalAlignment = 0;
                                cellsaladvded.Colspan = 1;
                                //cellsaladvded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsaladvded);


                                PdfPCell cellsaladvded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded1.HorizontalAlignment = 2;
                                cellsaladvded1.Colspan = 1;
                                tableDeductions.AddCell(cellsaladvded1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["WCded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell celltrngfeeded = new PdfPCell(new Phrase("WC Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celltrngfeeded.HorizontalAlignment = 0;
                                celltrngfeeded.Colspan = 1;
                                //celltrngfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(celltrngfeeded);


                                PdfPCell celltrngfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celltrngfeeded1.HorizontalAlignment = 2;
                                celltrngfeeded1.Colspan = 1;
                                tableDeductions.AddCell(celltrngfeeded1);

                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["Advded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Adv Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);


                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }
                            //idcardded 

                            forConvert = Convert.ToSingle(dt.Rows[i]["IDCardDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("ID Card Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);

                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);
                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["Extra"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("TDS Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);

                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["LoanDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Loan Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);


                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["GeneralDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsecdepded = new PdfPCell(new Phrase("General Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsecdepded.HorizontalAlignment = 0;
                                cellsecdepded.Colspan = 1;
                                //cellsecdepded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsecdepded);


                                PdfPCell cellsecdepded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsecdepded1.HorizontalAlignment = 2;
                                cellsecdepded1.Colspan = 1;
                                tableDeductions.AddCell(cellsecdepded1);

                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["OtherDedn"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellOtherDed = new PdfPCell(new Phrase("Other Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOtherDed.HorizontalAlignment = 0;
                                cellOtherDed.Colspan = 1;
                                //cellOtherDed.MinimumHeight = 20;
                                tableDeductions.AddCell(cellOtherDed);


                                PdfPCell cellOtherDed1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOtherDed1.HorizontalAlignment = 2;
                                cellOtherDed1.Colspan = 1;
                                tableDeductions.AddCell(cellOtherDed1);

                            }


                            //OWF or SBS
                            forConvert = Convert.ToSingle(dt.Rows[i]["owf"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellSBS = new PdfPCell(new Phrase("Lab. Welfare Fund", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSBS.HorizontalAlignment = 0;
                                cellSBS.Colspan = 1;
                                //cellSBS.MinimumHeight = 20;
                                tableDeductions.AddCell(cellSBS);


                                PdfPCell cellSBS1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSBS1.HorizontalAlignment = 2;
                                cellSBS1.Colspan = 1;
                                tableDeductions.AddCell(cellSBS1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TDS"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellempty2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellempty2.HorizontalAlignment = 0;
                                cellempty2.Colspan = 1;
                                //cellempty2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellempty2);


                                PdfPCell cellempty3 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellempty3.HorizontalAlignment = 2;
                                cellempty3.Colspan = 1;
                                tableDeductions.AddCell(cellempty3);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TelephoneBillDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Telephone Bill Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PVCDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("PVC Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RegistrationFee"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Registration Fee", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AdminCharges"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Admin Charges", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }



                            PdfPCell ChildTable2 = new PdfPCell(tableDeductions);
                            ChildTable2.Colspan = 2;
                            ChildTable2.BorderWidthLeft = 0;
                            ChildTable2.BorderWidthRight = 0;
                            ChildTable2.BorderWidthLeft = 0;
                            ChildTable2.BorderWidthLeft = 0;
                            tablewageslip.AddCell(ChildTable2);




                            totalstandradamt = totalcdBasic + totalcdDA + totalcdLeaveAmount + totalcdConveyance + totalcdWashAllowance + totalcdHRA + totalcdNFhs + totalcdBonus + totalcdCCA + totalcdGratuity + totalcdotherAllowance + totalcdfoodallw + totalcdMedicalallw + totalcdSplAllowance + totalcdTravelAllw + totalcdPerformanceallw + totalcdMobileallw + totalcdServiceweightage + totalrc + totalcs +
                                totalcdFixedADDL4HR + totalcdFixedQTRALLOW + totalcdFixedRELALLOW + totalcdFixedSITEALLOW + totalcdFixedGunAllw + totalcdFixedFireAllw +
                                totalcdFixedTelephoneAllw + totalcdFixedReimbursement + totalcdFixedHardshipAllw + totalcdFixedRankAllw + totalcdFixedPaidHolidayAllw + totalcdFixedServiceCharge;


                            PdfPCell cellgrans = new PdfPCell(new Phrase("Total", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellgrans.HorizontalAlignment = 0;
                            cellgrans.Colspan = 1;
                            //cellSplDutiesAmt.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans);

                            PdfPCell cellgrans1 = new PdfPCell(new Phrase(totalstandradamt.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellgrans1.HorizontalAlignment = 2;
                            cellgrans1.Colspan = 1;
                            //cellSplDutiesAmt11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans1);


                            forConvert5 = Convert.ToSingle(dt.Rows[i]["Totalearnings"].ToString());

                            PdfPCell cellgrans2 = new PdfPCell(new Phrase(forConvert5.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellgrans2.HorizontalAlignment = 2;
                            cellgrans2.Colspan = 1;
                            //cellSplDutiesAmt1.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans2);


                            PdfPCell cellTotalDed = new PdfPCell(new Phrase("Total Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotalDed.HorizontalAlignment = 0;
                            cellTotalDed.Colspan = 1;
                            tablewageslip.AddCell(cellTotalDed);

                            // forConvert = Convert.ToSingle(dt.Rows[i]["Deductions"].ToString());
                            forConvert = Convert.ToSingle(dt.Rows[i]["TotalDeductions"].ToString());
                            PdfPCell cellTotalDed1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotalDed1.HorizontalAlignment = 2;
                            cellTotalDed1.Colspan = 1;
                            tablewageslip.AddCell(cellTotalDed1);

                            if (chkbonus.Checked == true)
                            {
                                forConvert = Convert.ToSingle(dt.Rows[i]["BonusNew"].ToString());
                                forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBonus"].ToString());

                                if (forConvert > 0)
                                {
                                    PdfPCell cellTotald1 = new PdfPCell(new Phrase("Adv Against Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellTotald1.HorizontalAlignment = 0;
                                    cellTotald1.Colspan = 1;
                                    // cellTotal.MinimumHeight = 20;
                                    tablewageslip.AddCell(cellTotald1);

                                    PdfPCell cellTotal111 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellTotal111.HorizontalAlignment = 2;
                                    cellTotal111.Colspan = 1;
                                    //cellTotal11.MinimumHeight = 20;
                                    tablewageslip.AddCell(cellTotal111);

                                    PdfPCell cellTotal1d1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellTotal1d1.HorizontalAlignment = 2;
                                    cellTotal1d1.Colspan = 1;
                                    tablewageslip.AddCell(cellTotal1d1);

                                    PdfPCell cellEmptycel1l = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellEmptycel1l.HorizontalAlignment = 0;
                                    cellEmptycel1l.Colspan = 2;
                                    tablewageslip.AddCell(cellEmptycel1l);
                                }
                            }

                            PdfPCell cellTotal = new PdfPCell(new Phrase("Driver Salary", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal.HorizontalAlignment = 0;
                            cellTotal.Colspan = 1;
                            // cellTotal.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal);

                            PdfPCell cellTotal11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotal11.HorizontalAlignment = 2;
                            cellTotal11.Colspan = 1;
                            //cellTotal11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal11);

                            forConvert = Convert.ToSingle(dt.Rows[i]["DriverSalary"].ToString());

                            PdfPCell cellTotal1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal1.HorizontalAlignment = 2;
                            cellTotal1.Colspan = 1;
                            tablewageslip.AddCell(cellTotal1);

                            PdfPCell cellEmptycell = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellEmptycell.HorizontalAlignment = 0;
                            cellEmptycell.Colspan = 2;
                            //cellIncentives.MinimumHeight = 20;
                            tablewageslip.AddCell(cellEmptycell);


                            cellTotal = new PdfPCell(new Phrase("Net Pay", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal.HorizontalAlignment = 0;
                            cellTotal.Colspan = 1;
                            // cellTotal.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal);

                            cellTotal11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotal11.HorizontalAlignment = 2;
                            cellTotal11.Colspan = 1;
                            //cellTotal11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal11);

                            forConvert = Convert.ToSingle(dt.Rows[i]["Actualamount"].ToString());
                            string gtotal = NumberToEnglish.Instance.changeNumericToWords(forConvert.ToString("#"));

                            cellTotal1 = new PdfPCell(new Phrase("Rs. " + forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal1.HorizontalAlignment = 2;
                            cellTotal1.Colspan = 1;
                            tablewageslip.AddCell(cellTotal1);

                            cellEmptycell = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellEmptycell.HorizontalAlignment = 0;
                            cellEmptycell.Colspan = 2;
                            //cellIncentives.MinimumHeight = 20;
                            tablewageslip.AddCell(cellEmptycell);




                            PdfPCell cellInWords = new PdfPCell(new Phrase("Rupees " + gtotal.Trim() + " Only", FontFactory.GetFont(fontsyle, Fontsize, Font.ITALIC, BaseColor.BLACK)));
                            cellInWords.HorizontalAlignment = 0;
                            cellInWords.Colspan = 5;
                            cellInWords.Border = 0;
                            tablewageslip.AddCell(cellInWords);


                            PdfPCell cellemptycell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellemptycell.HorizontalAlignment = 0;
                            cellemptycell.Colspan = 5;
                            cellemptycell.BorderWidthLeft = 0;
                            cellemptycell.BorderWidthRight = 0;
                            cellemptycell.BorderWidthTop = 0;
                            cellemptycell.BorderWidthBottom = .5f;
                            tablewageslip.AddCell(cellemptycell);

                            PdfPCell companyname1 = new PdfPCell(new Phrase("''This is computer generated wage slip, requires no signature''", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLDITALIC, BaseColor.BLACK)));
                            companyname1.HorizontalAlignment = 2;
                            companyname1.Colspan = 5;
                            companyname1.Border = 0;
                            companyname1.PaddingBottom = 30;
                            tablewageslip.AddCell(companyname1);

                            PdfPCell cellcmnyadd1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                            cellcmnyadd1.HorizontalAlignment = 2;
                            cellcmnyadd1.Colspan = 5;
                            cellcmnyadd1.MinimumHeight = 10;
                            cellcmnyadd1.Border = 0;
                            cellcmnyadd1.PaddingTop = 60;
                            //  tablewageslip.AddCell(cellcmnyadd1);





                            PdfPCell cellsignature = new PdfPCell(new Phrase("Employer Seal & Sign", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellsignature.HorizontalAlignment = 2;
                            cellsignature.Colspan = 3;
                            cellsignature.Border = 0;
                            // tablewageslip.AddCell(cellsignature);


                            document.Add(tablewageslip);

                            if (ChkPerOne.Checked == true)
                            {
                                slipsCount++;
                                if (slipsCount == 2)
                                {
                                    slipsCount = 0;
                                    document.NewPage();
                                }
                            }
                            else
                            {
                                slipsCount++;
                                if (slipsCount == 1)
                                {
                                    slipsCount = 0;
                                    document.NewPage();
                                }
                            }



                            #endregion Basic Information of the Employee

                        }
                    }

                    string filename = ddlcname.SelectedItem.Text + "/PaySheet Slips for-" + GetMonthName() + " -" + GetMonthOfYear() + ".pdf";

                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=\"" + filename + "\"");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }
            }
            catch (Exception ex)
            {


            }

        }

        protected void btnEmpOnlyDtsWageSlip_Click(object sender, EventArgs e)
        {
            try
            {
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Unit ID/Name')", true);
                    return;
                }

                var formatInfoinfo = new DateTimeFormatInfo();
                string[] monthName = formatInfoinfo.MonthNames;
                int payMonth = GetMonth(ddlmonth.SelectedValue);

                int month = GetMonthBasedOnSelectionDateorMonth();
                string selectmonth = string.Empty;

                int Fontsize = int.Parse(ddlfontSize.SelectedValue);
                string fontsyle = "verdana";

                string selectclientaddress = "select * from clients where clientid= '" + ddlClients.SelectedValue + "'";
                DataTable dtclientaddress = config.ExecuteAdaptorAsyncWithQueryParams(selectclientaddress).Result;
                string AddrHno = ""; string AddrColony = ""; string AddrArea = ""; string AddrStreet = ""; string Addrcity = ""; string Addrstate = ""; string Addrpin = "";
                if (dtclientaddress.Rows.Count > 0)
                {

                    AddrHno = dtclientaddress.Rows[0]["ClientAddrHno"].ToString();
                    AddrStreet = dtclientaddress.Rows[0]["ClientAddrStreet"].ToString();
                    AddrArea = dtclientaddress.Rows[0]["ClientAddrArea"].ToString();
                    AddrColony = dtclientaddress.Rows[0]["ClientAddrColony"].ToString();
                    Addrcity = dtclientaddress.Rows[0]["ClientAddrcity"].ToString();
                    Addrstate = dtclientaddress.Rows[0]["ClientAddrstate"].ToString();
                    Addrpin = dtclientaddress.Rows[0]["ClientAddrpin"].ToString();
                }

                string[] ClientAdress = new string[7];
                if (AddrHno.Length > 0)
                {
                    ClientAdress[0] = AddrHno;
                }
                else
                {
                    ClientAdress[0] = "";
                }
                if (AddrStreet.Length > 0)
                {
                    ClientAdress[1] = AddrStreet;
                }
                else
                {
                    ClientAdress[1] = "";
                }
                if (AddrArea.Length > 0)
                {
                    ClientAdress[2] = AddrArea;
                }
                else
                {
                    ClientAdress[2] = "";
                }
                if (AddrColony.Length > 0)
                {
                    ClientAdress[3] = AddrArea;
                }
                else
                {
                    ClientAdress[3] = "";
                }
                if (Addrcity.Length > 0)
                {
                    ClientAdress[4] = AddrColony;
                }
                else
                {
                    ClientAdress[4] = "";
                }
                if (Addrstate.Length > 0)
                {
                    ClientAdress[5] = Addrcity;
                }
                else
                {
                    ClientAdress[5] = "";
                }
                if (Addrpin.Length > 0)
                {
                    ClientAdress[6] = Addrstate;
                }
                else
                {
                    ClientAdress[6] = "";
                }


                string Address1 = string.Empty;

                for (int i = 0; i < 7; i++)
                {
                    Address1 += "  " + ClientAdress[i];
                }


                var list = new List<string>();

                if (gvattendancezero.Rows.Count > 0)
                {
                    for (int i = 0; i < gvattendancezero.Rows.Count; i++)
                    {
                        CheckBox chkEmpid = gvattendancezero.Rows[i].FindControl("chkindividual") as CheckBox;
                        Label lblempid = gvattendancezero.Rows[i].FindControl("lblempid") as Label;

                        if (chkEmpid.Checked == true)
                        {
                            list.Add(lblempid.Text);
                        }

                    }
                }

                string Empids = string.Join(",", list.ToArray());

                if (list.Count == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Empids');", true);
                    return;
                }

                DataTable dtEmpidsList = new DataTable();
                dtEmpidsList.Columns.Add("Empid");
                if (list.Count != 0)
                {
                    foreach (string s in list)
                    {
                        DataRow row = dtEmpidsList.NewRow();
                        row["Empid"] = s;
                        dtEmpidsList.Rows.Add(row);
                    }
                }

                int ChkBonus = 0;
                if (chkbonus.Checked == true)
                {
                    ChkBonus = 1;
                }

                var spname = "EMPWAGESLIPS";
                int option = 0;
                Hashtable ht = new Hashtable();
                ht.Add("@clientid", ddlClients.SelectedValue);
                ht.Add("@month", month);
                ht.Add("@Option", option);
                ht.Add("@Type", "OnlyDuties");
                ht.Add("@ChkBonus", ChkBonus);

                ht.Add("@EmpIDList", dtEmpidsList);
                DataTable dt = config.ExecuteAdaptorAsyncWithParams(spname, ht).Result;


                MemoryStream ms = new MemoryStream();

                int slipsCount = 0;
                string UANNumber = "";

                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL);
                    var writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                    string imagepath1 = Server.MapPath("images");

                    string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                    DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                    string companyName = "Your Company Name";
                    string companyAddress = "Your Company Address";
                    string PFNOForms = "";
                    string TotalPFNOForms = "";
                    if (compInfo.Rows.Count > 0)
                    {
                        companyName = compInfo.Rows[0]["CompanyName"].ToString();
                        companyAddress = compInfo.Rows[0]["Address"].ToString();
                        //PFNOForms = compInfo.Rows[0]["PFNoForms"].ToString();
                    }

                    float forConvert = 0;
                    float forConvert1 = 0;
                    float forConvert5 = 0;

                    float PFEmployer = 0;
                    float ESIEmployer = 0;





                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        PFEmployer = 0;
                        ESIEmployer = 0;

                        if (dt.Rows[i]["ActualAmount"].ToString().Trim().Length > 0)
                            forConvert = Convert.ToSingle(dt.Rows[i]["ActualAmount"].ToString());

                        forConvert = Convert.ToSingle(dt.Rows[i]["noofduties"].ToString()) + Convert.ToSingle(dt.Rows[i]["wo"].ToString()) + Convert.ToSingle(dt.Rows[i]["ots"].ToString()) + Convert.ToSingle(dt.Rows[i]["nhs"].ToString());


                        if (forConvert > 0)
                        {


                            strQry = "Select p.EmpEpfNo,e.EmpESINo from EMPESICodes AS e INNER JOIN EMPEPFCodes as p ON e.Empid = p.Empid AND e.Empid='" + dt.Rows[i]["EmpId"].ToString() + "'";
                            string pfNo = "";
                            string esiNo = "";
                            DataTable PfTable = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                            if (PfTable.Rows.Count > 0)
                            {
                                pfNo = PfTable.Rows[0]["EmpEpfNo"].ToString();
                                esiNo = PfTable.Rows[0]["EmpESINo"].ToString();
                            }

                            float totalotrate = 0;
                            float totalcdBasic = 0;
                            float totalcdDA = 0;
                            float totalcdHRA = 0;
                            float totaltempgross2 = 0;
                            float totalcdNFhs = 0;
                            float totaltempgross1 = 0;
                            float totaltempgross = 0;
                            float totalcdBonus = 0;
                            float totalcdCCA = 0;
                            float totalcdGratuity = 0;
                            float totalcdotherAllowance = 0;
                            float totalcdLeaveAmount = 0;
                            float totalcdConveyance = 0;
                            float totalcdWashAllowance = 0;
                            float totalstandradamt = 0;
                            float totalcdMedicalallw = 0;
                            float totalcdfoodallw = 0;
                            float totalcdSplAllowance = 0;
                            float totalNpotsamt = 0;
                            float totaladdlamount = 0;
                            float totalrc = 0;
                            float totalcs = 0;
                            float totalcdTravelAllw = 0;
                            float totalcdPerformanceallw = 0;
                            float totalcdMobileallw = 0;
                            float totalcdServiceweightage = 0;

                            float totalcdFixedADDL4HR = 0;
                            float totalcdFixedQTRALLOW = 0;
                            float totalcdFixedRELALLOW = 0;
                            float totalcdFixedSITEALLOW = 0;
                            float totalcdFixedGunAllw = 0;
                            float totalcdFixedFireAllw = 0;
                            float totalcdFixedTelephoneAllw = 0;
                            float totalcdFixedReimbursement = 0;
                            float totalcdFixedHardshipAllw = 0;
                            float totalcdFixedPaidHolidayAllw = 0;
                            float totalcdFixedServiceCharge = 0;
                            float totalcdFixedRankAllw = 0;

                            //float totalcdTravellingAllowance = 0;
                            //float totalcdPerformanceAllowance = 0;

                            // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                            #region

                            //string imagepath = Server.MapPath("~/assets/BillLogo.png");

                            string imagepath = Server.MapPath("~/assets/" + CmpIDPrefix + "BillLogo.png");


                            PdfPTable tablewageslip = new PdfPTable(5);
                            tablewageslip.TotalWidth = 550f;
                            tablewageslip.LockedWidth = true;
                            float[] width = new float[] { 2f, 2f, 2f, 2f, 2f };
                            tablewageslip.SetWidths(width);


                            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellspace.Colspan = 5;
                            cellspace.Border = 0;
                            tablewageslip.AddCell(cellspace);

                            if (File.Exists(imagepath))
                            {
                                iTextSharp.text.Image paysheetlogo = iTextSharp.text.Image.GetInstance(imagepath);
                                paysheetlogo.ScaleAbsolute(45f, 45f);
                                PdfPCell companylogo = new PdfPCell();
                                Paragraph cmplogo = new Paragraph();
                                cmplogo.Add(new Chunk(paysheetlogo, -7, 10));
                                companylogo.AddElement(cmplogo);
                                companylogo.HorizontalAlignment = 0;
                                companylogo.Colspan = 1;
                                // companylogo.PaddingTop = 16;
                                companylogo.Border = 0;
                                tablewageslip.AddCell(companylogo);
                            }

                            PdfPCell cellHead1 = new PdfPCell(new Phrase("Pay Slip  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead1.HorizontalAlignment = 0;
                            cellHead1.Colspan = 4;
                            cellHead1.Border = 0;
                            cellHead1.PaddingLeft = 140;
                            //cellHead1.PaddingTop = -55;
                            tablewageslip.AddCell(cellHead1);

                            PdfPCell cellHead2 = new PdfPCell(new Phrase("M/s " + companyName, FontFactory.GetFont(fontsyle, 13, Font.NORMAL, BaseColor.BLACK)));
                            cellHead2.HorizontalAlignment = 1;
                            cellHead2.Colspan = 5;
                            cellHead2.Border = 0;
                            cellHead2.PaddingTop = -45;
                            tablewageslip.AddCell(cellHead2);

                            PdfPCell cellHead31 = new PdfPCell(new Phrase(companyAddress, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead31.HorizontalAlignment = 1;
                            cellHead31.Colspan = 5;
                            cellHead31.Border = 0;
                            cellHead31.PaddingTop = -30;
                            cellHead31.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead31);



                            PdfPCell cellHead4 = new PdfPCell(new Phrase("Pay Slip for month of " + GetMonthName() + " " + GetMonthOfYear(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead4.HorizontalAlignment = 1;
                            cellHead4.Colspan = 5;
                            cellHead4.Border = 0;
                            cellHead4.PaddingTop = -5;
                            tablewageslip.AddCell(cellHead4);



                            PdfPCell cellHead5 = new PdfPCell(new Phrase("NAME : " + dt.Rows[i]["EmpmName"].ToString() + "            S/o : " + dt.Rows[i]["EmpfatherName"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead5.HorizontalAlignment = 0;
                            cellHead5.Colspan = 3;
                            cellHead5.PaddingTop = 5;
                            // cellHead5.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead5);

                            PdfPCell cellHead711 = new PdfPCell(new Phrase("Designation - " + dt.Rows[i]["Desgn"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead711.HorizontalAlignment = 0;
                            cellHead711.Colspan = 2;
                            //cellHead711.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead711);


                            PdfPCell cellHead51 = new PdfPCell(new Phrase("Old ID -  " + dt.Rows[i]["Oldempid"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellHead51.HorizontalAlignment = 0;
                            cellHead51.Colspan = 1;
                            cellHead51.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead51);

                            cellHead51 = new PdfPCell(new Phrase("Employee ID -  " + dt.Rows[i]["Empid"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead51.HorizontalAlignment = 0;
                            cellHead51.Colspan = 2;
                            cellHead51.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead51);


                            PdfPCell cellHead101 = new PdfPCell(new Phrase("EPF No - " + pfNo, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead101.HorizontalAlignment = 0;
                            cellHead101.Colspan = 2;
                            tablewageslip.AddCell(cellHead101);

                            PdfPCell cellHead71 = new PdfPCell(new Phrase("Bank Account No - " + dt.Rows[i]["EmpBankAcNo"].ToString() + " & Bank Name - " + dt.Rows[i]["Bankname"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead71.HorizontalAlignment = 0;
                            cellHead71.Colspan = 3;
                            //cellHead71.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead71);

                            PdfPCell cellHead121 = new PdfPCell(new Phrase("ESI No - " + esiNo, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead121.HorizontalAlignment = 0;
                            cellHead121.Colspan = 2;
                            tablewageslip.AddCell(cellHead121);



                            forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("Duties - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Wo"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("WO - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["ots"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellHead1112 = new PdfPCell(new Phrase("OT's - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead1112.HorizontalAlignment = 0;
                                cellHead1112.Colspan = 1;
                                //cellHead1112.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead1112);
                            }

                            else
                            {
                                PdfPCell cellHead11124 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead11124.HorizontalAlignment = 0;
                                cellHead11124.Colspan = 1;
                                //cellHead11124.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead11124);

                            }

                            UANNumber = dt.Rows[i]["EmpUANNumber"].ToString();

                            if (UANNumber.Trim().Length > 0)
                            {

                                PdfPCell cellHeadUANNo = new PdfPCell(new Phrase("UAN No - " + UANNumber, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHeadUANNo.HorizontalAlignment = 0;
                                cellHeadUANNo.Colspan = 2;
                                //cellHead71.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHeadUANNo);
                            }

                            else
                            {
                                PdfPCell cellHeadUANNo = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHeadUANNo.HorizontalAlignment = 0;
                                cellHeadUANNo.Colspan = 2;
                                //cellHead71.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHeadUANNo);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["nhs"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("NHs - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["pldays"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("Spl Duties - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["OTHrs"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("OT Hrs - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }
                            if (ChkWithoutClient.Checked == true)
                            {
                                PdfPCell cellHead7 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead7.HorizontalAlignment = 0;
                                cellHead7.Colspan = 2;
                                tablewageslip.AddCell(cellHead7);
                            }
                            else
                            {
                                PdfPCell cellHead7 = new PdfPCell(new Phrase("Work Location : " + ddlcname.SelectedItem, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead7.HorizontalAlignment = 0;
                                cellHead7.Colspan = 2;
                                tablewageslip.AddCell(cellHead7);
                            }


                            BaseColor color = new BaseColor(221, 226, 222);



                            PdfPTable tableEarnings = new PdfPTable(3);
                            tableEarnings.TotalWidth = 330;
                            tableEarnings.LockedWidth = true;
                            float[] width1 = new float[] { 2f, 2f, 2f };

                            tableEarnings.SetWidths(width1);

                            PdfPCell cellHead9 = new PdfPCell(new Phrase("Description", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead9.HorizontalAlignment = 1;
                            cellHead9.Colspan = 1;
                            cellHead9.MinimumHeight = 20;
                            cellHead9.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead9);

                            PdfPCell cellHead1011 = new PdfPCell(new Phrase("Standard Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead1011.HorizontalAlignment = 1;
                            cellHead1011.Colspan = 1;
                            cellHead1011.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead1011);

                            PdfPCell cellHead10 = new PdfPCell(new Phrase("Earnings Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead10.HorizontalAlignment = 1;
                            cellHead10.Colspan = 1;
                            cellHead10.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead10);

                            forConvert = Convert.ToSingle(dt.Rows[i]["Basic"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBasic"].ToString());



                            if (forConvert > 0)
                            {
                                PdfPCell cellbascic = new PdfPCell(new Phrase("Basic+DA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic.HorizontalAlignment = 0;
                                cellbascic.Colspan = 1;
                                //cellbascic.MinimumHeight = 20;
                                tableEarnings.AddCell(cellbascic);

                                PdfPCell cellbascic11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic11.HorizontalAlignment = 2;
                                cellbascic11.Colspan = 1;
                                tableEarnings.AddCell(cellbascic11);
                                totalcdBasic += forConvert1;



                                PdfPCell cellbascic1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic1.HorizontalAlignment = 2;
                                cellbascic1.Colspan = 1;
                                tableEarnings.AddCell(cellbascic1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["DA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdDA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellDearness = new PdfPCell(new Phrase("Dearness Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellDearness.HorizontalAlignment = 0;
                                cellDearness.Colspan = 1;
                                //cellDearness.MinimumHeight = 20;
                                tableEarnings.AddCell(cellDearness);


                                PdfPCell cellbascic111 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic111.HorizontalAlignment = 2;
                                cellbascic111.Colspan = 1;
                                tableEarnings.AddCell(cellbascic111);
                                totalcdDA += forConvert1;


                                PdfPCell cellDearness1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellDearness1.HorizontalAlignment = 2;
                                cellDearness1.Colspan = 1;
                                tableEarnings.AddCell(cellDearness1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["HRA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdHRA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellHRA = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHRA.HorizontalAlignment = 0;
                                cellHRA.Colspan = 1;
                                //cellHRA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellHRA);


                                PdfPCell ccellHRA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA11.HorizontalAlignment = 2;
                                ccellHRA11.Colspan = 1;
                                tableEarnings.AddCell(ccellHRA11);
                                totalcdHRA += forConvert1;



                                PdfPCell ccellHRA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA1.HorizontalAlignment = 2;
                                ccellHRA1.Colspan = 1;
                                tableEarnings.AddCell(ccellHRA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["WashAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdWashAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellWAAmt = new PdfPCell(new Phrase("Wash Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt.HorizontalAlignment = 0;
                                cellWAAmt.Colspan = 1;
                                //cellWAAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt);
                                totalcdWashAllowance += forConvert1;


                                PdfPCell cellWAAmt11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt11.HorizontalAlignment = 2;
                                cellWAAmt11.Colspan = 1;
                                //////cellWAAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt11);


                                PdfPCell cellWAAmt112 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt112.HorizontalAlignment = 2;
                                cellWAAmt112.Colspan = 1;
                                //cellWAAmt112.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt112);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdConveyance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellConveyance = new PdfPCell(new Phrase("Conveyance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance.HorizontalAlignment = 0;
                                cellConveyance.Colspan = 1;
                                //cellConveyance.MinimumHeight = 20;
                                tableEarnings.AddCell(cellConveyance);


                                PdfPCell cellConveyance11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance11.HorizontalAlignment = 2;
                                cellConveyance11.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance11);
                                totalcdConveyance += forConvert1;


                                PdfPCell cellConveyance1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance1.HorizontalAlignment = 2;
                                cellConveyance1.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["Bonus"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBonus"].ToString());

                            if (chkbonus.Checked == false)
                            {
                                if (forConvert > 0)
                                {
                                    PdfPCell cellbonus = new PdfPCell(new Phrase("Adv Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellbonus.HorizontalAlignment = 0;
                                    cellbonus.Colspan = 1;
                                    //cellbonus.MinimumHeight = 20;
                                    tableEarnings.AddCell(cellbonus);

                                    PdfPCell cellbonus11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellbonus11.HorizontalAlignment = 2;
                                    cellbonus11.Colspan = 1;
                                    tableEarnings.AddCell(cellbonus11);
                                    totalcdBonus += forConvert1;


                                    PdfPCell cellbonus1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellbonus1.HorizontalAlignment = 2;
                                    cellbonus1.Colspan = 1;
                                    tableEarnings.AddCell(cellbonus1);
                                }
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["LeaveEncashAmt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdLeaveAmount"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellLeave = new PdfPCell(new Phrase("Adv Leave Wage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave.HorizontalAlignment = 0;
                                cellLeave.Colspan = 1;
                                //cellLeave.MinimumHeight = 20;
                                tableEarnings.AddCell(cellLeave);


                                PdfPCell cellLeave11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave11.HorizontalAlignment = 2;
                                cellLeave11.Colspan = 1;
                                tableEarnings.AddCell(cellLeave11);
                                totalcdLeaveAmount += forConvert1;


                                PdfPCell cellLeave1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave1.HorizontalAlignment = 2;
                                cellLeave1.Colspan = 1;
                                tableEarnings.AddCell(cellLeave1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdotherAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Other Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdotherAllowance += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["MedicalAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdMedicalAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Medical Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdMedicalallw += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["FoodAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdFoodAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Food Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdfoodallw += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdSplAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Spl. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdSplAllowance += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }


                            //for contracts

                            forConvert = Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdTravelAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Travel. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdTravelAllw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdPerformanceAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Performance. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdPerformanceallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdMobileAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Mobile. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Arrears"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Arrears", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AttBonus"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Att Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Specialallowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdSpecialallowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplAllow = new PdfPCell(new Phrase("Spl Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplAllow.HorizontalAlignment = 0;
                                cellSplAllow.Colspan = 1;
                                //cellSplAllow.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplAllow);


                                PdfPCell cellSplAllow11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplAllow11.HorizontalAlignment = 2;
                                cellSplAllow11.Colspan = 1;
                                tableEarnings.AddCell(cellSplAllow11);
                                totalcdSplAllowance += forConvert1;



                                PdfPCell cellSplAllow1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplAllow1.HorizontalAlignment = 2;
                                cellSplAllow1.Colspan = 1;
                                tableEarnings.AddCell(cellSplAllow1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdGratuity"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("Adv Gratuity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalcdGratuity += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["CCA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("CCA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);
                                totalcdCCA += forConvert1;




                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RC"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdrc"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("RC", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalrc += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["CS"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdcs"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("CS", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalcs += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["Incentivs"].ToString());
                            //forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Reimbursement", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);





                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AddlAmount"].ToString());
                            //forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Addl Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);





                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            //forConvert = Convert.ToSingle(dt.Rows[i]["OTAmt"].ToString());
                            //if (forConvert > 0)
                            //{
                            //    PdfPCell cellOT = new PdfPCell(new Phrase("OT Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            //    cellOT.HorizontalAlignment = 0;
                            //    cellOT.Colspan = 1;
                            //    cellOT.MinimumHeight = 20;
                            //    tableEarnings.AddCell(cellOT);


                            //    PdfPCell cellOT1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            //    cellOT1.HorizontalAlignment = 2;
                            //    cellOT1.Colspan = 1;
                            //    tableEarnings.AddCell(cellOT1);
                            //}

                            forConvert = Convert.ToSingle(dt.Rows[i]["Nhsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellNHSAmt = new PdfPCell(new Phrase("NHS Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt.HorizontalAlignment = 0;
                                cellNHSAmt.Colspan = 1;
                                //cellNHSAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt);


                                PdfPCell cellNHSAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt11.HorizontalAlignment = 2;
                                cellNHSAmt11.Colspan = 1;
                                //cellNHSAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt11);
                                // totaltempgross += forConvert1;



                                PdfPCell cellNHSAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt1.HorizontalAlignment = 2;
                                cellNHSAmt1.Colspan = 1;
                                //cellNHSAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt1);
                            }



                            ///nhs,Wo 've same components in contractdetailssw
                            forConvert = Convert.ToSingle(dt.Rows[i]["WOAmt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellWOAmt = new PdfPCell(new Phrase("WO Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt.HorizontalAlignment = 0;
                                cellWOAmt.Colspan = 1;
                                //cellWOAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt);

                                PdfPCell cellWOAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt11.HorizontalAlignment = 2;
                                cellWOAmt11.Colspan = 1;
                                //cellWOAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt11);
                                // totaltempgross1 += forConvert1;


                                PdfPCell cellWOAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt1.HorizontalAlignment = 2;
                                cellWOAmt1.Colspan = 1;
                                //cellWOAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdNFhs"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellNFHSAmt = new PdfPCell(new Phrase("NFHS Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt.HorizontalAlignment = 0;
                                cellNFHSAmt.Colspan = 1;
                                //cellNFHSAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt);

                                PdfPCell cellNFHSAmt11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt11.HorizontalAlignment = 2;
                                cellNFHSAmt11.Colspan = 1;
                                //cellNFHSAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt11);
                                totalcdNFhs += forConvert1;



                                PdfPCell cellNFHSAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt1.HorizontalAlignment = 2;
                                cellNFHSAmt1.Colspan = 1;
                                //cellNFHSAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplDutiesAmt = new PdfPCell(new Phrase("Spl Duties Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt.HorizontalAlignment = 0;
                                cellSplDutiesAmt.Colspan = 1;
                                //cellSplDutiesAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt);

                                PdfPCell cellSplDutiesAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt11.HorizontalAlignment = 2;
                                cellSplDutiesAmt11.Colspan = 1;
                                //cellSplDutiesAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt11);
                                // totaltempgross2 += forConvert1;

                                PdfPCell cellSplDutiesAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt1.HorizontalAlignment = 2;
                                cellSplDutiesAmt1.Colspan = 1;
                                //cellSplDutiesAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Otamt"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellIncentives = new PdfPCell(new Phrase("OT Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellIncentives.HorizontalAlignment = 0;
                                cellIncentives.Colspan = 1;
                                //cellIncentives.MinimumHeight = 20;
                                tableEarnings.AddCell(cellIncentives);

                                forConvert1 = Convert.ToSingle(dt.Rows[i]["otrate"].ToString());
                                PdfPCell cellotrate11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellotrate11.HorizontalAlignment = 2;
                                cellotrate11.Colspan = 1;
                                //cellIncentives11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellotrate11);
                                // totalotrate += forConvert1;

                                PdfPCell cellotamt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellotamt1.HorizontalAlignment = 2;
                                cellotamt1.Colspan = 1;
                                tableEarnings.AddCell(cellotamt1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplDutiesAmt = new PdfPCell(new Phrase("Spl Duties Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt.HorizontalAlignment = 0;
                                cellSplDutiesAmt.Colspan = 1;
                                //cellSplDutiesAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt);

                                PdfPCell cellSplDutiesAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt11.HorizontalAlignment = 2;
                                cellSplDutiesAmt11.Colspan = 1;
                                //cellSplDutiesAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt11);
                                // totaltempgross2 += forConvert1;

                                PdfPCell cellSplDutiesAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt1.HorizontalAlignment = 2;
                                cellSplDutiesAmt1.Colspan = 1;
                                //cellSplDutiesAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["Serviceweightage"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdServiceweightage"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdServiceweightage += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["ADDL4HR"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedADDL4HR"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("ADDL4HR", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedADDL4HR += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["QTRALLOW"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedQTRALLOW"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Qtr Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedQTRALLOW += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RELALLOW"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedRELALLOW"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("REL Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedRELALLOW += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["SITEALLOW"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedSITEALLOW"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Site Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedSITEALLOW += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["GunAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedGunAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Gun Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedGunAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["FireAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedFireAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Fire Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedFireAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TelephoneAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedTelephoneAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Telephone Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedTelephoneAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Reimbursement"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedReimbursement"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Re-imbursement", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedReimbursement += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["HardshipAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedHardshipAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Hardship Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedHardshipAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["RankAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedRankAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Rank Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedRankAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PaidHolidayAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedPaidHolidayAllw"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("PaidHoliday Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedPaidHolidayAllw += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["ServiceCharge"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["FixedServiceCharge"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                tableEarnings.AddCell(cellCCA);
                                totalcdFixedServiceCharge += forConvert1;

                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                tableEarnings.AddCell(cellCCA11);

                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                tableEarnings.AddCell(cellCCA1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["OTHrsAmt"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("OT Hours Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);
                                totalcdServiceweightage += forConvert1;




                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }




                            PdfPCell ChildTable1 = new PdfPCell(tableEarnings);
                            ChildTable1.Colspan = 3;
                            ChildTable1.BorderWidthLeft = 0;
                            ChildTable1.BorderWidthRight = 0;
                            ChildTable1.BorderWidthLeft = 0;
                            ChildTable1.BorderWidthLeft = 0;
                            tablewageslip.AddCell(ChildTable1);



                            PdfPTable tableDeductions = new PdfPTable(2);
                            tableDeductions.TotalWidth = 220;
                            tableDeductions.LockedWidth = true;
                            float[] width2 = new float[] { 2f, 2f };
                            tableDeductions.SetWidths(width2);


                            PdfPCell cellHead11 = new PdfPCell(new Phrase("Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead11.HorizontalAlignment = 1;
                            cellHead11.Colspan = 1;
                            cellHead11.MinimumHeight = 20;
                            cellHead11.BackgroundColor = color;
                            tableDeductions.AddCell(cellHead11);


                            PdfPCell cellHead12 = new PdfPCell(new Phrase("Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead12.HorizontalAlignment = 1;
                            cellHead12.Colspan = 1;
                            cellHead12.BackgroundColor = color;
                            tableDeductions.AddCell(cellHead12);

                            forConvert = Convert.ToSingle(dt.Rows[i]["VPF"].ToString());
                            

                            if (forConvert > 0)
                            {

                                PdfPCell cellPF2 = new PdfPCell(new Phrase("VPF", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF2.HorizontalAlignment = 0;
                                cellPF2.Colspan = 1;
                                //cellPF2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellPF2);


                                PdfPCell cellPF = new PdfPCell(new Phrase(forConvert .ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF.HorizontalAlignment = 2;
                                cellPF.Colspan = 1;
                                tableDeductions.AddCell(cellPF);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["PF"].ToString());
                            PFEmployer = Convert.ToSingle(dt.Rows[i]["PFEmpr"].ToString());

                            if ((forConvert + PFEmployer) > 0)
                            {

                                PdfPCell cellPF2 = new PdfPCell(new Phrase("PF Contribution", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF2.HorizontalAlignment = 0;
                                cellPF2.Colspan = 1;
                                //cellPF2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellPF2);


                                PdfPCell cellPF = new PdfPCell(new Phrase((forConvert + PFEmployer).ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF.HorizontalAlignment = 2;
                                cellPF.Colspan = 1;
                                tableDeductions.AddCell(cellPF);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["ESI"].ToString());
                            ESIEmployer = Convert.ToSingle(dt.Rows[i]["ESIEmpr"].ToString());

                            if ((forConvert + ESIEmployer) > 0)
                            {

                                PdfPCell cellESI2 = new PdfPCell(new Phrase("ESI Contribution", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellESI2.HorizontalAlignment = 0;
                                cellESI2.Colspan = 1;
                                //cellESI2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellESI2);


                                PdfPCell cellESI3 = new PdfPCell(new Phrase((forConvert + ESIEmployer).ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellESI3.HorizontalAlignment = 2;
                                cellESI3.Colspan = 1;
                                tableDeductions.AddCell(cellESI3);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell ccellHRA2 = new PdfPCell(new Phrase("Professional Tax", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA2.HorizontalAlignment = 0;
                                ccellHRA2.Colspan = 1;
                                //ccellHRA2.MinimumHeight = 20;
                                tableDeductions.AddCell(ccellHRA2);


                                PdfPCell ccellHRA3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA3.HorizontalAlignment = 2;
                                ccellHRA3.Colspan = 1;
                                tableDeductions.AddCell(ccellHRA3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Penalty"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell ccellHRA2 = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA2.HorizontalAlignment = 0;
                                ccellHRA2.Colspan = 1;
                                //ccellHRA2.MinimumHeight = 20;
                                tableDeductions.AddCell(ccellHRA2);


                                PdfPCell ccellHRA3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA3.HorizontalAlignment = 2;
                                ccellHRA3.Colspan = 1;
                                tableDeductions.AddCell(ccellHRA3);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["TDS"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTDS2 = new PdfPCell(new Phrase("TDS", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS2.HorizontalAlignment = 0;
                                cellTDS2.Colspan = 1;
                                //cellTDS2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellTDS2);


                                PdfPCell cellTDS3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS3.HorizontalAlignment = 2;
                                cellTDS3.Colspan = 1;
                                tableDeductions.AddCell(cellTDS3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["SecurityDepDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTDS2 = new PdfPCell(new Phrase("Security Dep", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS2.HorizontalAlignment = 0;
                                cellTDS2.Colspan = 1;
                                //cellTDS2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellTDS2);


                                PdfPCell cellTDS3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS3.HorizontalAlignment = 2;
                                cellTDS3.Colspan = 1;
                                tableDeductions.AddCell(cellTDS3);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString()); ;

                            if (forConvert > 0)
                            {
                                PdfPCell cellAdvances2 = new PdfPCell(new Phrase("CanteenAdv", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellAdvances2.HorizontalAlignment = 0;
                                cellAdvances2.Colspan = 1;
                                //cellAdvances2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellAdvances2);


                                PdfPCell cellAdvances3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellAdvances3.HorizontalAlignment = 2;
                                cellAdvances3.Colspan = 1;
                                tableDeductions.AddCell(cellAdvances3);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Fines"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellFines2 = new PdfPCell(new Phrase("Fines/Damage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellFines2.HorizontalAlignment = 0;
                                cellFines2.Colspan = 1;
                                cellFines2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellFines2);


                                PdfPCell cellFines3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellFines3.HorizontalAlignment = 2;
                                cellFines3.Colspan = 1;
                                tableDeductions.AddCell(cellFines3);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell celluniformded = new PdfPCell(new Phrase("Uniform", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celluniformded.HorizontalAlignment = 0;
                                celluniformded.Colspan = 1;
                                // celluniformded.MinimumHeight = 20;
                                tableDeductions.AddCell(celluniformded);


                                PdfPCell celluniformded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celluniformded1.HorizontalAlignment = 2;
                                celluniformded1.Colspan = 1;
                                tableDeductions.AddCell(celluniformded1);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["SalAdvDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsaladvded = new PdfPCell(new Phrase("Salary Advance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded.HorizontalAlignment = 0;
                                cellsaladvded.Colspan = 1;
                                //cellsaladvded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsaladvded);


                                PdfPCell cellsaladvded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded1.HorizontalAlignment = 2;
                                cellsaladvded1.Colspan = 1;
                                tableDeductions.AddCell(cellsaladvded1);

                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["atmded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsaladvded = new PdfPCell(new Phrase("ATM Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded.HorizontalAlignment = 0;
                                cellsaladvded.Colspan = 1;
                                //cellsaladvded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsaladvded);


                                PdfPCell cellsaladvded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded1.HorizontalAlignment = 2;
                                cellsaladvded1.Colspan = 1;
                                tableDeductions.AddCell(cellsaladvded1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["WCded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell celltrngfeeded = new PdfPCell(new Phrase("WC Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celltrngfeeded.HorizontalAlignment = 0;
                                celltrngfeeded.Colspan = 1;
                                //celltrngfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(celltrngfeeded);


                                PdfPCell celltrngfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celltrngfeeded1.HorizontalAlignment = 2;
                                celltrngfeeded1.Colspan = 1;
                                tableDeductions.AddCell(celltrngfeeded1);

                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["Advded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Adv Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);


                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }
                            //idcardded 

                            forConvert = Convert.ToSingle(dt.Rows[i]["IDCardDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("ID Card Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);

                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);
                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["Extra"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("TDS Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);

                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["LoanDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Loan Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);


                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["GeneralDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsecdepded = new PdfPCell(new Phrase("General Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsecdepded.HorizontalAlignment = 0;
                                cellsecdepded.Colspan = 1;
                                //cellsecdepded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsecdepded);


                                PdfPCell cellsecdepded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsecdepded1.HorizontalAlignment = 2;
                                cellsecdepded1.Colspan = 1;
                                tableDeductions.AddCell(cellsecdepded1);

                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["OtherDedn"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellOtherDed = new PdfPCell(new Phrase("Other Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOtherDed.HorizontalAlignment = 0;
                                cellOtherDed.Colspan = 1;
                                //cellOtherDed.MinimumHeight = 20;
                                tableDeductions.AddCell(cellOtherDed);


                                PdfPCell cellOtherDed1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOtherDed1.HorizontalAlignment = 2;
                                cellOtherDed1.Colspan = 1;
                                tableDeductions.AddCell(cellOtherDed1);

                            }


                            //OWF or SBS
                            forConvert = Convert.ToSingle(dt.Rows[i]["owf"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellSBS = new PdfPCell(new Phrase("Lab. Welfare Fund", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSBS.HorizontalAlignment = 0;
                                cellSBS.Colspan = 1;
                                //cellSBS.MinimumHeight = 20;
                                tableDeductions.AddCell(cellSBS);


                                PdfPCell cellSBS1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSBS1.HorizontalAlignment = 2;
                                cellSBS1.Colspan = 1;
                                tableDeductions.AddCell(cellSBS1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TDS"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellempty2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellempty2.HorizontalAlignment = 0;
                                cellempty2.Colspan = 1;
                                //cellempty2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellempty2);


                                PdfPCell cellempty3 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellempty3.HorizontalAlignment = 2;
                                cellempty3.Colspan = 1;
                                tableDeductions.AddCell(cellempty3);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TelephoneBillDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Telephone Bill Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PVCDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("PVC Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["RegistrationFee"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Registration Fee", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AdminCharges"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Admin Charges", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }



                            PdfPCell ChildTable2 = new PdfPCell(tableDeductions);
                            ChildTable2.Colspan = 2;
                            ChildTable2.BorderWidthLeft = 0;
                            ChildTable2.BorderWidthRight = 0;
                            ChildTable2.BorderWidthLeft = 0;
                            ChildTable2.BorderWidthLeft = 0;
                            tablewageslip.AddCell(ChildTable2);




                            totalstandradamt = totalcdBasic + totalcdDA + totalcdLeaveAmount + totalcdConveyance + totalcdWashAllowance + totalcdHRA + totalcdNFhs + totalcdBonus + totalcdCCA + totalcdGratuity + totalcdotherAllowance + totalcdfoodallw + totalcdMedicalallw + totalcdSplAllowance + totalcdTravelAllw + totalcdPerformanceallw + totalcdMobileallw + totalcdServiceweightage + totalrc + totalcs +
                                totalcdFixedADDL4HR + totalcdFixedQTRALLOW + totalcdFixedRELALLOW + totalcdFixedSITEALLOW + totalcdFixedGunAllw + totalcdFixedFireAllw +
                                totalcdFixedTelephoneAllw + totalcdFixedReimbursement + totalcdFixedHardshipAllw + totalcdFixedRankAllw + totalcdFixedPaidHolidayAllw + totalcdFixedServiceCharge;


                            PdfPCell cellgrans = new PdfPCell(new Phrase("Total", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellgrans.HorizontalAlignment = 0;
                            cellgrans.Colspan = 1;
                            //cellSplDutiesAmt.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans);

                            PdfPCell cellgrans1 = new PdfPCell(new Phrase(totalstandradamt.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellgrans1.HorizontalAlignment = 2;
                            cellgrans1.Colspan = 1;
                            //cellSplDutiesAmt11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans1);


                            forConvert5 = Convert.ToSingle(dt.Rows[i]["Totalearnings"].ToString());

                            PdfPCell cellgrans2 = new PdfPCell(new Phrase(forConvert5.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellgrans2.HorizontalAlignment = 2;
                            cellgrans2.Colspan = 1;
                            //cellSplDutiesAmt1.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans2);


                            PdfPCell cellTotalDed = new PdfPCell(new Phrase("Total Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotalDed.HorizontalAlignment = 0;
                            cellTotalDed.Colspan = 1;
                            tablewageslip.AddCell(cellTotalDed);

                            // forConvert = Convert.ToSingle(dt.Rows[i]["Deductions"].ToString());
                            forConvert = Convert.ToSingle(dt.Rows[i]["TotalDeductions"].ToString());
                            PdfPCell cellTotalDed1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotalDed1.HorizontalAlignment = 2;
                            cellTotalDed1.Colspan = 1;
                            tablewageslip.AddCell(cellTotalDed1);

                            if (chkbonus.Checked == true)
                            {
                                forConvert = Convert.ToSingle(dt.Rows[i]["BonusNew"].ToString());
                                forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBonus"].ToString());

                                if (forConvert > 0)
                                {
                                    PdfPCell cellTotald1 = new PdfPCell(new Phrase("Adv Against Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellTotald1.HorizontalAlignment = 0;
                                    cellTotald1.Colspan = 1;
                                    // cellTotal.MinimumHeight = 20;
                                    tablewageslip.AddCell(cellTotald1);

                                    PdfPCell cellTotal111 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellTotal111.HorizontalAlignment = 2;
                                    cellTotal111.Colspan = 1;
                                    //cellTotal11.MinimumHeight = 20;
                                    tablewageslip.AddCell(cellTotal111);

                                    PdfPCell cellTotal1d1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellTotal1d1.HorizontalAlignment = 2;
                                    cellTotal1d1.Colspan = 1;
                                    tablewageslip.AddCell(cellTotal1d1);

                                    PdfPCell cellEmptycel1l = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                    cellEmptycel1l.HorizontalAlignment = 0;
                                    cellEmptycel1l.Colspan = 2;
                                    tablewageslip.AddCell(cellEmptycel1l);
                                }
                            }

                            PdfPCell cellTotal = new PdfPCell(new Phrase("Net Pay", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal.HorizontalAlignment = 0;
                            cellTotal.Colspan = 1;
                            // cellTotal.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal);

                            PdfPCell cellTotal11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotal11.HorizontalAlignment = 2;
                            cellTotal11.Colspan = 1;
                            //cellTotal11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal11);

                            forConvert = Convert.ToSingle(dt.Rows[i]["Actualamount"].ToString());
                            string gtotal = NumberToEnglish.Instance.changeNumericToWords(forConvert.ToString("#"));

                            PdfPCell cellTotal1 = new PdfPCell(new Phrase("Rs. " + forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal1.HorizontalAlignment = 2;
                            cellTotal1.Colspan = 1;
                            tablewageslip.AddCell(cellTotal1);

                            PdfPCell cellEmptycell = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellEmptycell.HorizontalAlignment = 0;
                            cellEmptycell.Colspan = 2;
                            //cellIncentives.MinimumHeight = 20;
                            tablewageslip.AddCell(cellEmptycell);




                            PdfPCell cellInWords = new PdfPCell(new Phrase("Rupees " + gtotal.Trim() + " Only", FontFactory.GetFont(fontsyle, Fontsize, Font.ITALIC, BaseColor.BLACK)));
                            cellInWords.HorizontalAlignment = 0;
                            cellInWords.Colspan = 5;
                            cellInWords.Border = 0;
                            tablewageslip.AddCell(cellInWords);


                            PdfPCell cellemptycell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellemptycell.HorizontalAlignment = 0;
                            cellemptycell.Colspan = 5;
                            cellemptycell.BorderWidthLeft = 0;
                            cellemptycell.BorderWidthRight = 0;
                            cellemptycell.BorderWidthTop = 0;
                            cellemptycell.BorderWidthBottom = .5f;
                            tablewageslip.AddCell(cellemptycell);

                            PdfPCell companyname1 = new PdfPCell(new Phrase("''This is computer generated wage slip, requires no signature''", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLDITALIC, BaseColor.BLACK)));
                            companyname1.HorizontalAlignment = 2;
                            companyname1.Colspan = 5;
                            companyname1.Border = 0;
                            companyname1.PaddingBottom = 30;
                            tablewageslip.AddCell(companyname1);

                            PdfPCell cellcmnyadd1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                            cellcmnyadd1.HorizontalAlignment = 2;
                            cellcmnyadd1.Colspan = 5;
                            cellcmnyadd1.MinimumHeight = 10;
                            cellcmnyadd1.Border = 0;
                            cellcmnyadd1.PaddingTop = 60;
                            //  tablewageslip.AddCell(cellcmnyadd1);





                            PdfPCell cellsignature = new PdfPCell(new Phrase("Employer Seal & Sign", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellsignature.HorizontalAlignment = 2;
                            cellsignature.Colspan = 3;
                            cellsignature.Border = 0;
                            // tablewageslip.AddCell(cellsignature);


                            document.Add(tablewageslip);

                            if (ChkPerOne.Checked == true)
                            {
                                slipsCount++;
                                if (slipsCount == 2)
                                {
                                    slipsCount = 0;
                                    document.NewPage();
                                }
                            }
                            else
                            {
                                slipsCount++;
                                if (slipsCount == 1)
                                {
                                    slipsCount = 0;
                                    document.NewPage();
                                }
                            }



                            #endregion Basic Information of the Employee

                        }
                    }

                    string filename = ddlcname.SelectedItem.Text + "/Pay Sheet Slips for-" + GetMonthName() + " -" + GetMonthOfYear() + ".pdf";

                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=\"" + filename + "\"");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }
            }
            catch (Exception ex)
            {


            }

        }

        protected string GetPaymentPeriod()
        {
            string period = "";
            string fromDate = "";
            string toDate = "";
            string selectstartingdate = "select ContractStartDate,ContractEndDate,BillDates from contracts where clientid = '" +
                ddlClients.SelectedValue + "'";
            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(selectstartingdate).Result;

            if (dt.Rows.Count > 0)
            {
                string ContractStartDate = dt.Rows[0]["ContractStartDate"].ToString();
                string ContractEndDate = dt.Rows[0]["ContractEndDate"].ToString();
                string strBillDates = dt.Rows[0]["BillDates"].ToString();
                int bBillDates = 0;
                if (strBillDates.Length > 0)
                {
                    int temp1 = Convert.ToInt32(strBillDates);
                    bBillDates = temp1;

                }
                DateTime CSdate = DateTime.Parse(ContractStartDate);
                DateTime CurrentDate = DateTime.Now.Date;
                DateTime lastDay = DateTime.Now.Date;

                #region Begin Old Code as on 21-03-2014 By Venkat

                if (Chk_Month.Checked == false)
                {
                    if (ddlmonth.SelectedIndex == 1)
                    {
                        CurrentDate = CurrentDate.AddMonths(0);
                        lastDay = GlobalData.Instance.GetLastDayOfNextMonth();
                    }
                    else if (ddlmonth.SelectedIndex == 2)
                    {
                        CurrentDate = CurrentDate.AddMonths(-1);
                        lastDay = GlobalData.Instance.GetLastDayOfThisMonth();
                    }
                    else if (ddlmonth.SelectedIndex == 3)
                    {
                        CurrentDate = CurrentDate.AddMonths(-2);
                        lastDay = GlobalData.Instance.GetLastDayOfPreviousMonth();
                    }
                }
                #endregion
                #region Begin New Code as on 21-03-2014 By Venkat

                if (Chk_Month.Checked == true)
                {
                    if (Chk_Month.Checked == true)
                    {
                        DateTime date = Convert.ToDateTime(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                        DateTime startdate = new DateTime(date.Year, date.Month, 1);
                        DateTime enddate = new DateTime(date.Year, date.Month, DateTime.DaysInMonth(date.Year, date.Month));
                        CurrentDate = startdate;
                        lastDay = enddate;
                    }
                }

                #endregion

                DateTime CEdate = DateTime.Parse(ContractEndDate);

                int status = 0;

                if (CSdate <= lastDay)
                {
                    status = 1;

                    if (bBillDates == 1)
                    {

                        if (CSdate.Day <= 15)
                        {
                            fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month, CSdate.Day).ToString("dd/MM/yyyy"));
                            DateTime tempDate = CurrentDate.AddMonths(1);

                            if (CSdate.Day == 1)
                            {
                                fromDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day /* - 1*/).ToString("dd/MM/yyyy"));
                            }
                            else
                            {
                                fromDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day).ToString("dd/MM/yyyy"));

                            }
                        }


                        else
                        {

                            if (CSdate.Month <= CurrentDate.Month - 1)
                            {
                                if (CurrentDate.Month == 1)
                                {
                                    fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month + 11, CSdate.Day).ToString("dd/MM/yyyy"));
                                }
                                else
                                {
                                    fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month - 1, CSdate.Day).ToString("dd/MM/yyyy"));

                                }
                                DateTime tempDate = CurrentDate.AddMonths(0);

                                if (CurrentDate.Day == 1)
                                {
                                    toDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day).ToString("dd/MM/yyyy"));
                                }
                                else
                                {
                                    toDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day - 1).ToString("dd/MM/yyyy"));

                                }
                            }

                            if (CSdate.Month != 0)
                            {
                                if (CurrentDate.Month == 1)
                                {
                                    fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month + 11, CSdate.Day).ToString("dd/MM/yyyy"));
                                }
                                else
                                {
                                    fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month - 1, CSdate.Day).ToString("dd/MM/yyyy"));
                                }
                                DateTime tempDate = CurrentDate.AddMonths(0);
                                //toDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day /* - 1*/).ToString("dd/MM/yyyy"));

                                if (CurrentDate.Day == 1)
                                {
                                    toDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day).ToString("dd/MM/yyyy"));
                                }
                                else
                                {
                                    toDate = (new DateTime(tempDate.Year, tempDate.Month, CSdate.Day - 1).ToString("dd/MM/yyyy"));

                                }


                            }
                        }

                    }

                    //new for payment from and to--
                    if (bBillDates == 2)
                    {
                        if (CurrentDate.Month == 1)
                        {
                            fromDate = (new DateTime(CurrentDate.Year, 12, 26).ToString("dd/MM/yyyy"));
                        }
                        else

                            fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month - 1, 26).ToString("dd/MM/yyyy"));
                        DateTime tempDate = CurrentDate.AddMonths(1);


                        if (tempDate.Month == 1)
                        {
                            toDate = (new DateTime(tempDate.Year, 12, 25).ToString("dd/MM/yyyy"));
                        }
                        else
                        {
                            toDate = (new DateTime(tempDate.Year, tempDate.Month - 1, 25).ToString("dd/MM/yyyy"));
                        }

                    }

                    if (bBillDates == 3)
                    {
                        if (CurrentDate.Month == 1)
                        {
                            fromDate = (new DateTime(CurrentDate.Year, 12, 21).ToString("dd/MM/yyyy"));
                        }
                        else

                            fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month - 1, 21).ToString("dd/MM/yyyy"));
                        DateTime tempDate = CurrentDate.AddMonths(1);


                        if (tempDate.Month == 1)
                        {
                            toDate = (new DateTime(tempDate.Year, 12, 20).ToString("dd/MM/yyyy"));
                        }
                        else
                        {
                            toDate = (new DateTime(tempDate.Year, tempDate.Month - 1, 20).ToString("dd/MM/yyyy"));
                        }

                    }


                    if (bBillDates == 0)
                    {
                        fromDate = (new DateTime(CurrentDate.Year, CurrentDate.Month/* - 1*/, 1).ToString("dd/MM/yyyy"));

                        if (CSdate.Day == 1)
                        {
                            toDate = (new DateTime(CurrentDate.Year, CurrentDate.Month/* - 1*/, DateTime.DaysInMonth(CurrentDate.Year, CurrentDate.Month)).ToString("dd/MM/yyyy"));
                        }
                        else
                        {
                            toDate = (new DateTime(CurrentDate.Year, CurrentDate.Month/* - 1*/, DateTime.DaysInMonth(CurrentDate.Year, CurrentDate.Month)).ToString("dd/MM/yyyy"));

                        }
                    }

                    // end new



                    if (status == 0)
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert(' There Is No Valid Contract for this month ');", true);
                    }
                }
                else
                {
                }
            }
            else
            {
            }
            if (fromDate.Length > 0 && toDate.Length > 0)
            {
                period = fromDate + " to " + toDate;
            }
            return period;
        }

        protected void btndutieswithots_Click(object sender, EventArgs e)
        {
            try
            {

                int FONT_SIZE = int.Parse(ddlfontSize.SelectedValue);
                int titleofdocumentindex = 0;
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Unit ID/Name')", true);
                    return;
                }

                int payMonth = GetMonth(ddlmonth.SelectedValue);
                //int month = GetMonthAndYear();
                int month = GetMonthBasedOnSelectionDateorMonth();

                string selectmonth = string.Empty;
                string SelectmonthWithbankacno = string.Empty;
                string SelectmonthWithoutbankacno = string.Empty;
                DataTable dt = null;


                var clientid = ddlClients.SelectedValue;
                var Paysheetoption = ddlpaymenttype.SelectedIndex;
                if (ddlpaymenttype.SelectedIndex == 0)
                {
                    Paysheetoption = 0;

                }
                else if (ddlpaymenttype.SelectedIndex == 1)
                {
                    Paysheetoption = 1;

                }
                else if (ddlpaymenttype.SelectedIndex == 2)
                {
                    Paysheetoption = 2;

                }
                var Noofattendance = ddlnoofattendance.SelectedIndex;
                //var pfesioptions = ddl_Pf_Esi_Options.SelectedIndex;

                var SPName = "";
                Hashtable HTPaysheet = new Hashtable();
                SPName = "IMEPaysheetpdfs";
                HTPaysheet.Add("@ClientId", clientid);
                HTPaysheet.Add("@month", month);
                HTPaysheet.Add("@PaymentOption", Paysheetoption);
                dt = config.ExecuteAdaptorAsyncWithParams(SPName, HTPaysheet).Result;

                MemoryStream ms = new MemoryStream();
                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.A4.Rotate());
                    PdfWriter writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    document.AddTitle("FaMS");
                    document.AddAuthor("WebWonders");
                    document.AddSubject("Wage Sheet");
                    document.AddKeywords("Keyword1, keyword2, …");//
                    float forConvert;
                    string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                    DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                    string companyName1 = "Your Company Name";
                    string companyAddress = "Your Company Address";
                    if (compInfo.Rows.Count > 0)
                    {
                        companyName1 = compInfo.Rows[0]["CompanyName"].ToString();
                        companyAddress = compInfo.Rows[0]["Address"].ToString();
                    }

                    #region Variables for table cells counting

                    int IDCardDed = 0;
                    int Extra = 0;
                    float IDCardDed1 = 0;
                    float Extra1 = 0;

                    int Arrears = 0;
                    int AttBonus = 0;
                    int dts = 0;
                    int ATMDed = 0;

                    int srate = 0;
                    int basic = 0;
                    int da = 0;
                    int hra = 0;
                    int cca = 0;
                    int conveyance = 0;
                    int washallowance = 0;
                    int otherallowance = 0;
                    int SplAllowance = 0;
                    int TravelAllw = 0;
                    int PerformanceAllw = 0;
                    int MobileAllw = 0;
                    int leavewages = 0;
                    int gratuity = 0;
                    int bonus = 0;
                    int nfhs = 0;
                    int rc = 0;
                    int cs = 0;
                    int gross = 0;
                    int incentivs = 0;
                    int pfonduties = 0;
                    int esionduties = 0;
                    int proftax = 0;
                    int salAdvDed = 0;
                    int SecdepDed = 0;
                    int LoanDed = 0;
                    int uniformDed = 0;
                    int AdvDed = 0;
                    int WCDed = 0;
                    int otherDed = 0;
                    int canteenAdv = 0;
                    int penalty = 0;
                    int totalDeductions = 0;
                    int netpay = 0;
                    int PFempr = 0;
                    int ESIempr = 0;
                    int CTC = 0;
                    int cfoodallowance = 0;
                    int cmedicalallowance = 0;
                    int ots = 0;
                    int otamt = 0;
                    int nhs = 0;
                    int ldays = 0;
                    int TotalPayableDays = 0;
                    int nhsamt = 0;
                    int wo = 0;
                    int woamt = 0;
                    int pfonot = 0;
                    int esionot = 0;
                    int Pf = 0;
                    int Esi = 0;
                    int GenDedn = 0;
                    int SecDepDedn = 0;
                    int owf = 0;
                    int TelephoneBillDed = 0;
                    int Serviceweightage = 0;
                    int PVCAmount = 0;
                    int AddlAmount = 0;
                    int npotsamt = 0;
                    int OTHrs = 0;
                    int OTHrsAmt = 0;

                    float Arrears1 = 0;
                    float AttBonus1 = 0;
                    float ATMDed1 = 0;
                    float owf1 = 0;
                    float dts1 = 0;
                    float srate1 = 0;
                    float basic1 = 0;
                    float da1 = 0;
                    float hra1 = 0;
                    float cca1 = 0;
                    float conveyance1 = 0;
                    float washallowance1 = 0;
                    float otherallowance1 = 0;
                    float SplAllowance1 = 0;
                    float ldays1 = 0;
                    float TotalPayableDays1 = 0;
                    float TravelAllw1 = 0;
                    float PerformanceAllw1 = 0;
                    float MobileAllw1 = 0;
                    float leavewages1 = 0;
                    float gratuity1 = 0;
                    float bonus1 = 0;
                    float nfhs1 = 0;
                    float rc1 = 0;
                    float cs1 = 0;
                    float gross1 = 0;
                    float incentivs1 = 0;
                    float pfonduties1 = 0;
                    float esionduties1 = 0;
                    float proftax1 = 0;
                    float salAdvDed1 = 0;
                    float uniformDed1 = 0;
                    float AdvDed1 = 0;
                    float WCDed1 = 0;
                    float otherDed1 = 0;
                    float canteenAdv1 = 0;
                    float penalty1 = 0;
                    float totalDeductions1 = 0;
                    float LoanDed1 = 0;
                    float netpay1 = 0;
                    float PFempr1 = 0;
                    float ESIempr1 = 0;
                    float CTC1 = 0;
                    float cfoodallowance1 = 0;
                    float cmedicalallowance1 = 0;
                    float ots1 = 0;
                    float otamt1 = 0;
                    float nhs1 = 0;
                    float nhsamt1 = 0;
                    float wo1 = 0;
                    float woamt1 = 0;
                    float pfonot1 = 0;
                    float esionot1 = 0;
                    float Pf1 = 0;
                    float Esi1 = 0;
                    float GenDedn1 = 0;
                    float SecDepDedn1 = 0;
                    float TelephoneBillDed1 = 0;
                    float serviceweightage1 = 0;
                    float PVCAmount1 = 0;
                    float AddlAmount1 = 0;
                    float npotsamt1 = 0;
                    float OTHrs1 = 0;
                    float OTHrsAmt1 = 0;
                    #endregion

                    #region Data for counting tablecells

                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        dts1 = float.Parse(dt.Rows[i]["NoOfDuties"].ToString());
                        if (dts1 != 0)
                        {
                            dts1 += 1;
                            if (dts1 > 0)
                            {
                                dts = 1;
                            }
                        }

                        ldays1 = float.Parse(dt.Rows[i]["ldays"].ToString());
                        if (ldays1 != 0)
                        {
                            ldays1 += 1;
                            if (ldays1 > 0)
                            {
                                ldays = 1;
                            }
                        }


                        TotalPayableDays1 = float.Parse(dt.Rows[i]["TotalPayableDays"].ToString());
                        if (TotalPayableDays1 != 0)
                        {
                            TotalPayableDays1 += 1;
                            if (TotalPayableDays1 > 0)
                            {
                                TotalPayableDays = 1;
                            }
                        }


                        IDCardDed1 = float.Parse(dt.Rows[i]["IDCardDed"].ToString());
                        if (IDCardDed1 != 0)
                        {
                            IDCardDed1 += 1;
                            if (IDCardDed1 > 0)
                            {
                                IDCardDed = 1;
                            }
                        }

                        AttBonus1 = float.Parse(dt.Rows[i]["AttBonus"].ToString());
                        if (AttBonus1 != 0)
                        {
                            AttBonus1 += 1;
                            if (AttBonus1 > 0)
                            {
                                AttBonus = 1;
                            }
                        }

                        Arrears1 = float.Parse(dt.Rows[i]["Arrears"].ToString());
                        if (Arrears1 != 0)
                        {
                            Arrears1 += 1;
                            if (Arrears1 > 0)
                            {
                                Arrears = 1;
                            }
                        }

                        Extra1 = float.Parse(dt.Rows[i]["Extra"].ToString());
                        if (Extra1 != 0)
                        {
                            Extra1 += 1;
                            if (Extra1 > 0)
                            {
                                Extra = 1;
                            }
                        }

                        srate1 = float.Parse(dt.Rows[i]["SalRate"].ToString());
                        if (srate1 != 0)
                        {
                            srate1 += 1;
                            if (srate1 > 0)
                            {
                                srate = 1;
                            }
                        }

                        ATMDed1 = float.Parse(dt.Rows[i]["ATMDed"].ToString());
                        if (ATMDed1 != 0)
                        {
                            ATMDed1 += 1;
                            if (ATMDed1 > 0)
                            {
                                ATMDed = 1;
                            }
                        }


                        basic1 = float.Parse(dt.Rows[i]["basic"].ToString());
                        if (basic1 != 0)
                        {
                            basic1 += 1;
                            if (basic1 > 0)
                            {
                                basic = 1;
                            }
                        }
                        da1 = float.Parse(dt.Rows[i]["da"].ToString());
                        if (da1 != 0)
                        {
                            da1 += 1;
                            if (da1 > 0)
                            {
                                da = 1;
                            }
                        }
                        hra1 = float.Parse(dt.Rows[i]["hra"].ToString());
                        if (hra1 != 0)
                        {
                            hra1 += 1;
                            if (hra1 > 0)
                            {
                                hra = 1;
                            }
                        }
                        cca1 = float.Parse(dt.Rows[i]["cca"].ToString());
                        if (cca1 != 0)
                        {
                            cca1 += 1;
                            if (cca1 > 0)
                            {
                                cca = 1;
                            }
                        }
                        conveyance1 = float.Parse(dt.Rows[i]["Conveyance"].ToString());
                        if (conveyance1 != 0)
                        {
                            conveyance1 += 1;
                            if (conveyance1 > 0)
                            {
                                conveyance = 1;
                            }
                        }

                        washallowance1 = float.Parse(dt.Rows[i]["washallowance"].ToString());
                        if (washallowance1 != 0)
                        {
                            washallowance1 += 1;
                            if (washallowance1 > 0)
                            {
                                washallowance = 1;
                            }
                        }
                        otherallowance1 = float.Parse(dt.Rows[i]["otherallowance"].ToString());
                        if (otherallowance1 != 0)
                        {
                            otherallowance1 += 1;
                            if (otherallowance1 > 0)
                            {
                                otherallowance = 1;
                            }
                        }
                        SplAllowance1 = float.Parse(dt.Rows[i]["SplAllowance"].ToString());
                        if (SplAllowance1 != 0)
                        {
                            SplAllowance1 += 1;
                            if (SplAllowance1 > 0)
                            {
                                SplAllowance = 1;
                            }
                        }

                        TravelAllw1 = float.Parse(dt.Rows[i]["TravelAllw"].ToString());
                        if (TravelAllw1 != 0)
                        {
                            TravelAllw1 += 1;
                            if (TravelAllw1 > 0)
                            {
                                TravelAllw = 1;
                            }
                        }

                        PerformanceAllw1 = float.Parse(dt.Rows[i]["PerformanceAllw"].ToString());
                        if (PerformanceAllw1 != 0)
                        {
                            PerformanceAllw1 += 1;
                            if (PerformanceAllw1 > 0)
                            {
                                PerformanceAllw = 1;
                            }
                        }

                        MobileAllw1 = float.Parse(dt.Rows[i]["MobileAllw"].ToString());
                        if (MobileAllw1 != 0)
                        {
                            MobileAllw1 += 1;
                            if (MobileAllw1 > 0)
                            {
                                MobileAllw = 1;
                            }
                        }

                        leavewages1 = float.Parse(dt.Rows[i]["Leavewages"].ToString());
                        if (leavewages1 != 0)
                        {
                            leavewages1 += 1;
                            if (leavewages1 > 0)
                            {
                                leavewages = 1;
                            }
                        }
                        gratuity1 = float.Parse(dt.Rows[i]["gratuity"].ToString());
                        if (gratuity1 != 0)
                        {
                            gratuity1 += 1;
                            if (gratuity1 > 0)
                            {
                                gratuity = 1;
                            }
                        }
                        bonus1 = float.Parse(dt.Rows[i]["bonus"].ToString());
                        if (bonus1 != 0)
                        {
                            bonus1 += 1;
                            if (bonus1 > 0)
                            {
                                bonus = 1;
                            }
                        }

                        nfhs1 = float.Parse(dt.Rows[i]["nfhs"].ToString());
                        if (nfhs1 != 0)
                        {
                            nfhs1 += 1;
                            if (nfhs1 > 0)
                            {
                                nfhs = 1;
                            }
                        }
                        rc1 = float.Parse(dt.Rows[i]["rc"].ToString());
                        if (rc1 != 0)
                        {
                            rc1 += 1;
                            if (rc1 > 0)
                            {
                                rc = 1;
                            }
                        }

                        cs1 = float.Parse(dt.Rows[i]["cs"].ToString());
                        if (cs1 != 0)
                        {
                            cs1 += 1;
                            if (cs1 > 0)
                            {
                                cs = 1;
                            }
                        }
                        gross1 = float.Parse(dt.Rows[i]["gross"].ToString());
                        if (gross1 != 0)
                        {
                            gross1 += 1;
                            if (gross1 > 0)
                            {
                                gross = 1;
                            }
                        }

                        incentivs1 = float.Parse(dt.Rows[i]["incentivs"].ToString());
                        if (incentivs1 != 0)
                        {
                            incentivs1 += 1;
                            if (incentivs1 > 0)
                            {
                                incentivs = 1;
                            }
                        }


                        cfoodallowance1 = float.Parse(dt.Rows[i]["foodallowance"].ToString());
                        if (cfoodallowance1 != 0)
                        {
                            cfoodallowance1 += 1;
                            if (cfoodallowance1 > 0)
                            {
                                cfoodallowance = 1;
                            }
                        }

                        cmedicalallowance1 = float.Parse(dt.Rows[i]["medicalallowance"].ToString());
                        if (cmedicalallowance1 != 0)
                        {
                            cmedicalallowance1 += 1;
                            if (cmedicalallowance1 > 0)
                            {
                                cmedicalallowance = 1;
                            }
                        }

                        //CHanged to zero so as to get PF and ESI in PFTotal and ESITotal as given below //Check PFTotal and ESITotal
                        pfonduties1 = float.Parse(dt.Rows[i]["PFonDuties"].ToString());
                        if (pfonduties1 != 0)
                        {
                            pfonduties1 += 1;
                            if (pfonduties1 > 0)
                            {
                                pfonduties = 0;
                            }
                        }
                        esionduties1 = float.Parse(dt.Rows[i]["ESIonduties"].ToString());
                        if (esionduties1 != 0)
                        {
                            esionduties1 += 1;
                            if (esionduties1 > 0)
                            {
                                esionduties = 0;
                            }
                        }
                        proftax1 = float.Parse(dt.Rows[i]["proftax"].ToString());
                        if (proftax1 != 0)
                        {
                            proftax1 += 1;
                            if (proftax1 > 0)
                            {
                                proftax = 1;
                            }
                        }
                        salAdvDed1 = float.Parse(dt.Rows[i]["salAdvDed"].ToString());
                        if (salAdvDed1 != 0)
                        {
                            salAdvDed1 += 1;
                            if (salAdvDed1 > 0)
                            {
                                salAdvDed = 1;
                            }
                        }


                        LoanDed1 = float.Parse(dt.Rows[i]["LoanDed"].ToString());
                        if (LoanDed1 != 0)
                        {
                            LoanDed1 += 1;
                            if (LoanDed1 > 0)
                            {
                                LoanDed = 1;
                            }
                        }
                        uniformDed1 = float.Parse(dt.Rows[i]["uniformDed"].ToString());
                        if (uniformDed1 != 0)
                        {
                            uniformDed1 += 1;
                            if (uniformDed1 > 0)
                            {
                                uniformDed = 1;
                            }
                        }
                        AdvDed1 = float.Parse(dt.Rows[i]["AdvDed"].ToString());
                        if (AdvDed1 != 0)
                        {
                            AdvDed1 += 1;
                            if (AdvDed1 > 0)
                            {
                                AdvDed = 1;
                            }
                        }
                        WCDed1 = float.Parse(dt.Rows[i]["WCDed"].ToString());
                        if (WCDed1 != 0)
                        {
                            WCDed1 += 1;
                            if (WCDed1 > 0)
                            {
                                WCDed = 1;
                            }
                        }

                        //GenDedn1 = float.Parse(dt.Rows[i]["GenDedn"].ToString());
                        //if (GenDedn1 != 0)
                        //{
                        //    GenDedn1 += 1;
                        //    if (GenDedn1 > 0)
                        //    {
                        //        GenDedn = 1;
                        //    }
                        //}

                        SecDepDedn1 = float.Parse(dt.Rows[i]["SecDepDedn"].ToString());
                        if (SecDepDedn1 != 0)
                        {
                            SecDepDedn1 += 1;
                            if (SecDepDedn1 > 0)
                            {
                                SecDepDedn = 1;
                            }
                        }

                        otherDed1 = float.Parse(dt.Rows[i]["otherDed"].ToString());
                        if (otherDed1 != 0)
                        {
                            otherDed1 += 1;
                            if (otherDed1 > 0)
                            {
                                otherDed = 1;
                            }
                        }
                        canteenAdv1 = float.Parse(dt.Rows[i]["canteenAdv"].ToString());
                        if (canteenAdv1 != 0)
                        {
                            canteenAdv1 += 1;
                            if (canteenAdv1 > 0)
                            {
                                canteenAdv = 1;
                            }
                        }

                        penalty1 = float.Parse(dt.Rows[i]["penalty"].ToString());
                        if (penalty1 != 0)
                        {
                            penalty1 += 1;
                            if (penalty1 > 0)
                            {
                                penalty = 1;
                            }
                        }
                        TelephoneBillDed1 = float.Parse(dt.Rows[i]["TelephoneBillDed"].ToString());
                        if (TelephoneBillDed1 != 0)
                        {
                            TelephoneBillDed1 += 1;
                            if (TelephoneBillDed1 > 0)
                            {
                                TelephoneBillDed = 1;
                            }
                        }
                        totalDeductions1 = float.Parse(dt.Rows[i]["Totaldeduct"].ToString());
                        if (totalDeductions1 != 0)
                        {
                            totalDeductions1 += 1;
                            if (totalDeductions1 > 0)
                            {
                                totalDeductions = 1;
                            }
                        }
                        netpay1 = float.Parse(dt.Rows[i]["NetAmount"].ToString());
                        if (netpay1 != 0)
                        {
                            netpay1 += 1;
                            if (netpay1 > 0)
                            {
                                netpay = 1;
                            }
                        }

                        PFempr1 = float.Parse(dt.Rows[i]["PFempr"].ToString());
                        if (PFempr1 != 0)
                        {
                            PFempr1 += 1;
                            if (PFempr1 > 0)
                            {
                                PFempr = 1;
                            }
                        }

                        ESIempr1 = float.Parse(dt.Rows[i]["ESIempr"].ToString());
                        if (ESIempr1 != 0)
                        {
                            ESIempr1 += 1;
                            if (ESIempr1 > 0)
                            {
                                ESIempr = 1;
                            }
                        }

                        CTC1 = float.Parse(dt.Rows[i]["CTC"].ToString());
                        if (CTC1 != 0)
                        {
                            CTC1 += 1;
                            if (CTC1 > 0)
                            {
                                CTC = 1;
                            }
                        }

                        ots1 = float.Parse(dt.Rows[i]["Duties"].ToString());
                        if (ots1 != 0)
                        {
                            ots1 += 1;
                            if (ots1 > 0)
                            {
                                ots = 1;
                            }
                        }

                        otamt1 = float.Parse(dt.Rows[i]["Amount"].ToString());
                        if (otamt1 != 0)
                        {
                            otamt1 += 1;
                            if (otamt1 > 0)
                            {
                                otamt = 1;
                            }
                        }

                        //

                        nhs1 = float.Parse(dt.Rows[i]["nhs"].ToString());
                        if (nhs1 != 0)
                        {
                            nhs1 += 1;
                            if (nhs1 > 0)
                            {
                                nhs = 1;
                            }
                        }

                        nhsamt1 = float.Parse(dt.Rows[i]["nhsamt"].ToString());
                        if (nhsamt1 != 0)
                        {
                            nhsamt1 += 1;
                            if (nhsamt1 > 0)
                            {
                                nhsamt = 1;
                            }
                        }


                        //


                        //

                        wo1 = float.Parse(dt.Rows[i]["Wo"].ToString());
                        if (wo1 != 0)
                        {
                            wo1 += 1;
                            if (wo1 > 0)
                            {
                                wo = 1;
                            }
                        }

                        woamt1 = float.Parse(dt.Rows[i]["woamt"].ToString());
                        if (woamt1 != 0)
                        {
                            woamt1 += 1;
                            if (woamt1 > 0)
                            {
                                woamt = 1;
                            }
                        }


                        //

                        pfonot1 = float.Parse(dt.Rows[i]["PFONOT"].ToString());
                        if (pfonot1 != 0)
                        {
                            pfonot1 += 1;
                            if (pfonot1 > 0)
                            {
                                pfonot = 0;
                            }
                        }

                        esionot1 = float.Parse(dt.Rows[i]["ESIONOT"].ToString());
                        if (esionot1 != 0)
                        {
                            esionot1 += 1;
                            if (esionot1 > 0)
                            {
                                esionot = 0;
                            }
                        }

                        Pf1 = float.Parse(dt.Rows[i]["PFTotal"].ToString());
                        if (Pf1 != 0)
                        {
                            Pf1 += 1;
                            if (Pf1 > 0)
                            {
                                Pf = 1;
                            }
                        }
                        Esi1 = float.Parse(dt.Rows[i]["ESITotal"].ToString());
                        if (Esi1 != 0)
                        {
                            Esi1 += 1;
                            if (Esi1 > 0)
                            {
                                Esi = 1;
                            }
                        }

                        owf1 = float.Parse(dt.Rows[i]["owf"].ToString());
                        if (owf1 != 0)
                        {
                            owf1 += 1;
                            if (owf1 > 0)
                            {
                                owf = 1;
                            }
                        }

                        PVCAmount1 = float.Parse(dt.Rows[i]["PVCAmount"].ToString());
                        if (PVCAmount1 != 0)
                        {
                            PVCAmount1 += 1;
                            if (PVCAmount1 > 0)
                            {
                                PVCAmount = 1;
                            }
                        }

                        serviceweightage1 = float.Parse(dt.Rows[i]["Serviceweightage"].ToString());
                        if (serviceweightage1 != 0)
                        {
                            serviceweightage1 += 1;
                            if (serviceweightage1 > 0)
                            {
                                Serviceweightage = 1;
                            }
                        }

                        AddlAmount1 = float.Parse(dt.Rows[i]["AddlAmount"].ToString());
                        if (AddlAmount1 != 0)
                        {
                            AddlAmount1 += 1;
                            if (AddlAmount1 > 0)
                            {
                                AddlAmount = 1;
                            }
                        }

                        npotsamt1 = float.Parse(dt.Rows[i]["Npotsamt"].ToString());
                        if (npotsamt1 != 0)
                        {
                            npotsamt1 += 1;
                            if (npotsamt1 > 0)
                            {
                                npotsamt = 1;
                            }
                        }

                        OTHrs1 = float.Parse(dt.Rows[i]["OTHrs"].ToString());
                        if (OTHrs1 != 0)
                        {
                            OTHrs1 += 1;
                            if (OTHrs1 > 0)
                            {
                                OTHrs = 1;
                            }
                        }

                        OTHrsAmt1 = float.Parse(dt.Rows[i]["OTHrsAmt"].ToString());
                        if (OTHrsAmt1 != 0)
                        {
                            OTHrsAmt1 += 1;
                            if (OTHrsAmt1 > 0)
                            {
                                OTHrsAmt = 1;
                            }
                        }


                    }

                    #endregion



                    int sno = 1;
                    int empid = 1;
                    int empname = 1;
                    int design = 1;
                    int bankacno = 1;

                    int advdue = 0;







                    if ((uniformDed) > 0)
                    {
                        advdue = 1;
                    }


                    int tableCells = dts + ldays + TotalPayableDays + srate + basic + da + hra + cca + conveyance + washallowance + otherallowance + SplAllowance + TravelAllw + PerformanceAllw + MobileAllw + leavewages + AddlAmount + npotsamt +
                                    gratuity + bonus + nfhs + rc + cs + gross + incentivs + pfonduties + esionduties + proftax + AttBonus + Arrears +
                                    salAdvDed + uniformDed + ATMDed + IDCardDed + Extra + otherDed + canteenAdv + penalty + totalDeductions + netpay + PFempr + ESIempr + CTC + sno + TelephoneBillDed + PVCAmount + Serviceweightage + OTHrs + OTHrsAmt +
                                    empid + empname + design + bankacno + ots + otamt + wo + woamt + nhs + nhsamt + advdue + pfonot + esionot + Pf + Esi + GenDedn + SecDepDedn + LoanDed + AdvDed + WCDed + cfoodallowance + cmedicalallowance + owf;




                    #region variables for total

                    float totalArrears = 0;
                    float totalAttbonus = 0;
                    float totalIDCardDed = 0;
                    float totalExtra = 0;
                    float totalDuties = 0;
                    float totalLdays = 0;
                    float totalTotalPayableDays = 0;
                    float totalATMDed = 0;
                    float totalsrate = 0;
                    float totalBasic = 0;
                    float totalDA = 0;
                    float totalHRA = 0;
                    float totalCCA = 0;
                    float totalConveyance = 0;
                    float totalWA = 0;
                    float totalOA = 0;
                    float totalSplAllowance = 0;
                    float totalTravelAllw = 0;
                    float totalPerformanceAllw = 0;
                    float totalMobileAllw = 0;
                    float totalLw = 0;
                    float totalGratuity = 0;
                    float totalbonus = 0;
                    float totalNfhs = 0;
                    float totalRc = 0;
                    float totalCs = 0;
                    float totalGross = 0;
                    float totalIncentivs = 0;
                    float totalPFondts = 0;
                    float totalESIondts = 0;
                    float totalProfTax = 0;
                    float totalSalAdv = 0;
                    float totalUniforDed = 0;
                    float totalOtherdedn = 0;
                    float totalCanteenAdv = 0;
                    float totalPenalty = 0;
                    float totalDed = 0;
                    float totalNetpay = 0;
                    float totalPFempr = 0;
                    float totalESIempr = 0;
                    float totalCTC = 0;
                    float totalAdvDed = 0;
                    float totalWCDed = 0;
                    float totalots = 0;
                    float totalotamt = 0;
                    float totalpfonots = 0;
                    float totalesionots = 0;
                    float totalpf = 0;
                    float totalesi = 0;
                    float totalGenDedn = 0;
                    float totalSecDepDedn = 0;
                    float totalLoanDed = 0;
                    float totalwos = 0;
                    float totalwoamt = 0;
                    float totalnhs = 0;
                    float totalnhsamt = 0;
                    float totalfoodallowance = 0;
                    float totalmedicalallowance = 0;
                    float totalowf = 0;
                    float totalAmountdue = 0;
                    float totalTelephoneBillDed = 0;
                    float totalServiceweightage = 0;
                    float totalPVCAmount = 0;
                    float totalAddlAmount = 0;
                    float totalnpotsamt = 0;
                    float totalOTHrs = 0;
                    float totalOTHrsAmt = 0;

                    #endregion

                    #region variables for  Grand  total
                    float GrandtotalArrears = 0;
                    float GrandtotalAttbonus = 0;
                    float GrandtotalAdvDed = 0;
                    float GrandtotalIDCardDed = 0;
                    float GrandtotalExtra = 0;
                    float GrandtotalATMDed = 0;
                    float GrandtotalWCDed = 0;
                    float GrandtotalDuties = 0;
                    float GrandtotalLdays = 0;
                    float GrandtotalTotalPayableDays = 0;
                    float GrandtotalSrate = 0;
                    float GrandtotalBasic = 0;
                    float GrandtotalDA = 0;
                    float GrandtotalHRA = 0;
                    float GrandtotalCCA = 0;
                    float GrandtotalConveyance = 0;
                    float GrandtotalWA = 0;
                    float GrandtotalOA = 0;
                    float GrandtotalSplAllowance = 0;
                    float GrandtotalTravelAllw = 0;
                    float GrandtotalPerformanceAllw = 0;
                    float GrandtotalMobileAllw = 0;
                    float GrandtotalLw = 0;
                    float GrandtotalGratuity = 0;
                    float Grandtotalbonus = 0;
                    float GrandtotalNfhs = 0;
                    float GrandtotalRc = 0;
                    float GrandtotalCs = 0;
                    float GrandtotalGross = 0;
                    float GrandtotalIncentivs = 0;
                    float GrandtotalPFondts = 0;
                    float GrandtotalESIondts = 0;
                    float GrandtotalProfTax = 0;
                    float GrandtotalSalAdv = 0;
                    float GrandtotalUniforDed = 0;
                    float GrandtotalOtherdedn = 0;
                    float GrandtotalCanteenAdv = 0;
                    float GrandtotalPenalty = 0;
                    float GrandtotalDed = 0;
                    float GrandtotalNetpay = 0;
                    float GrandtotalPFempr = 0;
                    float GrandtotalESIempr = 0;
                    float GrandtotalCTC = 0;
                    float Grandtotalots = 0;
                    float Grandtotalotamt = 0;
                    float Grandtotalpfonots = 0;
                    float Grandtotalesionots = 0;
                    float Grandtotalpf = 0;
                    float Grandtotalesi = 0;
                    float GrandtotalGenDedn = 0;
                    float GrandtotalSecDepDedn = 0;
                    float GrandtotalLoanDedn = 0;
                    float Grandtotalwos = 0;
                    float Grandtotalwoamt = 0;
                    float Grandtotalnhs = 0;
                    float Grandtotalnhsamt = 0;
                    float Grandtotalfoodallowance = 0;
                    float Grandtotalmedicalallowance = 0;
                    float Grandtotalowf = 0;
                    float GrandtotalAmountdue = 0;
                    float GrandtotalTelephoneBillDed = 0;
                    float GrandtotalServiceweightage = 0;
                    float GrandtotalPVCAmount = 0;
                    float GrandtotalAddlAmount = 0;
                    float Grandtotalnpotsamt = 0;
                    float GrandtotalOTHrs = 0;
                    float GrandtotalOTHrsamt = 0;
                    #endregion

                    int nextpagerecordscount = 0;
                    int targetpagerecors = 0;
                    if (tableCells > 15)
                    {
                        targetpagerecors = 6;
                    }
                    else
                    {
                        targetpagerecors = 6;
                    }
                    int secondpagerecords = targetpagerecors;
                    bool nextpagehasPages = false;
                    int j = 0;
                    PdfPTable SecondtablecheckbyFooter = null;
                    PdfPTable SecondtableFooter = null;
                    PdfPTable SecondtableGrandtotalFooter = null;
                    for (int nextpagei = 0; nextpagei < dt.Rows.Count; nextpagei++)
                    {
                        nextpagehasPages = true;


                        #region Titles of Document
                        PdfPTable Maintable = new PdfPTable(27);
                        if (tableCells > 20)
                        {
                            Maintable.TotalWidth = 800f;
                        }
                        else
                        {
                            Maintable.TotalWidth = 800f;
                        }
                        Maintable.LockedWidth = true;
                        float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };


                        Maintable.SetWidths(width);


                        //Company Name & vage act details

                        PdfPCell cellemp = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                        cellemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellemp.Colspan = 27;
                        cellemp.Border = 0;

                        PdfPCell Heading = new PdfPCell(new Phrase("Form - XVII REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, 20, Font.BOLD, BaseColor.BLACK)));
                        Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        Heading.Colspan = 27;
                        Heading.Border = 0;
                        // Maintable.AddCell(Heading);


                        PdfPCell actDetails = new PdfPCell(new Phrase("(vide Rule 78(1) a(i) of Contract Labour (Reg. & abolition)", FontFactory.GetFont(Fontstyle, 15, Font.BOLD, BaseColor.BLACK)));
                        actDetails.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        actDetails.Colspan = 27;
                        actDetails.Border = 0;// 15;
                        //Maintable.AddCell(actDetails);

                        // Maintable.AddCell(cellemp);
                        #endregion


                        #region Sub Headings

                        PdfPCell companyName = new PdfPCell(new Phrase(companyName1, FontFactory.GetFont("Arial Black", 20, Font.BOLD, BaseColor.BLACK)));
                        companyName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        companyName.Colspan = 27;
                        companyName.Border = 0;// 15;
                        Maintable.AddCell(companyName);

                        PdfPCell paySheet = new PdfPCell(new Phrase("Pay Sheet", FontFactory.GetFont(Fontstyle, 10, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK)));
                        paySheet.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        paySheet.Colspan = 27;
                        paySheet.Border = 0;// 15;
                        Maintable.AddCell(paySheet);

                        PdfPCell CClient = new PdfPCell(new Phrase("Unit ID :   " + ddlClients.SelectedValue, FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CClient.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CClient.Colspan = 11;
                        CClient.Border = 0;// 15;
                        Maintable.AddCell(CClient);


                        PdfPCell CDates = new PdfPCell(new Phrase("Payment for the period of : " + GetPaymentPeriod(), FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        CDates.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CDates.Colspan = 8;
                        CDates.Border = 0;// 15;
                        Maintable.AddCell(CDates);

                        // PdfPCell CPaySheetDate = new PdfPCell(new Phrase("Pay Sheet Date :  " + DateTime.Now.Date.ToString("dd/MM/yyyy"), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        PdfPCell CPaySheetDate = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CPaySheetDate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CPaySheetDate.Colspan = 1;
                        CPaySheetDate.Border = 0;// 15;
                        Maintable.AddCell(CPaySheetDate);

                        PdfPCell CPayMonth = new PdfPCell(new Phrase("For the month of :   " + GetMonthName() + " - " + GetMonthOfYear(), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CPayMonth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CPayMonth.Colspan = 7;
                        CPayMonth.Border = 0;// 15;
                        Maintable.AddCell(CPayMonth);

                        //                string Clientaddress = "";
                        //                string queryaddress = @"select isnull(ClientAddrHno,'')+'  '+isnull(ClientAddrStreet,'')+'  '+isnull(ClientAddrColony,'')+'  '+isnull(ClientAddrArea,'')+
                        //		            '  '+isnull(ClientAddrCity,'')+'  '+isnull(ClientAddrState,'')+'  '+isnull(ClientAddrPin,'') as Address from Clients where ClientId='" + ddlClients.SelectedValue + "'";
                        //                DataTable dtaddress = SqlHelper.Instance.GetTableByQuery(queryaddress);
                        //                if (dtaddress.Rows.Count > 0)
                        //                {
                        //                    Clientaddress = dtaddress.Rows[0]["Address"].ToString();
                        //                }

                        PdfPCell CClientName = new PdfPCell(new Phrase("Client Name :   " + ddlcname.SelectedItem + " ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CClientName.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CClientName.Colspan = 27;
                        CClientName.Border = 0;// 15;
                        Maintable.AddCell(CClientName);

                        // Maintable.AddCell(cellemp);
                        //document.Add(Maintable);

                        if (titleofdocumentindex == 0)
                        {
                            document.Add(Maintable);
                            titleofdocumentindex = 1;
                        }

                        #endregion


                        #region Table Headings

                        PdfPTable SecondtableHeadings = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableHeadings.TotalWidth = 800f;
                        }
                        else
                        {
                            SecondtableHeadings.TotalWidth = 800f;
                        }
                        SecondtableHeadings.LockedWidth = true;
                        float[] SecondHeadingsWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 57)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 56)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 44)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 43)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 39)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion

                        SecondtableHeadings.SetWidths(SecondHeadingsWidth);

                        //Cell Headings
                        //1
                        PdfPCell sNo = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        sNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //sNo.Colspan = 1;
                        sNo.Border = 15;// 15;
                        SecondtableHeadings.AddCell(sNo);

                        //2
                        PdfPCell CEmpId = new PdfPCell(new Phrase("Emp Id", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CEmpId.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CEmpId.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CEmpId);

                        //3
                        PdfPCell CEmpName = new PdfPCell(new Phrase("Emp Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CEmpName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CEmpName.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CEmpName);

                        //4
                        PdfPCell CDesgn = new PdfPCell(new Phrase("Desgn", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CDesgn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CDesgn.Border = 15;
                        SecondtableHeadings.AddCell(CDesgn);

                        if (srate != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("S. Rate", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell CDuties = new PdfPCell(new Phrase("Dts", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDuties.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDuties.Border = 15;
                            SecondtableHeadings.AddCell(CDuties);
                        }

                        if (wo != 0)
                        {
                            PdfPCell Cwos = new PdfPCell(new Phrase("Wos", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwos.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cwos.Border = 15;
                            SecondtableHeadings.AddCell(Cwos);
                        }

                        if (nhs != 0)
                        {
                            PdfPCell Cnhs = new PdfPCell(new Phrase("NHs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhs.Border = 15;
                            SecondtableHeadings.AddCell(Cnhs);
                        }

                        //6
                        if (ots != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("OTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }


                        if (ldays != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("Leaves", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }


                        if (TotalPayableDays != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("Total Days", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }

                        //6A
                        if (OTHrs != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("OT Hours", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }


                        //7
                        if (basic != 0)
                        {
                            PdfPCell CBasic = new PdfPCell(new Phrase("Basic+DA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CBasic.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CBasic.Border = 15;
                            SecondtableHeadings.AddCell(CBasic);
                        }

                        //8
                        if (da != 0)
                        {
                            PdfPCell CDa = new PdfPCell(new Phrase("DA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDa.Border = 15;
                            SecondtableHeadings.AddCell(CDa);
                        }

                        //9
                        if (hra != 0)
                        {
                            PdfPCell CHRa = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CHRa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CHRa.Border = 15;
                            SecondtableHeadings.AddCell(CHRa);
                        }

                        //10
                        if (cca != 0)
                        {
                            PdfPCell CCca = new PdfPCell(new Phrase("CCA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CCca.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CCca.Border = 15;
                            SecondtableHeadings.AddCell(CCca);
                        }

                        //11
                        if (conveyance != 0)
                        {
                            PdfPCell Cconveyance = new PdfPCell(new Phrase("Conv", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cconveyance.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cconveyance.Border = 15;
                            SecondtableHeadings.AddCell(Cconveyance);
                        }

                        //12
                        if (washallowance != 0)
                        {
                            PdfPCell Cwa = new PdfPCell(new Phrase("WA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwa.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            Cwa.Border = 15;
                            SecondtableHeadings.AddCell(Cwa);
                        }

                        //13
                        if (otherallowance != 0)
                        {
                            PdfPCell COa = new PdfPCell(new Phrase("OA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COa.Border = 15;
                            SecondtableHeadings.AddCell(COa);
                        }
                        if (SplAllowance != 0)
                        {
                            PdfPCell CSplAllowance = new PdfPCell(new Phrase("Spl Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSplAllowance.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSplAllowance.Border = 15;
                            SecondtableHeadings.AddCell(CSplAllowance);
                        }


                        if (TravelAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Travel. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Performance. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Mobile. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        //14
                        if (leavewages != 0)
                        {
                            PdfPCell CLa = new PdfPCell(new Phrase("LA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLa.Border = 15;
                            SecondtableHeadings.AddCell(CLa);
                        }

                        //15
                        if (gratuity != 0)
                        {
                            PdfPCell CGratuity = new PdfPCell(new Phrase("Gratuity", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGratuity.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGratuity.Border = 15;
                            SecondtableHeadings.AddCell(CGratuity);
                        }

                        //16
                        if (bonus != 0)
                        {
                            PdfPCell CBonus = new PdfPCell(new Phrase("Bonus", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CBonus.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CBonus.Border = 15;
                            SecondtableHeadings.AddCell(CBonus);
                        }




                        //17
                        if (nfhs != 0)
                        {
                            PdfPCell CNfhs = new PdfPCell(new Phrase("NFHs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNfhs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNfhs.Border = 15;
                            SecondtableHeadings.AddCell(CNfhs);
                        }

                        //18
                        if (rc != 0)
                        {
                            PdfPCell CRc = new PdfPCell(new Phrase("R.C", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CRc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CRc.Border = 15;
                            SecondtableHeadings.AddCell(CRc);
                        }

                        //19
                        if (cs != 0)
                        {
                            PdfPCell CCs = new PdfPCell(new Phrase("C.S", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CCs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CCs.Border = 15;
                            SecondtableHeadings.AddCell(CCs);
                        }

                        if (cfoodallowance != 0)
                        {
                            PdfPCell CFoodAllw = new PdfPCell(new Phrase("Food Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CFoodAllw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CFoodAllw.Border = 15;
                            SecondtableHeadings.AddCell(CFoodAllw);
                        }



                        if (cmedicalallowance != 0)
                        {
                            PdfPCell CMedicalAllw = new PdfPCell(new Phrase("Medical Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CMedicalAllw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CMedicalAllw.Border = 15;
                            SecondtableHeadings.AddCell(CMedicalAllw);
                        }

                        if (Serviceweightage != 0)
                        {
                            PdfPCell CService = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CService.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CService.Border = 15;
                            SecondtableHeadings.AddCell(CService);
                        }
                        if (woamt != 0)
                        {
                            PdfPCell Cwoamt = new PdfPCell(new Phrase("WO Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwoamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cwoamt.Border = 15;
                            SecondtableHeadings.AddCell(Cwoamt);
                        }

                        if (nhsamt != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("NHS Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (npotsamt != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("NPOTS Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (OTHrsAmt != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("Others", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (AddlAmount != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("Addl Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (otamt != 0)
                        {
                            PdfPCell COtamt = new PdfPCell(new Phrase("Others", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COtamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COtamt.Border = 15;
                            SecondtableHeadings.AddCell(COtamt);
                        }

                        //22
                        if (incentivs != 0)
                        {
                            PdfPCell CIncentivs = new PdfPCell(new Phrase("Reimbursement", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CIncentivs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CIncentivs.Border = 15;
                            SecondtableHeadings.AddCell(CIncentivs);
                        }



                        if (Arrears != 0)
                        {
                            PdfPCell CIncentivs = new PdfPCell(new Phrase("Arrears", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CIncentivs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CIncentivs.Border = 15;
                            SecondtableHeadings.AddCell(CIncentivs);
                        }

                        if (AttBonus != 0)
                        {
                            PdfPCell CIncentivs = new PdfPCell(new Phrase("AttBonus", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CIncentivs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CIncentivs.Border = 15;
                            SecondtableHeadings.AddCell(CIncentivs);
                        }

                        //20
                        if (gross != 0)
                        {
                            PdfPCell CGross = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGross.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGross.Border = 15;
                            SecondtableHeadings.AddCell(CGross);
                        }

                        //21









                        //23
                        if (pfonduties != 0)
                        {
                            PdfPCell CPFondts = new PdfPCell(new Phrase("PF on Dts", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPFondts.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPFondts.Border = 15;
                            SecondtableHeadings.AddCell(CPFondts);
                        }

                        //24
                        if (esionduties != 0)
                        {
                            PdfPCell CESIondts = new PdfPCell(new Phrase("ESI on Dts", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CESIondts.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CESIondts.Border = 15;
                            SecondtableHeadings.AddCell(CESIondts);
                        }

                        //25
                        if (pfonot != 0)
                        {
                            PdfPCell CPFonot = new PdfPCell(new Phrase("PF on OTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPFonot.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPFonot.Border = 15;
                            SecondtableHeadings.AddCell(CPFonot);
                        }

                        //26
                        if (esionot != 0)
                        {
                            PdfPCell CESIonot = new PdfPCell(new Phrase("ESI on OTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CESIonot.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CESIonot.Border = 15;
                            SecondtableHeadings.AddCell(CESIonot);
                        }

                        //27
                        if (Pf != 0)
                        {
                            PdfPCell CPF = new PdfPCell(new Phrase("PF", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPF.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPF.Border = 15;
                            SecondtableHeadings.AddCell(CPF);
                        }

                        //28
                        if (Esi != 0)
                        {
                            PdfPCell CESI = new PdfPCell(new Phrase("ESI", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CESI.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CESI.Border = 15;
                            SecondtableHeadings.AddCell(CESI);
                        }


                        //29
                        if (proftax != 0)
                        {
                            PdfPCell CPT = new PdfPCell(new Phrase("PT", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPT.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPT.Border = 15;
                            SecondtableHeadings.AddCell(CPT);
                        }

                        //30
                        if (salAdvDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("Sal Adv", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("ATM Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (IDCardDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("IDCard Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (Extra != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("Extra", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }


                        //31
                        if (uniformDed != 0)
                        {
                            PdfPCell CUnifDed = new PdfPCell(new Phrase("Unif. Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CUnifDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CUnifDed.Border = 15;
                            SecondtableHeadings.AddCell(CUnifDed);
                        }

                        if (SecDepDedn != 0)
                        {
                            PdfPCell CSecDepDedn = new PdfPCell(new Phrase("Sec Dep Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSecDepDedn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSecDepDedn.Border = 15;
                            SecondtableHeadings.AddCell(CSecDepDedn);
                        }

                        if (LoanDed != 0)
                        {
                            PdfPCell CLoanDed = new PdfPCell(new Phrase("Loan Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLoanDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLoanDed.Border = 15;
                            SecondtableHeadings.AddCell(CLoanDed);
                        }

                        if (GenDedn != 0)
                        {
                            PdfPCell CGenDedn = new PdfPCell(new Phrase("Gen Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGenDedn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGenDedn.Border = 15;
                            SecondtableHeadings.AddCell(CGenDedn);
                        }
                        if (AdvDed != 0)
                        {
                            PdfPCell Cadvded = new PdfPCell(new Phrase("Adv Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cadvded.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cadvded.Border = 15;
                            SecondtableHeadings.AddCell(Cadvded);
                        }
                        if (WCDed != 0)
                        {
                            PdfPCell Cwcded = new PdfPCell(new Phrase("WC Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwcded.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cwcded.Border = 15;
                            SecondtableHeadings.AddCell(Cwcded);
                        }
                        //32
                        if (otherDed != 0)
                        {
                            PdfPCell COtherDed = new PdfPCell(new Phrase("Other Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COtherDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COtherDed.Border = 15;
                            SecondtableHeadings.AddCell(COtherDed);
                        }

                        //33
                        if (canteenAdv != 0)
                        {
                            PdfPCell Ccanteended = new PdfPCell(new Phrase("Mess. Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Ccanteended.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Ccanteended.Border = 15;
                            SecondtableHeadings.AddCell(Ccanteended);
                        }



                        //34
                        if (penalty != 0)
                        {
                            PdfPCell CPenalty = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPenalty.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPenalty.Border = 15;
                            SecondtableHeadings.AddCell(CPenalty);
                        }


                        if (owf != 0)
                        {
                            PdfPCell Cowf = new PdfPCell(new Phrase("Wel. Fund", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cowf.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cowf.Border = 15;
                            SecondtableHeadings.AddCell(Cowf);
                        }


                        if (advdue != 0)
                        {
                            PdfPCell Cowf = new PdfPCell(new Phrase("Uniform due", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cowf.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cowf.Border = 15;
                            SecondtableHeadings.AddCell(Cowf);
                        }
                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase("Telephone Bill Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTelephoneBillDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTelephoneBillDed.Border = 15;
                            SecondtableHeadings.AddCell(CTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase("PVC Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTelephoneBillDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTelephoneBillDed.Border = 15;
                            SecondtableHeadings.AddCell(CTelephoneBillDed);
                        }
                        //35
                        if (totalDeductions != 0)
                        {
                            PdfPCell CTotDed = new PdfPCell(new Phrase("Tot Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTotDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTotDed.Border = 15;
                            SecondtableHeadings.AddCell(CTotDed);
                        }

                        //36
                        if (netpay != 0)
                        {
                            PdfPCell CNetPay = new PdfPCell(new Phrase("Net Pay", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNetPay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNetPay.Border = 15;
                            SecondtableHeadings.AddCell(CNetPay);
                        }

                        if (PFempr != 0)
                        {
                            PdfPCell CNetPay = new PdfPCell(new Phrase("PF Empr", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNetPay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNetPay.Border = 15;
                            SecondtableHeadings.AddCell(CNetPay);
                        }

                        if (ESIempr != 0)
                        {
                            PdfPCell CNetPay = new PdfPCell(new Phrase("ESI Empr", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNetPay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNetPay.Border = 15;
                            SecondtableHeadings.AddCell(CNetPay);
                        }

                        if (CTC != 0)
                        {
                            PdfPCell CNetPay = new PdfPCell(new Phrase("CTC", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNetPay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNetPay.Border = 15;
                            SecondtableHeadings.AddCell(CNetPay);
                        }

                        //37
                        PdfPCell CSignature = new PdfPCell(new Phrase("Bank A/c No./ Signature", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CSignature.Border = 15;
                        SecondtableHeadings.AddCell(CSignature);


                        #endregion


                        #region Table Data

                        PdfPTable Secondtable = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            Secondtable.TotalWidth = 800f;
                        }
                        else
                        {
                            Secondtable.TotalWidth = 800f;
                        }
                        Secondtable.LockedWidth = true;
                        float[] SecondWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 57)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 44)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion


                        Secondtable.SetWidths(SecondWidth);




                        int rowCount = 0;
                        int pageCount = 0;
                        int i = nextpagei;

                        float dedamout = 0;
                        float Balance = 0;
                        var LoansSPName = "";
                        Hashtable HTLoans = new Hashtable();
                        DataTable dtLoans = null;
                        LoansSPName = "LoansSummary";
                        HTLoans.Add("@ClientId", ddlClients.SelectedValue);
                        HTLoans.Add("@month", month);
                        HTLoans.Add("@empid", dt.Rows[i]["EmpId"].ToString());
                        dtLoans = config.ExecuteAdaptorAsyncWithParams(LoansSPName, HTLoans).Result;

                        if (dtLoans.Rows.Count > 0)
                        {
                            //loanamt = float.Parse(dtLoans.Rows[0]["TotalLoanAmount"].ToString());
                            dedamout = float.Parse(dtLoans.Rows[0]["TotalDeductedAmount"].ToString());
                            Balance = float.Parse(dtLoans.Rows[0]["Balance"].ToString());
                        }


                        // for (int i = 0, j = 0; i < dt.Rows.Count; i++)
                        {
                            float ForconvertOt = 0;
                            forConvert = 0;
                            if (dt.Rows[i]["NoOfDuties"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());

                            //if (forConvert > 0)
                            {

                                if (nextpagerecordscount == 0)
                                {
                                    document.Add(SecondtableHeadings);
                                }

                                nextpagerecordscount++;


                                //1
                                PdfPCell CSNo = new PdfPCell(new Phrase("\n \n" + (++j).ToString() + "", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CSNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                CSNo.Border = 15;
                                //   CSNo.FixedHeight = 30;
                                Secondtable.AddCell(CSNo);

                                //2
                                PdfPCell CEmpId1 = new PdfPCell(new Phrase("\n \n " + dt.Rows[i]["EmpId"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpId1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                CEmpId1.Border = 15;
                                Secondtable.AddCell(CEmpId1);

                                //3EmpESINo,EmpEpfNo
                                // + "\n" + "ESI No" + "\n" + "UAN No" + "\n" + "PF No"
                                PdfPCell CEmpName1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpName"].ToString() + "\n" + "ESI No : " + dt.Rows[i]["EmpESINo"].ToString() + "\n" + "UAN No : " + dt.Rows[i]["EmpUANNumber"].ToString() + "\n" + "PF No : " + dt.Rows[i]["EmpEpfNo"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpName1.Border = 15;
                                CEmpName1.SetLeading(0, 1.3f);
                                Secondtable.AddCell(CEmpName1);

                                //4
                                PdfPCell CEmpDesgn = new PdfPCell(new Phrase(dt.Rows[i]["Design"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpDesgn.Border = 15;
                                Secondtable.AddCell(CEmpDesgn);



                                //6A
                                if (srate != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Salrate"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["Salrate"].ToString());
                                    totalsrate += forConvert;
                                    GrandtotalSrate += forConvert;

                                    PdfPCell CSalrate = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalrate.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalrate.Border = 15;
                                    Secondtable.AddCell(CSalrate);
                                }

                                //5
                                if (dts != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["NoOfDuties"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                                    totalDuties += forConvert;
                                    GrandtotalDuties += forConvert;

                                    PdfPCell CNoOfDuties = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNoOfDuties.Border = 15;
                                    Secondtable.AddCell(CNoOfDuties);
                                }


                                if (wo != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Wo"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["Wo"].ToString());
                                    totalwos += forConvert;
                                    Grandtotalwos += forConvert;

                                    PdfPCell Cwos = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cwos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cwos.Border = 15;
                                    Secondtable.AddCell(Cwos);
                                }


                                if (nhs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["nhs"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["nhs"].ToString());
                                    totalnhs += forConvert;
                                    Grandtotalnhs += forConvert;

                                    PdfPCell Cnhss = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cnhss.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cnhss.Border = 15;
                                    Secondtable.AddCell(Cnhss);
                                }

                                //6
                                if (ots != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Duties"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["Duties"].ToString());
                                    totalots += forConvert;
                                    Grandtotalots += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }


                                if (ldays != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["LDays"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["LDays"].ToString());
                                    totalLdays += forConvert;
                                    GrandtotalLdays += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }


                                if (TotalPayableDays != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TotalPayableDays"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["TotalPayableDays"].ToString());
                                    totalTotalPayableDays += forConvert;
                                    GrandtotalTotalPayableDays += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }

                                if (OTHrs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OTHrs"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["OTHrs"].ToString());
                                    totalOTHrs += forConvert;
                                    GrandtotalOTHrs += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }



                                //7
                                if (basic != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Basic"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Basic"].ToString()));
                                    totalBasic += forConvert;
                                    GrandtotalBasic += forConvert;
                                    PdfPCell CBasic1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CBasic1.Border = 15;
                                    Secondtable.AddCell(CBasic1);
                                }

                                //8
                                if (da != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["DA"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["DA"].ToString()));
                                    totalDA += forConvert;
                                    GrandtotalDA += forConvert;

                                    PdfPCell CDa1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CDa1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CDa1.Border = 15;
                                    Secondtable.AddCell(CDa1);
                                }

                                //9
                                if (hra != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["HRA"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["HRA"].ToString()));
                                    totalHRA += forConvert;
                                    GrandtotalHRA += forConvert;

                                    PdfPCell CHRA1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CHRA1.Border = 15;
                                    Secondtable.AddCell(CHRA1);
                                }

                                //10
                                if (cca != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["cca"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["cca"].ToString()));
                                    totalCCA += forConvert;

                                    GrandtotalCCA += forConvert;

                                    PdfPCell Ccca = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Ccca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Ccca.Border = 15;
                                    Secondtable.AddCell(Ccca);
                                }

                                //11
                                if (conveyance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Conveyance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString()));
                                    totalConveyance += forConvert;
                                    GrandtotalConveyance += forConvert;

                                    PdfPCell CConveyance = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CConveyance.Border = 15;
                                    Secondtable.AddCell(CConveyance);
                                }


                                //12
                                if (washallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["washallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["washallowance"].ToString()));
                                    totalWA += forConvert;
                                    GrandtotalWA += forConvert;

                                    PdfPCell CWa = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWa.Border = 15;
                                    Secondtable.AddCell(CWa);
                                }

                                //13
                                if (otherallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OtherAllowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString()));
                                    totalOA += forConvert;
                                    GrandtotalOA += forConvert;
                                    PdfPCell COA = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COA.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COA.Border = 15;
                                    Secondtable.AddCell(COA);
                                }
                                if (SplAllowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SplAllowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString()));
                                    totalSplAllowance += forConvert;
                                    GrandtotalSplAllowance += forConvert;
                                    PdfPCell CSplAllowance = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance.Border = 15;
                                    Secondtable.AddCell(CSplAllowance);
                                }

                                if (TravelAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TravelAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString()));
                                    totalTravelAllw += forConvert;
                                    GrandtotalTravelAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }

                                if (PerformanceAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PerformanceAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString()));
                                    totalPerformanceAllw += forConvert;
                                    GrandtotalPerformanceAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }

                                if (MobileAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["MobileAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString()));
                                    totalMobileAllw += forConvert;
                                    GrandtotalMobileAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }



                                //14
                                if (leavewages != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Leavewages"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Leavewages"].ToString()));
                                    totalLw += forConvert;
                                    GrandtotalLw += forConvert;
                                    PdfPCell CLa1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLa1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CLa1.Border = 15;
                                    Secondtable.AddCell(CLa1);
                                }
                                //15
                                if (gratuity != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Gratuity"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString()));
                                    totalGratuity += forConvert;
                                    GrandtotalGratuity += forConvert;
                                    PdfPCell CGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGratuity1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGratuity1.Border = 15;
                                    Secondtable.AddCell(CGratuity1);
                                }

                                //16
                                if (bonus != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["bonus"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["bonus"].ToString()));
                                    totalbonus += forConvert;

                                    Grandtotalbonus += forConvert;
                                    PdfPCell Cbonus = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cbonus.Border = 15;
                                    Secondtable.AddCell(Cbonus);
                                }



                                //17
                                if (nfhs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Nfhs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString()));
                                    totalNfhs += forConvert;
                                    GrandtotalNfhs += forConvert;
                                    PdfPCell CNfhs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNfhs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNfhs1.Border = 15;
                                    Secondtable.AddCell(CNfhs1);
                                }

                                //18
                                if (rc != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["RC"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["RC"].ToString()));
                                    totalRc += forConvert;
                                    GrandtotalRc += forConvert;
                                    PdfPCell CRc1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CRc1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CRc1.Border = 15;
                                    Secondtable.AddCell(CRc1);
                                }

                                //19
                                if (cs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["cs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["cs"].ToString()));
                                    totalCs += forConvert;
                                    GrandtotalCs += forConvert;
                                    PdfPCell CCs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CCs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CCs1.Border = 15;
                                    Secondtable.AddCell(CCs1);
                                }


                                if (cfoodallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["foodallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["foodallowance"].ToString()));
                                    totalfoodallowance += forConvert;
                                    Grandtotalfoodallowance += forConvert;
                                    PdfPCell CFoodAllw1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CFoodAllw1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CFoodAllw1.Border = 15;
                                    Secondtable.AddCell(CFoodAllw1);
                                }


                                if (cmedicalallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["medicalallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["medicalallowance"].ToString()));
                                    totalmedicalallowance += forConvert;
                                    Grandtotalmedicalallowance += forConvert;
                                    PdfPCell CMedicalAllw1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CMedicalAllw1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CMedicalAllw1.Border = 15;
                                    Secondtable.AddCell(CMedicalAllw1);
                                }

                                if (Serviceweightage != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Serviceweightage"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Serviceweightage"].ToString()));
                                    totalServiceweightage += forConvert;
                                    GrandtotalServiceweightage += forConvert;

                                    PdfPCell CWoAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWoAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWoAmt1.Border = 15;
                                    Secondtable.AddCell(CWoAmt1);
                                }

                                if (woamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Woamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Woamt"].ToString()));
                                    totalwoamt += forConvert;
                                    Grandtotalwoamt += forConvert;

                                    PdfPCell CWoAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWoAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWoAmt1.Border = 15;
                                    Secondtable.AddCell(CWoAmt1);
                                }


                                if (nhsamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["nhsamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["nhsamt"].ToString()));
                                    totalnhsamt += forConvert;
                                    Grandtotalnhsamt += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (npotsamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Npotsamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Npotsamt"].ToString()));
                                    totalnpotsamt += forConvert;
                                    Grandtotalnpotsamt += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (OTHrsAmt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OTHrsAmt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OTHrsAmt"].ToString()));
                                    totalOTHrsAmt += forConvert;
                                    GrandtotalOTHrsamt += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (AddlAmount != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["AddlAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["AddlAmount"].ToString()));
                                    totalnpotsamt += forConvert;
                                    Grandtotalnpotsamt += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (otamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Amount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Amount"].ToString()));
                                    totalotamt += forConvert;
                                    Grandtotalotamt += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }


                                //22
                                if (incentivs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Incentivs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Incentivs"].ToString()));
                                    totalIncentivs += forConvert;
                                    GrandtotalIncentivs += forConvert;
                                    PdfPCell CIncentivs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CIncentivs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CIncentivs1.Border = 15;
                                    Secondtable.AddCell(CIncentivs1);
                                }

                                if (Arrears != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Arrears"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Arrears"].ToString()));
                                    totalArrears += forConvert;
                                    GrandtotalArrears += forConvert;
                                    PdfPCell CIncentivs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CIncentivs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CIncentivs1.Border = 15;
                                    Secondtable.AddCell(CIncentivs1);
                                }

                                if (AttBonus != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["AttBonus"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["AttBonus"].ToString()));
                                    totalAttbonus += forConvert;
                                    GrandtotalAttbonus += forConvert;
                                    PdfPCell CIncentivs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CIncentivs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CIncentivs1.Border = 15;
                                    Secondtable.AddCell(CIncentivs1);
                                }
                                //20
                                if (gross != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Gross"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Gross"].ToString()));
                                    totalGross += forConvert;
                                    GrandtotalGross += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }

                                //21







                                //23
                                if (pfonduties != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Pfonduties"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Pfonduties"].ToString()));
                                    totalPFondts += forConvert;
                                    GrandtotalPFondts += forConvert;

                                    PdfPCell CPF1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPF1.Border = 15;
                                    Secondtable.AddCell(CPF1);
                                }

                                //24
                                if (esionduties != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Esionduties"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Esionduties"].ToString()));
                                    totalESIondts += forConvert;

                                    GrandtotalESIondts += forConvert;

                                    PdfPCell CESI1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CESI1.Border = 15;
                                    Secondtable.AddCell(CESI1);
                                }

                                //25
                                if (pfonot != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PFONOT"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PFONOT"].ToString()));
                                    totalpfonots += forConvert;
                                    Grandtotalpfonots += forConvert;

                                    PdfPCell CPFonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPFonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPFonots.Border = 15;
                                    Secondtable.AddCell(CPFonots);
                                }

                                //26
                                if (esionot != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ESIONOT"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ESIONOT"].ToString()));
                                    totalesionots += forConvert;

                                    Grandtotalesionots += forConvert;

                                    PdfPCell CESIonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CESIonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CESIonots.Border = 15;
                                    Secondtable.AddCell(CESIonots);
                                }

                                //27
                                if (Pf != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PFTotal"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PFTotal"].ToString()));
                                    totalpf += forConvert;
                                    Grandtotalpf += forConvert;

                                    PdfPCell CPFonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPFonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPFonots.Border = 15;
                                    Secondtable.AddCell(CPFonots);
                                }

                                //28
                                if (Esi != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ESITotal"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ESITotal"].ToString()));
                                    totalesi += forConvert;

                                    Grandtotalesi += forConvert;

                                    PdfPCell CESIonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CESIonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CESIonots.Border = 15;
                                    Secondtable.AddCell(CESIonots);
                                }

                                //29
                                if (proftax != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ProfTax"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString()));
                                    totalProfTax += forConvert;
                                    GrandtotalProfTax += forConvert;

                                    PdfPCell CProTax1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CProTax1.Border = 15;
                                    Secondtable.AddCell(CProTax1);
                                }

                                //30
                                if (salAdvDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SalAdvDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SalAdvDed"].ToString()));
                                    totalSalAdv += forConvert;
                                    GrandtotalSalAdv += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                if (ATMDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ATMDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ATMDed"].ToString()));
                                    totalATMDed += forConvert;
                                    GrandtotalATMDed += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }
                                if (IDCardDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["IDCardDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["IDCardDed"].ToString()));
                                    totalIDCardDed += forConvert;
                                    GrandtotalIDCardDed += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                if (Extra != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Extra"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Extra"].ToString()));
                                    totalExtra += forConvert;
                                    GrandtotalExtra += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                //31
                                if (uniformDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["UniformDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString()));
                                    totalUniforDed += forConvert;
                                    GrandtotalUniforDed += forConvert;

                                    PdfPCell CUnifDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CUnifDed1.Border = 15;
                                    Secondtable.AddCell(CUnifDed1);
                                }


                                if (SecDepDedn != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SecDepDedn"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SecDepDedn"].ToString()));
                                    totalSecDepDedn += forConvert;
                                    GrandtotalSecDepDedn += forConvert;

                                    PdfPCell CSecDepDedn1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSecDepDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSecDepDedn1.Border = 15;
                                    Secondtable.AddCell(CSecDepDedn1);
                                }

                                if (LoanDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["LoanDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["LoanDed"].ToString()));
                                    totalLoanDed += forConvert;
                                    GrandtotalLoanDedn += forConvert;

                                    PdfPCell CLoanDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CLoanDed1.Border = 15;
                                    Secondtable.AddCell(CLoanDed1);
                                }


                                if (GenDedn != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["GenDedn"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["GenDedn"].ToString()));
                                    totalGenDedn += forConvert;
                                    GrandtotalGenDedn += forConvert;

                                    PdfPCell CGenDedn1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGenDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGenDedn1.Border = 15;
                                    Secondtable.AddCell(CGenDedn1);
                                }

                                if (AdvDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["AdvDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["AdvDed"].ToString()));
                                    totalAdvDed += forConvert;
                                    GrandtotalAdvDed += forConvert;

                                    PdfPCell CADVDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CADVDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CADVDed1.Border = 15;
                                    Secondtable.AddCell(CADVDed1);
                                }


                                if (WCDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["WCDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["WCDed"].ToString()));
                                    totalWCDed += forConvert;
                                    GrandtotalWCDed += forConvert;

                                    PdfPCell CWCDedn1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWCDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWCDedn1.Border = 15;
                                    Secondtable.AddCell(CWCDedn1);
                                }

                                //32
                                if (otherDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OtherDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OtherDed"].ToString()));
                                    totalOtherdedn += forConvert;
                                    GrandtotalOtherdedn += forConvert;

                                    PdfPCell COtherDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COtherDed1.Border = 15;
                                    Secondtable.AddCell(COtherDed1);
                                }

                                //33
                                if (canteenAdv != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["CanteenAdv"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString()));
                                    totalCanteenAdv += forConvert;
                                    GrandtotalCanteenAdv += forConvert;

                                    PdfPCell CCanteended = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CCanteended.Border = 15;
                                    Secondtable.AddCell(CCanteended);
                                }



                                //34
                                if (penalty != 0)
                                {
                                    if (dt.Rows[i]["Penalty"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Penalty"].ToString()));
                                    totalPenalty += forConvert;
                                    GrandtotalPenalty += forConvert;

                                    PdfPCell CPenalty1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPenalty1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPenalty1.Border = 15;
                                    Secondtable.AddCell(CPenalty1);
                                }


                                if (owf != 0)
                                {
                                    if (dt.Rows[i]["owf"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["owf"].ToString()));
                                    totalowf += forConvert;
                                    Grandtotalowf += forConvert;

                                    PdfPCell Cowf1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cowf1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cowf1.Border = 15;
                                    Secondtable.AddCell(Cowf1);
                                }


                                if (advdue != 0)
                                {
                                    forConvert = Balance;

                                    totalAmountdue += forConvert;
                                    GrandtotalAmountdue += forConvert;

                                    PdfPCell CTotDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTotDed1.Border = 15;
                                    Secondtable.AddCell(CTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                                }

                                //36
                                if (TelephoneBillDed != 0)
                                {
                                    if (dt.Rows[i]["TelephoneBillDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TelephoneBillDed"].ToString()));
                                    totalTelephoneBillDed += forConvert;
                                    GrandtotalTelephoneBillDed += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }

                                if (PVCAmount != 0)
                                {
                                    if (dt.Rows[i]["PVCAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PVCAmount"].ToString()));
                                    totalPVCAmount += forConvert;
                                    GrandtotalPVCAmount += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }

                                //35
                                if (totalDeductions != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Totaldeduct"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Totaldeduct"].ToString()));
                                    totalDed += forConvert;
                                    GrandtotalDed += forConvert;

                                    PdfPCell CTotDed1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTotDed1.Border = 15;
                                    Secondtable.AddCell(CTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                                }

                                //36
                                if (netpay != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["NetAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["NetAmount"].ToString()));
                                    if (forConvert <= 0)
                                    {
                                        forConvert = 0;
                                    }
                                    totalNetpay += forConvert;
                                    GrandtotalNetpay += forConvert;
                                    PdfPCell CNetPay1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNetPay1.Border = 15;
                                    Secondtable.AddCell(CNetPay1);
                                }

                                if (PFempr != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PFempr"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PFempr"].ToString()));
                                    if (forConvert <= 0)
                                    {
                                        forConvert = 0;
                                    }
                                    totalPFempr += forConvert;
                                    GrandtotalPFempr += forConvert;
                                    PdfPCell CNetPay1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNetPay1.Border = 15;
                                    Secondtable.AddCell(CNetPay1);
                                }

                                if (ESIempr != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ESIempr"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ESIempr"].ToString()));
                                    if (forConvert <= 0)
                                    {
                                        forConvert = 0;
                                    }
                                    totalESIempr += forConvert;
                                    GrandtotalESIempr += forConvert;
                                    PdfPCell CNetPay1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNetPay1.Border = 15;
                                    Secondtable.AddCell(CNetPay1);
                                }

                                if (CTC != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["CTC"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["CTC"].ToString()));
                                    if (forConvert <= 0)
                                    {
                                        forConvert = 0;
                                    }
                                    totalCTC += forConvert;
                                    GrandtotalCTC += forConvert;
                                    PdfPCell CNetPay1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNetPay1.Border = 15;
                                    Secondtable.AddCell(CNetPay1);
                                }

                                //37
                                string EmpBankAcNo = dt.Rows[i]["EmpBankAcNo"].ToString();
                                string empbankname = dt.Rows[i]["empbankname"].ToString();
                                PdfPCell CSignature1 = new PdfPCell(new Phrase(EmpBankAcNo + "\n" + "Bank : " + empbankname, FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CSignature1.Border = 15;
                                CSignature1.MinimumHeight = 25;
                                Secondtable.AddCell(CSignature1);
                            }


                        }
                        #endregion

                        #region Table Total values

                        SecondtableFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableFooter.TotalWidth = 800f;
                        }
                        else
                        {
                            SecondtableFooter.TotalWidth = 800f;
                        }
                        SecondtableFooter.LockedWidth = true;
                        float[] SecondFooterWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 57)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 56)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 44)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion

                        SecondtableFooter.SetWidths(SecondFooterWidth);

                        //1
                        PdfPCell FCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCSNo.Border = 15;
                        SecondtableFooter.AddCell(FCSNo);
                        //2
                        PdfPCell FCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpId1.Border = 15;
                        SecondtableFooter.AddCell(FCEmpId1);
                        //3
                        PdfPCell FCEmpName1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        FCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpName1.Border = 15;
                        SecondtableFooter.AddCell(FCEmpName1);
                        //4
                        PdfPCell FCEmpDesgn = new PdfPCell(new Phrase(" Total : ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpDesgn.Border = 15;
                        FCEmpDesgn.Colspan = 0;
                        SecondtableFooter.AddCell(FCEmpDesgn);

                        //6A
                        if (srate != 0)
                        {
                            PdfPCell FCSalrate = new PdfPCell(new Phrase(totalsrate.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSalrate.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalrate.Border = 15;
                            SecondtableFooter.AddCell(FCSalrate);
                        }


                        //5
                        if (dts != 0)
                        {
                            PdfPCell FCNoOfDuties = new PdfPCell(new Phrase(totalDuties.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNoOfDuties.Border = 15;
                            SecondtableFooter.AddCell(FCNoOfDuties);
                        }

                        if (wo != 0)
                        {
                            PdfPCell FCwos = new PdfPCell(new Phrase(totalwos.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCwos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCwos.Border = 15;
                            SecondtableFooter.AddCell(FCwos);
                        }

                        if (nhs != 0)
                        {
                            PdfPCell FCnhs = new PdfPCell(new Phrase(totalnhs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhs.Border = 15;
                            SecondtableFooter.AddCell(FCnhs);
                        }

                        //6
                        if (ots != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalots.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }


                        if (ldays != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalLdays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }

                        if (TotalPayableDays != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalTotalPayableDays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }

                        if (OTHrs != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalOTHrs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }



                        //7
                        if (basic != 0)
                        {
                            PdfPCell FCBasic1 = new PdfPCell(new Phrase(totalBasic.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCBasic1.Border = 15;
                            SecondtableFooter.AddCell(FCBasic1);
                        }


                        //8
                        if (da != 0)
                        {
                            PdfPCell FDa = new PdfPCell(new Phrase(totalDA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FDa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FDa.Border = 15;
                            SecondtableFooter.AddCell(FDa);
                        }


                        //9
                        if (hra != 0)
                        {

                            PdfPCell FCHRA1 = new PdfPCell(new Phrase(totalHRA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCHRA1.Border = 15;
                            SecondtableFooter.AddCell(FCHRA1);
                        }

                        //10
                        if (cca != 0)
                        {
                            PdfPCell FCcca = new PdfPCell(new Phrase(totalCCA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCcca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCcca.Border = 15;
                            SecondtableFooter.AddCell(FCcca);
                        }

                        //11
                        if (conveyance != 0)
                        {
                            PdfPCell FCConveyance = new PdfPCell(new Phrase(totalConveyance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCConveyance.Border = 15;
                            SecondtableFooter.AddCell(FCConveyance);
                        }


                        //12
                        if (washallowance != 0)
                        {
                            PdfPCell FCWa = new PdfPCell(new Phrase(totalWA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCWa.Border = 15;
                            SecondtableFooter.AddCell(FCWa);
                        }

                        //13
                        if (otherallowance != 0)
                        {
                            PdfPCell FCOa = new PdfPCell(new Phrase(totalOA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCOa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCOa.Border = 15;
                            SecondtableFooter.AddCell(FCOa);
                        }

                        if (SplAllowance != 0)
                        {
                            PdfPCell FCSplAllowance = new PdfPCell(new Phrase(totalSplAllowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSplAllowance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSplAllowance.Border = 15;
                            SecondtableFooter.AddCell(FCSplAllowance);
                        }

                        if (TravelAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalTravelAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalPerformanceAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalMobileAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }
                        //14
                        if (leavewages != 0)
                        {
                            PdfPCell FLa = new PdfPCell(new Phrase(totalLw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FLa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FLa.Border = 15;
                            SecondtableFooter.AddCell(FLa);
                        }

                        //15
                        if (gratuity != 0)
                        {
                            PdfPCell FGratuity = new PdfPCell(new Phrase(totalGratuity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FGratuity.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FGratuity.Border = 15;
                            SecondtableFooter.AddCell(FGratuity);
                        }

                        //16
                        if (bonus != 0)
                        {
                            PdfPCell Fbonus = new PdfPCell(new Phrase(totalbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fbonus.Border = 15;
                            SecondtableFooter.AddCell(Fbonus);
                        }

                        //17
                        if (nfhs != 0)
                        {
                            PdfPCell FNfhs = new PdfPCell(new Phrase(totalNfhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FNfhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FNfhs.Border = 15;
                            SecondtableFooter.AddCell(FNfhs);
                        }

                        //18
                        if (rc != 0)
                        {
                            PdfPCell FRc = new PdfPCell(new Phrase(totalRc.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FRc.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FRc.Border = 15;
                            SecondtableFooter.AddCell(FRc);
                        }

                        //19
                        if (cs != 0)
                        {
                            PdfPCell FCs = new PdfPCell(new Phrase(totalCs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCs.Border = 15;
                            SecondtableFooter.AddCell(FCs);
                        }

                        if (cfoodallowance != 0)
                        {
                            PdfPCell FFoodallw = new PdfPCell(new Phrase(totalfoodallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FFoodallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FFoodallw.Border = 15;
                            SecondtableFooter.AddCell(FFoodallw);
                        }


                        if (cmedicalallowance != 0)
                        {
                            PdfPCell FMedicalallw = new PdfPCell(new Phrase(totalmedicalallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FMedicalallw.Border = 15;
                            SecondtableFooter.AddCell(FMedicalallw);
                        }

                        if (Serviceweightage != 0)
                        {
                            PdfPCell FCWoamt = new PdfPCell(new Phrase(totalServiceweightage.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCWoamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCWoamt.Border = 15;
                            SecondtableFooter.AddCell(FCWoamt);
                        }
                        if (woamt != 0)
                        {
                            PdfPCell FCWoamt = new PdfPCell(new Phrase(totalwoamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCWoamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCWoamt.Border = 15;
                            SecondtableFooter.AddCell(FCWoamt);
                        }


                        if (nhsamt != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalnhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }

                        if (npotsamt != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalnpotsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }


                        if (OTHrsAmt != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalOTHrsAmt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }

                        if (AddlAmount != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalAddlAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }

                        if (otamt != 0)
                        {
                            PdfPCell FCotamt = new PdfPCell(new Phrase(totalotamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCotamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCotamt.Border = 15;
                            SecondtableFooter.AddCell(FCotamt);
                        }


                        //22
                        if (incentivs != 0)
                        {
                            PdfPCell FIncentivs = new PdfPCell(new Phrase(totalIncentivs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FIncentivs.Border = 15;
                            SecondtableFooter.AddCell(FIncentivs);
                        }

                        if (Arrears != 0)
                        {
                            PdfPCell FIncentivs = new PdfPCell(new Phrase(totalArrears.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FIncentivs.Border = 15;
                            SecondtableFooter.AddCell(FIncentivs);
                        }

                        if (AttBonus != 0)
                        {
                            PdfPCell FIncentivs = new PdfPCell(new Phrase(totalAttbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FIncentivs.Border = 15;
                            SecondtableFooter.AddCell(FIncentivs);
                        }

                        //20
                        if (gross != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(totalGross.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }

                        //21








                        //23
                        if (pfonduties != 0)
                        {
                            PdfPCell FCPF1 = new PdfPCell(new Phrase(totalPFondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCPF1.Border = 15;
                            SecondtableFooter.AddCell(FCPF1);
                        }

                        //24
                        if (esionduties != 0)
                        {
                            PdfPCell FCESI1 = new PdfPCell(new Phrase(totalESIondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCESI1.Border = 15;
                            SecondtableFooter.AddCell(FCESI1);
                        }


                        //25
                        if (pfonot != 0)
                        {
                            PdfPCell FCPFonot = new PdfPCell(new Phrase(totalpfonots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCPFonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCPFonot.Border = 15;
                            SecondtableFooter.AddCell(FCPFonot);
                        }

                        //26
                        if (esionot != 0)
                        {
                            PdfPCell FCESIonot = new PdfPCell(new Phrase(totalesionots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCESIonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCESIonot.Border = 15;
                            SecondtableFooter.AddCell(FCESIonot);
                        }

                        //27
                        if (Pf != 0)
                        {
                            PdfPCell FCPF = new PdfPCell(new Phrase(totalpf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCPF.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCPF.Border = 15;
                            SecondtableFooter.AddCell(FCPF);
                        }

                        //28
                        if (Esi != 0)
                        {
                            PdfPCell FCES = new PdfPCell(new Phrase(totalesi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCES.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCES.Border = 15;
                            SecondtableFooter.AddCell(FCES);
                        }

                        //29
                        if (proftax != 0)
                        {
                            PdfPCell FCProTax1 = new PdfPCell(new Phrase(totalProfTax.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCProTax1.Border = 15;
                            SecondtableFooter.AddCell(FCProTax1);
                        }

                        //30
                        if (salAdvDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalSalAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalATMDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }
                        if (IDCardDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalIDCardDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }


                        if (Extra != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalExtra.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }

                        //31
                        if (uniformDed != 0)
                        {
                            PdfPCell FCUnifDed1 = new PdfPCell(new Phrase(totalUniforDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCUnifDed1.Border = 15;
                            SecondtableFooter.AddCell(FCUnifDed1);
                        }

                        if (SecDepDedn != 0)
                        {
                            PdfPCell FCSecDepDedn1 = new PdfPCell(new Phrase(totalSecDepDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSecDepDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSecDepDedn1.Border = 15;
                            SecondtableFooter.AddCell(FCSecDepDedn1);
                        }


                        if (LoanDed != 0)
                        {
                            PdfPCell FCLoanDed1 = new PdfPCell(new Phrase(totalLoanDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCLoanDed1.Border = 15;
                            SecondtableFooter.AddCell(FCLoanDed1);
                        }

                        if (GenDedn != 0)
                        {
                            PdfPCell FCGenDedn1 = new PdfPCell(new Phrase(totalGenDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGenDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGenDedn1.Border = 15;
                            SecondtableFooter.AddCell(FCGenDedn1);
                        }
                        if (AdvDed != 0)
                        {
                            PdfPCell FCAdvDed1 = new PdfPCell(new Phrase(totalAdvDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCAdvDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCAdvDed1.Border = 15;
                            SecondtableFooter.AddCell(FCAdvDed1);
                        }
                        if (WCDed != 0)
                        {
                            PdfPCell FCwcDed1 = new PdfPCell(new Phrase(totalWCDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCwcDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCwcDed1.Border = 15;
                            SecondtableFooter.AddCell(FCwcDed1);
                        }
                        //32
                        if (otherDed != 0)
                        {
                            PdfPCell FCOtherDed1 = new PdfPCell(new Phrase(totalOtherdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCOtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCOtherDed1.Border = 15;
                            SecondtableFooter.AddCell(FCOtherDed1);
                        }

                        //33
                        if (canteenAdv != 0)
                        {
                            PdfPCell FCCanteended = new PdfPCell(new Phrase(totalCanteenAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCCanteended.Border = 15;
                            SecondtableFooter.AddCell(FCCanteended);
                        }


                        //34
                        if (penalty != 0)
                        {
                            PdfPCell FPenalty = new PdfPCell(new Phrase(totalPenalty.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FPenalty.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FPenalty.Border = 15;
                            SecondtableFooter.AddCell(FPenalty);
                        }

                        if (owf != 0)
                        {
                            PdfPCell Fowf = new PdfPCell(new Phrase(totalowf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fowf.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fowf.Border = 15;
                            SecondtableFooter.AddCell(Fowf);
                        }


                        //35
                        if (advdue != 0)
                        {
                            PdfPCell FCTotDed1 = new PdfPCell(new Phrase(totalAmountdue.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCTotDed1.Border = 15;
                            SecondtableFooter.AddCell(FCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell FTelephoneBillDed = new PdfPCell(new Phrase(totalTelephoneBillDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FTelephoneBillDed.Border = 15;
                            SecondtableFooter.AddCell(FTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell FTelephoneBillDed = new PdfPCell(new Phrase(totalPVCAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FTelephoneBillDed.Border = 15;
                            SecondtableFooter.AddCell(FTelephoneBillDed);
                        }

                        //35
                        if (totalDeductions != 0)
                        {
                            PdfPCell FCTotDed1 = new PdfPCell(new Phrase(totalDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCTotDed1.Border = 15;
                            SecondtableFooter.AddCell(FCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //36
                        if (netpay != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(totalNetpay.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        if (PFempr != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(totalPFempr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        if (ESIempr != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(totalESIempr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        if (CTC != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(totalCTC.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }


                        //37
                        PdfPCell FCSignature1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCSignature1.Border = 15;
                        //FCSignature1.MinimumHeight = 25;
                        SecondtableFooter.AddCell(FCSignature1);

                        #endregion

                        SecondtableGrandtotalFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableGrandtotalFooter.TotalWidth = 800f;
                        }
                        else
                        {
                            SecondtableGrandtotalFooter.TotalWidth = 800f;
                        }
                        SecondtableGrandtotalFooter.LockedWidth = true;
                        float[] SecondGrandtotalFooterWidth = new float[] { };
                        #region Table Cells
                        if (tableCells == 57)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 44)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion
                        SecondtableGrandtotalFooter.SetWidths(SecondGrandtotalFooterWidth);

                        SecondtablecheckbyFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtablecheckbyFooter.TotalWidth = 800f;
                        }
                        else
                        {
                            SecondtablecheckbyFooter.TotalWidth = 800f;
                        }
                        SecondtablecheckbyFooter.LockedWidth = true;
                        float[] SecondcheckbyFooterWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 57)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 56)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 45)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 44)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion

                        SecondtablecheckbyFooter.SetWidths(SecondcheckbyFooterWidth);

                        #region Table   Grand   Total  Footer

                        //1
                        PdfPCell GFCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCSNo.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCSNo);

                        //2
                        PdfPCell GFCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpId1.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCEmpId1);

                        //3
                        PdfPCell GFCEmpName1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        GFCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpName1.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCEmpName1);

                        //4
                        PdfPCell GFCEmpDesgn = new PdfPCell(new Phrase("Grand  Total: ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpDesgn.Border = 15;
                        //FCEmpDesgn.Colspan = 4;
                        SecondtablecheckbyFooter.AddCell(GFCEmpDesgn);


                        //6A
                        if (srate != 0)
                        {
                            PdfPCell GFCsrate = new PdfPCell(new Phrase(GrandtotalSrate.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCsrate.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCsrate.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCsrate);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell GFCNoOfDuties = new PdfPCell(new Phrase(GrandtotalDuties.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNoOfDuties.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNoOfDuties);
                        }

                        if (wo != 0)
                        {
                            PdfPCell GFCWos = new PdfPCell(new Phrase(Grandtotalwos.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCWos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCWos.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCWos);
                        }


                        if (nhs != 0)
                        {
                            PdfPCell GFCNhs = new PdfPCell(new Phrase(Grandtotalnhs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNhs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNhs);
                        }


                        //6
                        if (ots != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(Grandtotalots.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }


                        if (ldays != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(GrandtotalLdays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }


                        if (TotalPayableDays != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(GrandtotalTotalPayableDays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }

                        if (OTHrs != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(GrandtotalOTHrs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }




                        //7
                        if (basic != 0)
                        {
                            PdfPCell GFCBasic1 = new PdfPCell(new Phrase(GrandtotalBasic.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCBasic1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCBasic1);
                        }


                        //8
                        if (da != 0)
                        {
                            PdfPCell GFDa = new PdfPCell(new Phrase(GrandtotalDA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFDa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFDa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFDa);
                        }


                        //9
                        if (hra != 0)
                        {
                            PdfPCell GFCHRA1 = new PdfPCell(new Phrase(GrandtotalHRA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCHRA1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCHRA1);
                        }

                        //10
                        if (cca != 0)
                        {
                            PdfPCell GFCcca = new PdfPCell(new Phrase(GrandtotalCCA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCcca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCcca.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCcca);
                        }

                        //11
                        if (conveyance != 0)
                        {
                            PdfPCell GFCConveyance = new PdfPCell(new Phrase(GrandtotalConveyance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCConveyance.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCConveyance);
                        }


                        //12
                        if (washallowance != 0)
                        {
                            PdfPCell GFCWa = new PdfPCell(new Phrase(GrandtotalWA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCWa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCWa);
                        }

                        //13
                        if (otherallowance != 0)
                        {
                            PdfPCell GFCOa = new PdfPCell(new Phrase(GrandtotalOA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOa);
                        }
                        if (SplAllowance != 0)
                        {
                            PdfPCell GFCSplAllowance = new PdfPCell(new Phrase(GrandtotalSplAllowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSplAllowance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSplAllowance.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSplAllowance);
                        }

                        if (TravelAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalTravelAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalPerformanceAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalMobileAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        //14
                        if (leavewages != 0)
                        {
                            PdfPCell GFLa = new PdfPCell(new Phrase(GrandtotalLw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFLa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFLa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFLa);
                        }

                        //15
                        if (gratuity != 0)
                        {
                            PdfPCell GFGratuity = new PdfPCell(new Phrase(GrandtotalGratuity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFGratuity.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFGratuity.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFGratuity);
                        }

                        //16
                        if (bonus != 0)
                        {
                            PdfPCell GFbonus = new PdfPCell(new Phrase(Grandtotalbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFbonus.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFbonus);
                        }


                        //17
                        if (nfhs != 0)
                        {
                            PdfPCell GFNfhs = new PdfPCell(new Phrase(GrandtotalNfhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFNfhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFNfhs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFNfhs);
                        }

                        //18
                        if (rc != 0)
                        {
                            PdfPCell GFRc = new PdfPCell(new Phrase(GrandtotalRc.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFRc.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFRc.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFRc);
                        }

                        //19
                        if (cs != 0)
                        {
                            PdfPCell GFCs = new PdfPCell(new Phrase(GrandtotalCs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCs);
                        }


                        if (cfoodallowance != 0)
                        {
                            PdfPCell GFFoodallw = new PdfPCell(new Phrase(Grandtotalfoodallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFFoodallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFFoodallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFFoodallw);
                        }

                        if (cmedicalallowance != 0)
                        {
                            PdfPCell GFMedicalallw = new PdfPCell(new Phrase(Grandtotalmedicalallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFMedicalallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFMedicalallw);
                        }

                        if (Serviceweightage != 0)
                        {
                            PdfPCell GFMedicalallw = new PdfPCell(new Phrase(GrandtotalServiceweightage.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFMedicalallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFMedicalallw);
                        }


                        if (woamt != 0)
                        {
                            PdfPCell GFCwoamt = new PdfPCell(new Phrase(Grandtotalwoamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCwoamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCwoamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCwoamt);
                        }


                        if (nhsamt != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(Grandtotalnhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }

                        if (npotsamt != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(Grandtotalnpotsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }

                        if (OTHrsAmt != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(GrandtotalOTHrsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }

                        if (AddlAmount != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(GrandtotalAddlAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }


                        //21
                        if (otamt != 0)
                        {
                            PdfPCell GFCOtamt = new PdfPCell(new Phrase(Grandtotalotamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOtamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOtamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOtamt);
                        }


                        //22
                        if (incentivs != 0)
                        {
                            PdfPCell GFIncentivs = new PdfPCell(new Phrase(GrandtotalIncentivs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFIncentivs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFIncentivs);
                        }

                        if (Arrears != 0)
                        {
                            PdfPCell GFIncentivs = new PdfPCell(new Phrase(GrandtotalArrears.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFIncentivs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFIncentivs);
                        }

                        if (AttBonus != 0)
                        {
                            PdfPCell GFIncentivs = new PdfPCell(new Phrase(GrandtotalAttbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFIncentivs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFIncentivs);
                        }

                        //20
                        if (gross != 0)
                        {
                            PdfPCell GFCGross1 = new PdfPCell(new Phrase(GrandtotalGross.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCGross1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCGross1);
                        }






                        //23
                        if (pfonduties != 0)
                        {
                            PdfPCell GFCPF1 = new PdfPCell(new Phrase(GrandtotalPFondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCPF1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCPF1);
                        }

                        //24
                        if (esionduties != 0)
                        {
                            PdfPCell GFCESI1 = new PdfPCell(new Phrase(GrandtotalESIondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCESI1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCESI1);
                        }

                        //25
                        if (pfonot != 0)
                        {
                            PdfPCell GFCPFonot = new PdfPCell(new Phrase(Grandtotalpfonots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCPFonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCPFonot.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCPFonot);
                        }

                        //26
                        if (esionot != 0)
                        {
                            PdfPCell GFCESIonot = new PdfPCell(new Phrase(Grandtotalesionots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCESIonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCESIonot.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCESIonot);
                        }

                        //27
                        if (Pf != 0)
                        {
                            PdfPCell GFCPF = new PdfPCell(new Phrase(Grandtotalpf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCPF.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCPF.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCPF);
                        }

                        //28
                        if (Esi != 0)
                        {
                            PdfPCell GFCESI = new PdfPCell(new Phrase(Grandtotalesi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCESI.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCESI.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCESI);
                        }


                        //29
                        if (proftax != 0)
                        {
                            PdfPCell GFCProTax1 = new PdfPCell(new Phrase(GrandtotalProfTax.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCProTax1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCProTax1);
                        }

                        //30
                        if (salAdvDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalSalAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalATMDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }

                        if (IDCardDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalIDCardDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }

                        if (Extra != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalExtra.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }
                        //31
                        if (uniformDed != 0)
                        {
                            PdfPCell GFCUnifDed1 = new PdfPCell(new Phrase(GrandtotalUniforDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCUnifDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCUnifDed1);
                        }

                        if (SecDepDedn != 0)
                        {
                            PdfPCell GFCSecDepDedn1 = new PdfPCell(new Phrase(GrandtotalSecDepDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSecDepDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSecDepDedn1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSecDepDedn1);
                        }

                        if (LoanDed != 0)
                        {
                            PdfPCell GFCLoanDed1 = new PdfPCell(new Phrase(GrandtotalLoanDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCLoanDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCLoanDed1);
                        }

                        if (GenDedn != 0)
                        {
                            PdfPCell GFCGenDedn1 = new PdfPCell(new Phrase(GrandtotalGenDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCGenDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCGenDedn1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCGenDedn1);
                        }
                        if (AdvDed != 0)
                        {
                            PdfPCell GFCAdvDedDed1 = new PdfPCell(new Phrase(GrandtotalAdvDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCAdvDedDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCAdvDedDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCAdvDedDed1);
                        }
                        if (WCDed != 0)
                        {
                            PdfPCell GFcwcDed1 = new PdfPCell(new Phrase(GrandtotalWCDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFcwcDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFcwcDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFcwcDed1);
                        }
                        //32
                        if (otherDed != 0)
                        {
                            PdfPCell GFCOtherDed1 = new PdfPCell(new Phrase(GrandtotalOtherdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOtherDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOtherDed1);
                        }


                        //33
                        if (canteenAdv != 0)
                        {
                            PdfPCell GFCCanteended = new PdfPCell(new Phrase(GrandtotalCanteenAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCCanteended.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCCanteended);
                        }

                        //34
                        if (penalty != 0)
                        {
                            PdfPCell GFPenalty = new PdfPCell(new Phrase(GrandtotalPenalty.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFPenalty.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFPenalty.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFPenalty);
                        }

                        if (owf != 0)
                        {
                            PdfPCell GFowf = new PdfPCell(new Phrase(Grandtotalowf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFowf.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFowf.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFowf);
                        }

                        if (advdue != 0)
                        {
                            PdfPCell GFowf = new PdfPCell(new Phrase(GrandtotalAmountdue.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFowf.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFowf.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFowf);
                        }

                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell GFTelephoneBillDed = new PdfPCell(new Phrase(GrandtotalTelephoneBillDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFTelephoneBillDed.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell GFTelephoneBillDed = new PdfPCell(new Phrase(GrandtotalPVCAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFTelephoneBillDed.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFTelephoneBillDed);
                        }

                        //35
                        if (totalDeductions != 0)
                        {
                            PdfPCell GFCTotDed1 = new PdfPCell(new Phrase(GrandtotalDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCTotDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //36
                        if (netpay != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandtotalNetpay.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        if (PFempr != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandtotalPFempr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        if (ESIempr != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandtotalESIempr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        if (CTC != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandtotalCTC.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        //37
                        PdfPCell GFCSignature1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCSignature1.Border = 15;
                        //FCSignature1.MinimumHeight = 25;
                        SecondtablecheckbyFooter.AddCell(GFCSignature1);
                        #endregion


                        #region   Footer Headings
                        //1
                        PdfPCell FHCheckedbybr1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHCheckedbybr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FHCheckedbybr1.Border = 0;
                        FHCheckedbybr1.Rowspan = 0;
                        FHCheckedbybr1.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                        //2
                        PdfPCell FHApprovedbr2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHApprovedbr2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FHApprovedbr2.Border = 0;
                        FHApprovedbr2.Colspan = tableCells;

                        SecondtablecheckbyFooter.AddCell(FHApprovedbr2);
                        SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                        SecondtablecheckbyFooter.AddCell(FHApprovedbr2);


                        //1
                        PdfPCell FHCheckedby = new PdfPCell(new Phrase("Checked By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHCheckedby.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FHCheckedby.Border = 0;
                        FHCheckedby.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHCheckedby);
                        //2
                        PdfPCell FHApprovedBy = new PdfPCell(new Phrase("Gross  Approved By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHApprovedBy.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        FHApprovedBy.Border = 0;
                        FHApprovedBy.PaddingTop = -5;
                        FHApprovedBy.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHApprovedBy);



                        #endregion

                        document.Add(Secondtable);

                        if (nextpagerecordscount == targetpagerecors)
                        {
                            targetpagerecors = secondpagerecords;
                            document.Add(SecondtableFooter);
                            document.NewPage();
                            nextpagerecordscount = 0;
                            #region  Zero variables
                            totalPFempr = 0;
                            totalESIempr = 0;
                            totalCTC = 0;
                            totalAdvDed = 0;
                            totalWCDed = 0;
                            totalNetpay = 0;
                            totalDuties = 0;
                            totalsrate = 0;
                            totalBasic = 0;
                            totalDA = 0;
                            totalHRA = 0;
                            totalCCA = 0;
                            totalConveyance = 0;
                            totalWA = 0;
                            totalOA = 0;
                            totalGross = 0;
                            totalPFondts = 0;
                            totalESIondts = 0;
                            totalProfTax = 0;
                            totalDed = 0;
                            totalSalAdv = 0;
                            totalUniforDed = 0;
                            totalCanteenAdv = 0;
                            totalOtherdedn = 0;
                            totalbonus = 0;
                            totalLw = 0;
                            totalGratuity = 0;
                            totalNfhs = 0;
                            totalRc = 0;
                            totalCs = 0;
                            totalIncentivs = 0;
                            totalPenalty = 0;

                            totalots = 0;
                            totalotamt = 0;
                            totalpfonots = 0;
                            totalesionots = 0;
                            totalpf = 0;
                            totalesi = 0;
                            totalTelephoneBillDed = 0;
                            #endregion
                        }
                    }

                    if (nextpagerecordscount >= 0)
                    {
                        //document.Add(SecondtableFooter);
                        document.Add(SecondtableGrandtotalFooter);
                        document.Add(SecondtablecheckbyFooter);
                    }
                    document.Close();
                    if (nextpagehasPages)
                    {

                        Response.ContentType = "application/pdf";
                        Response.AddHeader("content-disposition", "attachment;filename=Dutieswithots.pdf");
                        Response.Buffer = true;
                        Response.Clear();
                        Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                        Response.OutputStream.Flush();
                        Response.End();
                    }
                }
            }
            catch (Exception ex)
            {

            }
        }

        public void ClearNonPaysheetGenerated()
        {
            lblPaysheetGeneratedTime.Text = "";
            PnlNonGeneratedPaysheet.Visible = false;
            GvNonGeneratedEmp.DataSource = null;
            GvNonGeneratedEmp.DataBind();
        }

        protected void ddlClients_SelectedIndexChanged(object sender, EventArgs e)
        {
            ClearNonPaysheetGenerated();
            chkbonus.Checked = false;
            if (ddlClients.SelectedIndex > 0)
            {
                Fillcname();
                DisplayData();
                VisibleFreeze();
                if (ddlmonth.SelectedIndex > 0 || Txt_Month.Text != "")
                {
                    GetBillingDuties();
                    NonGeneratedPaysheetList();
                }
            }
            else
            {
                Cleardata();
                ClearNonPaysheetGenerated();
            }
            VisibleGeneratebutton();
        }

        protected void ddlcname_OnSelectedIndexChanged(object sender, EventArgs e)
        {
            ClearNonPaysheetGenerated();
            chkbonus.Checked = false;
            if (ddlcname.SelectedIndex > 0)
            {
                FillClientid();
                DisplayData();
                VisibleFreeze();
                if (ddlmonth.SelectedIndex > 0 || Txt_Month.Text != "")
                {
                    GetBillingDuties();
                    NonGeneratedPaysheetList();
                }
            }
            else
            {
                Cleardata();
                ClearNonPaysheetGenerated();
            }
            VisibleGeneratebutton();
        }

        protected void Cleardata()
        {
            ddlcname.Items.Clear();
            ddlClients.Items.Clear();
            gvattendancezero.DataSource = null;
            gvattendancezero.DataBind();
        }

        protected string loandatedetailsMonth()
        {
            int Month = 0;
            if (ddlmonth.SelectedIndex == 0)
            {
                Month = DateTime.Now.Month;
            }
            else if (ddlmonth.SelectedIndex == 1)
            {
                Month = DateTime.Now.Month;
                if (Month == 1)
                {
                    Month = DateTime.Now.Month + 11;
                }
                else
                {
                    Month = DateTime.Now.Month - 1;
                }

            }
            else
            {
                Month = DateTime.Now.Month;
                if (Month == 1)
                {
                    Month = DateTime.Now.Month + 10;
                }
                else
                {
                    if (Month == 2)
                    {
                        Month = DateTime.Now.Month + 10;
                    }
                    else
                    {

                        Month = DateTime.Now.Month - 2;
                    }
                }
            }

            return Month.ToString();

        }

        protected string loandatedetailsYear()
        {
            int Year = 2000;
            int Month = 0;
            if (ddlmonth.SelectedIndex == 0)
            {
                Year = DateTime.Now.Year;
            }
            else if (ddlmonth.SelectedIndex == 1)
            {
                Month = DateTime.Now.Month;
                if (Month == 1)
                {
                    Year = DateTime.Now.Year - 1;
                }
                else
                {
                    Year = DateTime.Now.Year;
                }
            }
            else
            {
                Month = DateTime.Now.Month;
                if (Month == 1)
                {
                    Year = DateTime.Now.Year - 1;
                }
                else
                {
                    if (Month == 2)
                    {
                        Year = DateTime.Now.Year - 1;
                    }
                    else
                    {
                        Year = DateTime.Now.Year;
                    }
                }

            }

            return Year.ToString();

        }

        protected void linkrefresh_Click(object sender, EventArgs e)
        {
            ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Select Unit ID');", true);

            if (ddlClients.SelectedIndex > 0)
            {
                int month = 0;
                if (ddlmonth.SelectedIndex == 0)
                {
                    month = GlobalData.Instance.GetIDForNextMonth();
                }
                else if (ddlmonth.SelectedIndex == 1)
                {
                    month = GlobalData.Instance.GetIDForThisMonth();
                }
                else
                {
                    month = GlobalData.Instance.GetIDForPrviousMonth();
                }

                string Sqlqry = "delete from   EmpLoanDeductionones Where ClientId='" + ddlClients.SelectedValue + "' and MONTH='" + month + "'";
                int status = config.ExecuteNonQueryWithQueryAsync(Sqlqry).Result;
                if (status != 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Once Please Generate Payment');", true);
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Once Please  Generate Payment');", true);

                }
                return;
            }
            else
            {

            }

        }

        protected void btndownloadpdffile_Click(object sender, EventArgs e)
        {

            if (ddlpaymenttype.SelectedIndex == 0)
            {
                btnpaysheetstaticWoAllw_Click(sender, e);
                return;
            }

            if (ddlpaymenttype.SelectedIndex == 1)
            {
                btnpaysheetstaticWoAllw_Click(sender, e);
                return;
            }

            if (ddlpaymenttype.SelectedIndex == 2)
            {
                btnpaysheetOnlyOTS_Click(sender, e);
                return;
            }

            if (ddlpaymenttype.SelectedIndex == 3)
            {
                btndownloadWagesummary_Click(sender, e);
                return;
            }

            if (ddlpaymenttype.SelectedIndex == 4)
            {
                btnpaysheetstaticWoAllw_Click(sender, e);
                return;
            }

            if (ddlpaymenttype.SelectedIndex == 5)
            {
                lbtn_ExportNew_Click(sender, e);
                return;
            }

        }

        protected int GetMonthAndYear()
        {
            int month = 0;
            if (ddlmonth.SelectedIndex == 1)
            {
                month = GlobalData.Instance.GetIDForNextMonth();
            }
            else if (ddlmonth.SelectedIndex == 2)
            {
                month = GlobalData.Instance.GetIDForThisMonth();
            }
            else if (ddlmonth.SelectedIndex == 3)
            {
                month = GlobalData.Instance.GetIDForPrviousMonth();
            }
            return month;
        }

        static int CountSundays(int year, int month)
        {
            var firstDay = new DateTime(year, month, 1);

            var day29 = firstDay.AddDays(28);
            var day30 = firstDay.AddDays(29);
            var day31 = firstDay.AddDays(30);

            if ((day29.Month == month && day29.DayOfWeek == DayOfWeek.Sunday)
            || (day30.Month == month && day30.DayOfWeek == DayOfWeek.Sunday)
            || (day31.Month == month && day31.DayOfWeek == DayOfWeek.Sunday))
            {
                return 5;
            }
            else
            {
                return 4;
            }
        }

        protected void NhsPdf()
        {
            int titleofdocumentindex = 0;
            if (ddlClients.SelectedIndex <= 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                return;
            }

            int payMonth = GetMonth(ddlmonth.SelectedValue);
            int month = GetMonthAndYear();

            string selectmonth = string.Empty;

            if (ddlnoofattendance.SelectedIndex == 1)
            {

                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,D.Design,ep.NHS,ep.Nhsamt," +
                    " ep.esionnhs,ep.PFonnhs,(ep.Nhsamt-ep.PFonnhs-ep.esionnhs)  as Total    from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId" +
                " Inner Join Designations  D on D.DesignID=Eps.Desgn and Ep.NHS>10 and Ep.ClientId='" + ddlClients.SelectedValue + "' AND Ep.Month=" + month + "  Order by empid";

            }

            if (ddlnoofattendance.SelectedIndex == 2)
            {

                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,D.Design,ep.NHS,ep.Nhsamt," +
                    "  ep.esionnhs,ep.PFonnhs,(ep.Nhsamt-ep.PFonnhs-ep.esionnhs)  as Total from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId " +
                    " Inner Join Designations  D on D.DesignID=Eps.Desgn and Ep.NHS<=10 AND Ep.ClientId='" + ddlClients.SelectedValue + "' AND Ep.Month=" + month + " Order by empid";

            }
            if (ddlnoofattendance.SelectedIndex == 0)
            {

                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,D.Design,ep.NHS," +
                    "ep.Nhsamt,ep.esionnhs,ep.PFonnhs,(ep.Nhsamt-ep.PFonnhs-ep.esionnhs)  as Total " +
                    "   from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId Inner Join Designations  D on D.DesignID=Eps.Desgn " +
                    " and  Ep.ClientId='" +
                ddlClients.SelectedValue + "' AND Ep.Month=" + month + " Order by empid";

            }

            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(selectmonth).Result;

            MemoryStream ms = new MemoryStream();
            if (dt.Rows.Count > 0)
            {
                Document document = new Document(PageSize.A4);
                PdfWriter writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                document.AddTitle("FaMS");
                document.AddAuthor("WebWonders");
                document.AddSubject("Wage Sheet");
                document.AddKeywords("Keyword1, keyword2, …");//
                float forConvert;
                string strQry = "Select * from  ";
                DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                string companyName1 = "Your Company Name";
                string companyAddress = "Your Company Address";
                if (compInfo.Rows.Count > 0)
                {
                    companyName1 = compInfo.Rows[0]["CompanyName"].ToString();
                    companyAddress = compInfo.Rows[0]["Address"].ToString();
                }

                // int tableCells = 27;
                #region variables for total

                float totalNhs = 0;
                float totalNhsamt = 0;
                float totalEsi = 0;
                float totalPf = 0;
                float totalTotal = 0;

                #endregion


                #region variables for  Grand  total

                float GrandtotalNhs = 0;
                float GrandtotalNhsamt = 0;
                float GrandtotalEsi = 0;
                float GrandtotalPf = 0;
                float GrandtotalTotal = 0;

                #endregion

                int nextpagerecordscount = 0;
                int targetpagerecors = 10;
                int secondpagerecords = targetpagerecors + 3;
                bool nextpagehasPages = false;
                int j = 0;
                PdfPTable SecondtablecheckbyFooter = null;
                PdfPTable SecondtableFooter = null;
                PdfPTable SecondtableGrandtotalFooter = null;
                for (int nextpagei = 0; nextpagei < dt.Rows.Count; nextpagei++)
                {
                    nextpagehasPages = true;

                    #region Titles of Document
                    PdfPTable Maintable = new PdfPTable(8);
                    Maintable.TotalWidth = 550f;
                    Maintable.LockedWidth = true;
                    float[] width = new float[] { 2.5f, 2f, 2f, 2f, 2f, 2f, 2f, 3f };
                    Maintable.SetWidths(width);
                    uint FONT_SIZE = 8;

                    //Company Name & vage act details

                    PdfPCell cellemp = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                    cellemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellemp.Colspan = 8;
                    cellemp.Border = 0;

                    PdfPCell Heading = new PdfPCell(new Phrase("Form - XVII REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, 16, Font.BOLD, BaseColor.BLACK)));
                    Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Heading.Colspan = 8;
                    Heading.Border = 0;
                    Maintable.AddCell(Heading);



                    PdfPCell actDetails = new PdfPCell(new Phrase("(vide Rule 78(1) a(i) of Contract Labour (Reg. & abolition)", FontFactory.GetFont(Fontstyle, 14, Font.BOLD, BaseColor.BLACK)));
                    actDetails.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    actDetails.Colspan = 8;
                    actDetails.Border = 0;// 15;
                    Maintable.AddCell(actDetails);

                    Maintable.AddCell(cellemp);
                    #endregion


                    #region Table Headings

                    PdfPCell companyName = new PdfPCell(new Phrase(companyName1, FontFactory.GetFont("Arial Black", 16, Font.BOLD, BaseColor.BLACK)));
                    companyName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    companyName.Colspan = 8;
                    companyName.Border = 0;// 15;
                    Maintable.AddCell(companyName);

                    PdfPCell paySheet = new PdfPCell(new Phrase("Pay Sheet", FontFactory.GetFont(Fontstyle, 10, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK)));
                    paySheet.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    paySheet.Colspan = 8;
                    paySheet.Border = 0;// 15;
                    Maintable.AddCell(paySheet);

                    PdfPCell CClient = new PdfPCell(new Phrase("Client ID : " + ddlClients.SelectedValue, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClient.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClient.Colspan = 4;
                    CClient.Border = 0;// 15;
                    Maintable.AddCell(CClient);


                    PdfPCell CDates = new PdfPCell(new Phrase("      Payment for the period of : " + GetPaymentPeriod(), FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CDates.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CDates.Colspan = 4;
                    CDates.Border = 0;// 15;
                    Maintable.AddCell(CDates);

                    PdfPCell CClientName = new PdfPCell(new Phrase("Client Name : " + ddlcname.SelectedItem, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClientName.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClientName.Colspan = 4;
                    CClientName.Border = 0;// 15;
                    Maintable.AddCell(CClientName);

                    PdfPCell CPayMonth = new PdfPCell(new Phrase("                       For the month of : " + ddlmonth.SelectedValue, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CPayMonth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CPayMonth.Colspan = 4;
                    CPayMonth.Border = 0;// 15;
                    Maintable.AddCell(CPayMonth);

                    Maintable.AddCell(cellemp);
                    //document.Add(Maintable);

                    if (titleofdocumentindex == 0)
                    {
                        document.Add(Maintable);
                        titleofdocumentindex = 1;
                    }
                    PdfPTable SecondtableHeadings = new PdfPTable(8);
                    SecondtableHeadings.TotalWidth = 550f;
                    SecondtableHeadings.LockedWidth = true;
                    float[] SecondHeadingsWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableHeadings.SetWidths(SecondHeadingsWidth);

                    //Cell Headings
                    //1
                    PdfPCell sNo = new PdfPCell(new Phrase("S.No ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    sNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    //sNo.Colspan = 1;
                    sNo.Border = 15;// 15;
                    SecondtableHeadings.AddCell(sNo);
                    //2
                    PdfPCell CEmpId = new PdfPCell(new Phrase("Emp Id", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CEmpId.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CEmpId.Border = 15;// 15;
                    SecondtableHeadings.AddCell(CEmpId);
                    //3
                    PdfPCell CEmpName = new PdfPCell(new Phrase("Emp Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CEmpName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CEmpName.Border = 15;// 15;
                    SecondtableHeadings.AddCell(CEmpName);
                    //4
                    PdfPCell CDesgn = new PdfPCell(new Phrase("Desgn", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CDesgn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CDesgn.Border = 15;
                    SecondtableHeadings.AddCell(CDesgn);
                    //5
                    PdfPCell CNHs = new PdfPCell(new Phrase("NHs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CNHs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CNHs.Border = 15;
                    SecondtableHeadings.AddCell(CNHs);
                    //6
                    PdfPCell CNHsAmt = new PdfPCell(new Phrase("NHs Amount", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CNHsAmt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CNHsAmt.Border = 15;
                    SecondtableHeadings.AddCell(CNHsAmt);
                    //7

                    PdfPCell CesiAmt = new PdfPCell(new Phrase("ESI Amount", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CesiAmt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CesiAmt.Border = 15;
                    SecondtableHeadings.AddCell(CesiAmt);
                    //8

                    PdfPCell CTotal = new PdfPCell(new Phrase("Total", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CTotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CTotal.Border = 15;
                    SecondtableHeadings.AddCell(CTotal);

                    #endregion


                    PdfPTable Secondtable = new PdfPTable(8);
                    Secondtable.TotalWidth = 550f;
                    Secondtable.LockedWidth = true;
                    float[] SecondWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    Secondtable.SetWidths(SecondWidth);


                    #region Table Data
                    int rowCount = 0;
                    int pageCount = 0;
                    int i = nextpagei;

                    // for (int i = 0, j = 0; i < dt.Rows.Count; i++)
                    {
                        forConvert = 0;
                        if (dt.Rows[i]["NHS"].ToString().Trim().Length > 0)
                            forConvert = Convert.ToSingle(dt.Rows[i]["NHS"].ToString());
                        if (forConvert > 0)
                        {

                            if (nextpagerecordscount == 0)
                            {
                                document.Add(SecondtableHeadings);
                            }

                            nextpagerecordscount++;
                            //1
                            PdfPCell CSNo = new PdfPCell(new Phrase((++j).ToString() + "\n \n \n \n", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            CSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CSNo.Border = 15;
                            Secondtable.AddCell(CSNo);
                            //2
                            PdfPCell CEmpId1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpId"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpId1.Border = 15;
                            Secondtable.AddCell(CEmpId1);
                            //3
                            PdfPCell CEmpName1 = new PdfPCell(new Phrase(dt.Rows[i]["Name"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpName1.Border = 15;
                            Secondtable.AddCell(CEmpName1);
                            //4
                            PdfPCell CEmpDesgn = new PdfPCell(new Phrase(dt.Rows[i]["Desgn"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            CEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpDesgn.Border = 15;
                            Secondtable.AddCell(CEmpDesgn);
                            //5
                            forConvert = 0;
                            if (dt.Rows[i]["NHS"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["NHS"].ToString());
                            totalNhs += forConvert;
                            GrandtotalNhs += forConvert;
                            PdfPCell CNHs1 = new PdfPCell(new Phrase(forConvert.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CNHs1.Border = 15;
                            Secondtable.AddCell(CNHs1);
                            //6
                            forConvert = 0;
                            if (dt.Rows[i]["Nhsamt"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Nhsamt"].ToString());
                            totalNhsamt += forConvert;
                            GrandtotalNhsamt += forConvert;
                            PdfPCell CNHsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CNHsAmt1.Border = 15;
                            Secondtable.AddCell(CNHsAmt1);

                            //7
                            forConvert = 0;
                            if (dt.Rows[i]["esionnhs"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["esionnhs"].ToString());
                            totalEsi += forConvert;
                            GrandtotalEsi += forConvert;
                            PdfPCell esionnhs = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            esionnhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            esionnhs.Border = 15;
                            Secondtable.AddCell(esionnhs);

                            //8
                            forConvert = 0;
                            if (dt.Rows[i]["pfonnhs"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["pfonnhs"].ToString());
                            totalEsi += forConvert;
                            GrandtotalEsi += forConvert;

                            PdfPCell pfonnhs = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            pfonnhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            pfonnhs.Border = 15;
                            Secondtable.AddCell(pfonnhs);

                            //9
                            forConvert = 0;
                            if (dt.Rows[i]["Total"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Total"].ToString());
                            totalTotal += forConvert;
                            GrandtotalTotal += forConvert;
                            PdfPCell CTotal1 = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CTotal1.Border = 15;
                            Secondtable.AddCell(CTotal1);
                        }


                    }
                    #endregion


                    SecondtableFooter = new PdfPTable(8);
                    SecondtableFooter.TotalWidth = 550f;
                    SecondtableFooter.LockedWidth = true;
                    float[] SecondFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableFooter.SetWidths(SecondFooterWidth);
                    #region Table Footer
                    //1
                    PdfPCell FCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCSNo.Border = 15;
                    SecondtableFooter.AddCell(FCSNo);
                    //2
                    PdfPCell FCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpId1.Border = 15;
                    SecondtableFooter.AddCell(FCEmpId1);
                    //3
                    PdfPCell FCEmpName1 = new PdfPCell(new Phrase(" Total : ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpName1.Border = 15;
                    SecondtableFooter.AddCell(FCEmpName1);
                    //4
                    PdfPCell FCEmpDesgn = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpDesgn.Border = 15;
                    //FCEmpDesgn.Colspan = 4;
                    SecondtableFooter.AddCell(FCEmpDesgn);
                    //5

                    PdfPCell FCNHs1 = new PdfPCell(new Phrase(totalNhs.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCNHs1.Border = 15;
                    SecondtableFooter.AddCell(FCNHs1);
                    //6

                    PdfPCell FCNHsAmt1 = new PdfPCell(new Phrase(totalNhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCNHsAmt1.Border = 15;
                    SecondtableFooter.AddCell(FCNHsAmt1);

                    //7

                    PdfPCell FCesiamt = new PdfPCell(new Phrase(totalEsi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCesiamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCesiamt.Border = 15;
                    SecondtableFooter.AddCell(FCesiamt);

                    //8
                    PdfPCell FCTotal1 = new PdfPCell(new Phrase(totalTotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCTotal1.Border = 15;
                    SecondtableFooter.AddCell(FCTotal1);
                    #endregion


                    SecondtableGrandtotalFooter = new PdfPTable(8);
                    SecondtableGrandtotalFooter.TotalWidth = 550f;
                    SecondtableGrandtotalFooter.LockedWidth = true;
                    float[] SecondGrandtotalFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableGrandtotalFooter.SetWidths(SecondGrandtotalFooterWidth);

                    SecondtablecheckbyFooter = new PdfPTable(8);
                    SecondtablecheckbyFooter.TotalWidth = 550f;
                    SecondtablecheckbyFooter.LockedWidth = true;
                    float[] SecondcheckbyFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtablecheckbyFooter.SetWidths(SecondcheckbyFooterWidth);


                    #region   Footer Headings

                    #region Table   Grand   Total  Footer
                    //1
                    PdfPCell GFCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCSNo.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCSNo);
                    //2
                    PdfPCell GFCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpId1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCEmpId1);
                    //3
                    PdfPCell GFCEmpName1 = new PdfPCell(new Phrase("Grand  Totals: ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpName1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCEmpName1);
                    //4
                    PdfPCell GFCEmpDesgn = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpDesgn.Border = 15;
                    //FCEmpDesgn.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(GFCEmpDesgn);
                    //5
                    PdfPCell GFCNHs1 = new PdfPCell(new Phrase(GrandtotalNhs.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCNHs1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCNHs1);
                    //6

                    PdfPCell GFCNHsAmt1 = new PdfPCell(new Phrase(GrandtotalNhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCNHsAmt1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCNHsAmt1);

                    //7

                    PdfPCell GFCesiamt = new PdfPCell(new Phrase(GrandtotalEsi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCesiamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCesiamt.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCesiamt);


                    //8
                    PdfPCell GFCTotal1 = new PdfPCell(new Phrase(GrandtotalTotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCTotal1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCTotal1);
                    #endregion

                    //1
                    PdfPCell FHCheckedbybr1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHCheckedbybr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHCheckedbybr1.Border = 0;
                    FHCheckedbybr1.Rowspan = 0;
                    FHCheckedbybr1.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                    //2
                    PdfPCell FHApprovedbr2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHApprovedbr2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHApprovedbr2.Border = 0;
                    FHApprovedbr2.Colspan = 4;

                    SecondtablecheckbyFooter.AddCell(FHApprovedbr2);
                    SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                    SecondtablecheckbyFooter.AddCell(FHApprovedbr2);


                    //1
                    PdfPCell FHCheckedby = new PdfPCell(new Phrase("Checked By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHCheckedby.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHCheckedby.Border = 0;
                    FHCheckedby.Rowspan = 0;
                    FHCheckedby.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHCheckedby);
                    //2
                    PdfPCell FHApprovedBy = new PdfPCell(new Phrase(" Approved By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHApprovedBy.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHApprovedBy.Border = 0;
                    FHApprovedBy.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHApprovedBy);



                    #endregion

                    document.Add(Secondtable);

                    if (nextpagerecordscount == targetpagerecors)
                    {
                        targetpagerecors = secondpagerecords;
                        document.Add(SecondtableFooter);
                        document.NewPage();
                        nextpagerecordscount = 0;
                        #region  Zero variables

                        totalNhs = 0;
                        totalNhsamt = 0;
                        totalEsi = 0;
                        totalTotal = 0;
                        #endregion
                    }
                }

                if (nextpagerecordscount >= 0)
                {
                    document.Add(SecondtableFooter);
                    document.Add(SecondtableGrandtotalFooter);
                    document.Add(SecondtablecheckbyFooter);
                }
                document.Close();
                if (nextpagehasPages)
                {

                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=NHS.pdf");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();
                }
            }
        }

        protected void NPOTsPdf()
        {
            int titleofdocumentindex = 0;
            if (ddlClients.SelectedIndex <= 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                return;
            }

            int payMonth = GetMonth(ddlmonth.SelectedValue);
            int month = GetMonthAndYear();

            string selectmonth = string.Empty;

            if (ddlnoofattendance.SelectedIndex == 1)
            {
                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,ep.Desgn,ep.Npots,ep.Npotsamt," +
                    " ep.esionnpots, (ep.Npotsamt-ep.esionnpots) as Total,ep.NoOfDuties from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId " +
                " and Ep.npots<>0 and Ep.ClientId='" + ddlClients.SelectedValue + "' AND Ep.Month=" + month + "  Order by Right(Ep.EmpId,6)";
            }

            if (ddlnoofattendance.SelectedIndex == 2)
            {
                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,ep.Desgn,ep.Npots,ep.Npotsamt," +
                    " ep.esionnpots, (ep.Npotsamt-ep.esionnpots) as Total,ep.Npotsamt as Total,ep.NoOfDuties from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId " +
                    " and Ep.npots<>0 AND Ep.ClientId='" + ddlClients.SelectedValue + "' AND Ep.Month=" + month + " Order by Right(Ep.EmpId,6)";
            }
            if (ddlnoofattendance.SelectedIndex == 0)
            {
                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,ep.Desgn,ep.Npots,ep.Npotsamt," +
                    "ep.esionnpots, (ep.Npotsamt-ep.esionnpots) as Total, ep.Npotsamt as Total,ep.NoOfDuties  from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId and  Ep.ClientId='" +
                ddlClients.SelectedValue + "' AND Ep.Month=" + month + " Order by Right(Ep.EmpId,6)";
            }

            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(selectmonth).Result;

            MemoryStream ms = new MemoryStream();
            if (dt.Rows.Count > 0)
            {
                Document document = new Document(PageSize.A4);
                PdfWriter writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                document.AddTitle("FaMS");
                document.AddAuthor("WebWonders");
                document.AddSubject("Wage Sheet");
                document.AddKeywords("Keyword1, keyword2, …");//
                float forConvert;
                string strQry = "Select * from  ";
                DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                string companyName1 = "Your Company Name";
                string companyAddress = "Your Company Address";
                if (compInfo.Rows.Count > 0)
                {
                    companyName1 = compInfo.Rows[0]["CompanyName"].ToString();
                    companyAddress = compInfo.Rows[0]["Address"].ToString();
                }

                // int tableCells = 27;
                #region variables for total
                float totalNPOTs = 0;
                float totalNPOTsamt = 0;
                float totalEsi = 0;
                float totalTotal = 0;

                #endregion


                #region variables for  Grand  total
                float GrandtotalNPOTs = 0;
                float GrandtotalNPOTsamt = 0;
                float GrandtotalEsi = 0;
                float GrandtotalTotal = 0;

                #endregion

                int nextpagerecordscount = 0;
                int targetpagerecors = 10;
                int secondpagerecords = targetpagerecors + 3;
                bool nextpagehasPages = false;
                int j = 0;
                PdfPTable SecondtablecheckbyFooter = null;
                PdfPTable SecondtableFooter = null;
                PdfPTable SecondtableGrandtotalFooter = null;
                for (int nextpagei = 0; nextpagei < dt.Rows.Count; nextpagei++)
                {
                    nextpagehasPages = true;


                    #region Titles of Document
                    PdfPTable Maintable = new PdfPTable(8);
                    Maintable.TotalWidth = 550f;
                    Maintable.LockedWidth = true;
                    float[] width = new float[] { 2.5f, 2f, 2f, 2f, 2f, 2f, 2f, 3f };
                    Maintable.SetWidths(width);
                    uint FONT_SIZE = 8;

                    //Company Name & vage act details

                    PdfPCell cellemp = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                    cellemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellemp.Colspan = 8;
                    cellemp.Border = 0;

                    PdfPCell Heading = new PdfPCell(new Phrase("Form - XVII REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, 16, Font.BOLD, BaseColor.BLACK)));
                    Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Heading.Colspan = 8;
                    Heading.Border = 0;
                    Maintable.AddCell(Heading);



                    PdfPCell actDetails = new PdfPCell(new Phrase("(vide Rule 78(1) a(i) of Contract Labour (Reg. & abolition)", FontFactory.GetFont(Fontstyle, 12, Font.BOLD, BaseColor.BLACK)));
                    actDetails.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    actDetails.Colspan = 8;
                    actDetails.Border = 0;// 15;
                    Maintable.AddCell(actDetails);

                    Maintable.AddCell(cellemp);
                    #endregion


                    #region Table Headings
                    PdfPCell companyName = new PdfPCell(new Phrase(companyName1, FontFactory.GetFont("Arial Black", 16, Font.BOLD, BaseColor.BLACK)));
                    companyName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    companyName.Colspan = 8;
                    companyName.Border = 0;// 15;
                    Maintable.AddCell(companyName);

                    PdfPCell paySheet = new PdfPCell(new Phrase("Pay Sheet", FontFactory.GetFont(Fontstyle, 9, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK)));
                    paySheet.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    paySheet.Colspan = 8;
                    paySheet.Border = 0;// 15;
                    Maintable.AddCell(paySheet);

                    PdfPCell CClient = new PdfPCell(new Phrase("Client ID : " + ddlClients.SelectedValue, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClient.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClient.Colspan = 4;
                    CClient.Border = 0;// 15;
                    Maintable.AddCell(CClient);


                    PdfPCell CDates = new PdfPCell(new Phrase("   Payment for the period of : " + GetPaymentPeriod(), FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CDates.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CDates.Colspan = 4;
                    CDates.Border = 0;// 15;
                    Maintable.AddCell(CDates);

                    PdfPCell CClientName = new PdfPCell(new Phrase("Client Name : " + ddlcname.SelectedItem, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClientName.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClientName.Colspan = 4;
                    CClientName.Border = 0;// 15;
                    Maintable.AddCell(CClientName);

                    PdfPCell CPayMonth = new PdfPCell(new Phrase("                      For the month of : " + ddlmonth.SelectedValue, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CPayMonth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CPayMonth.Colspan = 4;
                    CPayMonth.Border = 0;// 15;
                    Maintable.AddCell(CPayMonth);

                    PdfPCell CClientNamespace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClientNamespace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClientNamespace.Colspan = 3;
                    CClientNamespace.Border = 0;// 15;
                    //Maintable.AddCell(CClientNamespace);

                    PdfPCell CDatesspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CDatesspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CDatesspace.Colspan = 4;
                    CDatesspace.Border = 0;// 15;
                    //Maintable.AddCell(CDatesspace);



                    // PdfPCell CPaySheetDate = new PdfPCell(new Phrase("Pay Sheet Date :  " + DateTime.Now.Date.ToString("dd/MM/yyyy"), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    PdfPCell CPaySheetDate = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    CPaySheetDate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CPaySheetDate.Colspan = 4;
                    CPaySheetDate.Border = 0;// 15;
                    //Maintable.AddCell(CPaySheetDate);



                    Maintable.AddCell(cellemp);
                    //document.Add(Maintable);

                    if (titleofdocumentindex == 0)
                    {
                        document.Add(Maintable);
                        titleofdocumentindex = 1;
                    }
                    PdfPTable SecondtableHeadings = new PdfPTable(8);
                    SecondtableHeadings.TotalWidth = 550f;
                    SecondtableHeadings.LockedWidth = true;
                    float[] SecondHeadingsWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableHeadings.SetWidths(SecondHeadingsWidth);

                    //Cell Headings
                    //1
                    PdfPCell sNo = new PdfPCell(new Phrase("S.No ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    sNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    //sNo.Colspan = 1;
                    sNo.Border = 15;// 15;
                    SecondtableHeadings.AddCell(sNo);
                    //2
                    PdfPCell CEmpId = new PdfPCell(new Phrase("Emp Id", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CEmpId.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CEmpId.Border = 15;// 15;
                    SecondtableHeadings.AddCell(CEmpId);
                    //3
                    PdfPCell CEmpName = new PdfPCell(new Phrase("Emp Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CEmpName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CEmpName.Border = 15;// 15;
                    SecondtableHeadings.AddCell(CEmpName);
                    //4
                    PdfPCell CDesgn = new PdfPCell(new Phrase("Desgn", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CDesgn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CDesgn.Border = 15;
                    SecondtableHeadings.AddCell(CDesgn);
                    //5
                    PdfPCell CNHs = new PdfPCell(new Phrase("NPOTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CNHs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CNHs.Border = 15;
                    SecondtableHeadings.AddCell(CNHs);
                    //6
                    PdfPCell CNHsAmt = new PdfPCell(new Phrase("NPOTs Amount", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CNHsAmt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CNHsAmt.Border = 15;
                    SecondtableHeadings.AddCell(CNHsAmt);

                    //7
                    PdfPCell CesiAmt = new PdfPCell(new Phrase("ESI Amount", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CesiAmt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CesiAmt.Border = 15;
                    SecondtableHeadings.AddCell(CesiAmt);
                    //8
                    PdfPCell CTotal = new PdfPCell(new Phrase("Total", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CTotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CTotal.Border = 15;
                    SecondtableHeadings.AddCell(CTotal);

                    #endregion


                    PdfPTable Secondtable = new PdfPTable(8);
                    Secondtable.TotalWidth = 550f;
                    Secondtable.LockedWidth = true;
                    float[] SecondWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    Secondtable.SetWidths(SecondWidth);


                    #region Table Data
                    int rowCount = 0;
                    int pageCount = 0;
                    int i = nextpagei;

                    // for (int i = 0, j = 0; i < dt.Rows.Count; i++)
                    {
                        forConvert = 0;
                        if (dt.Rows[i]["npots"].ToString().Trim().Length > 0)
                            forConvert = Convert.ToSingle(dt.Rows[i]["npots"].ToString());
                        if (forConvert > 0)
                        {

                            if (nextpagerecordscount == 0)
                            {
                                document.Add(SecondtableHeadings);
                            }

                            nextpagerecordscount++;
                            //1
                            PdfPCell CSNo = new PdfPCell(new Phrase((++j).ToString() + "\n \n \n \n", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            CSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CSNo.Border = 15;
                            Secondtable.AddCell(CSNo);
                            //2
                            PdfPCell CEmpId1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpId"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpId1.Border = 15;
                            Secondtable.AddCell(CEmpId1);
                            //3
                            PdfPCell CEmpName1 = new PdfPCell(new Phrase(dt.Rows[i]["Name"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpName1.Border = 15;
                            Secondtable.AddCell(CEmpName1);
                            //4
                            PdfPCell CEmpDesgn = new PdfPCell(new Phrase(dt.Rows[i]["Desgn"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            CEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpDesgn.Border = 15;
                            Secondtable.AddCell(CEmpDesgn);
                            //5
                            forConvert = 0;
                            if (dt.Rows[i]["Npots"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Npots"].ToString());
                            totalNPOTs += forConvert;
                            GrandtotalNPOTs += forConvert;
                            PdfPCell CNHs1 = new PdfPCell(new Phrase(forConvert.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CNHs1.Border = 15;
                            Secondtable.AddCell(CNHs1);
                            //6
                            forConvert = 0;
                            if (dt.Rows[i]["Npotsamt"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Npotsamt"].ToString());
                            totalNPOTsamt += forConvert;
                            GrandtotalNPOTsamt += forConvert;
                            PdfPCell CNHsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CNHsAmt1.Border = 15;
                            Secondtable.AddCell(CNHsAmt1);

                            //7

                            forConvert = 0;
                            if (dt.Rows[i]["esionnpots"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["esionnpots"].ToString());
                            totalEsi += forConvert;
                            GrandtotalEsi += forConvert;
                            PdfPCell Cesiamtd = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cesiamtd.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Cesiamtd.Border = 15;
                            Secondtable.AddCell(Cesiamtd);


                            //8

                            forConvert = 0;
                            if (dt.Rows[i]["Total"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Total"].ToString());
                            totalTotal += forConvert;
                            GrandtotalTotal += forConvert;
                            PdfPCell CTotal1 = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CTotal1.Border = 15;
                            Secondtable.AddCell(CTotal1);
                        }


                    }
                    #endregion


                    SecondtableFooter = new PdfPTable(8);
                    SecondtableFooter.TotalWidth = 550f;
                    SecondtableFooter.LockedWidth = true;
                    float[] SecondFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableFooter.SetWidths(SecondFooterWidth);
                    #region Table Footer
                    //1
                    PdfPCell FCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCSNo.Border = 15;
                    SecondtableFooter.AddCell(FCSNo);
                    //2
                    PdfPCell FCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpId1.Border = 15;
                    SecondtableFooter.AddCell(FCEmpId1);
                    //3
                    PdfPCell FCEmpName1 = new PdfPCell(new Phrase(" Total : ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpName1.Border = 15;
                    SecondtableFooter.AddCell(FCEmpName1);
                    //4
                    PdfPCell FCEmpDesgn = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpDesgn.Border = 15;
                    //FCEmpDesgn.Colspan = 4;
                    SecondtableFooter.AddCell(FCEmpDesgn);
                    //5

                    PdfPCell FCNHs1 = new PdfPCell(new Phrase(totalNPOTs.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCNHs1.Border = 15;
                    SecondtableFooter.AddCell(FCNHs1);
                    //6

                    PdfPCell FCNHsAmt1 = new PdfPCell(new Phrase(totalNPOTsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCNHsAmt1.Border = 15;
                    SecondtableFooter.AddCell(FCNHsAmt1);

                    //7

                    PdfPCell FCesiaamt = new PdfPCell(new Phrase(totalEsi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCesiaamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCesiaamt.Border = 15;
                    SecondtableFooter.AddCell(FCesiaamt);
                    //8

                    PdfPCell FCTotal1 = new PdfPCell(new Phrase(totalTotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCTotal1.Border = 15;
                    SecondtableFooter.AddCell(FCTotal1);
                    #endregion


                    SecondtableGrandtotalFooter = new PdfPTable(8);
                    SecondtableGrandtotalFooter.TotalWidth = 550f;
                    SecondtableGrandtotalFooter.LockedWidth = true;
                    float[] SecondGrandtotalFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableGrandtotalFooter.SetWidths(SecondGrandtotalFooterWidth);

                    SecondtablecheckbyFooter = new PdfPTable(8);
                    SecondtablecheckbyFooter.TotalWidth = 550f;
                    SecondtablecheckbyFooter.LockedWidth = true;
                    float[] SecondcheckbyFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtablecheckbyFooter.SetWidths(SecondcheckbyFooterWidth);


                    #region   Footer Headings

                    #region Table   Grand   Total  Footer
                    //1
                    PdfPCell GFCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCSNo.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCSNo);
                    //2
                    PdfPCell GFCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpId1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCEmpId1);
                    //3
                    PdfPCell GFCEmpName1 = new PdfPCell(new Phrase("Grand  Totals: ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpName1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCEmpName1);
                    //4
                    PdfPCell GFCEmpDesgn = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpDesgn.Border = 15;
                    //FCEmpDesgn.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(GFCEmpDesgn);
                    //5
                    PdfPCell GFCNHs1 = new PdfPCell(new Phrase(GrandtotalNPOTs.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCNHs1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCNHs1);
                    //6

                    PdfPCell GFCNHsAmt1 = new PdfPCell(new Phrase(GrandtotalNPOTsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCNHsAmt1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCNHsAmt1);

                    //7


                    PdfPCell GFesiamt = new PdfPCell(new Phrase(GrandtotalEsi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFesiamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFesiamt.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFesiamt);
                    //8
                    PdfPCell GFCTotal1 = new PdfPCell(new Phrase(GrandtotalTotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCTotal1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCTotal1);
                    #endregion

                    //1
                    PdfPCell FHCheckedbybr1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHCheckedbybr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHCheckedbybr1.Border = 0;
                    FHCheckedbybr1.Rowspan = 0;
                    FHCheckedbybr1.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                    //2
                    PdfPCell FHApprovedbr2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHApprovedbr2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHApprovedbr2.Border = 0;
                    FHApprovedbr2.Colspan = 4;

                    SecondtablecheckbyFooter.AddCell(FHApprovedbr2);
                    SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                    SecondtablecheckbyFooter.AddCell(FHApprovedbr2);


                    //1
                    PdfPCell FHCheckedby = new PdfPCell(new Phrase("Checked By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHCheckedby.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHCheckedby.Border = 0;
                    FHCheckedby.Rowspan = 0;
                    FHCheckedby.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHCheckedby);
                    //2
                    PdfPCell FHApprovedBy = new PdfPCell(new Phrase(" Approved By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHApprovedBy.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHApprovedBy.Border = 0;
                    FHApprovedBy.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHApprovedBy);



                    #endregion

                    document.Add(Secondtable);

                    if (nextpagerecordscount == targetpagerecors)
                    {
                        targetpagerecors = secondpagerecords;
                        document.Add(SecondtableFooter);
                        document.NewPage();
                        nextpagerecordscount = 0;
                        #region  Zero variables

                        totalNPOTs = 0;
                        totalNPOTsamt = 0;
                        totalEsi = 0;
                        totalTotal = 0;
                        #endregion
                    }
                }

                if (nextpagerecordscount >= 0)
                {
                    document.Add(SecondtableFooter);
                    document.Add(SecondtableGrandtotalFooter);
                    document.Add(SecondtablecheckbyFooter);
                }
                document.Close();
                if (nextpagehasPages)
                {

                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=NPOTs.pdf");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();
                }
            }
        }

        protected void WOsPdf()
        {
            int titleofdocumentindex = 0;
            if (ddlClients.SelectedIndex <= 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                return;
            }

            int payMonth = GetMonth(ddlmonth.SelectedValue);
            int month = GetMonthAndYear();

            string selectmonth = string.Empty;

            if (ddlnoofattendance.SelectedIndex == 1)
            {
                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,ep.Desgn,ep.Npots,ep.Npotsamt," +
                    " ep.esionnpots, (ep.Npotsamt-ep.esionnpots) as Total,ep.NoOfDuties from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId " +
                " and Ep.npots<>0 and Ep.ClientId='" + ddlClients.SelectedValue + "' AND Ep.Month=" + month + "  Order by Right(Ep.EmpId,6)";
            }

            if (ddlnoofattendance.SelectedIndex == 2)
            {
                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,ep.Desgn,ep.Npots,ep.Npotsamt," +
                    " ep.esionnpots, (ep.Npotsamt-ep.esionnpots) as Total,ep.Npotsamt as Total,ep.NoOfDuties from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId " +
                    " and Ep.npots<>0 AND Ep.ClientId='" + ddlClients.SelectedValue + "' AND Ep.Month=" + month + " Order by Right(Ep.EmpId,6)";
            }
            if (ddlnoofattendance.SelectedIndex == 0)
            {
                selectmonth = "select ep.EmpId,ISNULL(e.EmpFName,'')+' '+ISNULL(e.EmpMName,'')+' '+ISNULL(e.EmpLName,'') as Name,ep.Desgn,ep.Npots,ep.Npotsamt," +
                    "ep.esionnpots, (ep.Npotsamt-ep.esionnpots) as Total, ep.Npotsamt as Total,ep.NoOfDuties  from EmpPaySheet as Ep inner join EmpDetails as E on ep.EmpId=e.EmpId and  Ep.ClientId='" +
                ddlClients.SelectedValue + "' AND Ep.Month=" + month + " Order by Right(Ep.EmpId,6)";
            }

            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(selectmonth).Result;

            MemoryStream ms = new MemoryStream();
            if (dt.Rows.Count > 0)
            {
                Document document = new Document(PageSize.A4);
                PdfWriter writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                document.AddTitle("FaMS");
                document.AddAuthor("WebWonders");
                document.AddSubject("Wage Sheet");
                document.AddKeywords("Keyword1, keyword2, …");//
                float forConvert;
                string strQry = "Select * from  ";
                DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                string companyName1 = "Your Company Name";
                string companyAddress = "Your Company Address";
                if (compInfo.Rows.Count > 0)
                {
                    companyName1 = compInfo.Rows[0]["CompanyName"].ToString();
                    companyAddress = compInfo.Rows[0]["Address"].ToString();
                }

                // int tableCells = 27;
                #region variables for total
                float totalNPOTs = 0;
                float totalNPOTsamt = 0;
                float totalEsi = 0;
                float totalTotal = 0;

                #endregion


                #region variables for  Grand  total
                float GrandtotalNPOTs = 0;
                float GrandtotalNPOTsamt = 0;
                float GrandtotalEsi = 0;
                float GrandtotalTotal = 0;

                #endregion

                int nextpagerecordscount = 0;
                int targetpagerecors = 10;
                int secondpagerecords = targetpagerecors + 3;
                bool nextpagehasPages = false;
                int j = 0;
                PdfPTable SecondtablecheckbyFooter = null;
                PdfPTable SecondtableFooter = null;
                PdfPTable SecondtableGrandtotalFooter = null;
                for (int nextpagei = 0; nextpagei < dt.Rows.Count; nextpagei++)
                {
                    nextpagehasPages = true;


                    #region Titles of Document
                    PdfPTable Maintable = new PdfPTable(8);
                    Maintable.TotalWidth = 550f;
                    Maintable.LockedWidth = true;
                    float[] width = new float[] { 2.5f, 2f, 2f, 2f, 2f, 2f, 2f, 3f };
                    Maintable.SetWidths(width);
                    uint FONT_SIZE = 8;

                    //Company Name & vage act details

                    PdfPCell cellemp = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                    cellemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellemp.Colspan = 8;
                    cellemp.Border = 0;

                    PdfPCell Heading = new PdfPCell(new Phrase("Form - XVII REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, 16, Font.BOLD, BaseColor.BLACK)));
                    Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Heading.Colspan = 8;
                    Heading.Border = 0;
                    Maintable.AddCell(Heading);



                    PdfPCell actDetails = new PdfPCell(new Phrase("(vide Rule 78(1) a(i) of Contract Labour (Reg. & abolition)", FontFactory.GetFont(Fontstyle, 12, Font.BOLD, BaseColor.BLACK)));
                    actDetails.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    actDetails.Colspan = 8;
                    actDetails.Border = 0;// 15;
                    Maintable.AddCell(actDetails);

                    Maintable.AddCell(cellemp);
                    #endregion


                    #region Table Headings
                    PdfPCell companyName = new PdfPCell(new Phrase(companyName1, FontFactory.GetFont("Arial Black", 16, Font.BOLD, BaseColor.BLACK)));
                    companyName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    companyName.Colspan = 8;
                    companyName.Border = 0;// 15;
                    Maintable.AddCell(companyName);

                    PdfPCell paySheet = new PdfPCell(new Phrase("Pay Sheet", FontFactory.GetFont(Fontstyle, 9, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK)));
                    paySheet.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    paySheet.Colspan = 8;
                    paySheet.Border = 0;// 15;
                    Maintable.AddCell(paySheet);

                    PdfPCell CClient = new PdfPCell(new Phrase("Client ID : " + ddlClients.SelectedValue, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClient.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClient.Colspan = 4;
                    CClient.Border = 0;// 15;
                    Maintable.AddCell(CClient);


                    PdfPCell CDates = new PdfPCell(new Phrase("   Payment for the period of : " + GetPaymentPeriod(), FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CDates.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CDates.Colspan = 4;
                    CDates.Border = 0;// 15;
                    Maintable.AddCell(CDates);

                    PdfPCell CClientName = new PdfPCell(new Phrase("Client Name : " + ddlcname.SelectedItem, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClientName.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClientName.Colspan = 4;
                    CClientName.Border = 0;// 15;
                    Maintable.AddCell(CClientName);

                    PdfPCell CPayMonth = new PdfPCell(new Phrase("                      For the month of : " + ddlmonth.SelectedValue, FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CPayMonth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CPayMonth.Colspan = 4;
                    CPayMonth.Border = 0;// 15;
                    Maintable.AddCell(CPayMonth);

                    PdfPCell CClientNamespace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CClientNamespace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CClientNamespace.Colspan = 3;
                    CClientNamespace.Border = 0;// 15;
                    //Maintable.AddCell(CClientNamespace);

                    PdfPCell CDatesspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    CDatesspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CDatesspace.Colspan = 4;
                    CDatesspace.Border = 0;// 15;
                    //Maintable.AddCell(CDatesspace);



                    // PdfPCell CPaySheetDate = new PdfPCell(new Phrase("Pay Sheet Date :  " + DateTime.Now.Date.ToString("dd/MM/yyyy"), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    PdfPCell CPaySheetDate = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    CPaySheetDate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    CPaySheetDate.Colspan = 4;
                    CPaySheetDate.Border = 0;// 15;
                    //Maintable.AddCell(CPaySheetDate);



                    Maintable.AddCell(cellemp);
                    //document.Add(Maintable);

                    if (titleofdocumentindex == 0)
                    {
                        document.Add(Maintable);
                        titleofdocumentindex = 1;
                    }
                    PdfPTable SecondtableHeadings = new PdfPTable(8);
                    SecondtableHeadings.TotalWidth = 550f;
                    SecondtableHeadings.LockedWidth = true;
                    float[] SecondHeadingsWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableHeadings.SetWidths(SecondHeadingsWidth);

                    //Cell Headings
                    //1
                    PdfPCell sNo = new PdfPCell(new Phrase("S.No ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    sNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    //sNo.Colspan = 1;
                    sNo.Border = 15;// 15;
                    SecondtableHeadings.AddCell(sNo);
                    //2
                    PdfPCell CEmpId = new PdfPCell(new Phrase("Emp Id", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CEmpId.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CEmpId.Border = 15;// 15;
                    SecondtableHeadings.AddCell(CEmpId);
                    //3
                    PdfPCell CEmpName = new PdfPCell(new Phrase("Emp Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CEmpName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CEmpName.Border = 15;// 15;
                    SecondtableHeadings.AddCell(CEmpName);
                    //4
                    PdfPCell CDesgn = new PdfPCell(new Phrase("Desgn", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CDesgn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CDesgn.Border = 15;
                    SecondtableHeadings.AddCell(CDesgn);
                    //5
                    PdfPCell CNHs = new PdfPCell(new Phrase("NPOTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CNHs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CNHs.Border = 15;
                    SecondtableHeadings.AddCell(CNHs);
                    //6
                    PdfPCell CNHsAmt = new PdfPCell(new Phrase("NPOTs Amount", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CNHsAmt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CNHsAmt.Border = 15;
                    SecondtableHeadings.AddCell(CNHsAmt);

                    //7
                    PdfPCell CesiAmt = new PdfPCell(new Phrase("ESI Amount", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CesiAmt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CesiAmt.Border = 15;
                    SecondtableHeadings.AddCell(CesiAmt);
                    //8
                    PdfPCell CTotal = new PdfPCell(new Phrase("Total", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    CTotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    CTotal.Border = 15;
                    SecondtableHeadings.AddCell(CTotal);

                    #endregion


                    PdfPTable Secondtable = new PdfPTable(8);
                    Secondtable.TotalWidth = 550f;
                    Secondtable.LockedWidth = true;
                    float[] SecondWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    Secondtable.SetWidths(SecondWidth);


                    #region Table Data
                    int rowCount = 0;
                    int pageCount = 0;
                    int i = nextpagei;

                    // for (int i = 0, j = 0; i < dt.Rows.Count; i++)
                    {
                        forConvert = 0;
                        if (dt.Rows[i]["npots"].ToString().Trim().Length > 0)
                            forConvert = Convert.ToSingle(dt.Rows[i]["npots"].ToString());
                        if (forConvert > 0)
                        {

                            if (nextpagerecordscount == 0)
                            {
                                document.Add(SecondtableHeadings);
                            }

                            nextpagerecordscount++;
                            //1
                            PdfPCell CSNo = new PdfPCell(new Phrase((++j).ToString() + "\n \n \n \n", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            CSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CSNo.Border = 15;
                            Secondtable.AddCell(CSNo);
                            //2
                            PdfPCell CEmpId1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpId"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpId1.Border = 15;
                            Secondtable.AddCell(CEmpId1);
                            //3
                            PdfPCell CEmpName1 = new PdfPCell(new Phrase(dt.Rows[i]["Name"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpName1.Border = 15;
                            Secondtable.AddCell(CEmpName1);
                            //4
                            PdfPCell CEmpDesgn = new PdfPCell(new Phrase(dt.Rows[i]["Desgn"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            CEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            CEmpDesgn.Border = 15;
                            Secondtable.AddCell(CEmpDesgn);
                            //5
                            forConvert = 0;
                            if (dt.Rows[i]["Npots"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Npots"].ToString());
                            totalNPOTs += forConvert;
                            GrandtotalNPOTs += forConvert;
                            PdfPCell CNHs1 = new PdfPCell(new Phrase(forConvert.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CNHs1.Border = 15;
                            Secondtable.AddCell(CNHs1);
                            //6
                            forConvert = 0;
                            if (dt.Rows[i]["Npotsamt"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Npotsamt"].ToString());
                            totalNPOTsamt += forConvert;
                            GrandtotalNPOTsamt += forConvert;
                            PdfPCell CNHsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CNHsAmt1.Border = 15;
                            Secondtable.AddCell(CNHsAmt1);

                            //7

                            forConvert = 0;
                            if (dt.Rows[i]["esionnpots"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["esionnpots"].ToString());
                            totalEsi += forConvert;
                            GrandtotalEsi += forConvert;
                            PdfPCell Cesiamtd = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cesiamtd.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Cesiamtd.Border = 15;
                            Secondtable.AddCell(Cesiamtd);


                            //8

                            forConvert = 0;
                            if (dt.Rows[i]["Total"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["Total"].ToString());
                            totalTotal += forConvert;
                            GrandtotalTotal += forConvert;
                            PdfPCell CTotal1 = new PdfPCell(new Phrase(forConvert.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            CTotal1.Border = 15;
                            Secondtable.AddCell(CTotal1);
                        }


                    }
                    #endregion


                    SecondtableFooter = new PdfPTable(8);
                    SecondtableFooter.TotalWidth = 550f;
                    SecondtableFooter.LockedWidth = true;
                    float[] SecondFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableFooter.SetWidths(SecondFooterWidth);
                    #region Table Footer
                    //1
                    PdfPCell FCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCSNo.Border = 15;
                    SecondtableFooter.AddCell(FCSNo);
                    //2
                    PdfPCell FCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpId1.Border = 15;
                    SecondtableFooter.AddCell(FCEmpId1);
                    //3
                    PdfPCell FCEmpName1 = new PdfPCell(new Phrase(" Total : ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpName1.Border = 15;
                    SecondtableFooter.AddCell(FCEmpName1);
                    //4
                    PdfPCell FCEmpDesgn = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    FCEmpDesgn.Border = 15;
                    //FCEmpDesgn.Colspan = 4;
                    SecondtableFooter.AddCell(FCEmpDesgn);
                    //5

                    PdfPCell FCNHs1 = new PdfPCell(new Phrase(totalNPOTs.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCNHs1.Border = 15;
                    SecondtableFooter.AddCell(FCNHs1);
                    //6

                    PdfPCell FCNHsAmt1 = new PdfPCell(new Phrase(totalNPOTsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCNHsAmt1.Border = 15;
                    SecondtableFooter.AddCell(FCNHsAmt1);

                    //7

                    PdfPCell FCesiaamt = new PdfPCell(new Phrase(totalEsi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCesiaamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCesiaamt.Border = 15;
                    SecondtableFooter.AddCell(FCesiaamt);
                    //8

                    PdfPCell FCTotal1 = new PdfPCell(new Phrase(totalTotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    FCTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    FCTotal1.Border = 15;
                    SecondtableFooter.AddCell(FCTotal1);
                    #endregion


                    SecondtableGrandtotalFooter = new PdfPTable(8);
                    SecondtableGrandtotalFooter.TotalWidth = 550f;
                    SecondtableGrandtotalFooter.LockedWidth = true;
                    float[] SecondGrandtotalFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtableGrandtotalFooter.SetWidths(SecondGrandtotalFooterWidth);

                    SecondtablecheckbyFooter = new PdfPTable(8);
                    SecondtablecheckbyFooter.TotalWidth = 550f;
                    SecondtablecheckbyFooter.LockedWidth = true;
                    float[] SecondcheckbyFooterWidth = new float[] { 1f, 2f, 6f, 3f, 2f, 2f, 2f, 2f };
                    SecondtablecheckbyFooter.SetWidths(SecondcheckbyFooterWidth);


                    #region   Footer Headings

                    #region Table   Grand   Total  Footer
                    //1
                    PdfPCell GFCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCSNo.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCSNo);
                    //2
                    PdfPCell GFCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpId1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCEmpId1);
                    //3
                    PdfPCell GFCEmpName1 = new PdfPCell(new Phrase("Grand  Totals: ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpName1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCEmpName1);
                    //4
                    PdfPCell GFCEmpDesgn = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    GFCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    GFCEmpDesgn.Border = 15;
                    //FCEmpDesgn.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(GFCEmpDesgn);
                    //5
                    PdfPCell GFCNHs1 = new PdfPCell(new Phrase(GrandtotalNPOTs.ToString("0.0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCNHs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCNHs1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCNHs1);
                    //6

                    PdfPCell GFCNHsAmt1 = new PdfPCell(new Phrase(GrandtotalNPOTsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCNHsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCNHsAmt1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCNHsAmt1);

                    //7


                    PdfPCell GFesiamt = new PdfPCell(new Phrase(GrandtotalEsi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFesiamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFesiamt.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFesiamt);
                    //8
                    PdfPCell GFCTotal1 = new PdfPCell(new Phrase(GrandtotalTotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                    GFCTotal1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    GFCTotal1.Border = 15;
                    SecondtablecheckbyFooter.AddCell(GFCTotal1);
                    #endregion

                    //1
                    PdfPCell FHCheckedbybr1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHCheckedbybr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHCheckedbybr1.Border = 0;
                    FHCheckedbybr1.Rowspan = 0;
                    FHCheckedbybr1.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                    //2
                    PdfPCell FHApprovedbr2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHApprovedbr2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHApprovedbr2.Border = 0;
                    FHApprovedbr2.Colspan = 4;

                    SecondtablecheckbyFooter.AddCell(FHApprovedbr2);
                    SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                    SecondtablecheckbyFooter.AddCell(FHApprovedbr2);


                    //1
                    PdfPCell FHCheckedby = new PdfPCell(new Phrase("Checked By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHCheckedby.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHCheckedby.Border = 0;
                    FHCheckedby.Rowspan = 0;
                    FHCheckedby.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHCheckedby);
                    //2
                    PdfPCell FHApprovedBy = new PdfPCell(new Phrase(" Approved By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                    FHApprovedBy.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    FHApprovedBy.Border = 0;
                    FHApprovedBy.Colspan = 4;
                    SecondtablecheckbyFooter.AddCell(FHApprovedBy);



                    #endregion

                    document.Add(Secondtable);

                    if (nextpagerecordscount == targetpagerecors)
                    {
                        targetpagerecors = secondpagerecords;
                        document.Add(SecondtableFooter);
                        document.NewPage();
                        nextpagerecordscount = 0;
                        #region  Zero variables

                        totalNPOTs = 0;
                        totalNPOTsamt = 0;
                        totalEsi = 0;
                        totalTotal = 0;
                        #endregion
                    }
                }

                if (nextpagerecordscount >= 0)
                {
                    document.Add(SecondtableFooter);
                    document.Add(SecondtableGrandtotalFooter);
                    document.Add(SecondtablecheckbyFooter);
                }
                document.Close();
                if (nextpagehasPages)
                {

                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=NPOTs.pdf");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();
                }
            }
        }

        public string GetMonthName()
        {
            string monthname = string.Empty;
            int payMonth = 0;
            DateTimeFormatInfo mfi = new DateTimeFormatInfo();

            if (Chk_Month.Checked == false)
            {
                payMonth = GetMonth(ddlmonth.SelectedValue);
                monthname = mfi.GetMonthName(payMonth).ToString();
            }
            if (Chk_Month.Checked == true)
            {

                DateTime date = Convert.ToDateTime(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                monthname = mfi.GetMonthName(date.Month).ToString();
                //payMonth = GetMonth(monthname);
            }
            return monthname;
        }

        public string GetMonthOfYear()
        {
            string MonthYear = "";

            int month = GetMonthBasedOnSelectionDateorMonth();
            if (month.ToString().Length == 4)
            {
                MonthYear = "20" + month.ToString().Substring(2, 2);
            }
            if (month.ToString().Length == 3)
            {
                MonthYear = "20" + month.ToString().Substring(1, 2);

            }
            return MonthYear;
        }

        protected void btnSubmit_Click(object sender, EventArgs e)
        {


            var password = string.Empty;
            var SPName = string.Empty;
            password = txtPassword.Text.Trim();
            string sqlPassword = "select password from IouserDetails where password='" + txtPassword.Text + "'";
            DataTable dtpassword = config.ExecuteAdaptorAsyncWithQueryParams(sqlPassword).Result;
            if (dtpassword.Rows.Count == 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Invalid Password');", true);
                return;
            }

            #region Validation

            gvattendancezero.DataSource = null;
            gvattendancezero.DataBind();
            Txt_Month.Text = string.Empty;
            ddlmonth.SelectedIndex = 0;
            ddlpaymenttype.SelectedIndex = 0;


            if (ddlClients.SelectedIndex == 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Please Select The Unit Id');", true);
                Chk_Month.Checked = false;
                return;
            }

            #endregion

            Chk_Month.Checked = true;

            if (Chk_Month.Checked)
            {
                Txt_Month.Visible = true;
                ddlmonth.SelectedIndex = 0;
                ddlmonth.Visible = false;
            }

        }

        protected void btnClose_Click(object sender, EventArgs e)
        {
            modelLogindetails.Hide();
            Chk_Month.Checked = false;
            gvattendancezero.DataSource = null;
            gvattendancezero.DataBind();
            Txt_Month.Text = string.Empty;
            ddlmonth.SelectedIndex = 0;
            ddlpaymenttype.SelectedIndex = 0;
            if (Chk_Month.Checked == false)
            {
                Txt_Month.Visible = false;
                Txt_Month.Text = "";
                ddlmonth.SelectedIndex = 0;
                ddlmonth.Visible = true;
            }
        }

        protected void Txt_Month_TextChanged(object sender, EventArgs e)
        {
            Cleardata();
            ClearNonPaysheetGenerated();
            bool SelectAll = false;
            string BillType = "";
            int Month = GetMonthBasedOnSelectionDateorMonth();
            SelectAll = false;
            if (chkalllist.Checked == true)
                SelectAll = true;

            bool excludeList = false;
            if (chkexcludelist.Checked == true)
                excludeList = false;
            BillType = "PaySheet";
            LoadClientIDBasedonMonth(Month, BillType, SelectAll, excludeList);

            lblPaysheetGeneratedTime.Text = "";
            PnlNonGeneratedPaysheet.Visible = false;
            GvNonGeneratedEmp.DataSource = null;
            GvNonGeneratedEmp.DataBind();
            NonGeneratedPaysheetList();
            DisplayData();

            GetBillingDuties();

        }

        protected void btnFormTNew_Click(object sender, EventArgs e)
        {
            try
            {
                int titleofdocumentindex = 0;
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                    return;
                }

                int days = 0;

                int payMonth = GetMonth(ddlmonth.SelectedValue);
                int month = GetMonthBasedOnSelectionDateorMonth();

                if (Chk_Month.Checked == false)
                {
                    if (ddlmonth.SelectedIndex == 1)
                    {
                        days = GlobalData.Instance.GetNoOfDaysForNextMonth();
                    }
                    if (ddlmonth.SelectedIndex == 2)
                    {
                        days = GlobalData.Instance.GetNoOfDaysForThisMonth();
                    }
                    if (ddlmonth.SelectedIndex == 3)
                    {
                        days = GlobalData.Instance.GetNoOfDaysForPrviousMonth();
                    }
                }
                if (Chk_Month.Checked == true)
                {
                    string date = string.Empty;

                    if (Txt_Month.Text.Trim().Length > 0)
                    {
                        date = DateTime.Parse(Txt_Month.Text.Trim(), CultureInfo.GetCultureInfo("en-gb")).ToString();
                    }

                    int year = Convert.ToDateTime(date).Year;
                    int monthn = Convert.ToDateTime(date).Month;
                    days = DateTime.DaysInMonth(year, monthn);
                }

                string selectmonth = string.Empty;
                string SelectmonthWithbankacno = string.Empty;
                string SelectmonthWithoutbankacno = string.Empty;
                DataTable dt = null;


                var clientid = ddlClients.SelectedValue;
                var Paysheetoption = ddlpaymenttype.SelectedIndex;
                var Noofattendance = ddlnoofattendance.SelectedIndex;
                //var pfesioptions = ddl_Pf_Esi_Options.SelectedIndex;

                var ContractID = string.Empty;
                var bPaySheetDates = 0;
                var Gendays = 0;
                var G_Sdays = 0;

                DateTime LastDay = DateTime.Now;
                if (Chk_Month.Checked == false)
                {
                    LastDay = Timings.Instance.GetLastDayForSelectedMonth(ddlmonth.SelectedIndex);
                }
                if (Chk_Month.Checked == true)
                {
                    LastDay = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                }


                #region  Begin Get Contract Id Based on The Last Day


                Hashtable HtGetContractID = new Hashtable();
                var SPNameForGetContractID = "GetContractIDBasedOnthMonth";
                HtGetContractID.Add("@clientid", ddlClients.SelectedValue);
                HtGetContractID.Add("@LastDay", LastDay);
                DataTable DTContractID = config.ExecuteAdaptorAsyncWithParams(SPNameForGetContractID, HtGetContractID).Result;

                if (DTContractID.Rows.Count > 0)
                {
                    ContractID = DTContractID.Rows[0]["contractid"].ToString();
                    bPaySheetDates = int.Parse(DTContractID.Rows[0]["PaySheetDates"].ToString());
                }
                else
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "", "alert('Contract Details Are Not  Avaialable For This Client.');", true);
                    return;
                }

                #endregion  End Get Contract Id Based on The Last Day


                if (Chk_Month.Checked == false)
                {
                    //Gendays = Timings.Instance.GetNoofDaysForSelectedMonth(ddlmonth.SelectedIndex, bBillDates);
                    Gendays = Timings.Instance.GetNoofDaysForSelectedMonth(ddlmonth.SelectedIndex, bPaySheetDates);
                }

                //New Code when select month in Textbox
                if (Chk_Month.Checked == true)
                {
                    DateTime mGendays = DateTime.Now;
                    DateTime date = DateTime.Parse(Txt_Month.Text, CultureInfo.GetCultureInfo("en-gb"));
                    mGendays = DateTime.Parse(date.ToString());
                    // Gendays = Timings.Instance.GetNoofDaysForEnteredMonth(mGendays, bBillDates);
                    Gendays = Timings.Instance.GetNoofDaysForEnteredMonth(mGendays, bPaySheetDates);
                }
                G_Sdays = Timings.Instance.Get_GS_Days(month, Gendays);


                var SPName = "";
                Hashtable HTPaysheet = new Hashtable();
                SPName = "IMEPaysheetpdfs";
                HTPaysheet.Add("@ClientId", clientid);
                HTPaysheet.Add("@month", month);
                HTPaysheet.Add("@PaymentOption", Paysheetoption);
                HTPaysheet.Add("@Attendance", Noofattendance);
                //  HTPaysheet.Add("@PfesiOptions", pfesioptions);
                HTPaysheet.Add("@Gendays", Gendays);
                HTPaysheet.Add("@G_Sdays", G_Sdays);

                dt = config.ExecuteAdaptorAsyncWithParams(SPName, HTPaysheet).Result;

                MemoryStream ms = new MemoryStream();
                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL.Rotate());
                    PdfWriter writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    document.AddTitle("FaMS");
                    document.AddAuthor("WebWonders");
                    document.AddSubject("Wage Sheet");
                    document.AddKeywords("Keyword1, keyword2, …");//
                    float forConvert;
                    string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                    DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                    string companyName1 = "Your Company Name";
                    string companyAddress = "Your Company Address";
                    if (compInfo.Rows.Count > 0)
                    {
                        companyName1 = compInfo.Rows[0]["CompanyName"].ToString();
                        companyAddress = compInfo.Rows[0]["Address"].ToString();
                    }

                    #region Variables for table cells counting
                    int ATMDed = 0;

                    int IDCardDed = 0;
                    int Extra = 0;
                    float IDCardDed1 = 0;
                    float Extra1 = 0;


                    float ATMDed1 = 0;
                    int paydays = 0;
                    int dts = 0;
                    int payrate = 0;
                    int basic = 0;
                    int da = 0;
                    int hra = 0;
                    int cca = 0;
                    int conveyance = 0;
                    int washallowance = 0;
                    int otherallowance = 0;
                    int splallw = 0;
                    int leavewages = 0;
                    int gratuity = 0;
                    int bonus = 0;
                    int nfhs = 0;
                    int rc = 0;
                    int cs = 0;
                    int cfoodallowance = 0;
                    int cmedicalallowance = 0;

                    int TravelAllw = 0;
                    int PerformanceAllw = 0;
                    int MobileAllw = 0;


                    int gross = 0;
                    int incentivs = 0;
                    int pf = 0;
                    int esi = 0;
                    int proftax = 0;
                    int salAdvDed = 0;
                    int uniformDed = 0;
                    int otherDed = 0;
                    int canteenAdv = 0;
                    int penalty = 0;
                    int totalDeductions = 0;


                    int ots = 0;
                    int otamt = 0;
                    int wos = 0;
                    int wosamt = 0;
                    int nhs = 0;
                    int nhsamt = 0;

                    int owf = 0;
                    float owf1 = 0;

                    int npots = 0;
                    int total = 0;

                    int npotsamt = 0;
                    int totalearned = 0;
                    int TDS = 0;
                    int Soceity = 0;
                    int Mobile = 0;
                    int KLWF = 0;
                    int Loss = 0;
                    int Arrears = 0;
                    int MatAllw = 0;
                    int RoomUniform = 0;

                    int Advance = 0;
                    int SecurityDepDed = 0;
                    int Loan = 0;
                    int MBSDed = 0;
                    int TelephoneBillDed = 0;
                    int Serviceweightage = 0;
                    int PVCAmount = 0;

                    float SecurityDepDed1 = 0;
                    float Loan1 = 0;
                    float MBSDed1 = 0;
                    float dts1 = 0;
                    float payrate1 = 0;
                    float basic1 = 0;
                    float da1 = 0;
                    float hra1 = 0;
                    float cca1 = 0;
                    float conveyance1 = 0;
                    float washallowance1 = 0;
                    float otherallowance1 = 0;
                    float splallw1 = 0;
                    float leavewages1 = 0;
                    float gratuity1 = 0;
                    float bonus1 = 0;
                    float total1 = 0;
                    float nfhs1 = 0;
                    float rc1 = 0;
                    float cs1 = 0;
                    float cfoodallowance1 = 0;
                    float cmedicalallowance1 = 0;

                    float TravelAllw1 = 0;
                    float PerformanceAllw1 = 0;
                    float MobileAllw1 = 0;

                    float gross1 = 0;
                    float incentivs1 = 0;
                    float pf1 = 0;
                    float esi1 = 0;
                    float proftax1 = 0;
                    float salAdvDed1 = 0;
                    float uniformDed1 = 0;
                    float otherDed1 = 0;
                    float canteenAdv1 = 0;
                    float penalty1 = 0;
                    float totalDeductions1 = 0;
                    float netpay1 = 0;
                    float totalearned1 = 0;
                    float paydays1 = 0;


                    float ots1 = 0;
                    float otamt1 = 0;
                    float wos1 = 0;
                    float wosamt1 = 0;
                    float nhs1 = 0;
                    float nhsamt1 = 0;
                    float npots1 = 0;
                    float npotsamt1 = 0;

                    float TDS1 = 0;
                    float Soceity1 = 0;
                    float Mobile1 = 0;
                    float KLWF1 = 0;
                    float Loss1 = 0;
                    float Arrears1 = 0;
                    float MatAllw1 = 0;
                    float RoomUniform1 = 0;

                    float Advance1 = 0;
                    float TelephoneBillDed1 = 0;
                    float serviceweightage1 = 0;
                    float PVCAmount1 = 0;

                    #endregion


                    #region Data for counting tablecells

                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        paydays1 = float.Parse(dt.Rows[i]["NoOfWorkingDays"].ToString());
                        if (paydays1 != 0)
                        {
                            paydays1 += 1;
                            if (paydays1 > 0)
                            {
                                paydays = 1;
                            }
                        }

                        ATMDed1 = float.Parse(dt.Rows[i]["ATMDed"].ToString());
                        if (ATMDed1 != 0)
                        {
                            ATMDed1 += 1;
                            if (ATMDed1 > 0)
                            {
                                ATMDed = 1;
                            }
                        }

                        IDCardDed1 = float.Parse(dt.Rows[i]["IDCardDed"].ToString());
                        if (IDCardDed1 != 0)
                        {
                            IDCardDed1 += 1;
                            if (IDCardDed1 > 0)
                            {
                                IDCardDed = 1;
                            }
                        }

                        Extra1 = float.Parse(dt.Rows[i]["Extra"].ToString());
                        if (Extra1 != 0)
                        {
                            Extra1 += 1;
                            if (Extra1 > 0)
                            {
                                Extra = 1;
                            }
                        }

                        owf1 = float.Parse(dt.Rows[i]["owf"].ToString());
                        if (owf1 != 0)
                        {
                            owf1 += 1;
                            if (owf1 > 0)
                            {
                                owf = 1;
                            }
                        }

                        dts1 = float.Parse(dt.Rows[i]["NoOfDuties"].ToString());
                        if (dts1 != 0)
                        {
                            dts1 += 1;
                            if (dts1 > 0)
                            {
                                dts = 1;
                            }
                        }


                        Soceity1 = float.Parse(dt.Rows[i]["Soceity"].ToString());
                        if (Soceity1 != 0)
                        {
                            Soceity1 += 1;
                            if (Soceity1 > 0)
                            {
                                Soceity = 1;
                            }
                        }

                        TDS1 = float.Parse(dt.Rows[i]["TDS"].ToString());
                        if (TDS1 != 0)
                        {
                            TDS1 += 1;
                            if (TDS1 > 0)
                            {
                                TDS = 1;
                            }
                        }

                        Mobile1 = float.Parse(dt.Rows[i]["Mobile"].ToString());
                        if (Mobile1 != 0)
                        {
                            Mobile1 += 1;
                            if (Mobile1 > 0)
                            {
                                Mobile = 1;
                            }
                        }

                        KLWF1 = float.Parse(dt.Rows[i]["KLWF"].ToString());
                        if (KLWF1 != 0)
                        {
                            KLWF1 += 1;
                            if (KLWF1 > 0)
                            {
                                KLWF = 1;
                            }
                        }

                        Loss1 = float.Parse(dt.Rows[i]["Loss"].ToString());
                        if (Loss1 != 0)
                        {
                            Loss1 += 1;
                            if (Loss1 > 0)
                            {
                                Loss = 1;
                            }
                        }

                        Arrears1 = float.Parse(dt.Rows[i]["Arrears"].ToString());
                        if (Arrears1 != 0)
                        {
                            Arrears1 += 1;
                            if (Arrears1 > 0)
                            {
                                Arrears = 1;
                            }
                        }

                        //MatAllw1 = float.Parse(dt.Rows[i]["MatAllw"].ToString());
                        //if (MatAllw1 != 0)
                        //{
                        //    MatAllw1 += 1;
                        //    if (MatAllw1 > 0)
                        //    {
                        //        MatAllw = 1;
                        //    }
                        //}

                        //RoomUniform1 = float.Parse(dt.Rows[i]["RoomUniform"].ToString());
                        //if (RoomUniform1 != 0)
                        //{
                        //    RoomUniform1 += 1;
                        //    if (RoomUniform1 > 0)
                        //    {
                        //        RoomUniform = 1;
                        //    }
                        //}

                        //modeofpayment1 = float.Parse(dt.Rows[i]["modeofpayment"].ToString());
                        //if (modeofpayment1 != 0)
                        //{
                        //    modeofpayment1 += 1;
                        //    if (modeofpayment1 > 0)
                        //    {
                        //        modeofpayment = 1;
                        //    }
                        //}

                        //Advance1 = float.Parse(dt.Rows[i]["Advance"].ToString());
                        //if (Advance1 != 0)
                        //{
                        //    Advance1 += 1;
                        //    if (Advance1 > 0)
                        //    {
                        //        Advance = 1;
                        //    }
                        //}

                        cfoodallowance1 = float.Parse(dt.Rows[i]["foodallowance"].ToString());
                        if (cfoodallowance1 != 0)
                        {
                            cfoodallowance1 += 1;
                            if (cfoodallowance1 > 0)
                            {
                                cfoodallowance = 1;
                            }
                        }

                        cmedicalallowance1 = float.Parse(dt.Rows[i]["medicalallowance"].ToString());
                        if (cmedicalallowance1 != 0)
                        {
                            cmedicalallowance1 += 1;
                            if (cmedicalallowance1 > 0)
                            {
                                cmedicalallowance = 1;
                            }
                        }
                        splallw1 = float.Parse(dt.Rows[i]["SplAllowance"].ToString());
                        if (splallw1 != 0)
                        {
                            splallw1 += 1;
                            if (splallw1 > 0)
                            {
                                splallw = 1;
                            }
                        }

                        ///////

                        TravelAllw1 = float.Parse(dt.Rows[i]["TravelAllw"].ToString());
                        if (TravelAllw1 != 0)
                        {
                            TravelAllw1 += 1;
                            if (TravelAllw1 > 0)
                            {
                                TravelAllw = 1;
                            }
                        }

                        PerformanceAllw1 = float.Parse(dt.Rows[i]["PerformanceAllw"].ToString());
                        if (PerformanceAllw1 != 0)
                        {
                            PerformanceAllw1 += 1;
                            if (PerformanceAllw1 > 0)
                            {
                                PerformanceAllw = 1;
                            }
                        }

                        MobileAllw1 = float.Parse(dt.Rows[i]["MobileAllw"].ToString());
                        if (MobileAllw1 != 0)
                        {
                            MobileAllw1 += 1;
                            if (MobileAllw1 > 0)
                            {
                                MobileAllw = 1;
                            }
                        }

                        /////

                        payrate1 = float.Parse(dt.Rows[i]["tempgross"].ToString());
                        if (payrate1 != 0)
                        {
                            payrate1 += 1;
                            if (payrate1 > 0)
                            {
                                payrate = 1;
                            }
                        }

                        basic1 = float.Parse(dt.Rows[i]["basic"].ToString());
                        if (basic1 != 0)
                        {
                            basic1 += 1;
                            if (basic1 > 0)
                            {
                                basic = 1;
                            }
                        }
                        da1 = float.Parse(dt.Rows[i]["da"].ToString());
                        if (da1 != 0)
                        {
                            da1 += 1;
                            if (da1 > 0)
                            {
                                da = 1;
                            }
                        }
                        hra1 = float.Parse(dt.Rows[i]["hra"].ToString());
                        if (hra1 != 0)
                        {
                            hra1 += 1;
                            if (hra1 > 0)
                            {
                                hra = 1;
                            }
                        }
                        cca1 = float.Parse(dt.Rows[i]["cca"].ToString());
                        if (cca1 != 0)
                        {
                            cca1 += 1;
                            if (cca1 > 0)
                            {
                                cca = 1;
                            }
                        }
                        conveyance1 = float.Parse(dt.Rows[i]["Conveyance"].ToString());
                        if (conveyance1 != 0)
                        {
                            conveyance1 += 1;
                            if (conveyance1 > 0)
                            {
                                conveyance = 1;
                            }
                        }

                        washallowance1 = float.Parse(dt.Rows[i]["washallowance"].ToString());
                        if (washallowance1 != 0)
                        {
                            washallowance1 += 1;
                            if (washallowance1 > 0)
                            {
                                washallowance = 1;
                            }
                        }
                        otherallowance1 = float.Parse(dt.Rows[i]["otherallowance"].ToString());
                        if (otherallowance1 != 0)
                        {
                            otherallowance1 += 1;
                            if (otherallowance1 > 0)
                            {
                                otherallowance = 1;
                            }
                        }
                        leavewages1 = float.Parse(dt.Rows[i]["Leavewages"].ToString());
                        if (leavewages1 != 0)
                        {
                            leavewages1 += 1;
                            if (leavewages1 > 0)
                            {
                                leavewages = 1;
                            }
                        }
                        gratuity1 = float.Parse(dt.Rows[i]["gratuity"].ToString());
                        if (gratuity1 != 0)
                        {
                            gratuity1 += 1;
                            if (gratuity1 > 0)
                            {
                                gratuity = 1;
                            }
                        }
                        bonus1 = float.Parse(dt.Rows[i]["bonus"].ToString());
                        if (bonus1 != 0)
                        {
                            bonus1 += 1;
                            if (bonus1 > 0)
                            {
                                bonus = 1;
                            }
                        }

                        nfhs1 = float.Parse(dt.Rows[i]["nfhs"].ToString());
                        if (nfhs1 != 0)
                        {
                            nfhs1 += 1;
                            if (nfhs1 > 0)
                            {
                                nfhs = 1;
                            }
                        }
                        rc1 = float.Parse(dt.Rows[i]["rc"].ToString());
                        if (rc1 != 0)
                        {
                            rc1 += 1;
                            if (rc1 > 0)
                            {
                                rc = 1;
                            }
                        }

                        cs1 = float.Parse(dt.Rows[i]["cs"].ToString());
                        if (cs1 != 0)
                        {
                            cs1 += 1;
                            if (cs1 > 0)
                            {
                                cs = 1;
                            }
                        }
                        gross1 = float.Parse(dt.Rows[i]["gross"].ToString());
                        if (gross1 != 0)
                        {
                            gross1 += 1;
                            if (gross1 > 0)
                            {
                                gross = 1;
                            }
                        }

                        incentivs1 = float.Parse(dt.Rows[i]["incentivs"].ToString());
                        if (incentivs1 != 0)
                        {
                            incentivs1 += 1;
                            if (incentivs1 > 0)
                            {
                                incentivs = 1;
                            }
                        }

                        totalearned1 = float.Parse(dt.Rows[i]["gross"].ToString());
                        if (totalearned1 != 0)
                        {
                            totalearned1 += 1;
                            if (totalearned1 > 0)
                            {
                                totalearned = 1;
                            }
                        }
                        pf1 = float.Parse(dt.Rows[i]["Pf"].ToString());
                        if (pf1 != 0)
                        {
                            pf1 += 1;
                            if (pf1 > 0)
                            {
                                pf = 1;
                            }
                        }
                        esi1 = float.Parse(dt.Rows[i]["Esi"].ToString());
                        if (esi1 != 0)
                        {
                            esi1 += 1;
                            if (esi1 > 0)
                            {
                                esi = 1;
                            }
                        }
                        proftax1 = float.Parse(dt.Rows[i]["proftax"].ToString());
                        if (proftax1 != 0)
                        {
                            proftax1 += 1;
                            if (proftax1 > 0)
                            {
                                proftax = 1;
                            }
                        }

                        Loan1 = float.Parse(dt.Rows[i]["LoanDed"].ToString());
                        if (Loan1 != 0)
                        {
                            Loan1 += 1;
                            if (Loan1 > 0)
                            {
                                Loan = 1;
                            }
                        }


                        SecurityDepDed1 = float.Parse(dt.Rows[i]["SecurityDepDed"].ToString());
                        if (SecurityDepDed1 != 0)
                        {
                            SecurityDepDed1 += 1;
                            if (SecurityDepDed1 > 0)
                            {
                                SecurityDepDed = 1;
                            }
                        }

                        salAdvDed1 = float.Parse(dt.Rows[i]["salAdvDed"].ToString());
                        if (salAdvDed1 != 0)
                        {
                            salAdvDed1 += 1;
                            if (salAdvDed1 > 0)
                            {
                                salAdvDed = 1;
                            }
                        }
                        uniformDed1 = float.Parse(dt.Rows[i]["uniformDed"].ToString());
                        if (uniformDed1 != 0)
                        {
                            uniformDed1 += 1;
                            if (uniformDed1 > 0)
                            {
                                uniformDed = 1;
                            }
                        }
                        otherDed1 = float.Parse(dt.Rows[i]["otherDed"].ToString());
                        if (otherDed1 != 0)
                        {
                            otherDed1 += 1;
                            if (otherDed1 > 0)
                            {
                                otherDed = 1;
                            }
                        }

                        MBSDed1 = float.Parse(dt.Rows[i]["MBSDed"].ToString());
                        if (MBSDed1 != 0)
                        {
                            MBSDed1 += 1;
                            if (MBSDed1 > 0)
                            {
                                MBSDed = 1;
                            }
                        }
                        canteenAdv1 = float.Parse(dt.Rows[i]["canteenAdv"].ToString());
                        if (canteenAdv1 != 0)
                        {
                            canteenAdv1 += 1;
                            if (canteenAdv1 > 0)
                            {
                                canteenAdv = 1;
                            }
                        }

                        penalty1 = float.Parse(dt.Rows[i]["penalty"].ToString());
                        if (penalty1 != 0)
                        {
                            penalty1 += 1;
                            if (penalty1 > 0)
                            {
                                penalty = 1;
                            }
                        }
                        totalDeductions1 = float.Parse(dt.Rows[i]["Totaldeduct"].ToString());
                        if (totalDeductions1 != 0)
                        {
                            totalDeductions1 += 1;
                            if (totalDeductions1 > 0)
                            {
                                totalDeductions = 1;
                            }
                        }
                        //netpay1 = float.Parse(dt.Rows[i]["NetAmount"].ToString());
                        //if (netpay1 != 0)
                        //{
                        //    netpay1 += 1;
                        //    if (netpay1 > 0)
                        //    {
                        //        netpay = 1;
                        //    }
                        //}

                        ots1 = float.Parse(dt.Rows[i]["Duties"].ToString());
                        if (ots1 != 0)
                        {
                            ots1 += 1;
                            if (ots1 > 0)
                            {
                                ots = 1;
                            }
                        }

                        otamt1 = float.Parse(dt.Rows[i]["Amount"].ToString());
                        if (otamt1 != 0)
                        {
                            otamt1 += 1;
                            if (otamt1 > 0)
                            {
                                otamt = 1;
                            }
                        }

                        wos1 = float.Parse(dt.Rows[i]["Wo"].ToString());
                        if (wos1 != 0)
                        {
                            wos1 += 1;
                            if (wos1 > 0)
                            {
                                wos = 1;
                            }
                        }

                        wosamt1 = float.Parse(dt.Rows[i]["woamt"].ToString());
                        if (wosamt1 != 0)
                        {
                            wosamt1 += 1;
                            if (wosamt1 > 0)
                            {
                                wosamt = 1;
                            }
                        }

                        nhs1 = float.Parse(dt.Rows[i]["nhs"].ToString());
                        if (nhs1 != 0)
                        {
                            nhs1 += 1;
                            if (nhs1 > 0)
                            {
                                nhs = 1;
                            }
                        }
                        nhsamt1 = float.Parse(dt.Rows[i]["nhsamt"].ToString());
                        if (nhsamt1 != 0)
                        {
                            nhsamt1 += 1;
                            if (nhsamt1 > 0)
                            {
                                nhsamt = 1;
                            }
                        }

                        total1 = float.Parse(dt.Rows[i]["total"].ToString());
                        if (total1 != 0)
                        {
                            total1 += 1;
                            if (total1 > 0)
                            {
                                total = 1;
                            }
                        }
                        npotsamt1 = float.Parse(dt.Rows[i]["npotsamt"].ToString());
                        if (npotsamt1 != 0)
                        {
                            npotsamt1 += 1;
                            if (npotsamt1 > 0)
                            {
                                npotsamt = 1;
                            }
                        }

                        TelephoneBillDed1 = float.Parse(dt.Rows[i]["TelephoneBillDed"].ToString());
                        if (TelephoneBillDed1 != 0)
                        {
                            TelephoneBillDed1 += 1;
                            if (TelephoneBillDed1 > 0)
                            {
                                TelephoneBillDed = 1;
                            }
                        }

                        PVCAmount1 = float.Parse(dt.Rows[i]["PVCAmount"].ToString());
                        if (PVCAmount1 != 0)
                        {
                            PVCAmount1 += 1;
                            if (PVCAmount1 > 0)
                            {
                                PVCAmount = 1;
                            }
                        }

                        serviceweightage1 = float.Parse(dt.Rows[i]["Serviceweightage"].ToString());
                        if (serviceweightage1 != 0)
                        {
                            serviceweightage1 += 1;
                            if (serviceweightage1 > 0)
                            {
                                Serviceweightage = 1;
                            }
                        }



                    }

                    #endregion

                    int sno = 1;
                    int empid = 1;
                    int empname = 1;
                    int fathername = 1;
                    int design = 1;
                    int EmpBankAcNo = 1;
                    int EmpEpfNo = 1;
                    int EmpEsiNo = 1;
                    int Dtofleaving = 1;
                    int modeofpayment = 1;
                    int netpay = 1;

                    int tableCells = dts + basic + da + hra + cca + conveyance + washallowance + otherallowance + leavewages +
                                    gratuity + bonus + nfhs + rc + cs + gross + incentivs + pf + esi + proftax + cfoodallowance + cmedicalallowance + splallw + TravelAllw + PerformanceAllw + MobileAllw + Serviceweightage + PVCAmount +
                                    salAdvDed + uniformDed + IDCardDed + Extra + ATMDed + otherDed + canteenAdv + penalty + totalDeductions + netpay + sno + Arrears +
                                    Loss + KLWF + Soceity + Loan + SecurityDepDed + MBSDed + owf + TelephoneBillDed +
                                    empid + empname + design + EmpBankAcNo + ots + otamt + wos + wosamt + nhs + nhsamt + total + npotsamt + payrate + fathername + paydays;

                    #region for individual attendance

                    string day1 = "";
                    string day2 = "";
                    string day3 = "";
                    string day4 = "";
                    string day5 = "";
                    string day6 = "";
                    string day7 = "";
                    string day8 = "";
                    string day9 = "";
                    string day10 = "";
                    string day11 = "";
                    string day12 = "";
                    string day13 = "";
                    string day14 = "";
                    string day15 = "";
                    string day16 = "";
                    string day17 = "";
                    string day18 = "";
                    string day19 = "";
                    string day20 = "";
                    string day21 = "";
                    string day22 = "";
                    string day23 = "";
                    string day24 = "";
                    string day25 = "";
                    string day26 = "";
                    string day27 = "";
                    string day28 = "";
                    string day29 = "";
                    string day30 = "";
                    string day31 = "";

                    #endregion for individual attendance

                    #region variables for total

                    float totalIDCardDed = 0;
                    float totalExtra = 0;


                    float totalATMDed = 0;
                    float totalTDS = 0;
                    float totalowf = 0;
                    float Grandtotalowf = 0;
                    float totalSoceity = 0;
                    float totalLoss = 0;
                    float totalKLWF = 0;
                    float totalMobile = 0;
                    float totalDuties = 0;
                    float totalpayrate = 0;
                    float totalPayDays = 0;
                    float totalBasic = 0;
                    float totalDA = 0;
                    float totalHRA = 0;
                    float totalCCA = 0;
                    float totalConveyance = 0;
                    float totalWA = 0;
                    float totalOA = 0;
                    float totalLw = 0;
                    float totalGratuity = 0;
                    float totalbonus = 0;
                    float totalNfhs = 0;
                    float totalRc = 0;
                    float totalCs = 0;
                    float totalGross = 0;
                    float totalfoodallowance = 0;
                    float totalmedicalallowance = 0;
                    float totalSplAllowance = 0;

                    float totalTravelAllw = 0;
                    float totalPerformanceAllw = 0;
                    float totalMobileAllw = 0;

                    float totalIncentivs = 0;
                    float totalPF = 0;
                    float totalESI = 0;
                    float totalProfTax = 0;
                    float totalSalAdv = 0;
                    float totalUniforDed = 0;
                    float totalOtherdedn = 0;
                    float totalCanteenAdv = 0;
                    float totalPenalty = 0;
                    float totalDed = 0;
                    float totalNetpay = 0;

                    float totalLoanDed = 0;
                    float totalSecurityDepDed = 0;

                    float totalots = 0;
                    float totalotamt = 0;
                    float totalwos = 0;
                    float totalwosamt = 0;
                    float totalnhs = 0;
                    float totalnhsamt = 0;
                    float totaltotal = 0;
                    float totalnpots = 0;
                    float totalnpotsamt = 0;
                    float totaltotalearned = 0;
                    float totalarrears = 0;
                    float totalTelephoneBillDed = 0;
                    float totalServiceWeightage = 0;
                    float totalPVCDed = 0;
                    #endregion

                    #region variables for  Grand  total

                    float GrandtotalIDCardDed = 0;
                    float GrandtotalExtra = 0;

                    float GrandtotalATMDed = 0;
                    float GrandtotalLoanDed = 0;
                    float GrandtotalSecurityDepDed = 0;
                    float GrandtotalPayDays = 0;
                    float Grandtotalarrears = 0;
                    float GrandtotalTDS = 0;
                    float GrandtotalSoceity = 0;
                    float GrandtotalLoss = 0;
                    float GrandtotalKLWF = 0;
                    float GrandtotalMobile = 0;
                    float GrandtotalDuties = 0;
                    float GrandtotalBasic = 0;
                    float Grandtotalpayrate = 0;
                    float GrandtotalDA = 0;
                    float GrandtotalHRA = 0;
                    float GrandtotalCCA = 0;
                    float GrandtotalConveyance = 0;
                    float GrandtotalWA = 0;
                    float GrandtotalOA = 0;
                    float GrandtotalLw = 0;
                    float GrandtotalGratuity = 0;
                    float Grandtotalbonus = 0;
                    float GrandtotalNfhs = 0;
                    float GrandtotalRc = 0;
                    float GrandtotalCs = 0;
                    float GrandtotalGross = 0;
                    float GrandtotalIncentivs = 0;
                    float GrandtotalPF = 0;
                    float GrandtotalESI = 0;
                    float GrandtotalProfTax = 0;
                    float GrandtotalSalAdv = 0;
                    float GrandtotalUniforDed = 0;
                    float GrandtotalOtherdedn = 0;
                    float GrandtotalMBSdedn = 0;
                    float Grandtotaltotal = 0;
                    float GrandtotalCanteenAdv = 0;
                    float GrandtotalPenalty = 0;
                    float GrandtotalDed = 0;
                    float GrandtotalNetpay = 0;
                    float Grandtotalfoodallowance = 0;
                    float Grandtotalmedicalallowance = 0;
                    float GrandtotalSplAllowance = 0;

                    float GrandtotalTravelAllw = 0;
                    float GrandtotalPerformanceAllw = 0;
                    float GrandtotalMobileAllw = 0;

                    float Grandtotalots = 0;
                    float Grandtotalotamt = 0;
                    float Grandtotalwos = 0;
                    float Grandtotalwosamt = 0;
                    float Grandtotalnhs = 0;
                    float Grandtotalnhsamt = 0;

                    float Grandtotalnpots = 0;
                    float Grandtotalnpotsamt = 0;
                    float Grandtotaltotalearned = 0;
                    float GrandtotalTelephoneBillDed = 0;
                    float GrandtotalServiceWeightage = 0;
                    float GrandtotalPVCDed = 0;

                    #endregion

                    string selectclientaddress = "select * from clients where clientid= '" + ddlClients.SelectedValue + "'";
                    DataTable dtclientaddress = config.ExecuteAdaptorAsyncWithQueryParams(selectclientaddress).Result;

                    int nextpagerecordscount = 0;
                    int targetpagerecors = 4;
                    int secondpagerecords = targetpagerecors;
                    bool nextpagehasPages = false;
                    int j = 0;
                    PdfPTable SecondtablecheckbyFooter = null;
                    PdfPTable SecondtableFooter = null;
                    PdfPTable SecondtableGrandtotalFooter = null;
                    for (int nextpagei = 0; nextpagei < dt.Rows.Count; nextpagei++)
                    {
                        nextpagehasPages = true;

                        #region Titles of Document
                        PdfPTable Maintable = new PdfPTable(30);
                        if (tableCells > 20)
                        {
                            Maintable.TotalWidth = 980f;
                        }
                        else
                        {
                            Maintable.TotalWidth = 850f;
                        }
                        Maintable.LockedWidth = true;
                        float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };


                        Maintable.SetWidths(width);
                        uint FONT_SIZE = 8;
                        string FontStyle = "verdana";

                        //Company Name & wage act details

                        PdfPCell headingnew = new PdfPCell(new Phrase("Salary Sheet (Unit Wise)", FontFactory.GetFont(Fontstyle, 12, Font.BOLD, BaseColor.BLACK)));
                        headingnew.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        headingnew.Colspan = 30;
                        headingnew.Border = 0;
                        Maintable.AddCell(headingnew);


                        PdfPCell cellemp = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                        cellemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellemp.Colspan = 30;
                        cellemp.Border = 0;


                        PdfPCell Heading = new PdfPCell(new Phrase("FORM T \n [ See Rule 24(9-B) of the Karnataka Shops & Commercial Establishments Rules, 1963] in lieu of \n 1. Form I, II of Rule 22(4): Form IV of Rule 28(2); Form V & VII of Rule 29(1) & (5) of Karnataka Minimum wages Rules 1958; \n 2. Form I of Rules 3 (1) of Karnataka Payment of Wages Rules, 1963; \n 3. Form XIII of Rules 75; Form XV, XVII, XX, XXI, XXII, XXIII, of Rule 78 (1) a(i), (ii) &(iii) of the Karnataka Contract Labour (Regulation & Abolition) Rules, 1974; \n 4. Form XIII of Rule 43, Form XVII, XVIII, XIX, XX, XXI, XXII, of Rule 46(2) (a), (c) & (d) of Karnataka inter state Migrant Workmen Rules, 1981  ", FontFactory.GetFont(Fontstyle, 6, Font.BOLD, BaseColor.BLACK)));
                        Heading.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        Heading.Colspan = 10;
                        Heading.Border = 0;
                        Heading.SetLeading(0.0f, 1.5f);
                        // Maintable.AddCell(Heading);

                        PdfPCell cellemp1 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                        cellemp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellemp1.Colspan = 1;
                        cellemp1.Border = 0;
                        // Maintable.AddCell(cellemp1);

                        PdfPCell Heading1 = new PdfPCell(new Phrase("Name & Address of the Establishment : \n" + companyName1 + "\n" + companyAddress, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                        Heading1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        Heading1.Colspan = 10;
                        Heading1.Border = 0;
                        Heading1.SetLeading(0.0f, 1.5f);
                        Maintable.AddCell(Heading1);

                        Maintable.AddCell(cellemp1);


                        PdfPCell Heading2 = new PdfPCell(new Phrase("Name & Address of the Principle Employer : ", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                        Heading2.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        Heading2.Colspan = 10;
                        Heading2.Border = 0;
                        Maintable.AddCell(Heading2);

                        string addressData1 = "";
                        string addressData2 = "";
                        string addressData3 = "";
                        string addressData4 = "";
                        string addressData5 = "";
                        string addressData6 = "";
                        string addressData7 = "";


                        if (dtclientaddress.Rows.Count > 0)
                        {
                            addressData1 = dtclientaddress.Rows[0]["ClientAddrHno"].ToString();
                            addressData2 = dtclientaddress.Rows[0]["ClientAddrStreet"].ToString();
                            addressData3 = dtclientaddress.Rows[0]["ClientAddrArea"].ToString();
                            addressData4 = dtclientaddress.Rows[0]["ClientAddrColony"].ToString();
                            addressData5 = dtclientaddress.Rows[0]["ClientAddrcity"].ToString();
                            addressData6 = dtclientaddress.Rows[0]["ClientAddrstate"].ToString();
                            addressData7 = dtclientaddress.Rows[0]["ClientAddrpin"].ToString();


                        }



                        PdfPCell Heading3 = new PdfPCell(new Phrase(addressData1 + " " + addressData2 + " " + addressData3 + " " + addressData4 + " " + addressData5 + " " + addressData6 + " " + addressData7, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                        Heading3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        Heading3.Colspan = 10;
                        Heading3.Border = 0;
                        Maintable.AddCell(Heading3);





                        //PdfPTable tempTable1 = new PdfPTable(1);
                        //if (tableCells > 20)
                        //{
                        //    tempTable1.TotalWidth = 245f;
                        //}
                        //else
                        //{
                        //    tempTable1.TotalWidth = 180f;
                        //}
                        //tempTable1.LockedWidth = true;
                        //float[] tempWidth1 = new float[] { 1f };
                        //tempTable1.SetWidths(tempWidth1);

                        //string addressData = "";







                        //PdfPCell childTable1 = new PdfPCell(tempTable1);
                        //childTable1.Border = 0;
                        //childTable1.Colspan = 6;
                        //childTable1.HorizontalAlignment = 0;
                        //Maintable.AddCell(childTable1);

                        //Maintable.AddCell(cellemp1);

                        //addressData = dtclientaddress.Rows[0]["Location"].ToString();
                        //if (addressData.Trim().Length > 0)
                        //{

                        //    PdfPCell Heading3 = new PdfPCell(new Phrase("Location :\n " + addressData.ToString(), FontFactory.GetFont(Fontstyle, 6, Font.BOLD, BaseColor.BLACK)));
                        //    Heading3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        //    Heading3.Colspan = 6;
                        //    Heading3.Border = 0;
                        //    Heading3.SetLeading(0.0f, 1.5f);
                        //    Maintable.AddCell(Heading3);
                        //}

                        //PdfPCell Heading = new PdfPCell(new Phrase("Form - XVII REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, 20, Font.BOLD, BaseColor.BLACK)));
                        //Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //Heading.Colspan = 27;
                        //Heading.Border = 0;
                        //Maintable.AddCell(Heading);


                        //PdfPCell actDetails = new PdfPCell(new Phrase("(vide Rule 78(1) a(i) of Contract Labour (Reg. & abolition)", FontFactory.GetFont(Fontstyle, 15, Font.BOLD, BaseColor.BLACK)));
                        //actDetails.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //actDetails.Colspan = 27;
                        //actDetails.Border = 0;// 15;
                        //Maintable.AddCell(actDetails);

                        //PdfPCell Heading = new PdfPCell(new Phrase("Form XIII of Rule 43, Form XVII, XVIII, XIX, XX, XXI, XXII, of Rule 46(2) (a), (c) & (d) of Karnataka inter state Migrant Workmen Rules, 1981", FontFactory.GetFont(Fontstyle, 12, Font.BOLD, BaseColor.BLACK)));
                        //Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //Heading.Colspan = 30;
                        //Heading.Border = 0;
                        //Maintable.AddCell(Heading);

                        // Maintable.AddCell(cellemp);
                        #endregion

                        #region Sub Headings

                        PdfPCell companyName = new PdfPCell(new Phrase(companyName1, FontFactory.GetFont("Arial Black", 12, Font.BOLD, BaseColor.BLACK)));
                        companyName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        companyName.Colspan = 30;
                        companyName.Border = 0;// 15;
                        //Maintable.AddCell(companyName);



                        //PdfPCell paySheet = new PdfPCell(new Phrase("Pay Sheet", FontFactory.GetFont(Fontstyle, 10, Font.BOLD | Font.UNDERLINE, BaseColor.BLACK)));
                        //paySheet.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //paySheet.Colspan = 27;
                        //paySheet.Border = 0;// 15;
                        //Maintable.AddCell(paySheet);

                        //PdfPCell CClient = new PdfPCell(new Phrase("Client ID :   " + ddlClients.SelectedValue, FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        //CClient.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        //CClient.Colspan = 3;
                        //CClient.Border = 0;// 15;
                        //Maintable.AddCell(CClient);

                        //PdfPCell CClientName = new PdfPCell(new Phrase("Client Name :   " + ddlcname.SelectedItem, FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        //CClientName.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        //CClientName.Colspan = 10;
                        //CClientName.Border = 0;// 15;
                        //Maintable.AddCell(CClientName);

                        //PdfPCell CDates = new PdfPCell(new Phrase("Payment for the period of : " + GetPaymentPeriod(), FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        //CDates.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        //CDates.Colspan = 8;
                        //CDates.Border = 0;// 15;
                        //Maintable.AddCell(CDates);

                        //PdfPCell CPaySheetDate = new PdfPCell(new Phrase("Pay Sheet Date :  " + DateTime.Now.Date.ToString("dd/MM/yyyy"), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        //PdfPCell CPaySheetDate = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        //CPaySheetDate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        //CPaySheetDate.Colspan = 1;
                        //CPaySheetDate.Border = 0;// 15;
                        //Maintable.AddCell(CPaySheetDate);

                        //PdfPCell CPayMonth = new PdfPCell(new Phrase("For the month of :   " + GetMonthName() + " - " + GetMonthOfYear(), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        //CPayMonth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        //CPayMonth.Colspan = 7;
                        //CPayMonth.Border = 0;// 15;
                        //Maintable.AddCell(CPayMonth);

                        // Maintable.AddCell(cellemp);
                        //document.Add(Maintable);

                        //if (titleofdocumentindex == 0)
                        //{
                        //    document.Add(Maintable);
                        //    titleofdocumentindex = 1;
                        //}

                        #endregion

                        #region Table Headings

                        PdfPTable SecondtableHeadings = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableHeadings.TotalWidth = 1000f;
                        }
                        else
                        {
                            SecondtableHeadings.TotalWidth = 850f;
                        }
                        SecondtableHeadings.LockedWidth = true;
                        float[] SecondHeadingsWidth = new float[] { };

                        #region Table Cells

                        if (tableCells == 43)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 2f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 5f };
                        }
                        #endregion

                        SecondtableHeadings.SetWidths(SecondHeadingsWidth);

                        //Cell Headings

                        PdfPCell CClientName = new PdfPCell(new Phrase("For the Month of " + GetMonthName().Substring(0, 3) + "/" + GetMonthOfYear() + "                                                         Client ID : " + ddlClients.SelectedValue, FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CClientName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CClientName.Colspan = tableCells;
                        CClientName.Border = 0;
                        CClientName.PaddingBottom = 4;
                        CClientName.PaddingTop = 4;
                        SecondtableHeadings.AddCell(CClientName);

                        //1
                        PdfPCell sNo = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        sNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //sNo.Colspan = 1;
                        sNo.Border = 15;// 15;
                        SecondtableHeadings.AddCell(sNo);

                        //2
                        PdfPCell CEmpId = new PdfPCell(new Phrase("Emp Id", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CEmpId.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CEmpId.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CEmpId);

                        //3
                        PdfPCell CEmpName = new PdfPCell(new Phrase("Emp Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CEmpName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CEmpName.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CEmpName);

                        PdfPCell CBasicDetails = new PdfPCell(new Phrase("Basic Details", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CBasicDetails.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CBasicDetails.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CBasicDetails);

                        //4
                        PdfPCell CDesgn = new PdfPCell(new Phrase("Design", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CDesgn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CDesgn.Border = 15;
                        SecondtableHeadings.AddCell(CDesgn);

                        //4 A
                        if (payrate != 0)
                        {
                            PdfPCell Cpayrate = new PdfPCell(new Phrase("Pay Rate", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cpayrate.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cpayrate.Border = 15;
                            SecondtableHeadings.AddCell(Cpayrate);
                        }

                        if (paydays != 0)
                        {

                            PdfPCell CDateofleaving = new PdfPCell(new Phrase("Pay Days", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDateofleaving.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDateofleaving.Border = 15;
                            SecondtableHeadings.AddCell(CDateofleaving);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell CDuties = new PdfPCell(new Phrase("Pr Days", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDuties.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDuties.Border = 15;
                            SecondtableHeadings.AddCell(CDuties);
                        }
                        if (wos != 0)
                        {
                            PdfPCell CWos = new PdfPCell(new Phrase("W/O", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CWos.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CWos.Border = 15;
                            SecondtableHeadings.AddCell(CWos);
                        }

                        if (nhs != 0)
                        {
                            PdfPCell CNHs = new PdfPCell(new Phrase("G/H", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNHs.Border = 15;
                            SecondtableHeadings.AddCell(CNHs);
                        }
                        //6
                        if (ots != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("O.T.", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }

                        //7
                        if (total != 0)
                        {
                            PdfPCell CNpots = new PdfPCell(new Phrase("Total", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNpots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNpots.Border = 15;
                            SecondtableHeadings.AddCell(CNpots);
                        }



                        //10
                        if (basic != 0)
                        {
                            PdfPCell CBasic = new PdfPCell(new Phrase("Basic+DA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CBasic.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CBasic.Border = 15;
                            SecondtableHeadings.AddCell(CBasic);
                        }

                        //11
                        if (da != 0)
                        {
                            PdfPCell CDa = new PdfPCell(new Phrase("DA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDa.Border = 15;
                            SecondtableHeadings.AddCell(CDa);
                        }

                        //12
                        if (hra != 0)
                        {
                            PdfPCell CHRa = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CHRa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CHRa.Border = 15;
                            SecondtableHeadings.AddCell(CHRa);
                        }

                        //13
                        if (cca != 0)
                        {
                            PdfPCell CCca = new PdfPCell(new Phrase("CCA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CCca.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CCca.Border = 15;
                            SecondtableHeadings.AddCell(CCca);
                        }

                        //14
                        if (conveyance != 0)
                        {
                            PdfPCell Cconveyance = new PdfPCell(new Phrase("Conv", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cconveyance.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cconveyance.Border = 15;
                            SecondtableHeadings.AddCell(Cconveyance);
                        }

                        //15
                        if (washallowance != 0)
                        {
                            PdfPCell Cwa = new PdfPCell(new Phrase("WA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwa.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            Cwa.Border = 15;
                            SecondtableHeadings.AddCell(Cwa);
                        }

                        //16
                        if (otherallowance != 0)
                        {
                            PdfPCell COa = new PdfPCell(new Phrase("OA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COa.Border = 15;
                            SecondtableHeadings.AddCell(COa);
                        }

                        //17
                        if (leavewages != 0)
                        {
                            PdfPCell CLa = new PdfPCell(new Phrase("LA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLa.Border = 15;
                            SecondtableHeadings.AddCell(CLa);
                        }

                        //18
                        if (gratuity != 0)
                        {
                            PdfPCell CGratuity = new PdfPCell(new Phrase("Gratuity", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGratuity.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGratuity.Border = 15;
                            SecondtableHeadings.AddCell(CGratuity);
                        }

                        //19
                        if (bonus != 0)
                        {
                            PdfPCell CBonus = new PdfPCell(new Phrase("Bonus", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CBonus.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CBonus.Border = 15;
                            SecondtableHeadings.AddCell(CBonus);
                        }




                        //20
                        if (nfhs != 0)
                        {
                            PdfPCell CNfhs = new PdfPCell(new Phrase("NFHs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNfhs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNfhs.Border = 15;
                            SecondtableHeadings.AddCell(CNfhs);
                        }

                        //21
                        if (rc != 0)
                        {
                            PdfPCell CRc = new PdfPCell(new Phrase("R.C", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CRc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CRc.Border = 15;
                            SecondtableHeadings.AddCell(CRc);
                        }

                        //22
                        if (cs != 0)
                        {
                            PdfPCell CCs = new PdfPCell(new Phrase("C.S", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CCs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CCs.Border = 15;
                            SecondtableHeadings.AddCell(CCs);
                        }

                        if (Arrears != 0)
                        {
                            PdfPCell Carrears = new PdfPCell(new Phrase("Arrears", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            Carrears.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Carrears.Border = 15;
                            SecondtableHeadings.AddCell(Carrears);
                        }

                        //24
                        if (cfoodallowance != 0)
                        {
                            PdfPCell CFoodAllw = new PdfPCell(new Phrase("Food Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CFoodAllw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CFoodAllw.Border = 15;
                            SecondtableHeadings.AddCell(CFoodAllw);
                        }

                        if (cmedicalallowance != 0)
                        {
                            PdfPCell CMedicalAllw = new PdfPCell(new Phrase("Medical Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CMedicalAllw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CMedicalAllw.Border = 15;
                            SecondtableHeadings.AddCell(CMedicalAllw);
                        }
                        if (splallw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Spl. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }
                        //

                        if (TravelAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Travel. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Performance. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Mobile. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }




                        //



                        if (wosamt != 0)
                        {
                            PdfPCell CWoamt = new PdfPCell(new Phrase("WO Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CWoamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CWoamt.Border = 15;
                            SecondtableHeadings.AddCell(CWoamt);
                        }

                        //26
                        if (nhsamt != 0)
                        {
                            PdfPCell CNHsamt = new PdfPCell(new Phrase("NHs Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNHsamt.Border = 15;
                            SecondtableHeadings.AddCell(CNHsamt);
                        }

                        if (Serviceweightage != 0)
                        {
                            PdfPCell CNHsamt = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNHsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNHsamt.Border = 15;
                            SecondtableHeadings.AddCell(CNHsamt);
                        }

                        //23
                        if (gross != 0)
                        {
                            PdfPCell CGross = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGross.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGross.Border = 15;
                            SecondtableHeadings.AddCell(CGross);
                        }
                        if (otamt != 0)
                        {
                            PdfPCell COtamt = new PdfPCell(new Phrase("OT Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COtamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COtamt.Border = 15;
                            SecondtableHeadings.AddCell(COtamt);
                        }


                        //25

                        //27
                        if (npotsamt != 0)
                        {
                            PdfPCell CNpotsamt = new PdfPCell(new Phrase("NPOTs Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNpotsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNpotsamt.Border = 15;
                            SecondtableHeadings.AddCell(CNpotsamt);
                        }

                        //28
                        if (incentivs != 0)
                        {
                            PdfPCell CIncentivs = new PdfPCell(new Phrase("Reimbursement", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CIncentivs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CIncentivs.Border = 15;
                            SecondtableHeadings.AddCell(CIncentivs);
                        }

                        //28A
                        if (totalearned != 0)
                        {
                            PdfPCell Ctotalearned = new PdfPCell(new Phrase("Total Earnd", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Ctotalearned.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Ctotalearned.Border = 15;
                            // SecondtableHeadings.AddCell(Ctotalearned);
                        }


                        //29
                        if (pf != 0)
                        {
                            PdfPCell CPFondts = new PdfPCell(new Phrase("PF", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPFondts.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPFondts.Border = 15;
                            SecondtableHeadings.AddCell(CPFondts);
                        }

                        //30
                        if (esi != 0)
                        {
                            PdfPCell CESIondts = new PdfPCell(new Phrase("ESI", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CESIondts.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CESIondts.Border = 15;
                            SecondtableHeadings.AddCell(CESIondts);
                        }


                        //31
                        if (proftax != 0)
                        {
                            PdfPCell CPT = new PdfPCell(new Phrase("PT", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPT.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPT.Border = 15;
                            SecondtableHeadings.AddCell(CPT);
                        }

                        if (owf != 0)
                        {
                            PdfPCell Cowf = new PdfPCell(new Phrase("LWF", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cowf.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cowf.Border = 15;
                            SecondtableHeadings.AddCell(Cowf);
                        }

                        if (TDS != 0)
                        {
                            PdfPCell CTDS = new PdfPCell(new Phrase("TDS", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTDS.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTDS.Border = 15;
                            SecondtableHeadings.AddCell(CTDS);
                        }

                        if (Soceity != 0)
                        {
                            PdfPCell CSoceity = new PdfPCell(new Phrase("Soceity", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSoceity.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSoceity.Border = 15;
                            SecondtableHeadings.AddCell(CSoceity);
                        }

                        if (Mobile != 0)
                        {
                            PdfPCell Cmobexp = new PdfPCell(new Phrase("Mobile exp", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cmobexp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cmobexp.Border = 15;
                            SecondtableHeadings.AddCell(Cmobexp);
                        }

                        if (KLWF != 0)
                        {
                            PdfPCell CKLWF = new PdfPCell(new Phrase("KLWF", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CKLWF.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CKLWF.Border = 15;
                            SecondtableHeadings.AddCell(CKLWF);
                        }

                        if (Loss != 0)
                        {
                            PdfPCell CLoss = new PdfPCell(new Phrase("Loss", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLoss.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLoss.Border = 15;
                            SecondtableHeadings.AddCell(CLoss);
                        }

                        if (Loan != 0)
                        {
                            PdfPCell CLoanDed = new PdfPCell(new Phrase("Loan", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLoanDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLoanDed.Border = 15;
                            SecondtableHeadings.AddCell(CLoanDed);
                        }
                        //32
                        if (salAdvDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("Adv 1", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("ATM Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        //

                        if (IDCardDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("IDCard Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (Extra != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("Extra", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }

                        //33
                        if (uniformDed != 0)
                        {
                            PdfPCell CUnifDed = new PdfPCell(new Phrase("Adv 2", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CUnifDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CUnifDed.Border = 15;
                            SecondtableHeadings.AddCell(CUnifDed);
                        }


                        if (SecurityDepDed != 0)
                        {
                            PdfPCell CSecurityDepDed = new PdfPCell(new Phrase("Adv 3", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSecurityDepDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSecurityDepDed.Border = 15;
                            SecondtableHeadings.AddCell(CSecurityDepDed);
                        }


                        //34
                        if (otherDed != 0)
                        {
                            PdfPCell COtherDed = new PdfPCell(new Phrase("Adv 4", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COtherDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COtherDed.Border = 15;
                            SecondtableHeadings.AddCell(COtherDed);
                        }


                        if (MBSDed != 0)
                        {
                            PdfPCell CMBSDed = new PdfPCell(new Phrase("MBS", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CMBSDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CMBSDed.Border = 15;
                            SecondtableHeadings.AddCell(CMBSDed);
                        }

                        //35
                        if (canteenAdv != 0)
                        {
                            PdfPCell Ccanteended = new PdfPCell(new Phrase("Mess. Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Ccanteended.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Ccanteended.Border = 15;
                            SecondtableHeadings.AddCell(Ccanteended);
                        }



                        //36
                        if (penalty != 0)
                        {
                            PdfPCell CPenalty = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPenalty.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPenalty.Border = 15;
                            SecondtableHeadings.AddCell(CPenalty);
                        }

                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase("Telephone Bill Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTelephoneBillDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTelephoneBillDed.Border = 15;
                            SecondtableHeadings.AddCell(CTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase("PVC Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTelephoneBillDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTelephoneBillDed.Border = 15;
                            SecondtableHeadings.AddCell(CTelephoneBillDed);
                        }


                        //37
                        if (totalDeductions != 0)
                        {
                            PdfPCell CTotDed = new PdfPCell(new Phrase("Tot Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTotDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTotDed.Border = 15;
                            SecondtableHeadings.AddCell(CTotDed);
                        }

                        //if (Advance != 0)
                        //{
                        //    PdfPCell CAdvance = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        //    CAdvance.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //    CAdvance.Border = 15;
                        //    SecondtableHeadings.AddCell(CAdvance);
                        //}

                        //if (RoomUniform != 0)
                        //{
                        //    PdfPCell CRoomUniform = new PdfPCell(new Phrase("Room Unif", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        //    CRoomUniform.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //    CRoomUniform.Border = 15;
                        //    SecondtableHeadings.AddCell(CRoomUniform);
                        //}

                        //38
                        //if (netpay != 0)
                        {
                            PdfPCell CNetPay = new PdfPCell(new Phrase("Net Pay", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNetPay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNetPay.Border = 15;
                            SecondtableHeadings.AddCell(CNetPay);
                        }

                        if (modeofpayment != 0)
                        {
                            PdfPCell Cmodepay = new PdfPCell(new Phrase("Mode of Pay", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cmodepay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cmodepay.Border = 15;
                            //SecondtableHeadings.AddCell(Cmodepay);
                        }

                        //39
                        PdfPCell CSignature = new PdfPCell(new Phrase("Bank A/c No./ Signature & Bank Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CSignature.Border = 15;
                        SecondtableHeadings.AddCell(CSignature);


                        #endregion

                        #region Table Data

                        PdfPTable Secondtable = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            Secondtable.TotalWidth = 1000f;
                        }
                        else
                        {
                            Secondtable.TotalWidth = 850f;
                        }
                        Secondtable.LockedWidth = true;
                        float[] SecondWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 43)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 40)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }



                        if (tableCells == 39)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 2f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 5f };
                        }
                        #endregion


                        Secondtable.SetWidths(SecondWidth);

                        int rowCount = 0;
                        int pageCount = 0;
                        int i = nextpagei;

                        //for (int i = 0; i < dt.Rows.Count; i++)
                        {
                            float ForconvertOt = 0;
                            forConvert = 0;
                            if (dt.Rows[i]["NoOfDuties"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());

                            //if (forConvert > 0)
                            {

                                if (nextpagerecordscount == 0)
                                {
                                    document.NewPage();
                                    document.Add(Maintable);
                                    document.Add(SecondtableHeadings);
                                }

                                nextpagerecordscount++;

                                //1
                                PdfPCell CSNo = new PdfPCell(new Phrase((++j).ToString() + "\n \n", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CSNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                CSNo.Border = 15;
                                Secondtable.AddCell(CSNo);

                                //2
                                PdfPCell CEmpId1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpId"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpId1.Border = 15;
                                Secondtable.AddCell(CEmpId1);

                                //3
                                PdfPCell CEmpName1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpName"].ToString() + "\n" + "\n" + "EPF No:" +
                                dt.Rows[i]["EmpEpfNo"].ToString() + "\n" + "\n" + "ESI No:" + dt.Rows[i]["EmpEsiNo"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpName1.Border = 15;
                                Secondtable.AddCell(CEmpName1);

                                string DOJ = dt.Rows[i]["EmpDtofJoining"].ToString();
                                if (DOJ == "01/01/1900")
                                {
                                    DOJ = "";
                                }

                                string DOB = dt.Rows[i]["EmpDtofBirth"].ToString();
                                if (DOB == "01/01/1900")
                                {
                                    DOB = "";
                                }
                                PdfPCell CBasicDetails1 = new PdfPCell(new Phrase("Father Name:" + dt.Rows[i]["EmpFathername"].ToString() + "\n" + "\n" + "DOB:" + DOB.ToString() +
                                    "\n" + "\n" + "DOJ:" + DOJ.ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CBasicDetails1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CBasicDetails1.Border = 15;// 15;
                                Secondtable.AddCell(CBasicDetails1);

                                //4
                                PdfPCell CEmpDesgn = new PdfPCell(new Phrase(dt.Rows[i]["Design"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpDesgn.Border = 15;
                                Secondtable.AddCell(CEmpDesgn);

                                //9 A
                                if (payrate != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TempGross"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TempGross"].ToString()));
                                    totalpayrate += forConvert;
                                    Grandtotalpayrate += forConvert;
                                    PdfPCell Cpayrate1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cpayrate1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cpayrate1.Border = 15;
                                    Secondtable.AddCell(Cpayrate1);
                                }


                                if (paydays != 0)
                                {

                                    forConvert = 0;
                                    if (dt.Rows[i]["NoOfWorkingDays"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["NoOfWorkingDays"].ToString()));
                                    totalPayDays += forConvert;
                                    GrandtotalPayDays += forConvert;
                                    PdfPCell Cpayrate1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cpayrate1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cpayrate1.Border = 15;
                                    Secondtable.AddCell(Cpayrate1);
                                }

                                //5
                                if (dts != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["NoOfDuties"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                                    totalDuties += forConvert;
                                    GrandtotalDuties += forConvert;

                                    PdfPCell CNoOfDuties = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNoOfDuties.Border = 15;
                                    Secondtable.AddCell(CNoOfDuties);
                                }

                                if (wos != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["wo"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["wo"].ToString());
                                    totalwos += forConvert;
                                    Grandtotalwos += forConvert;

                                    PdfPCell Cwos = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cwos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cwos.Border = 15;
                                    Secondtable.AddCell(Cwos);
                                }
                                if (nhs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["nhs"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["nhs"].ToString());
                                    totalnhs += forConvert;
                                    Grandtotalnhs += forConvert;

                                    PdfPCell CNhs = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhs.Border = 15;
                                    Secondtable.AddCell(CNhs);
                                }

                                //6
                                if (ots != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Duties"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["Duties"].ToString());
                                    totalots += forConvert;
                                    Grandtotalots += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }
                                if (total != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["total"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["total"].ToString());
                                    totaltotal += forConvert;
                                    Grandtotaltotal += forConvert;

                                    PdfPCell Cnpots = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cnpots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cnpots.Border = 15;
                                    Secondtable.AddCell(Cnpots);
                                }



                                //10
                                if (basic != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Basic"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Basic"].ToString()));
                                    totalBasic += forConvert;
                                    GrandtotalBasic += forConvert;
                                    PdfPCell CBasic1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CBasic1.Border = 15;
                                    Secondtable.AddCell(CBasic1);
                                }

                                //11
                                if (da != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["DA"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["DA"].ToString()));
                                    totalDA += forConvert;
                                    GrandtotalDA += forConvert;

                                    PdfPCell CDa1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CDa1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CDa1.Border = 15;
                                    Secondtable.AddCell(CDa1);
                                }

                                //12
                                if (hra != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["HRA"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["HRA"].ToString()));
                                    totalHRA += forConvert;
                                    GrandtotalHRA += forConvert;

                                    PdfPCell CHRA1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CHRA1.Border = 15;
                                    Secondtable.AddCell(CHRA1);
                                }

                                //13
                                if (cca != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["cca"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["cca"].ToString()));
                                    totalCCA += forConvert;

                                    GrandtotalCCA += forConvert;

                                    PdfPCell Ccca = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Ccca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Ccca.Border = 15;
                                    Secondtable.AddCell(Ccca);
                                }

                                //14
                                if (conveyance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Conveyance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString()));
                                    totalConveyance += forConvert;
                                    GrandtotalConveyance += forConvert;

                                    PdfPCell CConveyance = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CConveyance.Border = 15;
                                    Secondtable.AddCell(CConveyance);
                                }


                                //15
                                if (washallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["washallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["washallowance"].ToString()));
                                    totalWA += forConvert;
                                    GrandtotalWA += forConvert;

                                    PdfPCell CWa = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWa.Border = 15;
                                    Secondtable.AddCell(CWa);
                                }

                                //16
                                if (otherallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OtherAllowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString()));
                                    totalOA += forConvert;
                                    GrandtotalOA += forConvert;
                                    PdfPCell COA = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COA.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COA.Border = 15;
                                    Secondtable.AddCell(COA);
                                }

                                //17
                                if (leavewages != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Leavewages"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Leavewages"].ToString()));
                                    totalLw += forConvert;
                                    GrandtotalLw += forConvert;
                                    PdfPCell CLa1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLa1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CLa1.Border = 15;
                                    Secondtable.AddCell(CLa1);
                                }

                                //18
                                if (gratuity != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Gratuity"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString()));
                                    totalGratuity += forConvert;
                                    GrandtotalGratuity += forConvert;
                                    PdfPCell CGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGratuity1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGratuity1.Border = 15;
                                    Secondtable.AddCell(CGratuity1);
                                }

                                //19
                                if (bonus != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["bonus"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["bonus"].ToString()));
                                    totalbonus += forConvert;

                                    Grandtotalbonus += forConvert;
                                    PdfPCell Cbonus = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cbonus.Border = 15;
                                    Secondtable.AddCell(Cbonus);
                                }



                                //20
                                if (nfhs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Nfhs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString()));
                                    totalNfhs += forConvert;
                                    GrandtotalNfhs += forConvert;
                                    PdfPCell CNfhs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNfhs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNfhs1.Border = 15;
                                    Secondtable.AddCell(CNfhs1);
                                }

                                //21
                                if (rc != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["RC"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["RC"].ToString()));
                                    totalRc += forConvert;
                                    GrandtotalRc += forConvert;
                                    PdfPCell CRc1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CRc1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CRc1.Border = 15;
                                    Secondtable.AddCell(CRc1);
                                }

                                //22
                                if (cs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["cs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["cs"].ToString()));
                                    totalCs += forConvert;
                                    GrandtotalCs += forConvert;
                                    PdfPCell CCs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CCs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CCs1.Border = 15;
                                    Secondtable.AddCell(CCs1);
                                }

                                if (Arrears != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["arrears"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["arrears"].ToString()));
                                    totalarrears += forConvert;
                                    Grandtotalarrears += forConvert;
                                    PdfPCell Carrears1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Carrears1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Carrears1.Border = 15;
                                    Secondtable.AddCell(Carrears1);
                                }


                                if (cfoodallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["foodallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["foodallowance"].ToString()));
                                    totalfoodallowance += forConvert;
                                    Grandtotalfoodallowance += forConvert;
                                    PdfPCell CFoodAllw1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CFoodAllw1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CFoodAllw1.Border = 15;
                                    Secondtable.AddCell(CFoodAllw1);
                                }


                                if (cmedicalallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["medicalallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["medicalallowance"].ToString()));
                                    totalmedicalallowance += forConvert;
                                    Grandtotalmedicalallowance += forConvert;
                                    PdfPCell CMedicalAllw1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CMedicalAllw1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CMedicalAllw1.Border = 15;
                                    Secondtable.AddCell(CMedicalAllw1);
                                }
                                if (splallw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SplAllowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString()));
                                    totalSplAllowance += forConvert;
                                    GrandtotalSplAllowance += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }
                                //
                                if (TravelAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TravelAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString()));
                                    totalTravelAllw += forConvert;
                                    GrandtotalTravelAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }

                                if (PerformanceAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PerformanceAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString()));
                                    totalPerformanceAllw += forConvert;
                                    GrandtotalPerformanceAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }

                                if (MobileAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["MobileAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString()));
                                    totalMobileAllw += forConvert;
                                    GrandtotalMobileAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }
                                //
                                if (wosamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["woamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["woamt"].ToString()));
                                    totalwosamt += forConvert;

                                    Grandtotalwosamt += forConvert;

                                    PdfPCell Cwosamt = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cwosamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cwosamt.Border = 15;
                                    Secondtable.AddCell(Cwosamt);
                                }



                                //26
                                if (nhsamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["nhsamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["nhsamt"].ToString()));
                                    totalnhsamt += forConvert;

                                    Grandtotalnhsamt += forConvert;

                                    PdfPCell Cnhsamt = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cnhsamt.Border = 15;
                                    Secondtable.AddCell(Cnhsamt);
                                }

                                if (Serviceweightage != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Serviceweightage"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Serviceweightage"].ToString()));
                                    totalServiceWeightage += forConvert;
                                    GrandtotalServiceWeightage += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }
                                //23
                                if (gross != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Gross"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Gross"].ToString()));
                                    totalGross += forConvert;
                                    GrandtotalGross += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }
                                //24
                                if (otamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Amount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Amount"].ToString()));
                                    totalotamt += forConvert;
                                    Grandtotalotamt += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }


                                //25


                                //27
                                if (npotsamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["npotsamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString()));
                                    totalnpotsamt += forConvert;

                                    Grandtotalnpotsamt += forConvert;

                                    PdfPCell Cnpotsamt = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cnpotsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cnpotsamt.Border = 15;
                                    Secondtable.AddCell(Cnpotsamt);
                                }

                                //28
                                if (incentivs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Incentivs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Incentivs"].ToString()));
                                    totalIncentivs += forConvert;
                                    GrandtotalIncentivs += forConvert;
                                    PdfPCell CIncentivs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CIncentivs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CIncentivs1.Border = 15;
                                    Secondtable.AddCell(CIncentivs1);
                                }

                                //28A

                                if (totalearned != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["gross"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["gross"].ToString()));
                                    totaltotalearned += forConvert;

                                    Grandtotaltotalearned += forConvert;

                                    PdfPCell Ctotalearned = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Ctotalearned.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Ctotalearned.Border = 15;
                                    // Secondtable.AddCell(Ctotalearned);
                                }


                                //29
                                if (pf != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Pf"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Pf"].ToString()));
                                    totalPF += forConvert;
                                    GrandtotalPF += forConvert;

                                    PdfPCell CPF1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPF1.Border = 15;
                                    Secondtable.AddCell(CPF1);
                                }

                                //30
                                if (esi != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Esi"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Esi"].ToString()));
                                    totalESI += forConvert;

                                    GrandtotalESI += forConvert;

                                    PdfPCell CESI1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CESI1.Border = 15;
                                    Secondtable.AddCell(CESI1);
                                }




                                //31
                                if (proftax != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ProfTax"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString()));
                                    totalProfTax += forConvert;
                                    GrandtotalProfTax += forConvert;

                                    PdfPCell CProTax1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CProTax1.Border = 15;
                                    Secondtable.AddCell(CProTax1);
                                }

                                if (owf != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["owf"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["owf"].ToString()));
                                    totalowf += forConvert;
                                    Grandtotalowf += forConvert;

                                    PdfPCell Cowf1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cowf1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cowf1.Border = 15;
                                    Secondtable.AddCell(Cowf1);
                                }

                                if (TDS != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TDS"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TDS"].ToString()));
                                    totalTDS += forConvert;
                                    GrandtotalTDS += forConvert;

                                    PdfPCell CTDS1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTDS1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                    CTDS1.Border = 15;
                                    Secondtable.AddCell(CTDS1);
                                }

                                if (Soceity != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Soceity"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Soceity"].ToString()));
                                    totalSoceity += forConvert;
                                    GrandtotalSoceity += forConvert;

                                    PdfPCell CSoceity1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSoceity1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                    CSoceity1.Border = 15;
                                    Secondtable.AddCell(CSoceity1);
                                }

                                if (Mobile != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Mobile"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Mobile"].ToString()));
                                    totalMobile += forConvert;
                                    GrandtotalMobile += forConvert;

                                    PdfPCell Cmobexp1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cmobexp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                    Cmobexp1.Border = 15;
                                    Secondtable.AddCell(Cmobexp1);
                                }

                                if (KLWF != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["KLWF"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["KLWF"].ToString()));
                                    totalKLWF += forConvert;
                                    GrandtotalKLWF += forConvert;

                                    PdfPCell CKLWF1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CKLWF1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                    CKLWF1.Border = 15;
                                    Secondtable.AddCell(CKLWF1);
                                }

                                if (Loss != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Loss"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Loss"].ToString()));
                                    totalLoss += forConvert;
                                    GrandtotalLoss += forConvert;

                                    PdfPCell CLoss1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLoss1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                    CLoss1.Border = 15;
                                    Secondtable.AddCell(CLoss1);
                                }


                                if (Loan != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["loanded"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["loanded"].ToString()));
                                    totalLoanDed += forConvert;
                                    GrandtotalLoanDed += forConvert;

                                    PdfPCell CLoanDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CLoanDed1.Border = 15;
                                    Secondtable.AddCell(CLoanDed1);
                                }


                                //32
                                if (salAdvDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SalAdvDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SalAdvDed"].ToString()));
                                    totalSalAdv += forConvert;
                                    GrandtotalSalAdv += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }
                                if (ATMDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ATMDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ATMDed"].ToString()));
                                    totalATMDed += forConvert;
                                    GrandtotalATMDed += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }
                                //
                                if (IDCardDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["IDCardDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["IDCardDed"].ToString()));
                                    totalIDCardDed += forConvert;
                                    GrandtotalIDCardDed += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                if (Extra != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Extra"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Extra"].ToString()));
                                    totalExtra += forConvert;
                                    GrandtotalExtra += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }


                                //33
                                if (uniformDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["UniformDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString()));
                                    totalUniforDed += forConvert;
                                    GrandtotalUniforDed += forConvert;

                                    PdfPCell CUnifDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CUnifDed1.Border = 15;
                                    Secondtable.AddCell(CUnifDed1);
                                }

                                if (SecurityDepDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SecurityDepDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SecurityDepDed"].ToString()));
                                    totalSecurityDepDed += forConvert;
                                    GrandtotalSecurityDepDed += forConvert;

                                    PdfPCell CSecurityDepDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSecurityDepDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSecurityDepDed1.Border = 15;
                                    Secondtable.AddCell(CSecurityDepDed1);
                                }


                                //34
                                if (otherDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OtherDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OtherDed"].ToString()));
                                    totalOtherdedn += forConvert;
                                    GrandtotalOtherdedn += forConvert;

                                    PdfPCell COtherDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COtherDed1.Border = 15;
                                    Secondtable.AddCell(COtherDed1);
                                }

                                if (MBSDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["MBSDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["MBSDed"].ToString()));

                                    GrandtotalMBSdedn += forConvert;

                                    PdfPCell CMBSded1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CMBSded1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CMBSded1.Border = 15;
                                    Secondtable.AddCell(CMBSded1);
                                }

                                //35
                                if (canteenAdv != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["CanteenAdv"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString()));
                                    totalCanteenAdv += forConvert;
                                    GrandtotalCanteenAdv += forConvert;

                                    PdfPCell CCanteended = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CCanteended.Border = 15;
                                    Secondtable.AddCell(CCanteended);
                                }



                                //36
                                if (penalty != 0)
                                {
                                    if (dt.Rows[i]["Penalty"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Penalty"].ToString()));
                                    totalPenalty += forConvert;
                                    GrandtotalPenalty += forConvert;

                                    PdfPCell CPenalty1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPenalty1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPenalty1.Border = 15;
                                    Secondtable.AddCell(CPenalty1);
                                }

                                //36
                                if (TelephoneBillDed != 0)
                                {
                                    if (dt.Rows[i]["TelephoneBillDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TelephoneBillDed"].ToString()));
                                    totalTelephoneBillDed += forConvert;
                                    GrandtotalTelephoneBillDed += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }

                                if (PVCAmount != 0)
                                {
                                    if (dt.Rows[i]["PVCAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PVCAmount"].ToString()));
                                    totalPVCDed += forConvert;
                                    GrandtotalPVCDed += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }


                                //37
                                if (totalDeductions != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Totaldeduct"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Totaldeduct"].ToString()));
                                    totalDed += forConvert;
                                    GrandtotalDed += forConvert;

                                    PdfPCell CTotDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTotDed1.Border = 15;
                                    Secondtable.AddCell(CTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                                }

                                //38
                                //if (netpay != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["NetAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["NetAmount"].ToString()));
                                    if (forConvert <= 0)
                                    {
                                        forConvert = 0;
                                    }
                                    totalNetpay += forConvert;
                                    GrandtotalNetpay += forConvert;
                                    PdfPCell CNetPay1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNetPay1.Border = 15;
                                    Secondtable.AddCell(CNetPay1);
                                }

                                if (modeofpayment != 0)
                                {
                                    PdfPCell Cmodepay1 = new PdfPCell(new Phrase("Bank", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cmodepay1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                    Cmodepay1.Border = 15;
                                    //Secondtable.AddCell(Cmodepay1);
                                }

                                //39
                                string EmpBankAcNo1 = dt.Rows[i]["EmpBankAcNo"].ToString();
                                string empbankname = dt.Rows[i]["empbankname"].ToString();

                                PdfPCell CSignature1 = new PdfPCell(new Phrase(EmpBankAcNo1 + "\n" + "Bank :" + empbankname, FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CSignature1.Border = 15;
                                Secondtable.AddCell(CSignature1);

                                day1 = dt.Rows[i]["day1"].ToString();
                                if (day1 == "0")
                                {
                                    day1 = "A";
                                }
                                day2 = dt.Rows[i]["day2"].ToString();
                                if (day2 == "0")
                                {
                                    day2 = "A";
                                }
                                day3 = dt.Rows[i]["day3"].ToString();
                                if (day3 == "0")
                                {
                                    day3 = "A";
                                }
                                day4 = dt.Rows[i]["day4"].ToString();
                                if (day4 == "0")
                                {
                                    day4 = "A";
                                }
                                day5 = dt.Rows[i]["day5"].ToString();
                                if (day5 == "0")
                                {
                                    day5 = "A";
                                }
                                day6 = dt.Rows[i]["day6"].ToString();
                                if (day6 == "0")
                                {
                                    day6 = "A";
                                }
                                day7 = dt.Rows[i]["day7"].ToString();
                                if (day7 == "0")
                                {
                                    day7 = "A";
                                }
                                day8 = dt.Rows[i]["day8"].ToString();
                                if (day8 == "0")
                                {
                                    day8 = "A";
                                }
                                day9 = dt.Rows[i]["day9"].ToString();
                                if (day9 == "0")
                                {
                                    day9 = "A";
                                }
                                day10 = dt.Rows[i]["day10"].ToString();
                                if (day10 == "0")
                                {
                                    day10 = "A";
                                }
                                day11 = dt.Rows[i]["day11"].ToString();
                                if (day11 == "0")
                                {
                                    day11 = "A";
                                }
                                day12 = dt.Rows[i]["day12"].ToString();
                                if (day12 == "0")
                                {
                                    day12 = "A";
                                }
                                day13 = dt.Rows[i]["day13"].ToString();
                                if (day13 == "0")
                                {
                                    day13 = "A";
                                }
                                day14 = dt.Rows[i]["day14"].ToString();
                                if (day14 == "0")
                                {
                                    day14 = "A";
                                }
                                day15 = dt.Rows[i]["day15"].ToString();
                                if (day15 == "0")
                                {
                                    day15 = "A";
                                }
                                day16 = dt.Rows[i]["day16"].ToString();
                                if (day16 == "0")
                                {
                                    day16 = "A";
                                }
                                day17 = dt.Rows[i]["day17"].ToString();
                                if (day17 == "0")
                                {
                                    day17 = "A";
                                }
                                day18 = dt.Rows[i]["day18"].ToString();
                                if (day18 == "0")
                                {
                                    day18 = "A";
                                }
                                day19 = dt.Rows[i]["day19"].ToString();
                                if (day19 == "0")
                                {
                                    day19 = "A";
                                }
                                day20 = dt.Rows[i]["day20"].ToString();
                                if (day20 == "0")
                                {
                                    day20 = "A";
                                }
                                day21 = dt.Rows[i]["day21"].ToString();
                                if (day21 == "0")
                                {
                                    day21 = "A";
                                }
                                day22 = dt.Rows[i]["day22"].ToString();
                                if (day22 == "0")
                                {
                                    day22 = "A";
                                }
                                day23 = dt.Rows[i]["day23"].ToString();
                                if (day23 == "0")
                                {
                                    day23 = "A";
                                }
                                day24 = dt.Rows[i]["day24"].ToString();
                                if (day24 == "0")
                                {
                                    day24 = "A";
                                }
                                day25 = dt.Rows[i]["day25"].ToString();
                                if (day25 == "0")
                                {
                                    day25 = "A";
                                }
                                day26 = dt.Rows[i]["day26"].ToString();
                                if (day26 == "0")
                                {
                                    day26 = "A";
                                }
                                day27 = dt.Rows[i]["day27"].ToString();
                                if (day27 == "0")
                                {
                                    day27 = "A";
                                }
                                day28 = dt.Rows[i]["day28"].ToString();
                                if (day28 == "0")
                                {
                                    day28 = "A";
                                }
                                day29 = dt.Rows[i]["day29"].ToString();
                                if (day29 == "0")
                                {
                                    day29 = "A";
                                }
                                day30 = dt.Rows[i]["day30"].ToString();
                                if (day30 == "0")
                                {
                                    day30 = "A";
                                }
                                day31 = dt.Rows[i]["day31"].ToString();
                                if (day31 == "0")
                                {
                                    day31 = "A";
                                }

                                PdfPCell Cemp = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                Cemp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                Cemp.Colspan = 0;
                                Secondtable.AddCell(Cemp);



                                if (days == 30)
                                {
                                    PdfPCell CAttendance = new PdfPCell(new Phrase("1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17      18       19       20       21       22       23       24       25       26       27       28       29       30", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CAttendance.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                    CAttendance.Colspan = tableCells - 1;
                                    Secondtable.AddCell(CAttendance);

                                    Secondtable.AddCell(Cemp);

                                    PdfPCell CAttendanceval = new PdfPCell(new Phrase(day1 + "       " + day2 + "        " + day3 + "       " + day4 + "        " + day5 + "        " + day6 + "        " + day7 + "       " + day8 + "        " + day9 + "        " + day10 + "        " + day11 + "         " + day12 + "         " + day13 + "         " + day14 + "         " + day15 + "        " + day16 + "        " + day17 + "        " + day18 + "        " + day19 + "        " + day20 + "        " + day21 + "         " + day22 + "         " + day23 + "        " + day24 + "        " + day25 + "        " + day26 + "        " + day27 + "         " + day28 + "         " + day29 + "         " + day30, FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CAttendanceval.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                    CAttendanceval.Border = 15;
                                    CAttendanceval.Colspan = tableCells;
                                    Secondtable.AddCell(CAttendanceval);

                                }
                                else
                                {
                                    PdfPCell CAttendance = new PdfPCell(new Phrase("1        2        3        4        5        6        7        8        9       10       11       12       13       14       15       16       17      18       19       20       21       22       23       24       25       26       27       28       29       30       31", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CAttendance.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                    CAttendance.Colspan = tableCells - 1;
                                    Secondtable.AddCell(CAttendance);

                                    Secondtable.AddCell(Cemp);

                                    PdfPCell CAttendanceval = new PdfPCell(new Phrase(day1 + "       " + day2 + "        " + day3 + "       " + day4 + "        " + day5 + "        " + day6 + "        " + day7 + "       " + day8 + "        " + day9 + "        " + day10 + "        " + day11 + "         " + day12 + "         " + day13 + "         " + day14 + "         " + day15 + "        " + day16 + "        " + day17 + "        " + day18 + "        " + day19 + "        " + day20 + "        " + day21 + "         " + day22 + "         " + day23 + "        " + day24 + "        " + day25 + "        " + day26 + "        " + day27 + "         " + day28 + "         " + day29 + "         " + day30 + "         " + day31, FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CAttendanceval.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                    CAttendanceval.Border = 15;
                                    CAttendanceval.Colspan = tableCells;
                                    Secondtable.AddCell(CAttendanceval);

                                }


                            }


                        }
                        #endregion

                        #region Table Total values

                        SecondtableFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableFooter.TotalWidth = 1000f;
                        }
                        else
                        {
                            SecondtableFooter.TotalWidth = 850f;
                        }
                        SecondtableFooter.LockedWidth = true;
                        float[] SecondFooterWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 43)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 2f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 5f };
                        }
                        #endregion

                        SecondtableFooter.SetWidths(SecondFooterWidth);

                        //1
                        PdfPCell FCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCSNo.Border = 15;
                        SecondtableFooter.AddCell(FCSNo);
                        //2
                        PdfPCell FCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpId1.Border = 15;
                        SecondtableFooter.AddCell(FCEmpId1);
                        //3
                        PdfPCell FCEmpName1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        FCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpName1.Border = 15;
                        SecondtableFooter.AddCell(FCEmpName1);

                        PdfPCell FCBasicDetails1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        FCBasicDetails1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FCBasicDetails1.Border = 15;// 15;
                        SecondtableFooter.AddCell(FCBasicDetails1);
                        //4
                        PdfPCell FCEmpDesgn = new PdfPCell(new Phrase(" Total : ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpDesgn.Border = 15;
                        SecondtableFooter.AddCell(FCEmpDesgn);

                        // A
                        if (payrate != 0)
                        {
                            PdfPCell FCpayrate1 = new PdfPCell(new Phrase(totalpayrate.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCpayrate1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCpayrate1.Border = 15;
                            SecondtableFooter.AddCell(FCpayrate1);
                        }

                        if (paydays != 0)
                        {
                            PdfPCell FCdateofsusp = new PdfPCell(new Phrase(totalPayDays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCdateofsusp.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCdateofsusp.Border = 15;
                            SecondtableFooter.AddCell(FCdateofsusp);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell FCNoOfDuties = new PdfPCell(new Phrase(totalDuties.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNoOfDuties.Border = 15;
                            SecondtableFooter.AddCell(FCNoOfDuties);
                        }
                        if (wos != 0)
                        {
                            PdfPCell FCwos = new PdfPCell(new Phrase(totalwos.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCwos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCwos.Border = 15;
                            SecondtableFooter.AddCell(FCwos);
                        }

                        //8
                        if (nhs != 0)
                        {
                            PdfPCell FCnhs = new PdfPCell(new Phrase(totalnhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCnhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhs.Border = 15;
                            SecondtableFooter.AddCell(FCnhs);
                        }

                        //6
                        if (ots != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalots.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }

                        //7

                        //9
                        if (total != 0)
                        {
                            PdfPCell FCnpots = new PdfPCell(new Phrase(totaltotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCnpots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnpots.Border = 15;
                            SecondtableFooter.AddCell(FCnpots);
                        }



                        //10
                        if (basic != 0)
                        {
                            PdfPCell FCBasic1 = new PdfPCell(new Phrase(totalBasic.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCBasic1.Border = 15;
                            SecondtableFooter.AddCell(FCBasic1);
                        }


                        //11
                        if (da != 0)
                        {
                            PdfPCell FDa = new PdfPCell(new Phrase(totalDA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FDa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FDa.Border = 15;
                            SecondtableFooter.AddCell(FDa);
                        }


                        //12
                        if (hra != 0)
                        {

                            PdfPCell FCHRA1 = new PdfPCell(new Phrase(totalHRA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCHRA1.Border = 15;
                            SecondtableFooter.AddCell(FCHRA1);
                        }

                        //13
                        if (cca != 0)
                        {
                            PdfPCell FCcca = new PdfPCell(new Phrase(totalCCA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCcca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCcca.Border = 15;
                            SecondtableFooter.AddCell(FCcca);
                        }

                        //14
                        if (conveyance != 0)
                        {
                            PdfPCell FCConveyance = new PdfPCell(new Phrase(totalConveyance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCConveyance.Border = 15;
                            SecondtableFooter.AddCell(FCConveyance);
                        }


                        //15
                        if (washallowance != 0)
                        {
                            PdfPCell FCWa = new PdfPCell(new Phrase(totalWA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCWa.Border = 15;
                            SecondtableFooter.AddCell(FCWa);
                        }

                        //16
                        if (otherallowance != 0)
                        {
                            PdfPCell FCOa = new PdfPCell(new Phrase(totalOA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCOa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCOa.Border = 15;
                            SecondtableFooter.AddCell(FCOa);
                        }


                        //17
                        if (leavewages != 0)
                        {
                            PdfPCell FLa = new PdfPCell(new Phrase(totalLw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FLa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FLa.Border = 15;
                            SecondtableFooter.AddCell(FLa);
                        }

                        //18
                        if (gratuity != 0)
                        {
                            PdfPCell FGratuity = new PdfPCell(new Phrase(totalGratuity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FGratuity.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FGratuity.Border = 15;
                            SecondtableFooter.AddCell(FGratuity);
                        }

                        //19
                        if (bonus != 0)
                        {
                            PdfPCell Fbonus = new PdfPCell(new Phrase(totalbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Fbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fbonus.Border = 15;
                            SecondtableFooter.AddCell(Fbonus);
                        }

                        //20
                        if (nfhs != 0)
                        {
                            PdfPCell FNfhs = new PdfPCell(new Phrase(totalNfhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FNfhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FNfhs.Border = 15;
                            SecondtableFooter.AddCell(FNfhs);
                        }

                        //21
                        if (rc != 0)
                        {
                            PdfPCell FRc = new PdfPCell(new Phrase(totalRc.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FRc.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FRc.Border = 15;
                            SecondtableFooter.AddCell(FRc);
                        }

                        //22
                        if (cs != 0)
                        {
                            PdfPCell FCs = new PdfPCell(new Phrase(totalCs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCs.Border = 15;
                            SecondtableFooter.AddCell(FCs);
                        }

                        if (Arrears != 0)
                        {
                            PdfPCell FCarrears1 = new PdfPCell(new Phrase(totalarrears.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCarrears1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCarrears1.Border = 15;
                            SecondtableFooter.AddCell(FCarrears1);
                        }

                        if (cfoodallowance != 0)
                        {
                            PdfPCell FFoodallw = new PdfPCell(new Phrase(totalfoodallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FFoodallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FFoodallw.Border = 15;
                            SecondtableFooter.AddCell(FFoodallw);
                        }


                        if (cmedicalallowance != 0)
                        {
                            PdfPCell FMedicalallw = new PdfPCell(new Phrase(totalmedicalallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FMedicalallw.Border = 15;
                            SecondtableFooter.AddCell(FMedicalallw);
                        }


                        if (splallw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalSplAllowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        //
                        if (TravelAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalTravelAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalPerformanceAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalMobileAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }


                        //
                        if (wosamt != 0)
                        {
                            PdfPCell FCEwosamt = new PdfPCell(new Phrase(totalwosamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCEwosamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCEwosamt.Border = 15;
                            SecondtableFooter.AddCell(FCEwosamt);
                        }



                        //26
                        if (nhsamt != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalnhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }

                        if (Serviceweightage != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalServiceWeightage.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }

                        //23
                        if (gross != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(totalGross.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }

                        //24
                        if (otamt != 0)
                        {
                            PdfPCell FCotamt = new PdfPCell(new Phrase(totalotamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCotamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCotamt.Border = 15;
                            SecondtableFooter.AddCell(FCotamt);
                        }

                        //25

                        //27
                        if (npotsamt != 0)
                        {
                            PdfPCell FCnpotsamt = new PdfPCell(new Phrase(totalnpotsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCnpotsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnpotsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnpotsamt);
                        }


                        //28
                        if (incentivs != 0)
                        {
                            PdfPCell FIncentivs = new PdfPCell(new Phrase(totalIncentivs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FIncentivs.Border = 15;
                            SecondtableFooter.AddCell(FIncentivs);
                        }

                        //28A
                        if (totalearned != 0)
                        {
                            PdfPCell FCtotalearned = new PdfPCell(new Phrase(totaltotalearned.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCtotalearned.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCtotalearned.Border = 15;
                            //SecondtableFooter.AddCell(FCtotalearned);
                        }

                        //29
                        if (pf != 0)
                        {
                            PdfPCell FCPF1 = new PdfPCell(new Phrase(totalPF.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCPF1.Border = 15;
                            SecondtableFooter.AddCell(FCPF1);
                        }

                        //30
                        if (esi != 0)
                        {
                            PdfPCell FCESI1 = new PdfPCell(new Phrase(totalESI.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCESI1.Border = 15;
                            SecondtableFooter.AddCell(FCESI1);
                        }






                        //31
                        if (proftax != 0)
                        {
                            PdfPCell FCProTax1 = new PdfPCell(new Phrase(totalProfTax.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCProTax1.Border = 15;
                            SecondtableFooter.AddCell(FCProTax1);


                        }

                        if (owf != 0)
                        {
                            PdfPCell FCowf1 = new PdfPCell(new Phrase(totalowf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCowf1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCowf1.Border = 15;
                            SecondtableFooter.AddCell(FCowf1);


                        }

                        if (TDS != 0)
                        {
                            PdfPCell FCTDS1 = new PdfPCell(new Phrase(totalTDS.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCTDS1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            FCTDS1.Border = 15;
                            SecondtableFooter.AddCell(FCTDS1);
                        }

                        if (Soceity != 0)
                        {


                            PdfPCell FCSoceity1 = new PdfPCell(new Phrase(totalSoceity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCSoceity1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            FCSoceity1.Border = 15;
                            SecondtableFooter.AddCell(FCSoceity1);
                        }

                        if (Mobile != 0)
                        {


                            PdfPCell FCmobexp1 = new PdfPCell(new Phrase(totalMobile.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCmobexp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            FCmobexp1.Border = 15;
                            SecondtableFooter.AddCell(FCmobexp1);
                        }

                        if (KLWF != 0)
                        {


                            PdfPCell FCKLWF1 = new PdfPCell(new Phrase(totalKLWF.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCKLWF1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            FCKLWF1.Border = 15;
                            SecondtableFooter.AddCell(FCKLWF1);
                        }

                        if (Loss != 0)
                        {
                            PdfPCell FCLoss1 = new PdfPCell(new Phrase(totalLoss.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCLoss1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            FCLoss1.Border = 15;
                            SecondtableFooter.AddCell(FCLoss1);
                        }

                        if (Loan != 0)
                        {
                            PdfPCell FCLoanDed1 = new PdfPCell(new Phrase(totalLoanDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCLoanDed1.Border = 15;
                            SecondtableFooter.AddCell(FCLoanDed1);
                        }


                        //32
                        if (salAdvDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalSalAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalATMDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }

                        //

                        if (IDCardDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalIDCardDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }


                        if (Extra != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalExtra.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }

                        //33
                        if (uniformDed != 0)
                        {
                            PdfPCell FCUnifDed1 = new PdfPCell(new Phrase(totalUniforDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCUnifDed1.Border = 15;
                            SecondtableFooter.AddCell(FCUnifDed1);
                        }

                        if (SecurityDepDed != 0)
                        {
                            PdfPCell FCSecurityDepDed1 = new PdfPCell(new Phrase(totalSecurityDepDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSecurityDepDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSecurityDepDed1.Border = 15;
                            SecondtableFooter.AddCell(FCSecurityDepDed1);
                        }


                        //34
                        if (otherDed != 0)
                        {
                            PdfPCell FCOtherDed1 = new PdfPCell(new Phrase(totalOtherdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCOtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCOtherDed1.Border = 15;
                            SecondtableFooter.AddCell(FCOtherDed1);
                        }




                        //35
                        if (canteenAdv != 0)
                        {
                            PdfPCell FCCanteended = new PdfPCell(new Phrase(totalCanteenAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCCanteended.Border = 15;
                            SecondtableFooter.AddCell(FCCanteended);
                        }


                        //36
                        if (penalty != 0)
                        {
                            PdfPCell FPenalty = new PdfPCell(new Phrase(totalPenalty.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FPenalty.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FPenalty.Border = 15;
                            SecondtableFooter.AddCell(FPenalty);
                        }

                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell FTelephoneBillDed = new PdfPCell(new Phrase(totalTelephoneBillDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FTelephoneBillDed.Border = 15;
                            SecondtableFooter.AddCell(FTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell FTelephoneBillDed = new PdfPCell(new Phrase(totalPVCDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FTelephoneBillDed.Border = 15;
                            SecondtableFooter.AddCell(FTelephoneBillDed);
                        }


                        //37
                        if (totalDeductions != 0)
                        {
                            PdfPCell FCTotDed1 = new PdfPCell(new Phrase(totalDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCTotDed1.Border = 15;
                            SecondtableFooter.AddCell(FCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //38
                        //if (netpay != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(totalNetpay.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        if (modeofpayment != 0)
                        {
                            PdfPCell FCmodepay1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            FCmodepay1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            FCmodepay1.Border = 15;
                            // SecondtableFooter.AddCell(FCmodepay1);
                        }


                        //39
                        PdfPCell FCSignature1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FCSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCSignature1.Border = 15;
                        //FCSignature1.MinimumHeight = 25;
                        SecondtableFooter.AddCell(FCSignature1);

                        #endregion

                        SecondtableGrandtotalFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableGrandtotalFooter.TotalWidth = 1000f;
                        }
                        else
                        {
                            SecondtableGrandtotalFooter.TotalWidth = 850f;
                        }
                        SecondtableGrandtotalFooter.LockedWidth = true;
                        float[] SecondGrandtotalFooterWidth = new float[] { };
                        #region Table Cells
                        if (tableCells == 43)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 2f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 5f };
                        }
                        #endregion
                        SecondtableGrandtotalFooter.SetWidths(SecondGrandtotalFooterWidth);

                        SecondtablecheckbyFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtablecheckbyFooter.TotalWidth = 1000f;
                        }
                        else
                        {
                            SecondtablecheckbyFooter.TotalWidth = 850f;
                        }
                        SecondtablecheckbyFooter.LockedWidth = true;
                        float[] SecondcheckbyFooterWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 43)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }


                        if (tableCells == 39)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 38)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 37)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 1.5f, 2f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 2f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 6f, 4f, 3f, 5f };
                        }
                        #endregion

                        SecondtablecheckbyFooter.SetWidths(SecondcheckbyFooterWidth);

                        #region Table   Grand   Total  Footer

                        //1
                        PdfPCell GFCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        GFCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCSNo.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCSNo);

                        //2
                        PdfPCell GFCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        GFCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpId1.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCEmpId1);

                        //3
                        PdfPCell GFCEmpName1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        GFCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpName1.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCEmpName1);

                        PdfPCell GFCBasicDetails1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        GFCBasicDetails1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        GFCBasicDetails1.Border = 15;// 15;
                        SecondtablecheckbyFooter.AddCell(GFCBasicDetails1);

                        //4
                        PdfPCell GFCEmpDesgn = new PdfPCell(new Phrase("Grand  Total: ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        GFCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpDesgn.Border = 15;
                        //FCEmpDesgn.Colspan = 4;
                        SecondtablecheckbyFooter.AddCell(GFCEmpDesgn);

                        // A
                        if (payrate != 0)
                        {
                            PdfPCell GFCpayrate1 = new PdfPCell(new Phrase(Grandtotalpayrate.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCpayrate1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCpayrate1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCpayrate1);
                        }

                        if (paydays != 0)
                        {
                            PdfPCell GFCdateofsusp = new PdfPCell(new Phrase(GrandtotalPayDays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCdateofsusp.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCdateofsusp.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCdateofsusp);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell GFCNoOfDuties = new PdfPCell(new Phrase(GrandtotalDuties.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNoOfDuties.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNoOfDuties);
                        }
                        if (wos != 0)
                        {
                            PdfPCell GFCWos = new PdfPCell(new Phrase(Grandtotalwos.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCWos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCWos.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCWos);
                        }

                        //8
                        if (nhs != 0)
                        {
                            PdfPCell GFCnhs = new PdfPCell(new Phrase(Grandtotalnhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCnhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhs);
                        }

                        //6
                        if (ots != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(Grandtotalots.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }

                        //7

                        //9
                        if (total != 0)
                        {
                            PdfPCell GFCnpots = new PdfPCell(new Phrase(Grandtotaltotal.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCnpots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnpots.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnpots);
                        }





                        //10
                        if (basic != 0)
                        {
                            PdfPCell GFCBasic1 = new PdfPCell(new Phrase(GrandtotalBasic.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCBasic1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCBasic1);
                        }


                        //11
                        if (da != 0)
                        {
                            PdfPCell GFDa = new PdfPCell(new Phrase(GrandtotalDA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFDa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFDa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFDa);
                        }


                        //12
                        if (hra != 0)
                        {
                            PdfPCell GFCHRA1 = new PdfPCell(new Phrase(GrandtotalHRA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCHRA1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCHRA1);
                        }

                        //13
                        if (cca != 0)
                        {
                            PdfPCell GFCcca = new PdfPCell(new Phrase(GrandtotalCCA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCcca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCcca.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCcca);
                        }

                        //14
                        if (conveyance != 0)
                        {
                            PdfPCell GFCConveyance = new PdfPCell(new Phrase(GrandtotalConveyance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCConveyance.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCConveyance);
                        }


                        //15
                        if (washallowance != 0)
                        {
                            PdfPCell GFCWa = new PdfPCell(new Phrase(GrandtotalWA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCWa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCWa);
                        }

                        //16
                        if (otherallowance != 0)
                        {
                            PdfPCell GFCOa = new PdfPCell(new Phrase(GrandtotalOA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCOa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOa);
                        }

                        //17
                        if (leavewages != 0)
                        {
                            PdfPCell GFLa = new PdfPCell(new Phrase(GrandtotalLw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFLa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFLa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFLa);
                        }

                        //18
                        if (gratuity != 0)
                        {
                            PdfPCell GFGratuity = new PdfPCell(new Phrase(GrandtotalGratuity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFGratuity.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFGratuity.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFGratuity);
                        }

                        //19
                        if (bonus != 0)
                        {
                            PdfPCell GFbonus = new PdfPCell(new Phrase(Grandtotalbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFbonus.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFbonus);
                        }


                        //20
                        if (nfhs != 0)
                        {
                            PdfPCell GFNfhs = new PdfPCell(new Phrase(GrandtotalNfhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFNfhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFNfhs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFNfhs);
                        }

                        //21
                        if (rc != 0)
                        {
                            PdfPCell GFRc = new PdfPCell(new Phrase(GrandtotalRc.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFRc.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFRc.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFRc);
                        }

                        //22
                        if (cs != 0)
                        {
                            PdfPCell GFCs = new PdfPCell(new Phrase(GrandtotalCs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCs);
                        }

                        if (Arrears != 0)
                        {
                            PdfPCell GFCarrears1 = new PdfPCell(new Phrase(Grandtotalarrears.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCarrears1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCarrears1.Border = 15;
                            SecondtableFooter.AddCell(GFCarrears1);
                        }

                        if (cfoodallowance != 0)
                        {
                            PdfPCell GFFoodallw = new PdfPCell(new Phrase(Grandtotalfoodallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFFoodallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFFoodallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFFoodallw);
                        }

                        if (cmedicalallowance != 0)
                        {
                            PdfPCell GFMedicalallw = new PdfPCell(new Phrase(Grandtotalmedicalallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFMedicalallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFMedicalallw);
                        }


                        if (splallw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalSplAllowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }
                        //

                        if (TravelAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalTravelAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalPerformanceAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalMobileAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }



                        //




                        if (wosamt != 0)
                        {
                            PdfPCell GFCwosamt = new PdfPCell(new Phrase(Grandtotalwosamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCwosamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCwosamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCwosamt);
                        }



                        //26
                        if (nhsamt != 0)
                        {
                            PdfPCell GFCNhsamt = new PdfPCell(new Phrase(Grandtotalnhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCNhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNhsamt);
                        }

                        if (Serviceweightage != 0)
                        {
                            PdfPCell GFCNhsamt = new PdfPCell(new Phrase(GrandtotalServiceWeightage.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCNhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNhsamt);
                        }


                        //23
                        if (gross != 0)
                        {
                            PdfPCell GFCGross1 = new PdfPCell(new Phrase(GrandtotalGross.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCGross1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCGross1);
                        }

                        //24
                        if (otamt != 0)
                        {
                            PdfPCell GFCOtamt = new PdfPCell(new Phrase(Grandtotalotamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCOtamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOtamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOtamt);
                        }

                        //25

                        //27
                        if (npotsamt != 0)
                        {
                            PdfPCell GFCNpotsamt = new PdfPCell(new Phrase(Grandtotalnpotsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCNpotsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNpotsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNpotsamt);
                        }


                        //28
                        if (incentivs != 0)
                        {
                            PdfPCell GFIncentivs = new PdfPCell(new Phrase(GrandtotalIncentivs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFIncentivs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFIncentivs);
                        }

                        //28A
                        if (totalearned != 0)
                        {
                            PdfPCell GFCtotalearned = new PdfPCell(new Phrase(Grandtotaltotalearned.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCtotalearned.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCtotalearned.Border = 15;
                            //SecondtablecheckbyFooter.AddCell(GFCtotalearned);
                        }


                        //29
                        if (pf != 0)
                        {
                            PdfPCell GFCPF1 = new PdfPCell(new Phrase(GrandtotalPF.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCPF1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCPF1);
                        }

                        //30
                        if (esi != 0)
                        {
                            PdfPCell GFCESI1 = new PdfPCell(new Phrase(GrandtotalESI.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCESI1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCESI1);
                        }





                        //31
                        if (proftax != 0)
                        {
                            PdfPCell GFCProTax1 = new PdfPCell(new Phrase(GrandtotalProfTax.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCProTax1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCProTax1);
                        }

                        if (owf != 0)
                        {
                            PdfPCell GFCowf1 = new PdfPCell(new Phrase(Grandtotalowf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCowf1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCowf1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCowf1);
                        }

                        if (TDS != 0)
                        {
                            PdfPCell GFCTDS1 = new PdfPCell(new Phrase(GrandtotalTDS.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCTDS1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            GFCTDS1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCTDS1);
                        }

                        if (Soceity != 0)
                        {


                            PdfPCell GFCSoceity1 = new PdfPCell(new Phrase(GrandtotalSoceity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCSoceity1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            GFCSoceity1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSoceity1);
                        }

                        if (Mobile != 0)
                        {


                            PdfPCell GFCmobexp1 = new PdfPCell(new Phrase(GrandtotalMobile.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCmobexp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            GFCmobexp1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCmobexp1);
                        }

                        if (KLWF != 0)
                        {


                            PdfPCell GFCKLWF1 = new PdfPCell(new Phrase(GrandtotalKLWF.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCKLWF1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            GFCKLWF1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCKLWF1);
                        }

                        if (Loss != 0)
                        {
                            PdfPCell GFCLoss1 = new PdfPCell(new Phrase(GrandtotalLoss.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCLoss1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            GFCLoss1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCLoss1);
                        }

                        if (Loan != 0)
                        {
                            PdfPCell GFCLoan1 = new PdfPCell(new Phrase(GrandtotalLoanDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCLoan1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCLoan1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCLoan1);
                        }

                        //32
                        if (salAdvDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalSalAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalATMDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }

                        //


                        if (IDCardDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalIDCardDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }

                        if (Extra != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalExtra.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }
                        //33
                        if (uniformDed != 0)
                        {
                            PdfPCell GFCUnifDed1 = new PdfPCell(new Phrase(GrandtotalUniforDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCUnifDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCUnifDed1);
                        }


                        if (SecurityDepDed != 0)
                        {
                            PdfPCell GFCSecurityDepDed1 = new PdfPCell(new Phrase(GrandtotalSecurityDepDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSecurityDepDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSecurityDepDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSecurityDepDed1);
                        }

                        //34
                        if (otherDed != 0)
                        {
                            PdfPCell GFCOtherDed1 = new PdfPCell(new Phrase(GrandtotalOtherdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCOtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOtherDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOtherDed1);
                        }

                        if (MBSDed != 0)
                        {
                            PdfPCell GFCMBSDed1 = new PdfPCell(new Phrase(GrandtotalMBSdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCMBSDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCMBSDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCMBSDed1);
                        }


                        //35
                        if (canteenAdv != 0)
                        {
                            PdfPCell GFCCanteended = new PdfPCell(new Phrase(GrandtotalCanteenAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCCanteended.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCCanteended);
                        }

                        //36
                        if (penalty != 0)
                        {
                            PdfPCell GFPenalty = new PdfPCell(new Phrase(GrandtotalPenalty.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFPenalty.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFPenalty.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFPenalty);
                        }
                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell GFTelephoneBillDed = new PdfPCell(new Phrase(GrandtotalTelephoneBillDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFTelephoneBillDed.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell GFTelephoneBillDed = new PdfPCell(new Phrase(GrandtotalPVCDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFTelephoneBillDed.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFTelephoneBillDed);
                        }

                        //37
                        if (totalDeductions != 0)
                        {
                            PdfPCell GFCTotDed1 = new PdfPCell(new Phrase(GrandtotalDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCTotDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //38
                        //if (netpay != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandtotalNetpay.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        if (modeofpayment != 0)
                        {
                            PdfPCell GFCmodepay1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                            GFCmodepay1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            GFCmodepay1.Border = 15;
                            //SecondtablecheckbyFooter.AddCell(GFCmodepay1);
                        }

                        //39
                        PdfPCell GFCSignature1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        GFCSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCSignature1.Border = 15;
                        //FCSignature1.MinimumHeight = 25;
                        SecondtablecheckbyFooter.AddCell(GFCSignature1);
                        #endregion

                        #region   Footer Headings
                        //1
                        PdfPCell FHCheckedbybr1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHCheckedbybr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FHCheckedbybr1.Border = 0;
                        FHCheckedbybr1.Rowspan = 0;
                        FHCheckedbybr1.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                        //2
                        PdfPCell FHApprovedbr2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHApprovedbr2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FHApprovedbr2.Border = 0;
                        FHApprovedbr2.Colspan = tableCells;

                        SecondtablecheckbyFooter.AddCell(FHApprovedbr2);
                        SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                        SecondtablecheckbyFooter.AddCell(FHApprovedbr2);


                        //1
                        PdfPCell FHCheckedby = new PdfPCell(new Phrase("Checked By                                                                                          Checked By                                                                                       Checked By                                                                                                          Approved By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        FHCheckedby.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FHCheckedby.Border = 0;
                        FHCheckedby.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHCheckedby);
                        //2
                        PdfPCell FHApprovedBy = new PdfPCell(new Phrase("Accounts Manager                                                                                HR Manager                                                                                       CEO                                                                                                                     Managing Director", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        FHApprovedBy.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FHApprovedBy.PaddingTop = 30;
                        FHApprovedBy.Border = 0;
                        FHApprovedBy.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHApprovedBy);



                        #endregion

                        document.Add(Secondtable);

                        if (nextpagerecordscount == targetpagerecors)
                        {
                            targetpagerecors = secondpagerecords;
                            //document.Add(SecondtableFooter);
                            // document.NewPage();
                            nextpagerecordscount = 0;
                            #region  Zero variables
                            totaltotalearned = 0;
                            totalowf = 0;
                            totalNetpay = 0;
                            totalDuties = 0;
                            totalpayrate = 0;
                            totalBasic = 0;
                            totalDA = 0;
                            totalHRA = 0;
                            totalCCA = 0;
                            totalConveyance = 0;
                            totalWA = 0;
                            totalOA = 0;
                            totalGross = 0;
                            totalPF = 0;
                            totalESI = 0;
                            totalProfTax = 0;
                            totalDed = 0;
                            totalSalAdv = 0;
                            totalUniforDed = 0;
                            totalCanteenAdv = 0;
                            totalOtherdedn = 0;
                            totalbonus = 0;
                            totalLw = 0;
                            totalGratuity = 0;
                            totalNfhs = 0;
                            totalRc = 0;
                            totalCs = 0;
                            totalIncentivs = 0;
                            totalPenalty = 0;
                            totalfoodallowance = 0;
                            totalmedicalallowance = 0;
                            totalots = 0;
                            totalotamt = 0;
                            totalwos = 0;
                            totalwosamt = 0;
                            totalnhs = 0;
                            totalnhsamt = 0;
                            totalTelephoneBillDed = 0;
                            #endregion
                        }



                    }

                    if (nextpagerecordscount >= 0)
                    {
                        //document.Add(SecondtableFooter);
                        document.Add(SecondtableGrandtotalFooter);
                        document.Add(SecondtablecheckbyFooter);
                    }

                    document.Close();
                    if (nextpagehasPages)
                    {

                        Response.ContentType = "application/pdf";
                        Response.AddHeader("content-disposition", "attachment;filename=Dutieswithots.pdf");
                        Response.Buffer = true;
                        Response.Clear();
                        Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                        Response.OutputStream.Flush();
                        Response.End();
                    }
                }
            }
            catch (Exception ex)
            {

            }
        }

        protected void lbtn_Export_Click(object sender, EventArgs e)
        {

            string date = string.Empty;
            string filename = "";

            string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";

            DataTable compInfo = SqlHelper.Instance.GetTableByQuery(strQry);
            string companyName = "Your Company Name";
            string companyAddress = "Your Company Address";

            if (compInfo.Rows.Count > 0)
            {
                companyName = compInfo.Rows[0]["CompanyName"].ToString();
                companyAddress = compInfo.Rows[0]["Address"].ToString();

            }

            int month = 0;
            month = GetMonthBasedOnSelectionDateorMonth();

            filename = ddlcname.SelectedItem + ".xlsx";
            var SPName = "";
            Hashtable HTPaysheet = new Hashtable();
            SPName = "IMEPaysheetpdfs";
            HTPaysheet.Add("@ClientId", ddlClients.SelectedValue);
            HTPaysheet.Add("@month", month);
            HTPaysheet.Add("@PaymentOption", ddlpaymenttype.SelectedIndex);

            DataTable dt = SqlHelper.Instance.ExecuteStoredProcedureWithParams(SPName, HTPaysheet);

            string line1 = "Client Name : " + ddlcname.SelectedItem;
            string line2 = "Salary Sheet for month of " + GetMonthName() + " - " + GetMonthOfYear();

            if (dt.Rows.Count > 0)
            {
                GVNewpaysheet.DataSource = dt;
                GVNewpaysheet.DataBind();
                gve.ExporttoExcelNewPaysheet(dt, line1, line2, filename);

            }
            else
            {
                GVNewpaysheet.DataSource = null;
                GVNewpaysheet.DataBind();
            }

        }

        protected void GVNewpaysheet_RowDataBound(object sender, GridViewRowEventArgs e)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {
                e.Row.Cells[1].Attributes.Add("class", "text");
                e.Row.Cells[2].Attributes.Add("class", "text");
            }
        }

        public void VisibleFreeze()
        {
            int month = GetMonthBasedOnSelectionDateorMonth();
            string qry = string.Empty;

            qry = "select isnull(freezestatus,0) Freezestatus from emppaysheet where ClientID='" + ddlClients.SelectedValue + "' and month='" + month + "' ";

            DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(qry).Result;
            string Freezestatus = "";

            if (dt.Rows.Count > 0)
            {
                Freezestatus = dt.Rows[0]["Freezestatus"].ToString();

                if (Freezestatus == "0")
                {
                    btnFreeze.Visible = true;
                    btnUnFreeze.Visible = false;
                    btnpayment.Enabled = true;
                }
                else
                {
                    btnFreeze.Visible = false;

                    btnUnFreeze.Visible = true;

                    btnpayment.Enabled = false;
                }
            }
            else
            {
                btnFreeze.Visible = false;
                btnUnFreeze.Visible = false;

                btnpayment.Enabled = true;

            }
        }

        protected void btnFreeze_Click(object sender, EventArgs e)
        {
            int month = GetMonthBasedOnSelectionDateorMonth();

            string qry = "";
            int status = 0;

            {
                qry = "update emppaysheet set freezestatus=1 where ClientID='" + ddlClients.SelectedValue + "' and month='" + month + "' ";
                status = config.ExecuteNonQueryWithQueryAsync(qry).Result;
            }


            if (status > 0)
            {
                btnpayment.Enabled = false;
                btnUnFreeze.Visible = true;
                btnFreeze.Visible = false;


            }
            else
            {
                btnpayment.Enabled = true;
                btnUnFreeze.Visible = false;

                btnFreeze.Visible = true;
            }
        }

        protected void btnFreezeSubmit_Click(object sender, EventArgs e)
        {


            var password = string.Empty;
            var SPName = string.Empty;
            password = txtPassword.Text.Trim();
            string sqlPassword = "select password from IouserDetails where password='" + TxtFreeze.Text + "' and id='2'";
            DataTable dtpassword = config.ExecuteAdaptorAsyncWithQueryParams(sqlPassword).Result;
            if (dtpassword.Rows.Count == 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Invalid Password');", true);
                return;
            }
            else
            {
                btnFreeze.Visible = true;
                btnpayment.Enabled = true;
                btnUnFreeze.Visible = false;

                int month = GetMonthBasedOnSelectionDateorMonth();

                string Qry = "";



                Qry = "select * from emppaysheet where ClientID='" + ddlClients.SelectedValue + "' and month='" + month + "'";
                DataTable dt = config.ExecuteAdaptorAsyncWithQueryParams(Qry).Result;
                if (dt.Rows.Count > 0)
                {

                    Qry = "update emppaysheet set Freezestatus=0 where ClientID='" + ddlClients.SelectedValue + "' and month='" + month + "'";
                    int status = config.ExecuteNonQueryWithQueryAsync(Qry).Result;
                }




            }

            #region Validation

            if (ddlClients.SelectedIndex == 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Please Select The client Id');", true);
                return;
            }

            #endregion



        }

        protected void btnFreezeClose_Click(object sender, EventArgs e)
        {
            //ModalFreezeDetails.Hide();

        }

        protected void btnUnFreeze_Click(object sender, EventArgs e)
        {
            int month = GetMonthBasedOnSelectionDateorMonth();
            string qry = "";
            int status = 0;

            {
                qry = "update emppaysheet set freezestatus=0 where ClientID='" + ddlClients.SelectedValue + "' and month='" + month + "' ";
                status = config.ExecuteNonQueryWithQueryAsync(qry).Result;
            }



            if (status > 0)
            {
                btnpayment.Enabled = true;
                btnFreeze.Visible = true;
                btnUnFreeze.Visible = false;
            }
            else
            {
                btnpayment.Enabled = false;
                btnFreeze.Visible = false;
                btnUnFreeze.Visible = true;

            }
        }

        protected void btnwithoutots_Click(object sender, EventArgs e)
        {
            try
            {
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                    return;
                }

                var formatInfoinfo = new DateTimeFormatInfo();
                string[] monthName = formatInfoinfo.MonthNames;
                int payMonth = GetMonth(ddlmonth.SelectedValue);

                int month = GetMonthBasedOnSelectionDateorMonth();
                string selectmonth = string.Empty;

                int Fontsize = int.Parse(ddlfontSize.SelectedValue);
                string fontsyle = "verdana";

                string selectclientaddress = "select * from clients where clientid= '" + ddlClients.SelectedValue + "'";
                DataTable dtclientaddress = config.ExecuteAdaptorAsyncWithQueryParams(selectclientaddress).Result;
                string AddrHno = ""; string AddrColony = ""; string AddrArea = ""; string AddrStreet = ""; string Addrcity = ""; string Addrstate = ""; string Addrpin = "";
                if (dtclientaddress.Rows.Count > 0)
                {

                    AddrHno = dtclientaddress.Rows[0]["ClientAddrHno"].ToString();
                    AddrStreet = dtclientaddress.Rows[0]["ClientAddrStreet"].ToString();
                    AddrArea = dtclientaddress.Rows[0]["ClientAddrArea"].ToString();
                    AddrColony = dtclientaddress.Rows[0]["ClientAddrColony"].ToString();
                    Addrcity = dtclientaddress.Rows[0]["ClientAddrcity"].ToString();
                    Addrstate = dtclientaddress.Rows[0]["ClientAddrstate"].ToString();
                    Addrpin = dtclientaddress.Rows[0]["ClientAddrpin"].ToString();
                }

                string[] ClientAdress = new string[7];
                if (AddrHno.Length > 0)
                {
                    ClientAdress[0] = AddrHno;
                }
                else
                {
                    ClientAdress[0] = "";
                }
                if (AddrStreet.Length > 0)
                {
                    ClientAdress[1] = AddrStreet;
                }
                else
                {
                    ClientAdress[1] = "";
                }
                if (AddrArea.Length > 0)
                {
                    ClientAdress[2] = AddrArea;
                }
                else
                {
                    ClientAdress[2] = "";
                }
                if (AddrColony.Length > 0)
                {
                    ClientAdress[3] = AddrArea;
                }
                else
                {
                    ClientAdress[3] = "";
                }
                if (Addrcity.Length > 0)
                {
                    ClientAdress[4] = AddrColony;
                }
                else
                {
                    ClientAdress[4] = "";
                }
                if (Addrstate.Length > 0)
                {
                    ClientAdress[5] = Addrcity;
                }
                else
                {
                    ClientAdress[5] = "";
                }
                if (Addrpin.Length > 0)
                {
                    ClientAdress[6] = Addrstate;
                }
                else
                {
                    ClientAdress[6] = "";
                }


                string Address1 = string.Empty;

                for (int i = 0; i < 7; i++)
                {
                    Address1 += "  " + ClientAdress[i];
                }
                int Option = 1;
                var spname = "EMPWAGESLIPS";
                Hashtable ht = new Hashtable();
                ht.Add("@clientid", ddlClients.SelectedValue);
                ht.Add("@month", month);
                ht.Add("@Option", Option);
                DataTable dt = config.ExecuteAdaptorAsyncWithParams(spname, ht).Result;


                MemoryStream ms = new MemoryStream();

                int slipsCount = 0;
                string UANNumber = "";

                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL);
                    var writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                    string imagepath1 = Server.MapPath("images");

                    string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                    DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                    string companyName = "Your Company Name";
                    string companyAddress = "Your Company Address";
                    string PFNOForms = "";
                    string TotalPFNOForms = "";
                    if (compInfo.Rows.Count > 0)
                    {
                        companyName = compInfo.Rows[0]["CompanyName"].ToString();
                        companyAddress = compInfo.Rows[0]["Address"].ToString();
                        //PFNOForms = compInfo.Rows[0]["PFNoForms"].ToString();
                    }

                    float forConvert = 0;
                    float forConvert1 = 0;
                    float forConvert5 = 0;

                    float PFEmployer = 0;
                    float ESIEmployer = 0;





                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        PFEmployer = 0;
                        ESIEmployer = 0;

                        if (dt.Rows[i]["ActualAmount"].ToString().Trim().Length > 0)
                            forConvert = Convert.ToSingle(dt.Rows[i]["ActualAmount"].ToString());

                        forConvert = Convert.ToSingle(dt.Rows[i]["noofduties"].ToString()) + Convert.ToSingle(dt.Rows[i]["wo"].ToString()) + Convert.ToSingle(dt.Rows[i]["ots"].ToString()) + Convert.ToSingle(dt.Rows[i]["nhs"].ToString());


                        if (forConvert > 0)
                        {


                            strQry = "Select p.EmpEpfNo,e.EmpESINo from EMPESICodes AS e INNER JOIN EMPEPFCodes as p ON e.Empid = p.Empid AND e.Empid='" + dt.Rows[i]["EmpId"].ToString() + "'";
                            string pfNo = "";
                            string esiNo = "";
                            DataTable PfTable = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                            if (PfTable.Rows.Count > 0)
                            {
                                pfNo = PfTable.Rows[0]["EmpEpfNo"].ToString();
                                esiNo = PfTable.Rows[0]["EmpESINo"].ToString();
                            }

                            float totalotrate = 0;
                            float totalcdBasic = 0;
                            float totalcdDA = 0;
                            float totalcdHRA = 0;
                            float totaltempgross2 = 0;
                            float totalcdNFhs = 0;
                            float totaltempgross1 = 0;
                            float totaltempgross = 0;
                            float totalcdBonus = 0;
                            float totalcdCCA = 0;
                            float totalcdGratuity = 0;
                            float totalcdotherAllowance = 0;
                            float totalcdLeaveAmount = 0;
                            float totalcdConveyance = 0;
                            float totalcdWashAllowance = 0;
                            float totalstandradamt = 0;
                            float totalcdMedicalallw = 0;
                            float totalcdfoodallw = 0;
                            float totalcdSplAllowance = 0;

                            float totalcdTravelAllw = 0;
                            float totalcdPerformanceallw = 0;
                            float totalcdMobileallw = 0;
                            float totalcdserviceweightage = 0;
                            float totalrc = 0;
                            float totalcs = 0;

                            //float totalcdTravellingAllowance = 0;
                            //float totalcdPerformanceAllowance = 0;

                            // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                            #region

                            string imagepath = Server.MapPath("~/assets/BillLogo.png");




                            PdfPTable tablewageslip = new PdfPTable(5);
                            tablewageslip.TotalWidth = 550f;
                            tablewageslip.LockedWidth = true;
                            float[] width = new float[] { 2f, 2f, 2f, 2f, 2f };
                            tablewageslip.SetWidths(width);


                            //if (File.Exists(imagepath))
                            //{
                            //    iTextSharp.text.Image paysheetlogo = iTextSharp.text.Image.GetInstance(imagepath);
                            //    paysheetlogo.ScaleAbsolute(45f, 45f);
                            //    PdfPCell companylogo = new PdfPCell();
                            //    Paragraph cmplogo = new Paragraph();
                            //    cmplogo.Add(new Chunk(paysheetlogo, -7, 10));
                            //    companylogo.AddElement(cmplogo);
                            //    companylogo.HorizontalAlignment = 0;
                            //    companylogo.Colspan = 3;
                            //    companylogo.PaddingTop = 16;
                            //    companylogo.Border = 0;
                            //    tablewageslip.AddCell(companylogo);
                            //}

                            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellspace.Colspan = 5;
                            cellspace.Border = 0;
                            tablewageslip.AddCell(cellspace);

                            PdfPCell cellHead1 = new PdfPCell(new Phrase("Pay Slip  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead1.HorizontalAlignment = 1;
                            cellHead1.Colspan = 5;
                            cellHead1.Border = 0;
                            //cellHead1.PaddingTop = -55;
                            tablewageslip.AddCell(cellHead1);

                            PdfPCell cellHead2 = new PdfPCell(new Phrase("M/s " + companyName, FontFactory.GetFont(fontsyle, 13, Font.NORMAL, BaseColor.BLACK)));
                            cellHead2.HorizontalAlignment = 1;
                            cellHead2.Colspan = 5;
                            cellHead2.Border = 0;
                            // cellHead2.PaddingTop = -42;
                            tablewageslip.AddCell(cellHead2);

                            PdfPCell cellHead31 = new PdfPCell(new Phrase(companyAddress, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead31.HorizontalAlignment = 1;
                            cellHead31.Colspan = 5;
                            cellHead31.Border = 0;
                            cellHead31.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead31);



                            PdfPCell cellHead4 = new PdfPCell(new Phrase("Pay Slip for month of " + GetMonthName() + " " + GetMonthOfYear(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead4.HorizontalAlignment = 1;
                            cellHead4.Colspan = 5;
                            cellHead4.Border = 0;
                            //cellHead4.PaddingTop = -13;
                            tablewageslip.AddCell(cellHead4);



                            PdfPCell cellHead5 = new PdfPCell(new Phrase("NAME : " + dt.Rows[i]["EmpmName"].ToString() + "            S/o : " + dt.Rows[i]["EmpfatherName"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead5.HorizontalAlignment = 0;
                            cellHead5.Colspan = 3;
                            cellHead5.PaddingTop = 5;
                            // cellHead5.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead5);



                            PdfPCell cellHead7 = new PdfPCell(new Phrase("Work Location : " + ddlcname.SelectedItem, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead7.HorizontalAlignment = 0;
                            cellHead7.Colspan = 2;
                            tablewageslip.AddCell(cellHead7);

                            //////PdfPCell cellfat = new PdfPCell(new Phrase("ccc, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            //////cellfat.HorizontalAlignment = 0;
                            //////cellfat.Colspan = 1;
                            //////cellfat.SetLeading(0, 1.2f);
                            // tablewageslip.AddCell(cellfat);
                            PdfPCell cellHead51 = new PdfPCell(new Phrase("Employee ID -  " + dt.Rows[i]["Empid"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead51.HorizontalAlignment = 0;
                            cellHead51.Colspan = 3;
                            cellHead51.SetLeading(0, 1.2f);
                            tablewageslip.AddCell(cellHead51);

                            PdfPCell cellHead711 = new PdfPCell(new Phrase("Designation - " + dt.Rows[i]["Desgn"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead711.HorizontalAlignment = 0;
                            cellHead711.Colspan = 2;
                            //cellHead711.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead711);

                            PdfPCell cellHead71 = new PdfPCell(new Phrase("Bank Account No - " + dt.Rows[i]["EmpBankAcNo"].ToString() + " & Bank Name - " + dt.Rows[i]["Bankname"].ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead71.HorizontalAlignment = 0;
                            cellHead71.Colspan = 3;
                            //cellHead71.MinimumHeight = 20;
                            tablewageslip.AddCell(cellHead71);


                            PdfPCell cellHead101 = new PdfPCell(new Phrase("EPF No - " + pfNo, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead101.HorizontalAlignment = 0;
                            cellHead101.Colspan = 2;
                            tablewageslip.AddCell(cellHead101);


                            forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("Duties - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Wo"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("WO - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["ots"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellHead1112 = new PdfPCell(new Phrase("OTs - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead1112.HorizontalAlignment = 0;
                                cellHead1112.Colspan = 1;
                                //cellHead1112.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead1112);
                            }

                            else
                            {
                                PdfPCell cellHead11124 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead11124.HorizontalAlignment = 0;
                                cellHead11124.Colspan = 1;
                                //cellHead11124.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead11124);

                            }



                            //


                            PdfPCell cellHead121 = new PdfPCell(new Phrase("ESI No - " + esiNo, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead121.HorizontalAlignment = 0;
                            cellHead121.Colspan = 2;
                            tablewageslip.AddCell(cellHead121);




                            forConvert = Convert.ToSingle(dt.Rows[i]["nhs"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("NHs - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 1;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["npots"].ToString());
                            if (forConvert > 0)
                            {

                                PdfPCell cellHead111 = new PdfPCell(new Phrase("Spl Duties - " + forConvert.ToString(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 2;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);
                            }
                            else
                            {
                                PdfPCell cellHead111 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHead111.HorizontalAlignment = 0;
                                cellHead111.Colspan = 2;
                                //cellHead111.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHead111);

                            }


                            UANNumber = dt.Rows[i]["EmpUANNumber"].ToString();


                            if (UANNumber.Trim().Length > 0)
                            {

                                PdfPCell cellHeadUANNo = new PdfPCell(new Phrase("UAN No - " + UANNumber, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHeadUANNo.HorizontalAlignment = 0;
                                cellHeadUANNo.Colspan = 2;
                                //cellHead71.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHeadUANNo);
                            }

                            else
                            {
                                PdfPCell cellHeadUANNo = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHeadUANNo.HorizontalAlignment = 0;
                                cellHeadUANNo.Colspan = 2;
                                //cellHead71.MinimumHeight = 20;
                                tablewageslip.AddCell(cellHeadUANNo);
                            }





                            BaseColor color = new BaseColor(221, 226, 222);



                            PdfPTable tableEarnings = new PdfPTable(3);
                            tableEarnings.TotalWidth = 330;
                            tableEarnings.LockedWidth = true;
                            float[] width1 = new float[] { 2f, 2f, 2f };

                            tableEarnings.SetWidths(width1);

                            PdfPCell cellHead9 = new PdfPCell(new Phrase("Description", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead9.HorizontalAlignment = 1;
                            cellHead9.Colspan = 1;
                            cellHead9.MinimumHeight = 20;
                            cellHead9.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead9);




                            PdfPCell cellHead1011 = new PdfPCell(new Phrase("Standerd Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead1011.HorizontalAlignment = 1;
                            cellHead1011.Colspan = 1;
                            cellHead1011.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead1011);


                            PdfPCell cellHead10 = new PdfPCell(new Phrase("Earnings Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead10.HorizontalAlignment = 1;
                            cellHead10.Colspan = 1;
                            cellHead10.BackgroundColor = color;
                            tableEarnings.AddCell(cellHead10);

                            forConvert = Convert.ToSingle(dt.Rows[i]["Basic"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBasic"].ToString());



                            if (forConvert > 0)
                            {
                                PdfPCell cellbascic = new PdfPCell(new Phrase("Basic+DA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic.HorizontalAlignment = 0;
                                cellbascic.Colspan = 1;
                                //cellbascic.MinimumHeight = 20;
                                tableEarnings.AddCell(cellbascic);

                                PdfPCell cellbascic11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic11.HorizontalAlignment = 2;
                                cellbascic11.Colspan = 1;
                                tableEarnings.AddCell(cellbascic11);
                                totalcdBasic += forConvert1;



                                PdfPCell cellbascic1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic1.HorizontalAlignment = 2;
                                cellbascic1.Colspan = 1;
                                tableEarnings.AddCell(cellbascic1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["DA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdDA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellDearness = new PdfPCell(new Phrase("Dearness Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellDearness.HorizontalAlignment = 0;
                                cellDearness.Colspan = 1;
                                //cellDearness.MinimumHeight = 20;
                                tableEarnings.AddCell(cellDearness);


                                PdfPCell cellbascic111 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbascic111.HorizontalAlignment = 2;
                                cellbascic111.Colspan = 1;
                                tableEarnings.AddCell(cellbascic111);
                                totalcdDA += forConvert1;


                                PdfPCell cellDearness1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellDearness1.HorizontalAlignment = 2;
                                cellDearness1.Colspan = 1;
                                tableEarnings.AddCell(cellDearness1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["HRA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdHRA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellHRA = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellHRA.HorizontalAlignment = 0;
                                cellHRA.Colspan = 1;
                                //cellHRA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellHRA);


                                PdfPCell ccellHRA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA11.HorizontalAlignment = 2;
                                ccellHRA11.Colspan = 1;
                                tableEarnings.AddCell(ccellHRA11);
                                totalcdHRA += forConvert1;



                                PdfPCell ccellHRA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA1.HorizontalAlignment = 2;
                                ccellHRA1.Colspan = 1;
                                tableEarnings.AddCell(ccellHRA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["WashAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdWashAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellWAAmt = new PdfPCell(new Phrase("Wash Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt.HorizontalAlignment = 0;
                                cellWAAmt.Colspan = 1;
                                //cellWAAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt);
                                totalcdWashAllowance += forConvert1;


                                PdfPCell cellWAAmt11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt11.HorizontalAlignment = 2;
                                cellWAAmt11.Colspan = 1;
                                //////cellWAAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt11);


                                PdfPCell cellWAAmt112 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWAAmt112.HorizontalAlignment = 2;
                                cellWAAmt112.Colspan = 1;
                                //cellWAAmt112.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWAAmt112);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdConveyance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellConveyance = new PdfPCell(new Phrase("Conveyance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance.HorizontalAlignment = 0;
                                cellConveyance.Colspan = 1;
                                //cellConveyance.MinimumHeight = 20;
                                tableEarnings.AddCell(cellConveyance);


                                PdfPCell cellConveyance11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance11.HorizontalAlignment = 2;
                                cellConveyance11.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance11);
                                totalcdConveyance += forConvert1;


                                PdfPCell cellConveyance1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance1.HorizontalAlignment = 2;
                                cellConveyance1.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["Bonus"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdBonus"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbonus = new PdfPCell(new Phrase("Bonus", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbonus.HorizontalAlignment = 0;
                                cellbonus.Colspan = 1;
                                //cellbonus.MinimumHeight = 20;
                                tableEarnings.AddCell(cellbonus);

                                PdfPCell cellbonus11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbonus11.HorizontalAlignment = 2;
                                cellbonus11.Colspan = 1;
                                tableEarnings.AddCell(cellbonus11);
                                totalcdBonus += forConvert1;


                                PdfPCell cellbonus1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbonus1.HorizontalAlignment = 2;
                                cellbonus1.Colspan = 1;
                                tableEarnings.AddCell(cellbonus1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["LeaveEncashAmt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdLeaveAmount"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellLeave = new PdfPCell(new Phrase("Leave Wage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave.HorizontalAlignment = 0;
                                cellLeave.Colspan = 1;
                                //cellLeave.MinimumHeight = 20;
                                tableEarnings.AddCell(cellLeave);


                                PdfPCell cellLeave11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave11.HorizontalAlignment = 2;
                                cellLeave11.Colspan = 1;
                                tableEarnings.AddCell(cellLeave11);
                                totalcdLeaveAmount += forConvert1;


                                PdfPCell cellLeave1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellLeave1.HorizontalAlignment = 2;
                                cellLeave1.Colspan = 1;
                                tableEarnings.AddCell(cellLeave1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdotherAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Other Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdotherAllowance += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["MedicalAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdMedicalAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Medical Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdMedicalallw += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["FoodAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdFoodAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOTher = new PdfPCell(new Phrase("Food Allowance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher.HorizontalAlignment = 0;
                                cellOTher.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOTher);

                                PdfPCell cellOTher11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11.HorizontalAlignment = 2;
                                cellOTher11.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11);
                                totalcdfoodallw += forConvert1;



                                PdfPCell cellOTher1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1.HorizontalAlignment = 2;
                                cellOTher1.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1);
                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdSplAllowance"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Spl. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdSplAllowance += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }


                            //for contracts

                            forConvert = Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdTravelAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Travel. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdTravelAllw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdPerformanceAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Performance. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdPerformanceallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdMobileAllw"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellOThers = new PdfPCell(new Phrase("Mobile. Allw", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOThers.HorizontalAlignment = 0;
                                cellOThers.Colspan = 1;
                                //cellOTher.MinimumHeight = 20;
                                tableEarnings.AddCell(cellOThers);

                                PdfPCell cellOTher11s = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher11s.HorizontalAlignment = 2;
                                cellOTher11s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher11s);
                                totalcdMobileallw += forConvert1;



                                PdfPCell cellOTher1s = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOTher1s.HorizontalAlignment = 2;
                                cellOTher1s.Colspan = 1;
                                tableEarnings.AddCell(cellOTher1s);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdGratuity"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("Gratuity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalcdGratuity += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["CCA"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("CCA", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);
                                totalcdCCA += forConvert1;




                                PdfPCell cellCCA11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["RC"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdrc"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("RC", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalrc += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["CS"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdcs"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellGratuity = new PdfPCell(new Phrase("CS", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity.HorizontalAlignment = 0;
                                cellGratuity.Colspan = 1;
                                //cellGratuity.MinimumHeight = 20;
                                tableEarnings.AddCell(cellGratuity);


                                PdfPCell cellGratuity11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity11.HorizontalAlignment = 2;
                                cellGratuity11.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity11);
                                totalcs += forConvert1;



                                PdfPCell cellGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellGratuity1.HorizontalAlignment = 2;
                                cellGratuity1.Colspan = 1;
                                tableEarnings.AddCell(cellGratuity1);
                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["Incentivs"].ToString());
                            //forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Reimbursement", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);





                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["AddlAmount"].ToString());
                            //forConvert1 = Convert.ToSingle(dt.Rows[i]["cdCCA"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellCCA = new PdfPCell(new Phrase("Addl Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA.HorizontalAlignment = 0;
                                cellCCA.Colspan = 1;
                                //cellCCA.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA);





                                PdfPCell cellCCA11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA11.HorizontalAlignment = 2;
                                cellCCA11.Colspan = 1;
                                //cellCCA11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA11);


                                PdfPCell cellCCA1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellCCA1.HorizontalAlignment = 2;
                                cellCCA1.Colspan = 1;
                                //cellCCA1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellCCA1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Nhsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellNHSAmt = new PdfPCell(new Phrase("NHS Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt.HorizontalAlignment = 0;
                                cellNHSAmt.Colspan = 1;
                                //cellNHSAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt);


                                PdfPCell cellNHSAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt11.HorizontalAlignment = 2;
                                cellNHSAmt11.Colspan = 1;
                                //cellNHSAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt11);
                                // totaltempgross += forConvert1;



                                PdfPCell cellNHSAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNHSAmt1.HorizontalAlignment = 2;
                                cellNHSAmt1.Colspan = 1;
                                //cellNHSAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNHSAmt1);
                            }



                            ///nhs,Wo 've same components in contractdetailssw
                            forConvert = Convert.ToSingle(dt.Rows[i]["WOAmt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellWOAmt = new PdfPCell(new Phrase("WO Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt.HorizontalAlignment = 0;
                                cellWOAmt.Colspan = 1;
                                //cellWOAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt);

                                PdfPCell cellWOAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt11.HorizontalAlignment = 2;
                                cellWOAmt11.Colspan = 1;
                                //cellWOAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt11);
                                // totaltempgross1 += forConvert1;


                                PdfPCell cellWOAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellWOAmt1.HorizontalAlignment = 2;
                                cellWOAmt1.Colspan = 1;
                                //cellWOAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellWOAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdNFhs"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellNFHSAmt = new PdfPCell(new Phrase("NFHS Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt.HorizontalAlignment = 0;
                                cellNFHSAmt.Colspan = 1;
                                //cellNFHSAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt);

                                PdfPCell cellNFHSAmt11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt11.HorizontalAlignment = 2;
                                cellNFHSAmt11.Colspan = 1;
                                //cellNFHSAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt11);
                                totalcdNFhs += forConvert1;



                                PdfPCell cellNFHSAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellNFHSAmt1.HorizontalAlignment = 2;
                                cellNFHSAmt1.Colspan = 1;
                                //cellNFHSAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellNFHSAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["tempgross"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellSplDutiesAmt = new PdfPCell(new Phrase("Spl Duties Amt", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt.HorizontalAlignment = 0;
                                cellSplDutiesAmt.Colspan = 1;
                                //cellSplDutiesAmt.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt);

                                PdfPCell cellSplDutiesAmt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt11.HorizontalAlignment = 2;
                                cellSplDutiesAmt11.Colspan = 1;
                                //cellSplDutiesAmt11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt11);
                                // totaltempgross2 += forConvert1;

                                PdfPCell cellSplDutiesAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSplDutiesAmt1.HorizontalAlignment = 2;
                                cellSplDutiesAmt1.Colspan = 1;
                                //cellSplDutiesAmt1.MinimumHeight = 20;
                                tableEarnings.AddCell(cellSplDutiesAmt1);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Otamt"].ToString());


                            if (forConvert > 0)
                            {
                                PdfPCell cellIncentives = new PdfPCell(new Phrase("OT Amt  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellIncentives.HorizontalAlignment = 0;
                                cellIncentives.Colspan = 1;
                                //cellIncentives.MinimumHeight = 20;
                                tableEarnings.AddCell(cellIncentives);

                                forConvert1 = Convert.ToSingle(dt.Rows[i]["otrate"].ToString());
                                PdfPCell cellotrate11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellotrate11.HorizontalAlignment = 2;
                                cellotrate11.Colspan = 1;
                                //cellIncentives11.MinimumHeight = 20;
                                tableEarnings.AddCell(cellotrate11);
                                // totalotrate += forConvert1;

                                PdfPCell cellotamt1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellotamt1.HorizontalAlignment = 2;
                                cellotamt1.Colspan = 1;
                                tableEarnings.AddCell(cellotamt1);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Serviceweightage"].ToString());
                            forConvert1 = Convert.ToSingle(dt.Rows[i]["cdServiceweightage"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellConveyance = new PdfPCell(new Phrase("Service weightage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance.HorizontalAlignment = 0;
                                cellConveyance.Colspan = 1;
                                //cellConveyance.MinimumHeight = 20;
                                tableEarnings.AddCell(cellConveyance);


                                PdfPCell cellConveyance11 = new PdfPCell(new Phrase(forConvert1.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance11.HorizontalAlignment = 2;
                                cellConveyance11.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance11);
                                totalcdserviceweightage += forConvert1;


                                PdfPCell cellConveyance1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellConveyance1.HorizontalAlignment = 2;
                                cellConveyance1.Colspan = 1;
                                tableEarnings.AddCell(cellConveyance1);
                            }




                            PdfPCell ChildTable1 = new PdfPCell(tableEarnings);
                            ChildTable1.Colspan = 3;
                            ChildTable1.BorderWidthLeft = 0;
                            ChildTable1.BorderWidthRight = 0;
                            ChildTable1.BorderWidthLeft = 0;
                            ChildTable1.BorderWidthLeft = 0;
                            tablewageslip.AddCell(ChildTable1);



                            PdfPTable tableDeductions = new PdfPTable(2);
                            tableDeductions.TotalWidth = 220;
                            tableDeductions.LockedWidth = true;
                            float[] width2 = new float[] { 2f, 2f };
                            tableDeductions.SetWidths(width2);


                            PdfPCell cellHead11 = new PdfPCell(new Phrase("Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead11.HorizontalAlignment = 1;
                            cellHead11.Colspan = 1;
                            cellHead11.MinimumHeight = 20;
                            cellHead11.BackgroundColor = color;
                            tableDeductions.AddCell(cellHead11);


                            PdfPCell cellHead12 = new PdfPCell(new Phrase("Amount", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellHead12.HorizontalAlignment = 1;
                            cellHead12.Colspan = 1;
                            cellHead12.BackgroundColor = color;
                            tableDeductions.AddCell(cellHead12);

                            forConvert = Convert.ToSingle(dt.Rows[i]["PF"].ToString());
                            PFEmployer = Convert.ToSingle(dt.Rows[i]["PFEmpr"].ToString());

                            if ((forConvert + PFEmployer) > 0)
                            {

                                PdfPCell cellPF2 = new PdfPCell(new Phrase("PF Contribution", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF2.HorizontalAlignment = 0;
                                cellPF2.Colspan = 1;
                                //cellPF2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellPF2);


                                PdfPCell cellPF = new PdfPCell(new Phrase((forConvert + PFEmployer).ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellPF.HorizontalAlignment = 2;
                                cellPF.Colspan = 1;
                                tableDeductions.AddCell(cellPF);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["ESI"].ToString());
                            ESIEmployer = Convert.ToSingle(dt.Rows[i]["ESIEmpr"].ToString());

                            if ((forConvert + ESIEmployer) > 0)
                            {

                                PdfPCell cellESI2 = new PdfPCell(new Phrase("ESI Contribution", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellESI2.HorizontalAlignment = 0;
                                cellESI2.Colspan = 1;
                                //cellESI2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellESI2);


                                PdfPCell cellESI3 = new PdfPCell(new Phrase((forConvert + ESIEmployer).ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellESI3.HorizontalAlignment = 2;
                                cellESI3.Colspan = 1;
                                tableDeductions.AddCell(cellESI3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell ccellHRA2 = new PdfPCell(new Phrase("Professional Tax", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA2.HorizontalAlignment = 0;
                                ccellHRA2.Colspan = 1;
                                //ccellHRA2.MinimumHeight = 20;
                                tableDeductions.AddCell(ccellHRA2);


                                PdfPCell ccellHRA3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA3.HorizontalAlignment = 2;
                                ccellHRA3.Colspan = 1;
                                tableDeductions.AddCell(ccellHRA3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["Penalty"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell ccellHRA2 = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA2.HorizontalAlignment = 0;
                                ccellHRA2.Colspan = 1;
                                //ccellHRA2.MinimumHeight = 20;
                                tableDeductions.AddCell(ccellHRA2);


                                PdfPCell ccellHRA3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                ccellHRA3.HorizontalAlignment = 2;
                                ccellHRA3.Colspan = 1;
                                tableDeductions.AddCell(ccellHRA3);
                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["TDS"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTDS2 = new PdfPCell(new Phrase("TDS", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS2.HorizontalAlignment = 0;
                                cellTDS2.Colspan = 1;
                                //cellTDS2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellTDS2);


                                PdfPCell cellTDS3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS3.HorizontalAlignment = 2;
                                cellTDS3.Colspan = 1;
                                tableDeductions.AddCell(cellTDS3);
                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["SecurityDepDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTDS2 = new PdfPCell(new Phrase("Security Dep", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS2.HorizontalAlignment = 0;
                                cellTDS2.Colspan = 1;
                                //cellTDS2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellTDS2);


                                PdfPCell cellTDS3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTDS3.HorizontalAlignment = 2;
                                cellTDS3.Colspan = 1;
                                tableDeductions.AddCell(cellTDS3);
                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellAdvances2 = new PdfPCell(new Phrase("Canteen Adv", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellAdvances2.HorizontalAlignment = 0;
                                cellAdvances2.Colspan = 1;
                                //cellAdvances2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellAdvances2);


                                PdfPCell cellAdvances3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellAdvances3.HorizontalAlignment = 2;
                                cellAdvances3.Colspan = 1;
                                tableDeductions.AddCell(cellAdvances3);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["Fines"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellFines2 = new PdfPCell(new Phrase("Fines/Damage", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellFines2.HorizontalAlignment = 0;
                                cellFines2.Colspan = 1;
                                cellFines2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellFines2);


                                PdfPCell cellFines3 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellFines3.HorizontalAlignment = 2;
                                cellFines3.Colspan = 1;
                                tableDeductions.AddCell(cellFines3);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell celluniformded = new PdfPCell(new Phrase("Uniform", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celluniformded.HorizontalAlignment = 0;
                                celluniformded.Colspan = 1;
                                // celluniformded.MinimumHeight = 20;
                                tableDeductions.AddCell(celluniformded);


                                PdfPCell celluniformded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celluniformded1.HorizontalAlignment = 2;
                                celluniformded1.Colspan = 1;
                                tableDeductions.AddCell(celluniformded1);

                            }


                            forConvert = Convert.ToSingle(dt.Rows[i]["SalAdvDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsaladvded = new PdfPCell(new Phrase("Salary Advance", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded.HorizontalAlignment = 0;
                                cellsaladvded.Colspan = 1;
                                //cellsaladvded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsaladvded);


                                PdfPCell cellsaladvded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded1.HorizontalAlignment = 2;
                                cellsaladvded1.Colspan = 1;
                                tableDeductions.AddCell(cellsaladvded1);

                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["atmded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsaladvded = new PdfPCell(new Phrase("ATM Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded.HorizontalAlignment = 0;
                                cellsaladvded.Colspan = 1;
                                //cellsaladvded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsaladvded);


                                PdfPCell cellsaladvded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsaladvded1.HorizontalAlignment = 2;
                                cellsaladvded1.Colspan = 1;
                                tableDeductions.AddCell(cellsaladvded1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["WCded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell celltrngfeeded = new PdfPCell(new Phrase("WC Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celltrngfeeded.HorizontalAlignment = 0;
                                celltrngfeeded.Colspan = 1;
                                //celltrngfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(celltrngfeeded);


                                PdfPCell celltrngfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                celltrngfeeded1.HorizontalAlignment = 2;
                                celltrngfeeded1.Colspan = 1;
                                tableDeductions.AddCell(celltrngfeeded1);

                            }




                            forConvert = Convert.ToSingle(dt.Rows[i]["Advded"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Adv Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);


                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }
                            //idcardded 

                            forConvert = Convert.ToSingle(dt.Rows[i]["IDCardDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("ID Card Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);

                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);
                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["Extra"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Extra", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);

                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }



                            forConvert = Convert.ToSingle(dt.Rows[i]["LoanDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellbnkfeeded = new PdfPCell(new Phrase("Loan Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded.HorizontalAlignment = 0;
                                cellbnkfeeded.Colspan = 1;
                                //cellbnkfeeded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellbnkfeeded);


                                PdfPCell cellbnkfeeded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellbnkfeeded1.HorizontalAlignment = 2;
                                cellbnkfeeded1.Colspan = 1;
                                tableDeductions.AddCell(cellbnkfeeded1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["GeneralDed"].ToString());

                            if (forConvert > 0)
                            {
                                PdfPCell cellsecdepded = new PdfPCell(new Phrase("General Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsecdepded.HorizontalAlignment = 0;
                                cellsecdepded.Colspan = 1;
                                //cellsecdepded.MinimumHeight = 20;
                                tableDeductions.AddCell(cellsecdepded);


                                PdfPCell cellsecdepded1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsecdepded1.HorizontalAlignment = 2;
                                cellsecdepded1.Colspan = 1;
                                tableDeductions.AddCell(cellsecdepded1);

                            }
                            forConvert = Convert.ToSingle(dt.Rows[i]["OtherDedn"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellOtherDed = new PdfPCell(new Phrase("Other Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOtherDed.HorizontalAlignment = 0;
                                cellOtherDed.Colspan = 1;
                                //cellOtherDed.MinimumHeight = 20;
                                tableDeductions.AddCell(cellOtherDed);


                                PdfPCell cellOtherDed1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellOtherDed1.HorizontalAlignment = 2;
                                cellOtherDed1.Colspan = 1;
                                tableDeductions.AddCell(cellOtherDed1);

                            }


                            //OWF or SBS
                            forConvert = Convert.ToSingle(dt.Rows[i]["owf"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellSBS = new PdfPCell(new Phrase("Lab. Welfare Fund", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSBS.HorizontalAlignment = 0;
                                cellSBS.Colspan = 1;
                                //cellSBS.MinimumHeight = 20;
                                tableDeductions.AddCell(cellSBS);


                                PdfPCell cellSBS1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellSBS1.HorizontalAlignment = 2;
                                cellSBS1.Colspan = 1;
                                tableDeductions.AddCell(cellSBS1);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TDS"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellempty2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellempty2.HorizontalAlignment = 0;
                                cellempty2.Colspan = 1;
                                //cellempty2.MinimumHeight = 20;
                                tableDeductions.AddCell(cellempty2);


                                PdfPCell cellempty3 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellempty3.HorizontalAlignment = 2;
                                cellempty3.Colspan = 1;
                                tableDeductions.AddCell(cellempty3);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["TelephoneBillDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("Telephone Bill Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }

                            forConvert = Convert.ToSingle(dt.Rows[i]["PVCDed"].ToString());
                            if (forConvert > 0)
                            {
                                PdfPCell cellTelephoneBillDed = new PdfPCell(new Phrase("PVC Ded", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed.HorizontalAlignment = 0;
                                cellTelephoneBillDed.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed);


                                PdfPCell cellTelephoneBillDed2 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellTelephoneBillDed2.HorizontalAlignment = 2;
                                cellTelephoneBillDed2.Colspan = 1;
                                tableDeductions.AddCell(cellTelephoneBillDed2);

                            }



                            PdfPCell ChildTable2 = new PdfPCell(tableDeductions);
                            ChildTable2.Colspan = 2;
                            ChildTable2.BorderWidthLeft = 0;
                            ChildTable2.BorderWidthRight = 0;
                            ChildTable2.BorderWidthLeft = 0;
                            ChildTable2.BorderWidthLeft = 0;
                            tablewageslip.AddCell(ChildTable2);




                            totalstandradamt = totalcdBasic + totalcdDA + totalcdLeaveAmount + totalcdConveyance + totalcdWashAllowance + totalcdHRA + totalcdNFhs + totalcdBonus + totalcdCCA + totalcdGratuity + totalcdotherAllowance + totalcdfoodallw + totalcdMedicalallw + totalcdSplAllowance + totalcdTravelAllw + totalcdPerformanceallw + totalcdMobileallw + totalcdserviceweightage + totalrc + totalcs;


                            PdfPCell cellgrans = new PdfPCell(new Phrase("Total", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellgrans.HorizontalAlignment = 0;
                            cellgrans.Colspan = 1;
                            //cellSplDutiesAmt.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans);

                            PdfPCell cellgrans1 = new PdfPCell(new Phrase(totalstandradamt.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellgrans1.HorizontalAlignment = 2;
                            cellgrans1.Colspan = 1;
                            //cellSplDutiesAmt11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans1);

                            //forConvert5 = (Convert.ToSingle(dt.Rows[i]["Otamt"].ToString()) + Convert.ToSingle(dt.Rows[i]["npotsamt"].ToString()) + Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString()) + Convert.ToSingle(dt.Rows[i]["WOAmt"].ToString()) + Convert.ToSingle(dt.Rows[i]["Nhsamt"].ToString()) + Convert.ToSingle(dt.Rows[i]["CCA"].ToString()) + Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString()) + Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString()) + Convert.ToSingle(dt.Rows[i]["LeaveEncashAmt"].ToString()) + Convert.ToSingle(dt.Rows[i]["Bonus"].ToString()) + Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString()) + Convert.ToSingle(dt.Rows[i]["WashAllowance"].ToString()) + Convert.ToSingle(dt.Rows[i]["HRA"].ToString()) + Convert.ToSingle(dt.Rows[i]["Basic"].ToString()) + Convert.ToSingle(dt.Rows[i]["DA"].ToString()) + Convert.ToSingle(dt.Rows[i]["incentivs"].ToString()) + Convert.ToSingle(dt.Rows[i]["FoodAllowance"].ToString()) + Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString()) + Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString()) + Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString()) + Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString()) + Convert.ToSingle(dt.Rows[i]["MedicalAllowance"].ToString()));

                            forConvert5 = Convert.ToSingle(dt.Rows[i]["Totalearnings"].ToString());

                            PdfPCell cellgrans2 = new PdfPCell(new Phrase(forConvert5.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellgrans2.HorizontalAlignment = 2;
                            cellgrans2.Colspan = 1;
                            //cellSplDutiesAmt1.MinimumHeight = 20;
                            tablewageslip.AddCell(cellgrans2);


                            PdfPCell cellTotalDed = new PdfPCell(new Phrase("Total Deductions", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotalDed.HorizontalAlignment = 0;
                            cellTotalDed.Colspan = 1;
                            tablewageslip.AddCell(cellTotalDed);

                            // forConvert = Convert.ToSingle(dt.Rows[i]["Deductions"].ToString());
                            forConvert = Convert.ToSingle(dt.Rows[i]["TotalDeductions"].ToString());
                            PdfPCell cellTotalDed1 = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotalDed1.HorizontalAlignment = 2;
                            cellTotalDed1.Colspan = 1;
                            tablewageslip.AddCell(cellTotalDed1);

                            PdfPCell cellTotal = new PdfPCell(new Phrase("Net Pay", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotal.HorizontalAlignment = 0;
                            cellTotal.Colspan = 1;
                            // cellTotal.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal);

                            PdfPCell cellTotal11 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellTotal11.HorizontalAlignment = 2;
                            cellTotal11.Colspan = 1;
                            //cellTotal11.MinimumHeight = 20;
                            tablewageslip.AddCell(cellTotal11);

                            forConvert = Convert.ToSingle(dt.Rows[i]["Actualamount"].ToString());
                            string gtotal = NumberToEnglish.Instance.changeNumericToWords(forConvert.ToString("#"));

                            PdfPCell cellTotal1 = new PdfPCell(new Phrase("Rs. " + forConvert.ToString("0.00"), FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellTotal1.HorizontalAlignment = 2;
                            cellTotal1.Colspan = 1;
                            tablewageslip.AddCell(cellTotal1);

                            PdfPCell cellEmptycell = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellEmptycell.HorizontalAlignment = 0;
                            cellEmptycell.Colspan = 2;
                            //cellIncentives.MinimumHeight = 20;
                            tablewageslip.AddCell(cellEmptycell);




                            PdfPCell cellInWords = new PdfPCell(new Phrase("Rupees " + gtotal.Trim() + " Only", FontFactory.GetFont(fontsyle, Fontsize, Font.ITALIC, BaseColor.BLACK)));
                            cellInWords.HorizontalAlignment = 0;
                            cellInWords.Colspan = 5;
                            cellInWords.Border = 0;
                            tablewageslip.AddCell(cellInWords);


                            PdfPCell cellemptycell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellemptycell.HorizontalAlignment = 0;
                            cellemptycell.Colspan = 5;
                            cellemptycell.BorderWidthLeft = 0;
                            cellemptycell.BorderWidthRight = 0;
                            cellemptycell.BorderWidthTop = 0;
                            cellemptycell.BorderWidthBottom = .5f;
                            tablewageslip.AddCell(cellemptycell);

                            PdfPCell companyname1 = new PdfPCell(new Phrase("''This is computer generated wage slip, requires no signature''", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLDITALIC, BaseColor.BLACK)));
                            companyname1.HorizontalAlignment = 2;
                            companyname1.Colspan = 5;
                            companyname1.Border = 0;
                            companyname1.PaddingBottom = 30;
                            tablewageslip.AddCell(companyname1);

                            PdfPCell cellcmnyadd1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                            cellcmnyadd1.HorizontalAlignment = 2;
                            cellcmnyadd1.Colspan = 5;
                            cellcmnyadd1.MinimumHeight = 10;
                            cellcmnyadd1.Border = 0;
                            cellcmnyadd1.PaddingTop = 60;
                            //  tablewageslip.AddCell(cellcmnyadd1);





                            PdfPCell cellsignature = new PdfPCell(new Phrase("Employer Seal & Sign", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                            cellsignature.HorizontalAlignment = 2;
                            cellsignature.Colspan = 3;
                            cellsignature.Border = 0;
                            // tablewageslip.AddCell(cellsignature);


                            document.Add(tablewageslip);

                            if (ChkPerOne.Checked == true)
                            {
                                slipsCount++;
                                if (slipsCount == 2)
                                {
                                    slipsCount = 0;
                                    document.NewPage();
                                }
                            }
                            else
                            {
                                slipsCount++;
                                if (slipsCount == 3)
                                {
                                    slipsCount = 0;
                                    document.NewPage();
                                }
                            }



                            #endregion Basic Information of the Employee

                        }
                    }

                    string filename = ddlcname.SelectedItem.Text + "/PaySheet Slips for-" + GetMonthName() + " -" + GetMonthOfYear() + ".pdf";

                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=\"" + filename + "\"");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }
            }
            catch (Exception ex)
            {


            }
        }

        protected void btnwageregister_Click(object sender, EventArgs e)
        {
            try
            {

                int FONT_SIZE = int.Parse(ddlfontSize.SelectedValue);
                int titleofdocumentindex = 0;
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                    return;
                }

                int payMonth = GetMonth(ddlmonth.SelectedValue);
                //int month = GetMonthAndYear();
                int month = GetMonthBasedOnSelectionDateorMonth();

                string selectmonth = string.Empty;
                string SelectmonthWithbankacno = string.Empty;
                string SelectmonthWithoutbankacno = string.Empty;
                DataTable dt = null;


                var clientid = ddlClients.SelectedValue;
                var Paysheetoption = ddlpaymenttype.SelectedIndex;
                if (ddlpaymenttype.SelectedIndex == 0)
                {
                    Paysheetoption = 0;

                }
                else if (ddlpaymenttype.SelectedIndex == 1)
                {
                    Paysheetoption = 1;

                }
                else if (ddlpaymenttype.SelectedIndex == 2)
                {
                    Paysheetoption = 2;

                }

                else if (ddlpaymenttype.SelectedIndex == 4)
                {
                    Paysheetoption = 5;
                }
                var Noofattendance = ddlnoofattendance.SelectedIndex;
                //var pfesioptions = ddl_Pf_Esi_Options.SelectedIndex;

                var SPName = "";
                Hashtable HTPaysheet = new Hashtable();
                SPName = "IMEPaysheetpdfs";
                HTPaysheet.Add("@ClientId", clientid);
                HTPaysheet.Add("@month", month);
                HTPaysheet.Add("@PaymentOption", Paysheetoption);
                dt = config.ExecuteAdaptorAsyncWithParams(SPName, HTPaysheet).Result;

                MemoryStream ms = new MemoryStream();
                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL.Rotate());
                    PdfWriter writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    document.AddTitle("FaMS");
                    document.AddAuthor("WebWonders");
                    document.AddSubject("Wage Sheet");
                    document.AddKeywords("Keyword1, keyword2, …");//
                    float forConvert;
                    string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                    DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
                    string companyName1 = "Your Company Name";
                    string companyAddress = "Your Company Address";
                    if (compInfo.Rows.Count > 0)
                    {
                        companyName1 = compInfo.Rows[0]["CompanyName"].ToString();
                        companyAddress = compInfo.Rows[0]["Address"].ToString();
                    }

                    #region Variables for table cells counting

                    int IDCardDed = 0;
                    int Extra = 0;
                    float IDCardDed1 = 0;
                    float Extra1 = 0;

                    int dts = 0;
                    int ATMDed = 0;

                    int srate = 0;
                    int basic = 0;
                    int da = 0;
                    int hra = 0;
                    int cca = 0;
                    int conveyance = 0;
                    int washallowance = 0;
                    int otherallowance = 0;
                    int SplAllowance = 0;
                    int TravelAllw = 0;
                    int PerformanceAllw = 0;
                    int MobileAllw = 0;
                    int leavewages = 0;
                    int gratuity = 0;
                    int bonus = 0;
                    int nfhs = 0;
                    int rc = 0;
                    int cs = 0;
                    int gross = 0;
                    int incentivs = 0;
                    int pfonduties = 0;
                    int esionduties = 0;
                    int proftax = 0;
                    int salAdvDed = 0;
                    int SecdepDed = 0;
                    int LoanDed = 0;
                    int uniformDed = 0;
                    int AdvDed = 0;
                    int WCDed = 0;
                    int otherDed = 0;
                    int canteenAdv = 0;
                    int penalty = 0;
                    int totalDeductions = 0;
                    int netpay = 0;
                    int cfoodallowance = 0;
                    int cmedicalallowance = 0;
                    int ots = 0;
                    int otamt = 0;
                    int nhs = 0;
                    int ldays = 0;
                    int TotalPayableDays = 0;
                    int nhsamt = 0;
                    int wo = 0;
                    int woamt = 0;
                    int pfonot = 0;
                    int esionot = 0;
                    int Pf = 0;
                    int Esi = 0;
                    int GenDedn = 0;
                    int SecDepDedn = 0;
                    int owf = 0;
                    int TelephoneBillDed = 0;
                    int Esiempr = 0;
                    int pfempr = 0;
                    int ctc = 0;
                    int addlamount = 0;
                    int ServiceWeightage = 0;
                    int PVCAmount = 0;
                    int AddlAmount = 0;
                    int Npotsamt = 0;
                    int OThrs = 0;
                    int OTHrsAmt = 0;



                    float ATMDed1 = 0;
                    float owf1 = 0;
                    float dts1 = 0;
                    float srate1 = 0;
                    float basic1 = 0;
                    float da1 = 0;
                    float hra1 = 0;
                    float cca1 = 0;
                    float conveyance1 = 0;
                    float washallowance1 = 0;
                    float otherallowance1 = 0;
                    float SplAllowance1 = 0;
                    float ldays1 = 0;
                    float TotalPayableDays1 = 0;
                    float TravelAllw1 = 0;
                    float PerformanceAllw1 = 0;
                    float MobileAllw1 = 0;
                    float leavewages1 = 0;
                    float gratuity1 = 0;
                    float bonus1 = 0;
                    float nfhs1 = 0;
                    float rc1 = 0;
                    float cs1 = 0;
                    float gross1 = 0;
                    float incentivs1 = 0;
                    float pfonduties1 = 0;
                    float esionduties1 = 0;
                    float proftax1 = 0;
                    float salAdvDed1 = 0;
                    float uniformDed1 = 0;
                    float AdvDed1 = 0;
                    float WCDed1 = 0;
                    float otherDed1 = 0;
                    float canteenAdv1 = 0;
                    float penalty1 = 0;
                    float totalDeductions1 = 0;
                    float LoanDed1 = 0;
                    float netpay1 = 0;
                    float cfoodallowance1 = 0;
                    float cmedicalallowance1 = 0;
                    float ots1 = 0;
                    float otamt1 = 0;
                    float nhs1 = 0;
                    float nhsamt1 = 0;
                    float wo1 = 0;
                    float woamt1 = 0;
                    float pfonot1 = 0;
                    float esionot1 = 0;
                    float Pf1 = 0;
                    float Esi1 = 0;
                    float GenDedn1 = 0;
                    float SecDepDedn1 = 0;
                    float TelephoneBillDed1 = 0;
                    float ESIEmpr1 = 0;
                    float PFEmpr1 = 0;
                    float ctc1 = 0;
                    float addlamount1 = 0;
                    float ServiceWeightage1 = 0;
                    float PVCAmount1 = 0;

                    float Npotsamt1 = 0;
                    float OTHrs1 = 0;
                    float OTHrsamt1 = 0;

                    #endregion

                    #region Data for counting tablecells

                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        dts1 = float.Parse(dt.Rows[i]["NoOfDuties"].ToString());
                        if (dts1 != 0)
                        {
                            dts1 += 1;
                            if (dts1 > 0)
                            {
                                dts = 1;
                            }
                        }

                        ldays1 = float.Parse(dt.Rows[i]["ldays"].ToString());
                        if (ldays1 != 0)
                        {
                            ldays1 += 1;
                            if (ldays1 > 0)
                            {
                                ldays = 1;
                            }
                        }


                        TotalPayableDays1 = float.Parse(dt.Rows[i]["TotalPayableDays"].ToString());
                        if (TotalPayableDays1 != 0)
                        {
                            TotalPayableDays1 += 1;
                            if (TotalPayableDays1 > 0)
                            {
                                TotalPayableDays = 1;
                            }
                        }


                        IDCardDed1 = float.Parse(dt.Rows[i]["IDCardDed"].ToString());
                        if (IDCardDed1 != 0)
                        {
                            IDCardDed1 += 1;
                            if (IDCardDed1 > 0)
                            {
                                IDCardDed = 1;
                            }
                        }

                        Extra1 = float.Parse(dt.Rows[i]["Extra"].ToString());
                        if (Extra1 != 0)
                        {
                            Extra1 += 1;
                            if (Extra1 > 0)
                            {
                                Extra = 1;
                            }
                        }

                        srate1 = float.Parse(dt.Rows[i]["SalRate"].ToString());
                        if (srate1 != 0)
                        {
                            srate1 += 1;
                            if (srate1 > 0)
                            {
                                srate = 1;
                            }
                        }

                        ATMDed1 = float.Parse(dt.Rows[i]["ATMDed"].ToString());
                        if (ATMDed1 != 0)
                        {
                            ATMDed1 += 1;
                            if (ATMDed1 > 0)
                            {
                                ATMDed = 1;
                            }
                        }


                        basic1 = float.Parse(dt.Rows[i]["basic"].ToString());
                        if (basic1 != 0)
                        {
                            basic1 += 1;
                            if (basic1 > 0)
                            {
                                basic = 1;
                            }
                        }
                        da1 = float.Parse(dt.Rows[i]["da"].ToString());
                        if (da1 != 0)
                        {
                            da1 += 1;
                            if (da1 > 0)
                            {
                                da = 1;
                            }
                        }
                        hra1 = float.Parse(dt.Rows[i]["hra"].ToString());
                        if (hra1 != 0)
                        {
                            hra1 += 1;
                            if (hra1 > 0)
                            {
                                hra = 1;
                            }
                        }
                        cca1 = float.Parse(dt.Rows[i]["cca"].ToString());
                        if (cca1 != 0)
                        {
                            cca1 += 1;
                            if (cca1 > 0)
                            {
                                cca = 1;
                            }
                        }
                        conveyance1 = float.Parse(dt.Rows[i]["Conveyance"].ToString());
                        if (conveyance1 != 0)
                        {
                            conveyance1 += 1;
                            if (conveyance1 > 0)
                            {
                                conveyance = 1;
                            }
                        }

                        washallowance1 = float.Parse(dt.Rows[i]["washallowance"].ToString());
                        if (washallowance1 != 0)
                        {
                            washallowance1 += 1;
                            if (washallowance1 > 0)
                            {
                                washallowance = 1;
                            }
                        }
                        otherallowance1 = float.Parse(dt.Rows[i]["otherallowance"].ToString());
                        if (otherallowance1 != 0)
                        {
                            otherallowance1 += 1;
                            if (otherallowance1 > 0)
                            {
                                otherallowance = 1;
                            }
                        }
                        SplAllowance1 = float.Parse(dt.Rows[i]["SplAllowance"].ToString());
                        if (SplAllowance1 != 0)
                        {
                            SplAllowance1 += 1;
                            if (SplAllowance1 > 0)
                            {
                                SplAllowance = 1;
                            }
                        }

                        TravelAllw1 = float.Parse(dt.Rows[i]["TravelAllw"].ToString());
                        if (TravelAllw1 != 0)
                        {
                            TravelAllw1 += 1;
                            if (TravelAllw1 > 0)
                            {
                                TravelAllw = 1;
                            }
                        }

                        PerformanceAllw1 = float.Parse(dt.Rows[i]["PerformanceAllw"].ToString());
                        if (PerformanceAllw1 != 0)
                        {
                            PerformanceAllw1 += 1;
                            if (PerformanceAllw1 > 0)
                            {
                                PerformanceAllw = 1;
                            }
                        }

                        MobileAllw1 = float.Parse(dt.Rows[i]["MobileAllw"].ToString());
                        if (MobileAllw1 != 0)
                        {
                            MobileAllw1 += 1;
                            if (MobileAllw1 > 0)
                            {
                                MobileAllw = 1;
                            }
                        }

                        leavewages1 = float.Parse(dt.Rows[i]["Leavewages"].ToString());
                        if (leavewages1 != 0)
                        {
                            leavewages1 += 1;
                            if (leavewages1 > 0)
                            {
                                leavewages = 1;
                            }
                        }
                        gratuity1 = float.Parse(dt.Rows[i]["gratuity"].ToString());
                        if (gratuity1 != 0)
                        {
                            gratuity1 += 1;
                            if (gratuity1 > 0)
                            {
                                gratuity = 1;
                            }
                        }
                        bonus1 = float.Parse(dt.Rows[i]["bonus"].ToString());
                        if (bonus1 != 0)
                        {
                            bonus1 += 1;
                            if (bonus1 > 0)
                            {
                                bonus = 1;
                            }
                        }

                        nfhs1 = float.Parse(dt.Rows[i]["nfhs"].ToString());
                        if (nfhs1 != 0)
                        {
                            nfhs1 += 1;
                            if (nfhs1 > 0)
                            {
                                nfhs = 1;
                            }
                        }
                        rc1 = float.Parse(dt.Rows[i]["rc"].ToString());
                        if (rc1 != 0)
                        {
                            rc1 += 1;
                            if (rc1 > 0)
                            {
                                rc = 1;
                            }
                        }

                        cs1 = float.Parse(dt.Rows[i]["cs"].ToString());
                        if (cs1 != 0)
                        {
                            cs1 += 1;
                            if (cs1 > 0)
                            {
                                cs = 1;
                            }
                        }
                        gross1 = float.Parse(dt.Rows[i]["gross"].ToString());
                        if (gross1 != 0)
                        {
                            gross1 += 1;
                            if (gross1 > 0)
                            {
                                gross = 1;
                            }
                        }

                        incentivs1 = float.Parse(dt.Rows[i]["incentivs"].ToString());
                        if (incentivs1 != 0)
                        {
                            incentivs1 += 1;
                            if (incentivs1 > 0)
                            {
                                incentivs = 1;
                            }
                        }


                        cfoodallowance1 = float.Parse(dt.Rows[i]["foodallowance"].ToString());
                        if (cfoodallowance1 != 0)
                        {
                            cfoodallowance1 += 1;
                            if (cfoodallowance1 > 0)
                            {
                                cfoodallowance = 1;
                            }
                        }

                        cmedicalallowance1 = float.Parse(dt.Rows[i]["medicalallowance"].ToString());
                        if (cmedicalallowance1 != 0)
                        {
                            cmedicalallowance1 += 1;
                            if (cmedicalallowance1 > 0)
                            {
                                cmedicalallowance = 1;
                            }
                        }

                        //CHanged to zero so as to get PF and ESI in PFTotal and ESITotal as given below //Check PFTotal and ESITotal
                        pfonduties1 = float.Parse(dt.Rows[i]["PFonDuties"].ToString());
                        if (pfonduties1 != 0)
                        {
                            pfonduties1 += 1;
                            if (pfonduties1 > 0)
                            {
                                pfonduties = 0;
                            }
                        }
                        esionduties1 = float.Parse(dt.Rows[i]["ESIonduties"].ToString());
                        if (esionduties1 != 0)
                        {
                            esionduties1 += 1;
                            if (esionduties1 > 0)
                            {
                                esionduties = 0;
                            }
                        }
                        proftax1 = float.Parse(dt.Rows[i]["proftax"].ToString());
                        if (proftax1 != 0)
                        {
                            proftax1 += 1;
                            if (proftax1 > 0)
                            {
                                proftax = 1;
                            }
                        }
                        salAdvDed1 = float.Parse(dt.Rows[i]["salAdvDed"].ToString());
                        if (salAdvDed1 != 0)
                        {
                            salAdvDed1 += 1;
                            if (salAdvDed1 > 0)
                            {
                                salAdvDed = 1;
                            }
                        }


                        LoanDed1 = float.Parse(dt.Rows[i]["LoanDed"].ToString());
                        if (LoanDed1 != 0)
                        {
                            LoanDed1 += 1;
                            if (LoanDed1 > 0)
                            {
                                LoanDed = 1;
                            }
                        }
                        uniformDed1 = float.Parse(dt.Rows[i]["uniformDed"].ToString());
                        if (uniformDed1 != 0)
                        {
                            uniformDed1 += 1;
                            if (uniformDed1 > 0)
                            {
                                uniformDed = 1;
                            }
                        }
                        AdvDed1 = float.Parse(dt.Rows[i]["AdvDed"].ToString());
                        if (AdvDed1 != 0)
                        {
                            AdvDed1 += 1;
                            if (AdvDed1 > 0)
                            {
                                AdvDed = 1;
                            }
                        }
                        WCDed1 = float.Parse(dt.Rows[i]["WCDed"].ToString());
                        if (WCDed1 != 0)
                        {
                            WCDed1 += 1;
                            if (WCDed1 > 0)
                            {
                                WCDed = 1;
                            }
                        }

                        //GenDedn1 = float.Parse(dt.Rows[i]["GenDedn"].ToString());
                        //if (GenDedn1 != 0)
                        //{
                        //    GenDedn1 += 1;
                        //    if (GenDedn1 > 0)
                        //    {
                        //        GenDedn = 1;
                        //    }
                        //}

                        SecDepDedn1 = float.Parse(dt.Rows[i]["SecDepDedn"].ToString());
                        if (SecDepDedn1 != 0)
                        {
                            SecDepDedn1 += 1;
                            if (SecDepDedn1 > 0)
                            {
                                SecDepDedn = 1;
                            }
                        }

                        otherDed1 = float.Parse(dt.Rows[i]["otherDed"].ToString());
                        if (otherDed1 != 0)
                        {
                            otherDed1 += 1;
                            if (otherDed1 > 0)
                            {
                                otherDed = 1;
                            }
                        }
                        canteenAdv1 = float.Parse(dt.Rows[i]["canteenAdv"].ToString());
                        if (canteenAdv1 != 0)
                        {
                            canteenAdv1 += 1;
                            if (canteenAdv1 > 0)
                            {
                                canteenAdv = 1;
                            }
                        }

                        penalty1 = float.Parse(dt.Rows[i]["penalty"].ToString());
                        if (penalty1 != 0)
                        {
                            penalty1 += 1;
                            if (penalty1 > 0)
                            {
                                penalty = 1;
                            }
                        }
                        TelephoneBillDed1 = float.Parse(dt.Rows[i]["TelephoneBillDed"].ToString());
                        if (TelephoneBillDed1 != 0)
                        {
                            TelephoneBillDed1 += 1;
                            if (TelephoneBillDed1 > 0)
                            {
                                TelephoneBillDed = 1;
                            }
                        }
                        totalDeductions1 = float.Parse(dt.Rows[i]["Totaldeduct"].ToString());
                        if (totalDeductions1 != 0)
                        {
                            totalDeductions1 += 1;
                            if (totalDeductions1 > 0)
                            {
                                totalDeductions = 1;
                            }
                        }
                        netpay1 = float.Parse(dt.Rows[i]["NetAmount"].ToString());
                        if (netpay1 != 0)
                        {
                            netpay1 += 1;
                            if (netpay1 > 0)
                            {
                                netpay = 1;
                            }
                        }

                        ots1 = float.Parse(dt.Rows[i]["Duties"].ToString());
                        if (ots1 != 0)
                        {
                            ots1 += 1;
                            if (ots1 > 0)
                            {
                                ots = 1;
                            }
                        }

                        otamt1 = float.Parse(dt.Rows[i]["Amount"].ToString());
                        if (otamt1 != 0)
                        {
                            otamt1 += 1;
                            if (otamt1 > 0)
                            {
                                otamt = 1;
                            }
                        }

                        //

                        nhs1 = float.Parse(dt.Rows[i]["nhs"].ToString());
                        if (nhs1 != 0)
                        {
                            nhs1 += 1;
                            if (nhs1 > 0)
                            {
                                nhs = 1;
                            }
                        }

                        nhsamt1 = float.Parse(dt.Rows[i]["nhsamt"].ToString());
                        if (nhsamt1 != 0)
                        {
                            nhsamt1 += 1;
                            if (nhsamt1 > 0)
                            {
                                nhsamt = 1;
                            }
                        }


                        //


                        //

                        wo1 = float.Parse(dt.Rows[i]["Wo"].ToString());
                        if (wo1 != 0)
                        {
                            wo1 += 1;
                            if (wo1 > 0)
                            {
                                wo = 1;
                            }
                        }

                        woamt1 = float.Parse(dt.Rows[i]["woamt"].ToString());
                        if (woamt1 != 0)
                        {
                            woamt1 += 1;
                            if (woamt1 > 0)
                            {
                                woamt = 1;
                            }
                        }


                        //

                        pfonot1 = float.Parse(dt.Rows[i]["PFONOT"].ToString());
                        if (pfonot1 != 0)
                        {
                            pfonot1 += 1;
                            if (pfonot1 > 0)
                            {
                                pfonot = 0;
                            }
                        }

                        esionot1 = float.Parse(dt.Rows[i]["ESIONOT"].ToString());
                        if (esionot1 != 0)
                        {
                            esionot1 += 1;
                            if (esionot1 > 0)
                            {
                                esionot = 0;
                            }
                        }

                        Pf1 = float.Parse(dt.Rows[i]["PFTotal"].ToString());
                        if (Pf1 != 0)
                        {
                            Pf1 += 1;
                            if (Pf1 > 0)
                            {
                                Pf = 1;
                            }
                        }
                        Esi1 = float.Parse(dt.Rows[i]["ESITotal"].ToString());
                        if (Esi1 != 0)
                        {
                            Esi1 += 1;
                            if (Esi1 > 0)
                            {
                                Esi = 1;
                            }
                        }

                        owf1 = float.Parse(dt.Rows[i]["owf"].ToString());
                        if (owf1 != 0)
                        {
                            owf1 += 1;
                            if (owf1 > 0)
                            {
                                owf = 1;
                            }
                        }


                        ESIEmpr1 = float.Parse(dt.Rows[i]["ESIEmpr"].ToString());
                        if (ESIEmpr1 != 0)
                        {
                            ESIEmpr1 += 1;
                            if (ESIEmpr1 > 0)
                            {
                                Esiempr = 1;
                            }
                        }

                        PFEmpr1 = float.Parse(dt.Rows[i]["PFEmpr"].ToString());
                        if (PFEmpr1 != 0)
                        {
                            PFEmpr1 += 1;
                            if (PFEmpr1 > 0)
                            {
                                pfempr = 1;
                            }
                        }

                        addlamount1 = float.Parse(dt.Rows[i]["AddlAmount"].ToString());
                        if (addlamount1 != 0)
                        {
                            addlamount1 += 1;
                            if (addlamount1 > 0)
                            {
                                addlamount = 1;
                            }
                        }

                        ServiceWeightage1 = float.Parse(dt.Rows[i]["Serviceweightage"].ToString());
                        if (ServiceWeightage1 != 0)
                        {
                            ServiceWeightage1 += 1;
                            if (ServiceWeightage1 > 0)
                            {
                                ServiceWeightage = 1;
                            }
                        }

                        PVCAmount1 = float.Parse(dt.Rows[i]["PVCAmount"].ToString());
                        if (PVCAmount1 != 0)
                        {
                            PVCAmount1 += 1;
                            if (PVCAmount1 > 0)
                            {
                                PVCAmount = 1;
                            }
                        }

                        Npotsamt1 = float.Parse(dt.Rows[i]["Npotsamt"].ToString());
                        if (Npotsamt1 != 0)
                        {
                            Npotsamt1 += 1;
                            if (Npotsamt1 > 0)
                            {
                                Npotsamt = 1;
                            }
                        }

                        OTHrs1 = float.Parse(dt.Rows[i]["OTHrs"].ToString());
                        if (OTHrs1 != 0)
                        {
                            OTHrs1 += 1;
                            if (OTHrs1 > 0)
                            {
                                OThrs = 1;
                            }
                        }

                        OTHrsamt1 = float.Parse(dt.Rows[i]["OTHrsAmt"].ToString());
                        if (OTHrsamt1 != 0)
                        {
                            OTHrsamt1 += 1;
                            if (OTHrsamt1 > 0)
                            {
                                OTHrsAmt = 1;
                            }
                        }



                    }

                    #endregion



                    int sno = 1;
                    int empid = 1;
                    int empname = 1;
                    int design = 1;
                    int bankacno = 1;

                    int advdue = 0;

                    ctc = 1;

                    srate = 0;
                    pfonduties = 0;
                    esionduties = 0;
                    pfonot = 0;
                    esionot = 0;
                    ldays = 0;
                    //ots =0;
                    nhs = 0;
                    wo = 0;
                    //dts = 0;
                    ldays = 0;

                    if ((uniformDed) > 0)
                    {
                        advdue = 1;
                    }


                    int tableCells = dts + ldays + TotalPayableDays + srate + basic + da + hra + cca + conveyance + washallowance + otherallowance + SplAllowance + TravelAllw + PerformanceAllw + MobileAllw + leavewages + PVCAmount + ServiceWeightage + OThrs + OTHrsAmt +
                                    gratuity + bonus + nfhs + rc + cs + gross + incentivs + pfonduties + esionduties + proftax +
                                    salAdvDed + uniformDed + ATMDed + IDCardDed + Extra + otherDed + canteenAdv + penalty + totalDeductions + netpay + sno + TelephoneBillDed + Esiempr + pfempr + ctc + addlamount + Npotsamt +
                                    empid + empname + design + bankacno + ots + otamt + wo + woamt + nhs + nhsamt + advdue + pfonot + esionot + Pf + Esi + GenDedn + SecDepDedn + LoanDed + AdvDed + WCDed + cfoodallowance + cmedicalallowance + owf;




                    #region variables for total

                    float totalIDCardDed = 0;
                    float totalExtra = 0;
                    float totalDuties = 0;
                    float totalLdays = 0;
                    float totalTotalPayableDays = 0;
                    float totalATMDed = 0;
                    float totalsrate = 0;
                    float totalBasic = 0;
                    float totalDA = 0;
                    float totalHRA = 0;
                    float totalCCA = 0;
                    float totalConveyance = 0;
                    float totalWA = 0;
                    float totalOA = 0;
                    float totalSplAllowance = 0;
                    float totalTravelAllw = 0;
                    float totalPerformanceAllw = 0;
                    float totalMobileAllw = 0;
                    float totalLw = 0;
                    float totalGratuity = 0;
                    float totalbonus = 0;
                    float totalNfhs = 0;
                    float totalRc = 0;
                    float totalCs = 0;
                    float totalGross = 0;
                    float totalIncentivs = 0;
                    float totalPFondts = 0;
                    float totalESIondts = 0;
                    float totalProfTax = 0;
                    float totalSalAdv = 0;
                    float totalUniforDed = 0;
                    float totalOtherdedn = 0;
                    float totalCanteenAdv = 0;
                    float totalPenalty = 0;
                    float totalDed = 0;
                    float totalNetpay = 0;
                    float totalAdvDed = 0;
                    float totalWCDed = 0;
                    float totalots = 0;
                    float totalotamt = 0;
                    float totalpfonots = 0;
                    float totalesionots = 0;
                    float totalpf = 0;
                    float totalesi = 0;
                    float totalGenDedn = 0;
                    float totalSecDepDedn = 0;
                    float totalLoanDed = 0;
                    float totalwos = 0;
                    float totalwoamt = 0;
                    float totalnhs = 0;
                    float totalnhsamt = 0;
                    float totalfoodallowance = 0;
                    float totalmedicalallowance = 0;
                    float totalowf = 0;
                    float totalAmountdue = 0;
                    float totalTelephoneBillDed = 0;
                    float totaladdlamount = 0;
                    float TotalEsiempr = 0;
                    float Totalpfempr = 0;
                    float TotalCTC = 0;
                    float TotalServiceWeightage = 0;
                    float TotalPVCAmount = 0;
                    float Totalnpotsamt = 0;
                    float TotalOTHrs = 0;
                    float TotalOTHrsAmt = 0;

                    #endregion

                    #region variables for  Grand  total
                    float GrandtotalAdvDed = 0;
                    float GrandtotalIDCardDed = 0;
                    float GrandtotalExtra = 0;
                    float GrandtotalATMDed = 0;
                    float GrandtotalWCDed = 0;
                    float GrandtotalDuties = 0;
                    float GrandtotalLdays = 0;
                    float GrandtotalTotalPayableDays = 0;
                    float GrandtotalSrate = 0;
                    float GrandtotalBasic = 0;
                    float GrandtotalDA = 0;
                    float GrandtotalHRA = 0;
                    float GrandtotalCCA = 0;
                    float GrandtotalConveyance = 0;
                    float GrandtotalWA = 0;
                    float GrandtotalOA = 0;
                    float GrandtotalSplAllowance = 0;
                    float GrandtotalTravelAllw = 0;
                    float GrandtotalPerformanceAllw = 0;
                    float GrandtotalMobileAllw = 0;
                    float GrandtotalLw = 0;
                    float GrandtotalGratuity = 0;
                    float Grandtotalbonus = 0;
                    float GrandtotalNfhs = 0;
                    float GrandtotalRc = 0;
                    float GrandtotalCs = 0;
                    float GrandtotalGross = 0;
                    float GrandtotalIncentivs = 0;
                    float GrandtotalPFondts = 0;
                    float GrandtotalESIondts = 0;
                    float GrandtotalProfTax = 0;
                    float GrandtotalSalAdv = 0;
                    float GrandtotalUniforDed = 0;
                    float GrandtotalOtherdedn = 0;
                    float GrandtotalCanteenAdv = 0;
                    float GrandtotalPenalty = 0;
                    float GrandtotalDed = 0;
                    float GrandtotalNetpay = 0;
                    float Grandtotalots = 0;
                    float Grandtotalotamt = 0;
                    float Grandtotalpfonots = 0;
                    float Grandtotalesionots = 0;
                    float Grandtotalpf = 0;
                    float Grandtotalesi = 0;
                    float GrandtotalGenDedn = 0;
                    float GrandtotalSecDepDedn = 0;
                    float GrandtotalLoanDedn = 0;
                    float Grandtotalwos = 0;
                    float Grandtotalwoamt = 0;
                    float Grandtotalnhs = 0;
                    float Grandtotalnhsamt = 0;
                    float Grandtotalfoodallowance = 0;
                    float Grandtotalmedicalallowance = 0;
                    float Grandtotalowf = 0;
                    float GrandtotalAmountdue = 0;
                    float GrandtotalTelephoneBillDed = 0;
                    float GrandtotalEsiempr = 0;
                    float GrandTotalPFEmpr = 0;
                    float GrandTotalCTC = 0;
                    float GrandTotalAddlAmount = 0;
                    float GrandTotalServiceWeightage = 0;
                    float GrandTotalPVCAmount = 0;
                    float GrandTotalNpotsamt = 0;
                    float GrandTotalOTHrs = 0;
                    float GrandTotalOTHrsAmt = 0;

                    #endregion

                    int nextpagerecordscount = 0;
                    int targetpagerecors = 0;
                    if (tableCells > 15)
                    {
                        targetpagerecors = 7;
                    }
                    else
                    {
                        targetpagerecors = 8;
                    }
                    int secondpagerecords = targetpagerecors + 1;
                    bool nextpagehasPages = false;
                    int j = 0;
                    PdfPTable SecondtablecheckbyFooter = null;
                    PdfPTable SecondtableFooter = null;
                    PdfPTable SecondtableGrandtotalFooter = null;
                    for (int nextpagei = 0; nextpagei < dt.Rows.Count; nextpagei++)
                    {
                        nextpagehasPages = true;


                        #region Titles of Document
                        PdfPTable Maintable = new PdfPTable(27);
                        if (tableCells > 20)
                        {
                            Maintable.TotalWidth = 1000f;
                        }
                        else
                        {
                            Maintable.TotalWidth = 1000f;
                        }
                        Maintable.LockedWidth = true;
                        float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };


                        Maintable.SetWidths(width);


                        //Company Name & vage act details

                        PdfPCell cellemp = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, 10, Font.BOLD, BaseColor.BLACK)));
                        cellemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellemp.Colspan = 27;
                        cellemp.Border = 0;

                        PdfPCell Heading = new PdfPCell(new Phrase(companyName1, FontFactory.GetFont(Fontstyle, 13, Font.BOLD, BaseColor.BLACK)));
                        Heading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        Heading.Colspan = 27;
                        Heading.Border = 0;
                        Maintable.AddCell(Heading);
                        #endregion


                        #region Sub Headings

                        PdfPCell companyName = new PdfPCell(new Phrase(companyAddress, FontFactory.GetFont("Arial Black", 12, Font.NORMAL, BaseColor.BLACK)));
                        companyName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        companyName.Colspan = 27;
                        companyName.Border = 0;// 15;
                        Maintable.AddCell(companyName);


                        PdfPCell CPaySheetDate = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CPaySheetDate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CPaySheetDate.Colspan = 27;
                        CPaySheetDate.Border = 0;// 15;
                        Maintable.AddCell(CPaySheetDate);

                        PdfPCell CPayMonth = new PdfPCell(new Phrase("Salary Register For the month of :   " + GetMonthName() + " - " + GetMonthOfYear(), FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CPayMonth.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CPayMonth.Colspan = 27;
                        CPayMonth.Border = 0;// 15;
                        Maintable.AddCell(CPayMonth);


                        PdfPCell CClientName = new PdfPCell(new Phrase("Client Name :   " + ddlcname.SelectedItem + " ", FontFactory.GetFont(Fontstyle, 10, Font.NORMAL, BaseColor.BLACK)));
                        CClientName.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        CClientName.Colspan = 27;
                        CClientName.Border = 0;// 15;
                        // Maintable.AddCell(CClientName);

                        // Maintable.AddCell(cellemp);
                        //document.Add(Maintable);

                        if (titleofdocumentindex == 0)
                        {
                            document.Add(Maintable);
                            titleofdocumentindex = 1;
                        }

                        #endregion


                        #region Table Headings

                        PdfPTable SecondtableHeadings = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableHeadings.TotalWidth = 950f;
                        }
                        else
                        {
                            SecondtableHeadings.TotalWidth = 950f;
                        }
                        SecondtableHeadings.LockedWidth = true;
                        float[] SecondHeadingsWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 59)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 58)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 57)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 44)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 41)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 39)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondHeadingsWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion

                        SecondtableHeadings.SetWidths(SecondHeadingsWidth);

                        //Cell Headings
                        //1
                        PdfPCell sNo = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        sNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //sNo.Colspan = 1;
                        sNo.Border = 15;// 15;
                        SecondtableHeadings.AddCell(sNo);

                        //2
                        PdfPCell CEmpId = new PdfPCell(new Phrase("Emp Id", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CEmpId.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CEmpId.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CEmpId);

                        //3
                        PdfPCell CEmpName = new PdfPCell(new Phrase("Emp Name", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CEmpName.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CEmpName.Border = 15;// 15;
                        SecondtableHeadings.AddCell(CEmpName);

                        //4
                        PdfPCell CDesgn = new PdfPCell(new Phrase("Desgn", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CDesgn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CDesgn.Border = 15;
                        SecondtableHeadings.AddCell(CDesgn);
                        PdfPCell CSignature = new PdfPCell(new Phrase("Bank A/c No.", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        CSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        CSignature.Border = 15;
                        SecondtableHeadings.AddCell(CSignature);
                        if (srate != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("S. Rate", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell CDuties = new PdfPCell(new Phrase("Dts", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDuties.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDuties.Border = 15;
                            SecondtableHeadings.AddCell(CDuties);
                        }

                        if (wo != 0)
                        {
                            PdfPCell Cwos = new PdfPCell(new Phrase("Wos", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwos.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cwos.Border = 15;
                            SecondtableHeadings.AddCell(Cwos);
                        }

                        if (nhs != 0)
                        {
                            PdfPCell Cnhs = new PdfPCell(new Phrase("NHs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhs.Border = 15;
                            SecondtableHeadings.AddCell(Cnhs);
                        }

                        //6


                        if (ldays != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("Leaves", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }


                        if (TotalPayableDays != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("Total Days", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }

                        //6A
                        if (OThrs != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("OT Hrs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }


                        //7
                        if (basic != 0)
                        {
                            PdfPCell CBasic = new PdfPCell(new Phrase("Basic+DA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CBasic.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CBasic.Border = 15;
                            SecondtableHeadings.AddCell(CBasic);
                        }

                        //8
                        if (da != 0)
                        {
                            PdfPCell CDa = new PdfPCell(new Phrase("DA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CDa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CDa.Border = 15;
                            SecondtableHeadings.AddCell(CDa);
                        }

                        //9
                        if (hra != 0)
                        {
                            PdfPCell CHRa = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CHRa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CHRa.Border = 15;
                            SecondtableHeadings.AddCell(CHRa);
                        }

                        //10
                        if (cca != 0)
                        {
                            PdfPCell CCca = new PdfPCell(new Phrase("CCA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CCca.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CCca.Border = 15;
                            SecondtableHeadings.AddCell(CCca);
                        }

                        //11
                        if (conveyance != 0)
                        {
                            PdfPCell Cconveyance = new PdfPCell(new Phrase("Conv", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cconveyance.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cconveyance.Border = 15;
                            SecondtableHeadings.AddCell(Cconveyance);
                        }

                        //12
                        if (washallowance != 0)
                        {
                            PdfPCell Cwa = new PdfPCell(new Phrase("WA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwa.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            Cwa.Border = 15;
                            SecondtableHeadings.AddCell(Cwa);
                        }

                        //13
                        if (otherallowance != 0)
                        {
                            PdfPCell COa = new PdfPCell(new Phrase("OA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COa.Border = 15;
                            SecondtableHeadings.AddCell(COa);
                        }
                        if (SplAllowance != 0)
                        {
                            PdfPCell CSplAllowance = new PdfPCell(new Phrase("Spl Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSplAllowance.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSplAllowance.Border = 15;
                            SecondtableHeadings.AddCell(CSplAllowance);
                        }


                        if (TravelAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Travel. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Performance. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell Csplallw = new PdfPCell(new Phrase("Mobile. Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Csplallw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Csplallw.Border = 15;
                            SecondtableHeadings.AddCell(Csplallw);
                        }

                        //14
                        if (leavewages != 0)
                        {
                            PdfPCell CLa = new PdfPCell(new Phrase("LA", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLa.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLa.Border = 15;
                            SecondtableHeadings.AddCell(CLa);
                        }

                        //15
                        if (gratuity != 0)
                        {
                            PdfPCell CGratuity = new PdfPCell(new Phrase("Gratuity", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGratuity.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGratuity.Border = 15;
                            SecondtableHeadings.AddCell(CGratuity);
                        }

                        //16
                        if (bonus != 0)
                        {
                            PdfPCell CBonus = new PdfPCell(new Phrase("Bonus", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CBonus.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CBonus.Border = 15;
                            SecondtableHeadings.AddCell(CBonus);
                        }




                        //17
                        if (nfhs != 0)
                        {
                            PdfPCell CNfhs = new PdfPCell(new Phrase("NFHs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNfhs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNfhs.Border = 15;
                            SecondtableHeadings.AddCell(CNfhs);
                        }

                        //18
                        if (rc != 0)
                        {
                            PdfPCell CRc = new PdfPCell(new Phrase("R.C", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CRc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CRc.Border = 15;
                            SecondtableHeadings.AddCell(CRc);
                        }

                        //19
                        if (cs != 0)
                        {
                            PdfPCell CCs = new PdfPCell(new Phrase("C.S", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CCs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CCs.Border = 15;
                            SecondtableHeadings.AddCell(CCs);
                        }

                        if (cfoodallowance != 0)
                        {
                            PdfPCell CFoodAllw = new PdfPCell(new Phrase("Food Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CFoodAllw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CFoodAllw.Border = 15;
                            SecondtableHeadings.AddCell(CFoodAllw);
                        }

                        if (cmedicalallowance != 0)
                        {
                            PdfPCell CMedicalAllw = new PdfPCell(new Phrase("Medical Allw", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CMedicalAllw.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CMedicalAllw.Border = 15;
                            SecondtableHeadings.AddCell(CMedicalAllw);
                        }

                        if (incentivs != 0)
                        {
                            PdfPCell CIncentivs = new PdfPCell(new Phrase("Reimbursement", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CIncentivs.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CIncentivs.Border = 15;
                            SecondtableHeadings.AddCell(CIncentivs);
                        }
                        if (woamt != 0)
                        {
                            PdfPCell Cwoamt = new PdfPCell(new Phrase("WO Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwoamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cwoamt.Border = 15;
                            SecondtableHeadings.AddCell(Cwoamt);
                        }


                        if (nhsamt != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("NHS Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (addlamount != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("Addl Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (ServiceWeightage != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("Service Weightage", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (Npotsamt != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("Npots Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }

                        if (OTHrsAmt != 0)
                        {
                            PdfPCell Cnhsamt = new PdfPCell(new Phrase("OT Hrs Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cnhsamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cnhsamt.Border = 15;
                            SecondtableHeadings.AddCell(Cnhsamt);
                        }
                        //20
                        if (gross != 0)
                        {
                            PdfPCell CGross = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGross.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGross.Border = 15;
                            SecondtableHeadings.AddCell(CGross);
                        }

                        //21                  

                        //22




                        //23
                        //if (pfonduties != 0)
                        //{
                        //    PdfPCell CPFondts = new PdfPCell(new Phrase("PF on Dts", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        //    CPFondts.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //    CPFondts.Border = 15;
                        //    SecondtableHeadings.AddCell(CPFondts);
                        //}

                        ////24
                        //if (esionduties != 0)
                        //{
                        //    PdfPCell CESIondts = new PdfPCell(new Phrase("ESI on Dts", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        //    CESIondts.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //    CESIondts.Border = 15;
                        //    SecondtableHeadings.AddCell(CESIondts);
                        //}

                        ////25
                        //if (pfonot != 0)
                        //{
                        //    PdfPCell CPFonot = new PdfPCell(new Phrase("PF on OTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        //    CPFonot.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //    CPFonot.Border = 15;
                        //    SecondtableHeadings.AddCell(CPFonot);
                        //}

                        ////26
                        //if (esionot != 0)
                        //{
                        //    PdfPCell CESIonot = new PdfPCell(new Phrase("ESI on OTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        //    CESIonot.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        //    CESIonot.Border = 15;
                        //    SecondtableHeadings.AddCell(CESIonot);
                        //}

                        //27
                        if (Pf != 0)
                        {
                            PdfPCell CPF = new PdfPCell(new Phrase("PF", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPF.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPF.Border = 15;
                            SecondtableHeadings.AddCell(CPF);
                        }

                        //28
                        if (Esi != 0)
                        {
                            PdfPCell CESI = new PdfPCell(new Phrase("ESI", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CESI.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CESI.Border = 15;
                            SecondtableHeadings.AddCell(CESI);
                        }


                        //29
                        if (proftax != 0)
                        {
                            PdfPCell CPT = new PdfPCell(new Phrase("PT", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPT.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPT.Border = 15;
                            SecondtableHeadings.AddCell(CPT);
                        }

                        //30
                        if (salAdvDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("Sal Adv", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("ATM Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (IDCardDed != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("IDCard Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }
                        if (Extra != 0)
                        {
                            PdfPCell CSalAdv = new PdfPCell(new Phrase("Extra", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSalAdv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSalAdv.Border = 15;
                            SecondtableHeadings.AddCell(CSalAdv);
                        }


                        //31
                        if (uniformDed != 0)
                        {
                            PdfPCell CUnifDed = new PdfPCell(new Phrase("Unif. Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CUnifDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CUnifDed.Border = 15;
                            SecondtableHeadings.AddCell(CUnifDed);
                        }

                        if (SecDepDedn != 0)
                        {
                            PdfPCell CSecDepDedn = new PdfPCell(new Phrase("Sec Dep Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CSecDepDedn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CSecDepDedn.Border = 15;
                            SecondtableHeadings.AddCell(CSecDepDedn);
                        }

                        if (LoanDed != 0)
                        {
                            PdfPCell CLoanDed = new PdfPCell(new Phrase("Loan Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CLoanDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CLoanDed.Border = 15;
                            SecondtableHeadings.AddCell(CLoanDed);
                        }

                        if (GenDedn != 0)
                        {
                            PdfPCell CGenDedn = new PdfPCell(new Phrase("Gen Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CGenDedn.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CGenDedn.Border = 15;
                            SecondtableHeadings.AddCell(CGenDedn);
                        }
                        if (AdvDed != 0)
                        {
                            PdfPCell Cadvded = new PdfPCell(new Phrase("Adv Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cadvded.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cadvded.Border = 15;
                            SecondtableHeadings.AddCell(Cadvded);
                        }
                        if (WCDed != 0)
                        {
                            PdfPCell Cwcded = new PdfPCell(new Phrase("WC Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cwcded.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cwcded.Border = 15;
                            SecondtableHeadings.AddCell(Cwcded);
                        }
                        //32
                        if (otherDed != 0)
                        {
                            PdfPCell COtherDed = new PdfPCell(new Phrase("Other Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COtherDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COtherDed.Border = 15;
                            SecondtableHeadings.AddCell(COtherDed);
                        }

                        //33
                        if (canteenAdv != 0)
                        {
                            PdfPCell Ccanteended = new PdfPCell(new Phrase("Mess. Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Ccanteended.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Ccanteended.Border = 15;
                            SecondtableHeadings.AddCell(Ccanteended);
                        }



                        //34
                        if (penalty != 0)
                        {
                            PdfPCell CPenalty = new PdfPCell(new Phrase("Advance", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CPenalty.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CPenalty.Border = 15;
                            SecondtableHeadings.AddCell(CPenalty);
                        }


                        if (owf != 0)
                        {
                            PdfPCell Cowf = new PdfPCell(new Phrase("Wel. Fund", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cowf.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cowf.Border = 15;
                            SecondtableHeadings.AddCell(Cowf);
                        }


                        if (advdue != 0)
                        {
                            PdfPCell Cowf = new PdfPCell(new Phrase("Uniform due", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cowf.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cowf.Border = 15;
                            SecondtableHeadings.AddCell(Cowf);
                        }
                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase("Telephone Bill Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTelephoneBillDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTelephoneBillDed.Border = 15;
                            SecondtableHeadings.AddCell(CTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase("PVC Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTelephoneBillDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTelephoneBillDed.Border = 15;
                            SecondtableHeadings.AddCell(CTelephoneBillDed);
                        }
                        //35
                        if (totalDeductions != 0)
                        {
                            PdfPCell CTotDed = new PdfPCell(new Phrase("Tot Ded", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CTotDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CTotDed.Border = 15;
                            SecondtableHeadings.AddCell(CTotDed);
                        }

                        //36
                        if (netpay != 0)
                        {
                            PdfPCell CNetPay = new PdfPCell(new Phrase("Net Pay", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            CNetPay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            CNetPay.Border = 15;
                            SecondtableHeadings.AddCell(CNetPay);
                        }

                        if (pfempr != 0)
                        {
                            PdfPCell pfempr1 = new PdfPCell(new Phrase("Employer PF", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            pfempr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            pfempr1.Border = 15;
                            SecondtableHeadings.AddCell(pfempr1);
                        }

                        if (Esiempr != 0)
                        {
                            PdfPCell esiempr = new PdfPCell(new Phrase("Employer ESI", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            esiempr.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            esiempr.Border = 15;
                            SecondtableHeadings.AddCell(esiempr);
                        }



                        PdfPCell ctc11 = new PdfPCell(new Phrase("CTC", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                        ctc11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        ctc11.Border = 15;
                        SecondtableHeadings.AddCell(ctc11);

                        if (ots != 0)
                        {
                            PdfPCell Cots = new PdfPCell(new Phrase("OTs", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            Cots.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            Cots.Border = 15;
                            SecondtableHeadings.AddCell(Cots);
                        }

                        if (otamt != 0)
                        {
                            PdfPCell COtamt = new PdfPCell(new Phrase("OT Amt", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            COtamt.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            COtamt.Border = 15;
                            SecondtableHeadings.AddCell(COtamt);
                        }
                        //37



                        #endregion


                        #region Table Data

                        PdfPTable Secondtable = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            Secondtable.TotalWidth = 950f;
                        }
                        else
                        {
                            Secondtable.TotalWidth = 950f;
                        }
                        Secondtable.LockedWidth = true;
                        float[] SecondWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 59)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 58)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 57)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 44)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 42)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 40)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion


                        Secondtable.SetWidths(SecondWidth);
                        int rowCount = 0;
                        int pageCount = 0;
                        int i = nextpagei;

                        float dedamout = 0;
                        float Balance = 0;
                        var LoansSPName = "";
                        Hashtable HTLoans = new Hashtable();
                        DataTable dtLoans = null;
                        LoansSPName = "LoansSummary";
                        HTLoans.Add("@ClientId", ddlClients.SelectedValue);
                        HTLoans.Add("@month", month);
                        HTLoans.Add("@empid", dt.Rows[i]["EmpId"].ToString());
                        dtLoans = config.ExecuteAdaptorAsyncWithParams(LoansSPName, HTLoans).Result;

                        if (dtLoans.Rows.Count > 0)
                        {
                            //loanamt = float.Parse(dtLoans.Rows[0]["TotalLoanAmount"].ToString());
                            dedamout = float.Parse(dtLoans.Rows[0]["TotalDeductedAmount"].ToString());
                            Balance = float.Parse(dtLoans.Rows[0]["Balance"].ToString());
                        }


                        // for (int i = 0, j = 0; i < dt.Rows.Count; i++)
                        {
                            float ForconvertOt = 0;
                            forConvert = 0;
                            if (dt.Rows[i]["NoOfDuties"].ToString().Trim().Length > 0)
                                forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());

                            //if (forConvert > 0)
                            {

                                if (nextpagerecordscount == 0)
                                {
                                    document.Add(SecondtableHeadings);
                                }

                                nextpagerecordscount++;


                                //1
                                PdfPCell CSNo = new PdfPCell(new Phrase("\n \n" + (++j).ToString() + "", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CSNo.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                CSNo.Border = 15;
                                //   CSNo.FixedHeight = 30;
                                Secondtable.AddCell(CSNo);

                                //2
                                PdfPCell CEmpId1 = new PdfPCell(new Phrase("\n \n " + dt.Rows[i]["EmpId"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpId1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                CEmpId1.Border = 15;
                                Secondtable.AddCell(CEmpId1);

                                //3EmpESINo,EmpEpfNo
                                // + "\n" + "ESI No" + "\n" + "UAN No" + "\n" + "PF No"
                                PdfPCell CEmpName1 = new PdfPCell(new Phrase(dt.Rows[i]["EmpName"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpName1.Border = 15;
                                CEmpName1.SetLeading(0, 1.3f);
                                Secondtable.AddCell(CEmpName1);

                                //4
                                PdfPCell CEmpDesgn = new PdfPCell(new Phrase(dt.Rows[i]["Design"].ToString(), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CEmpDesgn.Border = 15;
                                Secondtable.AddCell(CEmpDesgn);

                                string EmpBankAcNo = dt.Rows[i]["EmpBankAcNo"].ToString();
                                string empbankname = dt.Rows[i]["empbankname"].ToString();
                                PdfPCell CSignature1 = new PdfPCell(new Phrase(EmpBankAcNo, FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                CSignature1.Border = 15;
                                CSignature1.MinimumHeight = 25;
                                Secondtable.AddCell(CSignature1);

                                //6A
                                //if (srate != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["Salrate"].ToString().Trim().Length > 0)
                                //        forConvert = Convert.ToSingle(dt.Rows[i]["Salrate"].ToString());
                                //    totalsrate += forConvert;
                                //    GrandtotalSrate += forConvert;

                                //    PdfPCell CSalrate = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    CSalrate.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    CSalrate.Border = 15;
                                //    Secondtable.AddCell(CSalrate);
                                //}

                                ////5
                                if (dts != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["NoOfDuties"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                                    totalDuties += forConvert;
                                    GrandtotalDuties += forConvert;

                                    PdfPCell CNoOfDuties = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNoOfDuties.Border = 15;
                                    Secondtable.AddCell(CNoOfDuties);
                                }


                                //if (wo != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["Wo"].ToString().Trim().Length > 0)
                                //        forConvert = Convert.ToSingle(dt.Rows[i]["Wo"].ToString());
                                //    totalwos += forConvert;
                                //    Grandtotalwos += forConvert;

                                //    PdfPCell Cwos = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    Cwos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    Cwos.Border = 15;
                                //    Secondtable.AddCell(Cwos);
                                //}


                                //if (nhs != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["nhs"].ToString().Trim().Length > 0)
                                //        forConvert = Convert.ToSingle(dt.Rows[i]["nhs"].ToString());
                                //    totalnhs += forConvert;
                                //    Grandtotalnhs += forConvert;

                                //    PdfPCell Cnhss = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    Cnhss.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    Cnhss.Border = 15;
                                //    Secondtable.AddCell(Cnhss);
                                //}

                                ////6


                                //if (ldays != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["LDays"].ToString().Trim().Length > 0)
                                //        forConvert = Convert.ToSingle(dt.Rows[i]["LDays"].ToString());
                                //    totalLdays += forConvert;
                                //    GrandtotalLdays += forConvert;

                                //    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    COts.Border = 15;
                                //    Secondtable.AddCell(COts);
                                //}


                                if (TotalPayableDays != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TotalPayableDays"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["TotalPayableDays"].ToString());
                                    totalTotalPayableDays += forConvert;
                                    GrandtotalTotalPayableDays += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }

                                if (OThrs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OTHrs"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["OTHrs"].ToString());
                                    TotalOTHrs += forConvert;
                                    GrandTotalOTHrs += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }



                                //7
                                if (basic != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Basic"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Basic"].ToString()));
                                    totalBasic += forConvert;
                                    GrandtotalBasic += forConvert;
                                    PdfPCell CBasic1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CBasic1.Border = 15;
                                    Secondtable.AddCell(CBasic1);
                                }

                                //8
                                if (da != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["DA"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["DA"].ToString()));
                                    totalDA += forConvert;
                                    GrandtotalDA += forConvert;

                                    PdfPCell CDa1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CDa1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CDa1.Border = 15;
                                    Secondtable.AddCell(CDa1);
                                }

                                //9
                                if (hra != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["HRA"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["HRA"].ToString()));
                                    totalHRA += forConvert;
                                    GrandtotalHRA += forConvert;

                                    PdfPCell CHRA1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CHRA1.Border = 15;
                                    Secondtable.AddCell(CHRA1);
                                }

                                //10
                                if (cca != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["cca"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["cca"].ToString()));
                                    totalCCA += forConvert;

                                    GrandtotalCCA += forConvert;

                                    PdfPCell Ccca = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Ccca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Ccca.Border = 15;
                                    Secondtable.AddCell(Ccca);
                                }

                                //11
                                if (conveyance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Conveyance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Conveyance"].ToString()));
                                    totalConveyance += forConvert;
                                    GrandtotalConveyance += forConvert;

                                    PdfPCell CConveyance = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CConveyance.Border = 15;
                                    Secondtable.AddCell(CConveyance);
                                }


                                //12
                                if (washallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["washallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["washallowance"].ToString()));
                                    totalWA += forConvert;
                                    GrandtotalWA += forConvert;

                                    PdfPCell CWa = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWa.Border = 15;
                                    Secondtable.AddCell(CWa);
                                }

                                //13
                                if (otherallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OtherAllowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OtherAllowance"].ToString()));
                                    totalOA += forConvert;
                                    GrandtotalOA += forConvert;
                                    PdfPCell COA = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COA.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COA.Border = 15;
                                    Secondtable.AddCell(COA);
                                }
                                if (SplAllowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SplAllowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SplAllowance"].ToString()));
                                    totalSplAllowance += forConvert;
                                    GrandtotalSplAllowance += forConvert;
                                    PdfPCell CSplAllowance = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance.Border = 15;
                                    Secondtable.AddCell(CSplAllowance);
                                }

                                if (TravelAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["TravelAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TravelAllw"].ToString()));
                                    totalTravelAllw += forConvert;
                                    GrandtotalTravelAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }

                                if (PerformanceAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PerformanceAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PerformanceAllw"].ToString()));
                                    totalPerformanceAllw += forConvert;
                                    GrandtotalPerformanceAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }

                                if (MobileAllw != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["MobileAllw"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["MobileAllw"].ToString()));
                                    totalMobileAllw += forConvert;
                                    GrandtotalMobileAllw += forConvert;
                                    PdfPCell CSplAllowance1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSplAllowance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSplAllowance1.Border = 15;
                                    Secondtable.AddCell(CSplAllowance1);
                                }



                                //14
                                if (leavewages != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Leavewages"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Leavewages"].ToString()));
                                    totalLw += forConvert;
                                    GrandtotalLw += forConvert;
                                    PdfPCell CLa1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLa1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CLa1.Border = 15;
                                    Secondtable.AddCell(CLa1);
                                }
                                //15
                                if (gratuity != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Gratuity"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Gratuity"].ToString()));
                                    totalGratuity += forConvert;
                                    GrandtotalGratuity += forConvert;
                                    PdfPCell CGratuity1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGratuity1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGratuity1.Border = 15;
                                    Secondtable.AddCell(CGratuity1);
                                }

                                //16
                                if (bonus != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["bonus"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["bonus"].ToString()));
                                    totalbonus += forConvert;

                                    Grandtotalbonus += forConvert;
                                    PdfPCell Cbonus = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cbonus.Border = 15;
                                    Secondtable.AddCell(Cbonus);
                                }



                                //17
                                if (nfhs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Nfhs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Nfhs"].ToString()));
                                    totalNfhs += forConvert;
                                    GrandtotalNfhs += forConvert;
                                    PdfPCell CNfhs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNfhs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNfhs1.Border = 15;
                                    Secondtable.AddCell(CNfhs1);
                                }

                                //18
                                if (rc != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["RC"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["RC"].ToString()));
                                    totalRc += forConvert;
                                    GrandtotalRc += forConvert;
                                    PdfPCell CRc1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CRc1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CRc1.Border = 15;
                                    Secondtable.AddCell(CRc1);
                                }

                                //19
                                if (cs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["cs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["cs"].ToString()));
                                    totalCs += forConvert;
                                    GrandtotalCs += forConvert;
                                    PdfPCell CCs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CCs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CCs1.Border = 15;
                                    Secondtable.AddCell(CCs1);
                                }


                                if (cfoodallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["foodallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["foodallowance"].ToString()));
                                    totalfoodallowance += forConvert;
                                    Grandtotalfoodallowance += forConvert;
                                    PdfPCell CFoodAllw1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CFoodAllw1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CFoodAllw1.Border = 15;
                                    Secondtable.AddCell(CFoodAllw1);
                                }


                                if (cmedicalallowance != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["medicalallowance"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["medicalallowance"].ToString()));
                                    totalmedicalallowance += forConvert;
                                    Grandtotalmedicalallowance += forConvert;
                                    PdfPCell CMedicalAllw1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CMedicalAllw1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CMedicalAllw1.Border = 15;
                                    Secondtable.AddCell(CMedicalAllw1);
                                }
                                if (incentivs != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Incentivs"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Incentivs"].ToString()));
                                    totalIncentivs += forConvert;
                                    GrandtotalIncentivs += forConvert;
                                    PdfPCell CIncentivs1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CIncentivs1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CIncentivs1.Border = 15;
                                    Secondtable.AddCell(CIncentivs1);
                                }


                                if (woamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Woamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Woamt"].ToString()));
                                    totalwoamt += forConvert;
                                    Grandtotalwoamt += forConvert;

                                    PdfPCell CWoAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWoAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWoAmt1.Border = 15;
                                    Secondtable.AddCell(CWoAmt1);
                                }


                                if (nhsamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["nhsamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["nhsamt"].ToString()));
                                    totalnhsamt += forConvert;
                                    Grandtotalnhsamt += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (addlamount != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["AddlAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["AddlAmount"].ToString()));
                                    totaladdlamount += forConvert;
                                    GrandTotalAddlAmount += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (ServiceWeightage != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Serviceweightage"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Serviceweightage"].ToString()));
                                    TotalServiceWeightage += forConvert;
                                    GrandTotalServiceWeightage += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (Npotsamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Npotsamt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Npotsamt"].ToString()));
                                    TotalServiceWeightage += forConvert;
                                    GrandTotalServiceWeightage += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }

                                if (OTHrsAmt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OTHrsAmt"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OTHrsAmt"].ToString()));
                                    TotalOTHrsAmt += forConvert;
                                    GrandTotalOTHrsAmt += forConvert;

                                    PdfPCell CNhsAmt1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNhsAmt1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNhsAmt1.Border = 15;
                                    Secondtable.AddCell(CNhsAmt1);
                                }
                                //20
                                if (gross != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Gross"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Gross"].ToString()));
                                    totalGross += forConvert;
                                    GrandtotalGross += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }

                                //21                        

                                //22

                                //23
                                //if (pfonduties != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["Pfonduties"].ToString().Trim().Length > 0)
                                //        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Pfonduties"].ToString()));
                                //    totalPFondts += forConvert;
                                //    GrandtotalPFondts += forConvert;

                                //    PdfPCell CPF1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    CPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    CPF1.Border = 15;
                                //    Secondtable.AddCell(CPF1);
                                //}

                                ////24
                                //if (esionduties != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["Esionduties"].ToString().Trim().Length > 0)
                                //        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Esionduties"].ToString()));
                                //    totalESIondts += forConvert;

                                //    GrandtotalESIondts += forConvert;

                                //    PdfPCell CESI1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    CESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    CESI1.Border = 15;
                                //    Secondtable.AddCell(CESI1);
                                //}

                                ////25
                                //if (pfonot != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["PFONOT"].ToString().Trim().Length > 0)
                                //        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PFONOT"].ToString()));
                                //    totalpfonots += forConvert;
                                //    Grandtotalpfonots += forConvert;

                                //    PdfPCell CPFonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    CPFonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    CPFonots.Border = 15;
                                //    Secondtable.AddCell(CPFonots);
                                //}

                                ////26
                                //if (esionot != 0)
                                //{
                                //    forConvert = 0;
                                //    if (dt.Rows[i]["ESIONOT"].ToString().Trim().Length > 0)
                                //        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ESIONOT"].ToString()));
                                //    totalesionots += forConvert;

                                //    Grandtotalesionots += forConvert;

                                //    PdfPCell CESIonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                //    CESIonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                //    CESIonots.Border = 15;
                                //    Secondtable.AddCell(CESIonots);
                                //}

                                //27
                                if (Pf != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["PFTotal"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PFTotal"].ToString()));
                                    totalpf += forConvert;
                                    Grandtotalpf += forConvert;

                                    PdfPCell CPFonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPFonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPFonots.Border = 15;
                                    Secondtable.AddCell(CPFonots);
                                }

                                //28
                                if (Esi != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ESITotal"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ESITotal"].ToString()));
                                    totalesi += forConvert;

                                    Grandtotalesi += forConvert;

                                    PdfPCell CESIonots = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CESIonots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CESIonots.Border = 15;
                                    Secondtable.AddCell(CESIonots);
                                }

                                //29
                                if (proftax != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ProfTax"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString()));
                                    totalProfTax += forConvert;
                                    GrandtotalProfTax += forConvert;

                                    PdfPCell CProTax1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CProTax1.Border = 15;
                                    Secondtable.AddCell(CProTax1);
                                }

                                //30
                                if (salAdvDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SalAdvDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SalAdvDed"].ToString()));
                                    totalSalAdv += forConvert;
                                    GrandtotalSalAdv += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                if (ATMDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["ATMDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ATMDed"].ToString()));
                                    totalATMDed += forConvert;
                                    GrandtotalATMDed += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }
                                if (IDCardDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["IDCardDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["IDCardDed"].ToString()));
                                    totalIDCardDed += forConvert;
                                    GrandtotalIDCardDed += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                if (Extra != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Extra"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Extra"].ToString()));
                                    totalExtra += forConvert;
                                    GrandtotalExtra += forConvert;

                                    PdfPCell CSalAdv1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSalAdv1.Border = 15;
                                    Secondtable.AddCell(CSalAdv1);
                                }

                                //31
                                if (uniformDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["UniformDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString()));
                                    totalUniforDed += forConvert;
                                    GrandtotalUniforDed += forConvert;

                                    PdfPCell CUnifDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CUnifDed1.Border = 15;
                                    Secondtable.AddCell(CUnifDed1);
                                }


                                if (SecDepDedn != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["SecDepDedn"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["SecDepDedn"].ToString()));
                                    totalSecDepDedn += forConvert;
                                    GrandtotalSecDepDedn += forConvert;

                                    PdfPCell CSecDepDedn1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CSecDepDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CSecDepDedn1.Border = 15;
                                    Secondtable.AddCell(CSecDepDedn1);
                                }

                                if (LoanDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["LoanDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["LoanDed"].ToString()));
                                    totalLoanDed += forConvert;
                                    GrandtotalLoanDedn += forConvert;

                                    PdfPCell CLoanDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CLoanDed1.Border = 15;
                                    Secondtable.AddCell(CLoanDed1);
                                }


                                if (GenDedn != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["GenDedn"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["GenDedn"].ToString()));
                                    totalGenDedn += forConvert;
                                    GrandtotalGenDedn += forConvert;

                                    PdfPCell CGenDedn1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGenDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGenDedn1.Border = 15;
                                    Secondtable.AddCell(CGenDedn1);
                                }

                                if (AdvDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["AdvDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["AdvDed"].ToString()));
                                    totalAdvDed += forConvert;
                                    GrandtotalAdvDed += forConvert;

                                    PdfPCell CADVDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CADVDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CADVDed1.Border = 15;
                                    Secondtable.AddCell(CADVDed1);
                                }


                                if (WCDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["WCDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["WCDed"].ToString()));
                                    totalWCDed += forConvert;
                                    GrandtotalWCDed += forConvert;

                                    PdfPCell CWCDedn1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CWCDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CWCDedn1.Border = 15;
                                    Secondtable.AddCell(CWCDedn1);
                                }

                                //32
                                if (otherDed != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["OtherDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["OtherDed"].ToString()));
                                    totalOtherdedn += forConvert;
                                    GrandtotalOtherdedn += forConvert;

                                    PdfPCell COtherDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COtherDed1.Border = 15;
                                    Secondtable.AddCell(COtherDed1);
                                }

                                //33
                                if (canteenAdv != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["CanteenAdv"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString()));
                                    totalCanteenAdv += forConvert;
                                    GrandtotalCanteenAdv += forConvert;

                                    PdfPCell CCanteended = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CCanteended.Border = 15;
                                    Secondtable.AddCell(CCanteended);
                                }



                                //34
                                if (penalty != 0)
                                {
                                    if (dt.Rows[i]["Penalty"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Penalty"].ToString()));
                                    totalPenalty += forConvert;
                                    GrandtotalPenalty += forConvert;

                                    PdfPCell CPenalty1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CPenalty1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CPenalty1.Border = 15;
                                    Secondtable.AddCell(CPenalty1);
                                }


                                if (owf != 0)
                                {
                                    if (dt.Rows[i]["owf"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["owf"].ToString()));
                                    totalowf += forConvert;
                                    Grandtotalowf += forConvert;

                                    PdfPCell Cowf1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    Cowf1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    Cowf1.Border = 15;
                                    Secondtable.AddCell(Cowf1);
                                }


                                if (advdue != 0)
                                {
                                    forConvert = Balance;

                                    totalAmountdue += forConvert;
                                    GrandtotalAmountdue += forConvert;

                                    PdfPCell CTotDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTotDed1.Border = 15;
                                    Secondtable.AddCell(CTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                                }

                                //36
                                if (TelephoneBillDed != 0)
                                {
                                    if (dt.Rows[i]["TelephoneBillDed"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["TelephoneBillDed"].ToString()));
                                    totalTelephoneBillDed += forConvert;
                                    GrandtotalTelephoneBillDed += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }

                                if (PVCAmount != 0)
                                {
                                    if (dt.Rows[i]["PVCAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PVCAmount"].ToString()));
                                    TotalPVCAmount += forConvert;
                                    GrandTotalPVCAmount += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }

                                //35
                                if (totalDeductions != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Totaldeduct"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Totaldeduct"].ToString()));
                                    totalDed += forConvert;
                                    GrandtotalDed += forConvert;

                                    PdfPCell CTotDed1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTotDed1.Border = 15;
                                    Secondtable.AddCell(CTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                                }

                                //36
                                if (netpay != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["NetAmount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["NetAmount"].ToString()));
                                    if (forConvert <= 0)
                                    {
                                        forConvert = 0;
                                    }
                                    totalNetpay += forConvert;
                                    GrandtotalNetpay += forConvert;
                                    PdfPCell CNetPay1 = new PdfPCell(new Phrase("\n \n \n" + forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CNetPay1.Border = 15;
                                    Secondtable.AddCell(CNetPay1);
                                }
                                if (pfempr != 0)
                                {
                                    if (dt.Rows[i]["PFEmpr"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["PFEmpr"].ToString()));
                                    Totalpfempr += forConvert;
                                    GrandTotalPFEmpr += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }
                                if (Esiempr != 0)
                                {
                                    if (dt.Rows[i]["ESIEmpr"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["ESIEmpr"].ToString()));
                                    TotalEsiempr += forConvert;
                                    GrandtotalEsiempr += forConvert;

                                    PdfPCell CTelephoneBillDed = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CTelephoneBillDed.Border = 15;
                                    Secondtable.AddCell(CTelephoneBillDed);
                                }



                                if (dt.Rows[i]["CTC"].ToString().Trim().Length > 0)
                                    forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["CTC"].ToString()));
                                TotalCTC += forConvert;
                                GrandTotalCTC += forConvert;

                                PdfPCell CTelephoneBillDed1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                CTelephoneBillDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                CTelephoneBillDed1.Border = 15;
                                Secondtable.AddCell(CTelephoneBillDed1);

                                if (ots != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Duties"].ToString().Trim().Length > 0)
                                        forConvert = Convert.ToSingle(dt.Rows[i]["Duties"].ToString());
                                    totalots += forConvert;
                                    Grandtotalots += forConvert;

                                    PdfPCell COts = new PdfPCell(new Phrase(forConvert.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    COts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    COts.Border = 15;
                                    Secondtable.AddCell(COts);
                                }

                                if (otamt != 0)
                                {
                                    forConvert = 0;
                                    if (dt.Rows[i]["Amount"].ToString().Trim().Length > 0)
                                        forConvert = (float)Math.Round(Convert.ToSingle(dt.Rows[i]["Amount"].ToString()));
                                    totalotamt += forConvert;
                                    Grandtotalotamt += forConvert;

                                    PdfPCell CGross1 = new PdfPCell(new Phrase(forConvert.ToString("0"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                                    CGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                                    CGross1.Border = 15;
                                    Secondtable.AddCell(CGross1);
                                }

                                //37

                            }


                        }
                        #endregion

                        #region Table Total values

                        SecondtableFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableFooter.TotalWidth = 950f;
                        }
                        else
                        {
                            SecondtableFooter.TotalWidth = 950f;
                        }
                        SecondtableFooter.LockedWidth = true;
                        float[] SecondFooterWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 59)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 58)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 57)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 46)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 44)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 42)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 41)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion

                        SecondtableFooter.SetWidths(SecondFooterWidth);

                        //1
                        PdfPCell FCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCSNo.Border = 15;
                        SecondtableFooter.AddCell(FCSNo);
                        //2
                        PdfPCell FCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpId1.Border = 15;
                        SecondtableFooter.AddCell(FCEmpId1);
                        //3
                        PdfPCell FCEmpName1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        FCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpName1.Border = 15;
                        SecondtableFooter.AddCell(FCEmpName1);

                        PdfPCell FCSignature1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCSignature1.Border = 15;
                        //FCSignature1.MinimumHeight = 25;
                        SecondtableFooter.AddCell(FCSignature1);
                        //4
                        PdfPCell FCEmpDesgn = new PdfPCell(new Phrase(" Total : ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        FCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FCEmpDesgn.Border = 15;
                        FCEmpDesgn.Colspan = 0;
                        SecondtableFooter.AddCell(FCEmpDesgn);

                        //6A
                        if (srate != 0)
                        {
                            PdfPCell FCSalrate = new PdfPCell(new Phrase(totalsrate.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSalrate.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalrate.Border = 15;
                            SecondtableFooter.AddCell(FCSalrate);
                        }


                        //5
                        if (dts != 0)
                        {
                            PdfPCell FCNoOfDuties = new PdfPCell(new Phrase(totalDuties.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNoOfDuties.Border = 15;
                            SecondtableFooter.AddCell(FCNoOfDuties);
                        }

                        if (wo != 0)
                        {
                            PdfPCell FCwos = new PdfPCell(new Phrase(totalwos.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCwos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCwos.Border = 15;
                            SecondtableFooter.AddCell(FCwos);
                        }

                        if (nhs != 0)
                        {
                            PdfPCell FCnhs = new PdfPCell(new Phrase(totalnhs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhs.Border = 15;
                            SecondtableFooter.AddCell(FCnhs);
                        }

                        //6


                        if (ldays != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalLdays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }

                        if (TotalPayableDays != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalTotalPayableDays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }

                        if (OThrs != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(TotalOTHrs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }



                        //7
                        if (basic != 0)
                        {
                            PdfPCell FCBasic1 = new PdfPCell(new Phrase(totalBasic.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCBasic1.Border = 15;
                            SecondtableFooter.AddCell(FCBasic1);
                        }


                        //8
                        if (da != 0)
                        {
                            PdfPCell FDa = new PdfPCell(new Phrase(totalDA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FDa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FDa.Border = 15;
                            SecondtableFooter.AddCell(FDa);
                        }


                        //9
                        if (hra != 0)
                        {

                            PdfPCell FCHRA1 = new PdfPCell(new Phrase(totalHRA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCHRA1.Border = 15;
                            SecondtableFooter.AddCell(FCHRA1);
                        }

                        //10
                        if (cca != 0)
                        {
                            PdfPCell FCcca = new PdfPCell(new Phrase(totalCCA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCcca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCcca.Border = 15;
                            SecondtableFooter.AddCell(FCcca);
                        }

                        //11
                        if (conveyance != 0)
                        {
                            PdfPCell FCConveyance = new PdfPCell(new Phrase(totalConveyance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCConveyance.Border = 15;
                            SecondtableFooter.AddCell(FCConveyance);
                        }


                        //12
                        if (washallowance != 0)
                        {
                            PdfPCell FCWa = new PdfPCell(new Phrase(totalWA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCWa.Border = 15;
                            SecondtableFooter.AddCell(FCWa);
                        }

                        //13
                        if (otherallowance != 0)
                        {
                            PdfPCell FCOa = new PdfPCell(new Phrase(totalOA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCOa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCOa.Border = 15;
                            SecondtableFooter.AddCell(FCOa);
                        }

                        if (SplAllowance != 0)
                        {
                            PdfPCell FCSplAllowance = new PdfPCell(new Phrase(totalSplAllowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSplAllowance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSplAllowance.Border = 15;
                            SecondtableFooter.AddCell(FCSplAllowance);
                        }

                        if (TravelAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalTravelAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalPerformanceAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell Fsplallw = new PdfPCell(new Phrase(totalMobileAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fsplallw.Border = 15;
                            SecondtableFooter.AddCell(Fsplallw);
                        }
                        //14
                        if (leavewages != 0)
                        {
                            PdfPCell FLa = new PdfPCell(new Phrase(totalLw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FLa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FLa.Border = 15;
                            SecondtableFooter.AddCell(FLa);
                        }

                        //15
                        if (gratuity != 0)
                        {
                            PdfPCell FGratuity = new PdfPCell(new Phrase(totalGratuity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FGratuity.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FGratuity.Border = 15;
                            SecondtableFooter.AddCell(FGratuity);
                        }

                        //16
                        if (bonus != 0)
                        {
                            PdfPCell Fbonus = new PdfPCell(new Phrase(totalbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fbonus.Border = 15;
                            SecondtableFooter.AddCell(Fbonus);
                        }

                        //17
                        if (nfhs != 0)
                        {
                            PdfPCell FNfhs = new PdfPCell(new Phrase(totalNfhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FNfhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FNfhs.Border = 15;
                            SecondtableFooter.AddCell(FNfhs);
                        }

                        //18
                        if (rc != 0)
                        {
                            PdfPCell FRc = new PdfPCell(new Phrase(totalRc.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FRc.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FRc.Border = 15;
                            SecondtableFooter.AddCell(FRc);
                        }

                        //19
                        if (cs != 0)
                        {
                            PdfPCell FCs = new PdfPCell(new Phrase(totalCs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCs.Border = 15;
                            SecondtableFooter.AddCell(FCs);
                        }

                        if (cfoodallowance != 0)
                        {
                            PdfPCell FFoodallw = new PdfPCell(new Phrase(totalfoodallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FFoodallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FFoodallw.Border = 15;
                            SecondtableFooter.AddCell(FFoodallw);
                        }


                        if (cmedicalallowance != 0)
                        {
                            PdfPCell FMedicalallw = new PdfPCell(new Phrase(totalmedicalallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FMedicalallw.Border = 15;
                            SecondtableFooter.AddCell(FMedicalallw);

                        }

                        if (incentivs != 0)
                        {
                            PdfPCell FIncentivs = new PdfPCell(new Phrase(totalIncentivs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FIncentivs.Border = 15;
                            SecondtableFooter.AddCell(FIncentivs);
                        }
                        if (woamt != 0)
                        {
                            PdfPCell FCWoamt = new PdfPCell(new Phrase(totalwoamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCWoamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCWoamt.Border = 15;
                            SecondtableFooter.AddCell(FCWoamt);
                        }


                        if (nhsamt != 0)
                        {
                            PdfPCell FCnhsamt = new PdfPCell(new Phrase(totalnhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCnhsamt.Border = 15;
                            SecondtableFooter.AddCell(FCnhsamt);
                        }
                        if (addlamount != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(totaladdlamount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }

                        if (ServiceWeightage != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(TotalServiceWeightage.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }

                        if (Npotsamt != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(Totalnpotsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }

                        if (OTHrsAmt != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(TotalOTHrsAmt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }
                        //20
                        if (gross != 0)
                        {
                            PdfPCell FCGross1 = new PdfPCell(new Phrase(totalGross.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGross1.Border = 15;
                            SecondtableFooter.AddCell(FCGross1);
                        }


                        //23
                        //if (pfonduties != 0)
                        //{
                        //    PdfPCell FCPF1 = new PdfPCell(new Phrase(totalPFondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    FCPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    FCPF1.Border = 15;
                        //    SecondtableFooter.AddCell(FCPF1);
                        //}

                        ////24
                        //if (esionduties != 0)
                        //{
                        //    PdfPCell FCESI1 = new PdfPCell(new Phrase(totalESIondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    FCESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    FCESI1.Border = 15;
                        //    SecondtableFooter.AddCell(FCESI1);
                        //}


                        ////25
                        //if (pfonot != 0)
                        //{
                        //    PdfPCell FCPFonot = new PdfPCell(new Phrase(totalpfonots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    FCPFonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    FCPFonot.Border = 15;
                        //    SecondtableFooter.AddCell(FCPFonot);
                        //}

                        ////26
                        //if (esionot != 0)
                        //{
                        //    PdfPCell FCESIonot = new PdfPCell(new Phrase(totalesionots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    FCESIonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    FCESIonot.Border = 15;
                        //    SecondtableFooter.AddCell(FCESIonot);
                        //}

                        //27
                        if (Pf != 0)
                        {
                            PdfPCell FCPF = new PdfPCell(new Phrase(totalpf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCPF.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCPF.Border = 15;
                            SecondtableFooter.AddCell(FCPF);
                        }

                        //28
                        if (Esi != 0)
                        {
                            PdfPCell FCES = new PdfPCell(new Phrase(totalesi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCES.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCES.Border = 15;
                            SecondtableFooter.AddCell(FCES);
                        }

                        //29
                        if (proftax != 0)
                        {
                            PdfPCell FCProTax1 = new PdfPCell(new Phrase(totalProfTax.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCProTax1.Border = 15;
                            SecondtableFooter.AddCell(FCProTax1);
                        }

                        //30
                        if (salAdvDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalSalAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalATMDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }
                        if (IDCardDed != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalIDCardDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }


                        if (Extra != 0)
                        {
                            PdfPCell FCSalAdv1 = new PdfPCell(new Phrase(totalExtra.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSalAdv1.Border = 15;
                            SecondtableFooter.AddCell(FCSalAdv1);
                        }

                        //31
                        if (uniformDed != 0)
                        {
                            PdfPCell FCUnifDed1 = new PdfPCell(new Phrase(totalUniforDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCUnifDed1.Border = 15;
                            SecondtableFooter.AddCell(FCUnifDed1);
                        }

                        if (SecDepDedn != 0)
                        {
                            PdfPCell FCSecDepDedn1 = new PdfPCell(new Phrase(totalSecDepDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCSecDepDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCSecDepDedn1.Border = 15;
                            SecondtableFooter.AddCell(FCSecDepDedn1);
                        }


                        if (LoanDed != 0)
                        {
                            PdfPCell FCLoanDed1 = new PdfPCell(new Phrase(totalLoanDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCLoanDed1.Border = 15;
                            SecondtableFooter.AddCell(FCLoanDed1);
                        }

                        if (GenDedn != 0)
                        {
                            PdfPCell FCGenDedn1 = new PdfPCell(new Phrase(totalGenDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCGenDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCGenDedn1.Border = 15;
                            SecondtableFooter.AddCell(FCGenDedn1);
                        }
                        if (AdvDed != 0)
                        {
                            PdfPCell FCAdvDed1 = new PdfPCell(new Phrase(totalAdvDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCAdvDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCAdvDed1.Border = 15;
                            SecondtableFooter.AddCell(FCAdvDed1);
                        }
                        if (WCDed != 0)
                        {
                            PdfPCell FCwcDed1 = new PdfPCell(new Phrase(totalWCDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCwcDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCwcDed1.Border = 15;
                            SecondtableFooter.AddCell(FCwcDed1);
                        }
                        //32
                        if (otherDed != 0)
                        {
                            PdfPCell FCOtherDed1 = new PdfPCell(new Phrase(totalOtherdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCOtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCOtherDed1.Border = 15;
                            SecondtableFooter.AddCell(FCOtherDed1);
                        }

                        //33
                        if (canteenAdv != 0)
                        {
                            PdfPCell FCCanteended = new PdfPCell(new Phrase(totalCanteenAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCCanteended.Border = 15;
                            SecondtableFooter.AddCell(FCCanteended);
                        }


                        //34
                        if (penalty != 0)
                        {
                            PdfPCell FPenalty = new PdfPCell(new Phrase(totalPenalty.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FPenalty.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FPenalty.Border = 15;
                            SecondtableFooter.AddCell(FPenalty);
                        }

                        if (owf != 0)
                        {
                            PdfPCell Fowf = new PdfPCell(new Phrase(totalowf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            Fowf.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            Fowf.Border = 15;
                            SecondtableFooter.AddCell(Fowf);
                        }


                        //35
                        if (advdue != 0)
                        {
                            PdfPCell FCTotDed1 = new PdfPCell(new Phrase(totalAmountdue.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCTotDed1.Border = 15;
                            SecondtableFooter.AddCell(FCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell FTelephoneBillDed = new PdfPCell(new Phrase(totalTelephoneBillDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FTelephoneBillDed.Border = 15;
                            SecondtableFooter.AddCell(FTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell FTelephoneBillDed = new PdfPCell(new Phrase(TotalPVCAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            FTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FTelephoneBillDed.Border = 15;
                            SecondtableFooter.AddCell(FTelephoneBillDed);
                        }

                        //35
                        if (totalDeductions != 0)
                        {
                            PdfPCell FCTotDed1 = new PdfPCell(new Phrase(totalDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCTotDed1.Border = 15;
                            SecondtableFooter.AddCell(FCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //36
                        if (netpay != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(totalNetpay.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        if (pfempr != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(Totalpfempr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        if (Esiempr != 0)
                        {
                            PdfPCell FCNetPay1 = new PdfPCell(new Phrase(TotalEsiempr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtableFooter.AddCell(FCNetPay1);
                        }

                        PdfPCell FCNetPay11 = new PdfPCell(new Phrase(TotalCTC.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        FCNetPay11.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        FCNetPay11.Border = 15;
                        //FCNetPay1.Colspan = 2;
                        SecondtableFooter.AddCell(FCNetPay11);

                        if (ots != 0)
                        {
                            PdfPCell FCots = new PdfPCell(new Phrase(totalots.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCots.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCots.Border = 15;
                            SecondtableFooter.AddCell(FCots);
                        }

                        if (otamt != 0)
                        {
                            PdfPCell FCotamt = new PdfPCell(new Phrase(totalotamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            FCotamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            FCotamt.Border = 15;
                            SecondtableFooter.AddCell(FCotamt);
                        }


                        //37


                        #endregion

                        SecondtableGrandtotalFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtableGrandtotalFooter.TotalWidth = 950f;
                        }
                        else
                        {
                            SecondtableGrandtotalFooter.TotalWidth = 950f;
                        }
                        SecondtableGrandtotalFooter.LockedWidth = true;
                        float[] SecondGrandtotalFooterWidth = new float[] { };
                        #region Table Cells
                        if (tableCells == 59)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 58)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 57)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }

                        if (tableCells == 45)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }

                        if (tableCells == 44)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }
                        if (tableCells == 43)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }


                        if (tableCells == 40)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondGrandtotalFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion
                        SecondtableGrandtotalFooter.SetWidths(SecondGrandtotalFooterWidth);

                        SecondtablecheckbyFooter = new PdfPTable(tableCells);
                        if (tableCells > 20)
                        {
                            SecondtablecheckbyFooter.TotalWidth = 950f;
                        }
                        else
                        {
                            SecondtablecheckbyFooter.TotalWidth = 950f;
                        }
                        SecondtablecheckbyFooter.LockedWidth = true;
                        float[] SecondcheckbyFooterWidth = new float[] { };

                        #region Table Cells
                        if (tableCells == 59)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 58)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 57)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 56)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 55)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 54)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 53)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 52)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 51)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 50)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 49)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 48)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 47)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 4f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f };
                        }

                        if (tableCells == 46)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }


                        if (tableCells == 45)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 44)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 43)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 42)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 41)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 40)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 39)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 38)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 37)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 36)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 35)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }

                        if (tableCells == 34)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 33)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 32)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 4.8f, 3f, 2.5f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 31)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 30)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 29)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 28)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 27)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 26)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 25)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 24)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 23)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 22)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 21)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 20)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 19)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 18)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 17)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 16)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 15)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 14)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 13)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 12)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 11)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 10)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 1.5f, 5f };
                        }
                        if (tableCells == 9)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 1.5f, 5f };
                        }
                        if (tableCells == 8)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 2f, 5f };
                        }

                        if (tableCells == 7)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 1.5f, 5f };
                        }

                        if (tableCells == 6)
                        {
                            SecondcheckbyFooterWidth = new float[] { 1.5f, 2f, 5.8f, 3f, 2.1f, 5f };
                        }
                        #endregion

                        SecondtablecheckbyFooter.SetWidths(SecondcheckbyFooterWidth);

                        #region Table   Grand   Total  Footer

                        //1
                        PdfPCell GFCSNo = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCSNo.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCSNo.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCSNo);

                        //2
                        PdfPCell GFCEmpId1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCEmpId1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpId1.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCEmpId1);

                        //3
                        PdfPCell GFCEmpName1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        GFCEmpName1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpName1.Border = 15;
                        SecondtablecheckbyFooter.AddCell(GFCEmpName1);
                        PdfPCell GFCSignature1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCSignature1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCSignature1.Border = 15;
                        //FCSignature1.MinimumHeight = 25;
                        SecondtablecheckbyFooter.AddCell(GFCSignature1);
                        //4
                        PdfPCell GFCEmpDesgn = new PdfPCell(new Phrase("Grand  Total: ", FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.NORMAL, BaseColor.BLACK)));
                        GFCEmpDesgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        GFCEmpDesgn.Border = 15;
                        //FCEmpDesgn.Colspan = 4;
                        SecondtablecheckbyFooter.AddCell(GFCEmpDesgn);


                        //6A
                        if (srate != 0)
                        {
                            PdfPCell GFCsrate = new PdfPCell(new Phrase(GrandtotalSrate.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCsrate.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCsrate.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCsrate);
                        }

                        //5
                        if (dts != 0)
                        {
                            PdfPCell GFCNoOfDuties = new PdfPCell(new Phrase(GrandtotalDuties.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNoOfDuties.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNoOfDuties.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNoOfDuties);
                        }

                        if (wo != 0)
                        {
                            PdfPCell GFCWos = new PdfPCell(new Phrase(Grandtotalwos.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCWos.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCWos.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCWos);
                        }


                        if (nhs != 0)
                        {
                            PdfPCell GFCNhs = new PdfPCell(new Phrase(Grandtotalnhs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNhs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCNhs);
                        }


                        //6



                        if (ldays != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(GrandtotalLdays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }


                        if (TotalPayableDays != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(GrandtotalTotalPayableDays.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }

                        if (OThrs != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(GrandTotalOTHrs.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }




                        //7
                        if (basic != 0)
                        {
                            PdfPCell GFCBasic1 = new PdfPCell(new Phrase(GrandtotalBasic.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCBasic1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCBasic1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCBasic1);
                        }


                        //8
                        if (da != 0)
                        {
                            PdfPCell GFDa = new PdfPCell(new Phrase(GrandtotalDA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFDa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFDa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFDa);
                        }


                        //9
                        if (hra != 0)
                        {
                            PdfPCell GFCHRA1 = new PdfPCell(new Phrase(GrandtotalHRA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCHRA1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCHRA1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCHRA1);
                        }

                        //10
                        if (cca != 0)
                        {
                            PdfPCell GFCcca = new PdfPCell(new Phrase(GrandtotalCCA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCcca.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCcca.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCcca);
                        }

                        //11
                        if (conveyance != 0)
                        {
                            PdfPCell GFCConveyance = new PdfPCell(new Phrase(GrandtotalConveyance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCConveyance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCConveyance.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCConveyance);
                        }


                        //12
                        if (washallowance != 0)
                        {
                            PdfPCell GFCWa = new PdfPCell(new Phrase(GrandtotalWA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCWa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCWa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCWa);
                        }

                        //13
                        if (otherallowance != 0)
                        {
                            PdfPCell GFCOa = new PdfPCell(new Phrase(GrandtotalOA.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOa);
                        }
                        if (SplAllowance != 0)
                        {
                            PdfPCell GFCSplAllowance = new PdfPCell(new Phrase(GrandtotalSplAllowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSplAllowance.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSplAllowance.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSplAllowance);
                        }

                        if (TravelAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalTravelAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        if (PerformanceAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalPerformanceAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        if (MobileAllw != 0)
                        {
                            PdfPCell GFsplallw = new PdfPCell(new Phrase(GrandtotalMobileAllw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFsplallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFsplallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFsplallw);
                        }

                        //14
                        if (leavewages != 0)
                        {
                            PdfPCell GFLa = new PdfPCell(new Phrase(GrandtotalLw.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFLa.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFLa.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFLa);
                        }

                        //15
                        if (gratuity != 0)
                        {
                            PdfPCell GFGratuity = new PdfPCell(new Phrase(GrandtotalGratuity.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFGratuity.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFGratuity.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFGratuity);
                        }

                        //16
                        if (bonus != 0)
                        {
                            PdfPCell GFbonus = new PdfPCell(new Phrase(Grandtotalbonus.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFbonus.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFbonus.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFbonus);
                        }


                        //17
                        if (nfhs != 0)
                        {
                            PdfPCell GFNfhs = new PdfPCell(new Phrase(GrandtotalNfhs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFNfhs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFNfhs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFNfhs);
                        }

                        //18
                        if (rc != 0)
                        {
                            PdfPCell GFRc = new PdfPCell(new Phrase(GrandtotalRc.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFRc.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFRc.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFRc);
                        }

                        //19
                        if (cs != 0)
                        {
                            PdfPCell GFCs = new PdfPCell(new Phrase(GrandtotalCs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCs);
                        }


                        if (cfoodallowance != 0)
                        {
                            PdfPCell GFFoodallw = new PdfPCell(new Phrase(Grandtotalfoodallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFFoodallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFFoodallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFFoodallw);
                        }

                        if (cmedicalallowance != 0)
                        {
                            PdfPCell GFMedicalallw = new PdfPCell(new Phrase(Grandtotalmedicalallowance.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFMedicalallw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFMedicalallw.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFMedicalallw);
                        }

                        if (incentivs != 0)
                        {
                            PdfPCell GFIncentivs = new PdfPCell(new Phrase(GrandtotalIncentivs.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFIncentivs.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFIncentivs.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFIncentivs);
                        }
                        if (woamt != 0)
                        {
                            PdfPCell GFCwoamt = new PdfPCell(new Phrase(Grandtotalwoamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCwoamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCwoamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCwoamt);
                        }


                        if (nhsamt != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(Grandtotalnhsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }
                        if (addlamount != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(GrandTotalAddlAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }

                        if (ServiceWeightage != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(GrandTotalServiceWeightage.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }

                        if (Npotsamt != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(GrandTotalNpotsamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }

                        if (OTHrsAmt != 0)
                        {
                            PdfPCell GFCnhsamt = new PdfPCell(new Phrase(GrandTotalOTHrsAmt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCnhsamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCnhsamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCnhsamt);
                        }
                        //20
                        if (gross != 0)
                        {
                            PdfPCell GFCGross1 = new PdfPCell(new Phrase(GrandtotalGross.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCGross1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCGross1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCGross1);
                        }


                        //21



                        //22




                        ////23
                        //if (pfonduties != 0)
                        //{
                        //    PdfPCell GFCPF1 = new PdfPCell(new Phrase(GrandtotalPFondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    GFCPF1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    GFCPF1.Border = 15;
                        //    SecondtablecheckbyFooter.AddCell(GFCPF1);
                        //}

                        ////24
                        //if (esionduties != 0)
                        //{
                        //    PdfPCell GFCESI1 = new PdfPCell(new Phrase(GrandtotalESIondts.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    GFCESI1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    GFCESI1.Border = 15;
                        //    SecondtablecheckbyFooter.AddCell(GFCESI1);
                        //}

                        ////25
                        //if (pfonot != 0)
                        //{
                        //    PdfPCell GFCPFonot = new PdfPCell(new Phrase(Grandtotalpfonots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    GFCPFonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    GFCPFonot.Border = 15;
                        //    SecondtablecheckbyFooter.AddCell(GFCPFonot);
                        //}

                        ////26
                        //if (esionot != 0)
                        //{
                        //    PdfPCell GFCESIonot = new PdfPCell(new Phrase(Grandtotalesionots.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        //    GFCESIonot.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        //    GFCESIonot.Border = 15;
                        //    SecondtablecheckbyFooter.AddCell(GFCESIonot);
                        //}

                        //27
                        if (Pf != 0)
                        {
                            PdfPCell GFCPF = new PdfPCell(new Phrase(Grandtotalpf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCPF.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCPF.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCPF);
                        }

                        //28
                        if (Esi != 0)
                        {
                            PdfPCell GFCESI = new PdfPCell(new Phrase(Grandtotalesi.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCESI.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCESI.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCESI);
                        }


                        //29
                        if (proftax != 0)
                        {
                            PdfPCell GFCProTax1 = new PdfPCell(new Phrase(GrandtotalProfTax.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCProTax1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCProTax1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCProTax1);
                        }

                        //30
                        if (salAdvDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalSalAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }
                        if (ATMDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalATMDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }

                        if (IDCardDed != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalIDCardDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }

                        if (Extra != 0)
                        {
                            PdfPCell GFCSalAdv1 = new PdfPCell(new Phrase(GrandtotalExtra.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFCSalAdv1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSalAdv1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSalAdv1);
                        }
                        //31
                        if (uniformDed != 0)
                        {
                            PdfPCell GFCUnifDed1 = new PdfPCell(new Phrase(GrandtotalUniforDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCUnifDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCUnifDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCUnifDed1);
                        }

                        if (SecDepDedn != 0)
                        {
                            PdfPCell GFCSecDepDedn1 = new PdfPCell(new Phrase(GrandtotalSecDepDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCSecDepDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCSecDepDedn1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCSecDepDedn1);
                        }

                        if (LoanDed != 0)
                        {
                            PdfPCell GFCLoanDed1 = new PdfPCell(new Phrase(GrandtotalLoanDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCLoanDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCLoanDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCLoanDed1);
                        }

                        if (GenDedn != 0)
                        {
                            PdfPCell GFCGenDedn1 = new PdfPCell(new Phrase(GrandtotalGenDedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCGenDedn1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCGenDedn1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCGenDedn1);
                        }
                        if (AdvDed != 0)
                        {
                            PdfPCell GFCAdvDedDed1 = new PdfPCell(new Phrase(GrandtotalAdvDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCAdvDedDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCAdvDedDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCAdvDedDed1);
                        }
                        if (WCDed != 0)
                        {
                            PdfPCell GFcwcDed1 = new PdfPCell(new Phrase(GrandtotalWCDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFcwcDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFcwcDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFcwcDed1);
                        }
                        //32
                        if (otherDed != 0)
                        {
                            PdfPCell GFCOtherDed1 = new PdfPCell(new Phrase(GrandtotalOtherdedn.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOtherDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOtherDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOtherDed1);
                        }


                        //33
                        if (canteenAdv != 0)
                        {
                            PdfPCell GFCCanteended = new PdfPCell(new Phrase(GrandtotalCanteenAdv.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCCanteended.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCCanteended.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCCanteended);
                        }

                        //34
                        if (penalty != 0)
                        {
                            PdfPCell GFPenalty = new PdfPCell(new Phrase(GrandtotalPenalty.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFPenalty.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFPenalty.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFPenalty);
                        }

                        if (owf != 0)
                        {
                            PdfPCell GFowf = new PdfPCell(new Phrase(Grandtotalowf.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFowf.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFowf.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFowf);
                        }

                        if (advdue != 0)
                        {
                            PdfPCell GFowf = new PdfPCell(new Phrase(GrandtotalAmountdue.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFowf.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFowf.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFowf);
                        }

                        //36
                        if (TelephoneBillDed != 0)
                        {
                            PdfPCell GFTelephoneBillDed = new PdfPCell(new Phrase(GrandtotalTelephoneBillDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFTelephoneBillDed.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFTelephoneBillDed);
                        }

                        if (PVCAmount != 0)
                        {
                            PdfPCell GFTelephoneBillDed = new PdfPCell(new Phrase(GrandTotalPVCAmount.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.BOLD, BaseColor.BLACK)));
                            GFTelephoneBillDed.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFTelephoneBillDed.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFTelephoneBillDed);
                        }

                        //35
                        if (totalDeductions != 0)
                        {
                            PdfPCell GFCTotDed1 = new PdfPCell(new Phrase(GrandtotalDed.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCTotDed1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCTotDed1.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCTotDed1);//OtherDed,Eps.Gross,Eps.Deductions,Eps.ActualAmount
                        }

                        //36
                        if (netpay != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandtotalNetpay.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        if (pfempr != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandTotalPFEmpr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        if (Esiempr != 0)
                        {
                            PdfPCell GFCNetPay1 = new PdfPCell(new Phrase(GrandTotalPFEmpr.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCNetPay1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCNetPay1.Border = 15;
                            //FCNetPay1.Colspan = 2;
                            SecondtablecheckbyFooter.AddCell(GFCNetPay1);
                        }

                        PdfPCell GFCNetPay11 = new PdfPCell(new Phrase(GrandTotalCTC.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                        GFCNetPay11.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        GFCNetPay11.Border = 15;
                        //FCNetPay1.Colspan = 2;
                        SecondtablecheckbyFooter.AddCell(GFCNetPay11);

                        if (ots != 0)
                        {
                            PdfPCell GFCOts = new PdfPCell(new Phrase(Grandtotalots.ToString("0.00"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOts.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOts.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOts);
                        }
                        if (otamt != 0)
                        {
                            PdfPCell GFCOtamt = new PdfPCell(new Phrase(Grandtotalotamt.ToString("#,#"), FontFactory.GetFont(Fontstyle, FONT_SIZE - 2, Font.BOLD, BaseColor.BLACK)));
                            GFCOtamt.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            GFCOtamt.Border = 15;
                            SecondtablecheckbyFooter.AddCell(GFCOtamt);
                        }
                        //37

                        #endregion


                        #region   Footer Headings
                        //1
                        PdfPCell FHCheckedbybr1 = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHCheckedbybr1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FHCheckedbybr1.Border = 0;
                        FHCheckedbybr1.Rowspan = 0;
                        FHCheckedbybr1.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                        //2
                        PdfPCell FHApprovedbr2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHApprovedbr2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        FHApprovedbr2.Border = 0;
                        FHApprovedbr2.Colspan = tableCells;

                        SecondtablecheckbyFooter.AddCell(FHApprovedbr2);
                        SecondtablecheckbyFooter.AddCell(FHCheckedbybr1);
                        SecondtablecheckbyFooter.AddCell(FHApprovedbr2);


                        //1
                        PdfPCell FHCheckedby = new PdfPCell(new Phrase("Checked By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHCheckedby.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        FHCheckedby.Border = 0;
                        FHCheckedby.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHCheckedby);
                        //2
                        PdfPCell FHApprovedBy = new PdfPCell(new Phrase("Gross  Approved By", FontFactory.GetFont(Fontstyle, FONT_SIZE, Font.NORMAL, BaseColor.BLACK)));
                        FHApprovedBy.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                        FHApprovedBy.Border = 0;
                        FHApprovedBy.PaddingTop = -5;
                        FHApprovedBy.Colspan = tableCells;
                        SecondtablecheckbyFooter.AddCell(FHApprovedBy);



                        #endregion

                        document.Add(Secondtable);

                        if (nextpagerecordscount == targetpagerecors)
                        {
                            targetpagerecors = secondpagerecords;
                            document.Add(SecondtableFooter);
                            document.NewPage();
                            nextpagerecordscount = 0;
                            #region  Zero variables
                            totalAdvDed = 0;
                            totalWCDed = 0;
                            totalNetpay = 0;
                            totalDuties = 0;
                            totalsrate = 0;
                            totalBasic = 0;
                            totalDA = 0;
                            totalHRA = 0;
                            totalCCA = 0;
                            totalConveyance = 0;
                            totalWA = 0;
                            totalOA = 0;
                            totalGross = 0;
                            totalPFondts = 0;
                            totalESIondts = 0;
                            totalProfTax = 0;
                            totalDed = 0;
                            totalSalAdv = 0;
                            totalUniforDed = 0;
                            totalCanteenAdv = 0;
                            totalOtherdedn = 0;
                            totalbonus = 0;
                            totalLw = 0;
                            totalGratuity = 0;
                            totalNfhs = 0;
                            totalRc = 0;
                            totalCs = 0;
                            totalIncentivs = 0;
                            totalPenalty = 0;

                            totalots = 0;
                            totalotamt = 0;
                            totalpfonots = 0;
                            totalesionots = 0;
                            totalpf = 0;
                            totalesi = 0;
                            totalTelephoneBillDed = 0;
                            #endregion
                        }
                    }

                    if (nextpagerecordscount >= 0)
                    {
                        //document.Add(SecondtableFooter);
                        document.Add(SecondtableGrandtotalFooter);
                        document.Add(SecondtablecheckbyFooter);
                    }
                    document.Close();
                    if (nextpagehasPages)
                    {

                        Response.ContentType = "application/pdf";
                        Response.AddHeader("content-disposition", "attachment;filename=Dutieswithots.pdf");
                        Response.Buffer = true;
                        Response.Clear();
                        Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                        Response.OutputStream.Flush();
                        Response.End();
                    }
                }
            }
            catch (Exception ex)
            {

            }
        }

        protected void LoadClientIDBasedonMonth(int month, string BillType, bool SelectAll, bool ExcludeList)
        {
            DataTable dtBranch = GlobalData.Instance.LoadBranchOnUserID(BranchID);

            string order = "";
            DataTable DtClientnames = null;
            ddlcname.Items.Clear();
            ddlClients.Items.Clear();
            order = "orderClientName";
            DtClientnames = GlobalData.Instance.LoadActiveClientnames(CmpIDPrefix, SelectAll, order, ExcludeList, BillType, month, dtBranch);
            if (DtClientnames.Rows.Count > 0)
            {

                ddlcname.DataValueField = "Clientid";
                ddlcname.DataTextField = "clientname";
                ddlcname.DataSource = DtClientnames;
                ddlcname.DataBind();
            }

            order = "orderClientID";
            DtClientnames = GlobalData.Instance.LoadActiveClientnames(CmpIDPrefix, SelectAll, order, ExcludeList, BillType, month, dtBranch);
            if (DtClientnames.Rows.Count > 0)
            {
                ddlClients.DataValueField = "Clientid";
                ddlClients.DataTextField = "Clientid";
                ddlClients.DataSource = DtClientnames;
                ddlClients.DataBind();
            }

            ddlClients.Items.Insert(0, "-Select-");
            ddlcname.Items.Insert(0, "-Select-");
        }

        protected void LoadCheckboxdata()
        {
            Cleardata();
            ClearNonPaysheetGenerated();
            bool SelectAll = false;
            if (chkalllist.Checked == true)
                SelectAll = true;

            bool excludeList = false;
            if (chkexcludelist.Checked == true)
                excludeList = true;
            string BillType = "PaySheet";
            int month = GetMonthBasedOnSelectionDateorMonth();
            LoadClientIDBasedonMonth(month, BillType, SelectAll, excludeList);
        }

        protected void chkalllist_CheckedChanged(object sender, EventArgs e)
        {
            chkexcludelist.Checked = false;
            LoadCheckboxdata();
        }

        protected void chkexcludelist_CheckedChanged(object sender, EventArgs e)
        {
            chkalllist.Checked = false;
            if (Chk_Month.Checked == true)
            {
                if (Txt_Month.Text.Trim().Length == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Month');", true);
                    return;

                }
            }
            else
            {
                if (ddlmonth.SelectedIndex == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Month');", true);
                    return;
                }
            }

            LoadCheckboxdata();
        }

        public class PageEventHelperPageNo : PdfPageEventHelper
        {
            PdfContentByte cb;
            PdfTemplate template;

            BaseFont bf = BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

            public override void OnOpenDocument(PdfWriter writer, Document document)
            {
                cb = writer.DirectContent;
                template = cb.CreateTemplate(50, 50);
            }
            public override void OnEndPage(PdfWriter writer, Document document)
            {
                base.OnEndPage(writer, document);

                int pageN = writer.PageNumber;
                String text = "Page " + pageN.ToString() + " of ";
                float len = bf.GetWidthPoint(text, 8);


                iTextSharp.text.Rectangle pageSize = document.PageSize;

                cb.SetRGBColorFill(100, 100, 100);

                cb.BeginText();
                cb.SetFontAndSize(bf, 8);

                cb.SetTextMatrix(document.LeftMargin + 25, pageSize.GetBottom(document.BottomMargin - 10));
                cb.ShowText(text);

                cb.EndText();

                cb.AddTemplate(template, document.LeftMargin + len, pageSize.GetBottom(document.BottomMargin - 10));
            }

            int totalpgcount = 0;
            public override void OnCloseDocument(PdfWriter writer, Document document)
            {

                base.OnCloseDocument(writer, document);

                template.BeginText();
                template.SetFontAndSize(bf, 8);
                template.SetTextMatrix(25, 0);
                template.SetGrayStroke(11);
                totalpgcount = writer.PageNumber;
                totalpgcount = totalpgcount - 1;
                template.ShowText("" + totalpgcount);
                template.EndText();

            }
        }

        protected void btnpaysheetstaticWoAllw_Click(object sender, EventArgs e)
        {
            try
            {
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                    return;
                }

                var formatInfoinfo = new DateTimeFormatInfo();
                string[] monthName = formatInfoinfo.MonthNames;
                int payMonth = GetMonth(ddlmonth.SelectedValue);

                int month = GetMonthBasedOnSelectionDateorMonth();
                string selectmonth = string.Empty;

                int Font_size = 10;
                string fontsyle = "verdana";


                #region for clients Qry by Anil Reddy on 27-12-2016

                string selectclientaddress = "select * from clients where clientid= '" + ddlClients.SelectedValue + "'";
                DataTable dtclientaddress = config.ExecuteReaderWithQueryAsync(selectclientaddress).Result;

                string AddrHno = ""; string AddrColony = ""; string AddrArea = ""; string AddrStreet = ""; string Addrcity = ""; string Addrstate = ""; string Addrpin = "";
                if (dtclientaddress.Rows.Count > 0)
                {
                    AddrHno = dtclientaddress.Rows[0]["ClientAddrHno"].ToString();
                    AddrStreet = dtclientaddress.Rows[0]["ClientAddrStreet"].ToString();
                    AddrArea = dtclientaddress.Rows[0]["ClientAddrArea"].ToString();
                    AddrColony = dtclientaddress.Rows[0]["ClientAddrColony"].ToString();
                    Addrcity = dtclientaddress.Rows[0]["ClientAddrcity"].ToString();
                    Addrstate = dtclientaddress.Rows[0]["ClientAddrstate"].ToString();
                    Addrpin = dtclientaddress.Rows[0]["ClientAddrpin"].ToString();
                }

                string[] ClientAdress = new string[7];
                if (AddrHno.Length > 0)
                {
                    ClientAdress[0] = AddrHno;
                }
                else
                {
                    ClientAdress[0] = "";
                }
                if (AddrStreet.Length > 0)
                {
                    ClientAdress[1] = AddrStreet;
                }
                else
                {
                    ClientAdress[1] = "";
                }
                if (AddrArea.Length > 0)
                {
                    ClientAdress[2] = AddrArea;
                }
                else
                {
                    ClientAdress[2] = "";
                }
                if (AddrColony.Length > 0)
                {
                    ClientAdress[3] = AddrArea;
                }
                else
                {
                    ClientAdress[3] = "";
                }
                if (Addrcity.Length > 0)
                {
                    ClientAdress[4] = AddrColony;
                }
                else
                {
                    ClientAdress[4] = "";
                }
                if (Addrstate.Length > 0)
                {
                    ClientAdress[5] = Addrcity;
                }
                else
                {
                    ClientAdress[5] = "";
                }
                if (Addrpin.Length > 0)
                {
                    ClientAdress[6] = Addrstate;
                }
                else
                {
                    ClientAdress[6] = "";
                }


                string Address1 = string.Empty;

                for (int i = 0; i < 7; i++)
                {
                    Address1 += "  " + ClientAdress[i];
                }
                #endregion

                #region for CompanyInfo Qry by Anil Reddy on 27-12-2016
                string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                DataTable compInfo = config.ExecuteReaderWithQueryAsync(strQry).Result;
                string companyName = "Your Company Name";
                string companyAddress = "Your Company Address";
                string PFNOForms = "";
                string TotalPFNOForms = "";
                if (compInfo.Rows.Count > 0)
                {
                    companyName = compInfo.Rows[0]["CompanyName"].ToString();
                    companyAddress = compInfo.Rows[0]["Address"].ToString();
                }
                #endregion


                var clientid = ddlClients.SelectedValue;
                var Paysheetoption = ddlpaymenttype.SelectedIndex;



                var list = new List<string>();

                if (gvattendancezero.Rows.Count > 0)
                {
                    for (int i = 0; i < gvattendancezero.Rows.Count; i++)
                    {
                        CheckBox chkEmpid = gvattendancezero.Rows[i].FindControl("chkindividual") as CheckBox;
                        Label lblempid = gvattendancezero.Rows[i].FindControl("lblempid") as Label;

                        if (chkEmpid.Checked == true)
                        {
                            list.Add(lblempid.Text);
                        }

                    }
                }

                string Empids = string.Join(",", list.ToArray());

                if (list.Count == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Empids');", true);
                    return;
                }

                DataTable dtEmpidsList = new DataTable();
                dtEmpidsList.Columns.Add("Empid");
                if (list.Count != 0)
                {
                    foreach (string s in list)
                    {
                        DataRow row = dtEmpidsList.NewRow();
                        row["Empid"] = s;
                        dtEmpidsList.Rows.Add(row);
                    }
                }

                var SPName = "";
                Hashtable HTPaysheet = new Hashtable();
                SPName = "IMEPaysheetpdfs";
                HTPaysheet.Add("@ClientId", clientid);
                HTPaysheet.Add("@month", month);
                HTPaysheet.Add("@PaymentOption", Paysheetoption);
                HTPaysheet.Add("@EmpIDList", dtEmpidsList);

                DataTable dt = config.ExecuteAdaptorAsyncWithParams(SPName, HTPaysheet).Result;

                MemoryStream ms = new MemoryStream();


                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL.Rotate());
                    var writer = PdfWriter.GetInstance(document, ms);
                    PageEventHelperPageNo pageEventHelper = new PageEventHelperPageNo();
                    writer.PageEvent = pageEventHelper;
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                    string imagepath1 = Server.MapPath("images");
                    int j = 0;

                    int FontSize = 10;
                    PdfPTable Maintable1 = new PdfPTable(22);
                    Maintable1.TotalWidth = 990f;
                    Maintable1.LockedWidth = true;
                    float[] width1 = new float[] { 2f, 6.5f, 7.5f, 11f, 5.5f, 4f, 4.5f, 4.5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5.5f, 5f, 5f, 5f, 5f };
                    Maintable1.SetWidths(width1);

                    PdfPCell cell;
                    #region for headings
                    cell = new PdfPCell(new Phrase("FORM-XVII", FontFactory.GetFont(Fontstyle, 12, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    cell.PaddingTop = -15;
                    Maintable1.AddCell(cell);
                    cell = new PdfPCell(new Phrase("REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, Font_size + 2, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("   [Rule 78(1)(a)(i)]", FontFactory.GetFont(Fontstyle, Font_size + 2, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, Font_size + 2, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Name and Address of Contractor : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 4;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(companyName + "\n" + companyAddress, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = -70f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Name and Address of Establishment : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = 40f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Address1, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("Nature and location of work : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 4;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(dt.Rows[0]["TypeOfWork"].ToString(), FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = -70f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Name and Address of principal Employer : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.WHITE)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = 40f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Address1, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.WHITE)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    Paragraph Ccellnature1 = new Paragraph();
                    Ccellnature1.Add(new Chunk("Wages Period : ", FontFactory.GetFont(Fontstyle, Font_size + 1, Font.BOLD, BaseColor.BLACK)));
                    Ccellnature1.Add(new Chunk(GetMonthName() + "-" + GetMonthOfYear(), FontFactory.GetFont(Fontstyle, Font_size + 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.AddElement(Ccellnature1);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    document.Add(Maintable1);
                    PdfPTable Maintable = new PdfPTable(22);
                    Maintable.TotalWidth = 990f;
                    Maintable.LockedWidth = true;
                    Maintable.HeaderRows = 1;
                    float[] width = new float[] { 2f, 6.5f, 9.5f, 9.5f, 6.3f, 4.5f, 4.5f, 4.7f, 5f, 4f, 4.7f, 4.9f, 5f, 5.4f, 5f, 4.3f, 4.7f, 5.5f, 5f, 5f, 5f, 5f };
                    Maintable.SetWidths(width);


                    #endregion

                    #region For table headings by Anil Reddy on 27-12-2016


                    cell = new PdfPCell(new Phrase("No", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Emp ID No \n C.EmpID \n MOB  \n Site ", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Emp Name \n Father's Name  \n ESI No \n UAN No", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Aadhaar No\n Bank \n A/C No \n IFSC Code", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Design \n Gender \n DOB \n DOJ", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Fixed Wages", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 4;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    if (ddlpaymenttype.SelectedIndex == 1)
                    {
                        cell = new PdfPCell(new Phrase("Days \n Nhs\n PL Days", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.3f);
                        Maintable.AddCell(cell);
                    }

                    else
                    {
                        cell = new PdfPCell(new Phrase("Days \nOT's \n Nhs\nWO\n PL", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.3f);
                        Maintable.AddCell(cell);
                    }

                    cell = new PdfPCell(new Phrase("Earnings", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 4;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Deductions", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Advances", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    if (ddlpaymenttype.SelectedIndex == 4)
                    {
                        cell = new PdfPCell(new Phrase("Total Ded\nAdv Bonus", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.3f);
                        Maintable.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase("Total Ded", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.3f);
                        Maintable.AddCell(cell);
                    }

                    cell = new PdfPCell(new Phrase("Driver Salary", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Net pay", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);



                    #endregion

                    #region  for variables by Anil Reddy on 27-12-2016

                    string EmpBankAcNo = "";
                    float SalAdv = 0;  //Adv1
                    float Adv2 = 0;
                    float Adv3 = 0;
                    float Adv4 = 0;
                    float UniformDed = 0;     //UniformAdv                              
                    float GD = 0;  //generaded
                    float PF = 0;
                    float VPF = 0;
                    float ESI = 0;
                    float PT = 0;
                    float Nfhs = 0;
                    float TotalDed = 0;
                    float AdvBonus = 0;
                    float Netpay = 0;
                    float DriverSalary = 0;
                    float gross = 0;
                    float noofduties = 0;
                    float basic = 0;
                    float ots = 0;
                    float otamt = 0;
                    float nhs = 0;
                    float PLdays = 0;
                    float Wos = 0;
                    float nhsamt = 0;
                    float Da = 0;
                    float Hra = 0;
                    float cca = 0;
                    float otherallw = 0;
                    float Wa = 0;
                    float Bonus = 0;
                    float Conveyance = 0;
                    float LeaveEncashAmt = 0;
                    float Gratuity = 0;
                    float RC = 0;
                    float cs = 0;
                    float Incentivs = 0;
                    float UniformAllw = 0;
                    float SpecialAllw = 0;
                    float FoodAllowance = 0;
                    float NightShiftAllw = 0;
                    float TravelAllw = 0;
                    float MobileAllw = 0;
                    float MedicalAllw = 0;
                    float AddlAmount = 0;
                    float tempgross = 0;
                    float LWF = 0;
                    float Fixedearnings = 0;
                    float AttBonus = 0;
                    float Arrears = 0;

                    float PVCDed = 0;
                    float WOAmt = 0;
                    float PerformanceAllw = 0;
                    float NPOTSAmt = 0;

                    float ADDL4HR, QTRALLOW, RELALLOW, OTESICWAGES, SITEALLOW, GunAllw, FireAllw,
FixedADDL4HR, FixedQTRALLOW, FixedRELALLOW, FixedOTESICWAGES, FixedSITEALLOW, FixedGunAllw, FixedFireAllw,
TelephoneAllw, Reimbursement, HardshipAllw, PaidHolidayAllw, ServiceCharge,
FixedTelephoneAllw, FixedReimbursement, FixedHardshipAllw, FixedPaidHolidayAllw, FixedServiceCharge = 0, RankAllw = 0, FixedRankAllw = 0;



                    //added deduction 
                    float AdminCharges = 0;
                    float CanteenAdv = 0;
                    float Penalty = 0;
                    float ATMDed = 0;
                    float REGDed = 0;
                    float FoodDed = 0;
                    float AdminChargesDed = 0;
                    float IDCardDed = 0;
                    float ExtraDed = 0;
                    float OtherDed = 0;
                    float SecDepDed = 0;
                    float LoanDed = 0;
                    float AdvDed = 0;
                    float WCDed = 0;
                    //end added deductions

                    //fixed wages 
                    float CBasic = 0;
                    float CDA = 0;
                    float CHRA = 0;
                    float CCCA = 0;

                    float CConveyance = 0;
                    float CWA = 0;
                    float CNFHS = 0;
                    float CRC = 0;
                    float CCS = 0;
                    float CAddlAmount = 0;
                    float CFoodAllw = 0;
                    float CWOAmt = 0;
                    float CNHSAmt = 0;
                    float CMedicalAllw = 0;
                    float CSplAllw = 0;
                    float CMobileAllw = 0;
                    float CTravelAllw = 0;
                    float CBonus = 0;
                    float CGratuity = 0;
                    float COTAmt = 0;
                    float CServiceWeightage = 0;
                    float CArrears = 0;
                    float CAttBonus = 0;
                    float CNightAllw = 0;
                    float CLeaveAmount = 0;
                    float COtherAllw = 0;
                    float CIncentives = 0;
                    float CPerformanceAllw = 0;


                    float CADDL4HR, CQTRALLOW, CRELALLOW, COTESICWAGES, CSITEALLOW, CGunAllw, CFireAllw,
CFixedADDL4HR, CFixedQTRALLOW, CFixedRELALLOW, CFixedOTESICWAGES, CFixedSITEALLOW, CFixedGunAllw, CFixedFireAllw,
CTelephoneAllw, CReimbursement, CHardshipAllw, CPaidHolidayAllw, CServiceCharge,
CFixedTelephoneAllw, CFixedReimbursement, CFixedHardshipAllw, CFixedPaidHolidayAllw, CFixedServiceCharge = 0;

                    //end fixed wages

                    string ASalAdv = "";
                    string AAdv2 = "";
                    string AAdv3 = "";
                    string AAdv4 = "";
                    string AUniformDed = "";
                    string AGD = "";
                    string APF = "";
                    string AVPF = "";
                    string AESI = "";
                    string APT = "";
                    string ANfhs = "";
                    string ATotalDed = "";
                    string AAdvBonus = "";

                    string ADriverSalary = "";
                    string ANetpay = "";
                    string Agross = "";
                    string Anoofduties = "";
                    string Abasic = "";
                    string Aots = "";
                    string Aotamt = "";
                    string Anhs = "";
                    string APLdays = "";
                    string AWOs = "";
                    string Anhsamt = "";
                    string ADa = "";
                    string AHra = "";
                    string Acca = "";
                    string Aotherallw = "";
                    string AWa = "";
                    string ABonus = "";
                    string AConveyance = "";
                    string ALeaveEncashAmt = "";
                    string AGratuity = "";
                    string ARC = "";
                    string Acs = "";
                    string AIncentivs = "";
                    string AUniformAllw = "";
                    string ASpecialAllw = "";
                    string AFoodAllowance = "";
                    string ANightShiftAllw = "";
                    string ATravelAllw = "";
                    string AMobileAllw = "";
                    string AMedicalAllw = "";
                    string ALunchAmount = "";
                    string AOutfitAllowance = "";
                    string AELAmout = "";
                    string AAddlAmount = "";
                    string Atempgross = "";
                    string Apay1 = "";
                    string Apay2 = "";
                    string Apay3 = "";
                    string AFixedearnings = "";
                    string AAttBonus = "";
                    string AArrears = "";
                    string AWOAmt = "";
                    string ANPOTSAmt = "";
                    string APerformanceAllw = "";


                    string AADDL4HR = ""; string AQTRALLOW = ""; string ARELALLOW = ""; string AOTESICWAGES = ""; string ASITEALLOW = ""; string AGunAllw = ""; string AFireAllw = ""; string
         AFixedADDL4HR = ""; string AFixedQTRALLOW = ""; string AFixedRELALLOW = ""; string AFixedOTESICWAGES = ""; string AFixedSITEALLOW = ""; string AFixedGunAllw = ""; string AFixedFireAllw = ""; string
                 ATelephoneAllw = ""; string AReimbursement = ""; string AHardshipAllw = ""; string APaidHolidayAllw = ""; string AServiceCharge = ""; string
                       AFixedTelephoneAllw = ""; string AFixedReimbursement = ""; string AFixedHardshipAllw = ""; string AFixedPaidHolidayAllw = ""; string AFixedServiceCharge = ""; string ARankAllw = ""; string AFixedRankAllw = "";



                    string ALWF = "";
                    string APVCDed = "";
                    string ACanteenAdv = "";
                    string APenalty = "";
                    string AATMDed = "";
                    string AREGDed = "";
                    string AFoodDed = "";
                    string AAdmincharge = "";
                    string AIDCardDed = "";
                    string AExtraDed = "";
                    string AOtherDed = "";
                    string ASecDepDed = "";
                    string ALoanDed = "";
                    string AAdvDed = "";
                    string AWCDed = "";


                    //for fixed wages A
                    string CdABasic = "";
                    string CdADA = "";
                    string CdAHRA = "";
                    string CdACCA = "";

                    string CdAConveyance = "";
                    string CdAWA = "";
                    string CdANFHS = "";
                    string CdARC = "";
                    string CdACS = "";
                    string CdAAddlAmount = "";
                    string CdAFoodAllw = "";
                    string CdAWOAmt = "";
                    string CdANHSAmt = "";
                    string CdAMedicalAllw = "";
                    string CdASplAllw = "";
                    string CdAMobileAllw = "";
                    string CdATravelAllw = "";
                    string CdABonus = "";
                    string CdAGratuity = "";
                    string CdAOTAmt = "";
                    string CdAServiceWeightage = "";
                    string CdAArrears = "";
                    string CdAAttBonus = "";
                    string CdANightAllw = "";
                    string CdALeaveAmount = "";
                    string CdAOtherAllw = "";
                    string CdAIncntives = "";
                    string CdAPerformanceAllw = "";

                    string CdADDL4HR, CdQTRALLOW, CdRELALLOW, CdOTESICWAGES, CdSITEALLOW, CdGunAllw, CdFireAllw,
   CdFixedADDL4HR, CdFixedQTRALLOW, CdFixedRELALLOW, CdFixedOTESICWAGES, CdFixedSITEALLOW, CdFixedGunAllw, CdFixedFireAllw,
   CdTelephoneAllw, CdReimbursement, CdHardshipAllw, CdPaidHolidayAllw, CdServiceCharge,
   CdFixedTelephoneAllw, CdFixedReimbursement, CdFixedHardshipAllw, CdFixedPaidHolidayAllw, CdFixedServiceCharge = "";

                    //end fixed wages A
                    string empname = "";
                    string ClientEmpid = "";
                    string BankName = "";
                    string IFSCCode = "";
                    string Site = "";
                    string DOB = "";
                    string DOJ = "";
                    string Sex = "";
                    string MOB = "";
                    string UANNo = "";
                    string AadhaarNo = "";
                    string Department = "";
                    string empid = "";
                    string design = "";
                    string pfno = "";
                    string esino = "";

                    #endregion

                    #region  for total variables by Anil Reddy on 27-12-2016

                    float totalSalAdv = 0;
                    float totalAdv2 = 0;
                    float totalAdv3 = 0;
                    float totalAdv4 = 0;
                    float totalUniformDed = 0;
                    float totalGD = 0;
                    float totalVPF = 0;
                    float totalPF = 0;
                    float totalESI = 0;
                    float totalPT = 0;
                    float totalNfhs = 0;
                    float totalTotalDed = 0;
                    float totalAdvbonus = 0;
                    float totalNetpay = 0;
                    float totalDriverSalary = 0;
                    float totalgross = 0;
                    float totalnoofduties = 0;
                    float totalbasic = 0;
                    float totalots = 0;
                    float totalotamt = 0;
                    float totalnhs = 0;
                    float totalpldays = 0;
                    float totalWos = 0;
                    float totalnhsamt = 0;
                    float totalDa = 0;
                    float totalHra = 0;
                    float totalcca = 0;
                    float totalotherallw = 0;
                    float totalWa = 0;
                    float totalBonus = 0;
                    float totalConveyance = 0;
                    float totalLeaveEncashAmt = 0;
                    float totalGratuity = 0;
                    float totalRC = 0;
                    float totalcs = 0;
                    float totalIncentivs = 0;
                    float totalUniformAllw = 0;
                    float totalSpecialAllw = 0;
                    float totalFoodAllowance = 0;
                    float totalNightShiftAllw = 0;
                    float totalTravelAllw = 0;
                    float totalMobileAllw = 0;
                    float totalMedicalAllw = 0;
                    float totalLWF = 0;
                    float totalPMSBYDed = 0;
                    float totalELAmount = 0;
                    float totalLunchAmout = 0;
                    float totalOutfitAllowance = 0;
                    float totalAddlAmount = 0;
                    float totaltempgross = 0;
                    float totalpay1 = 0;
                    float totalpay2 = 0;
                    float totalpay3 = 0;
                    float totalPVCDed = 0;
                    float totalWOAmt = 0;
                    float totalNPOTSAmt = 0;
                    float totalPerformanceAllw = 0;

                    float totalADDL4HR, totalQTRALLOW, totalRELALLOW, totalOTESICWAGES, totalSITEALLOW, totalGunAllw, totalFireAllw,
totalFixedADDL4HR, totalFixedQTRALLOW, totalFixedRELALLOW, totalFixedOTESICWAGES, totalFixedSITEALLOW, totalFixedGunAllw, totalFixedFireAllw,
totalTelephoneAllw, totalReimbursement, totalHardshipAllw, totalPaidHolidayAllw, totalServiceCharge,
totalFixedTelephoneAllw, totalFixedReimbursement, totalFixedHardshipAllw, totalFixedPaidHolidayAllw, totalFixedServiceCharge = 0;

                    float totalCanteenAdv = 0;
                    float totalPenalty = 0;
                    float totalATMDed = 0;
                    float totalREGDed = 0;
                    float totalFoodDed = 0;
                    float totalAdminCharge = 0;

                    float totalIDCardDed = 0;
                    float totalExtraDed = 0;
                    float totalOtherDed = 0;
                    float totalSecDepDed = 0;
                    float totalLoanDed = 0;
                    float totalAdvDed = 0;
                    float totalWCDed = 0;
                    float totalFixedearnings = 0;
                    float totalattbonus = 0;
                    float totalarrears = 0;

                    //
                    string AtotalSalAdv = "";
                    string AtotalAdv2 = "";
                    string AtotalAdv3 = "";
                    string AtotalAdv4 = "";
                    string AtotalUniformDed = "";
                    string AtotalGD = "";
                    string AtotalPF = "";
                    string AtotalVPF = "";
                    string AtotalESI = "";
                    string AtotalPT = "";
                    string AtotalNfhs = "";
                    string AtotalTotalDed = "";
                    string AtotalAdvbonus = "";
                    string AtotalNetpay = "";
                    string AtotalDriverSalary = "";
                    string Atotalgross = "";
                    string Atotalnoofduties = "";
                    string Atotalbasic = "";
                    string Atotalots = "";
                    string Atotalotamt = "";
                    string Atotalnhs = "";
                    string Atotalpldays = "";
                    string AtotalWos = "";
                    string Atotalnhsamt = "";
                    string AtotalDa = "";
                    string AtotalHra = "";
                    string Atotalcca = "";
                    string Atotalotherallw = "";
                    string AtotalWa = "";
                    string AtotalBonus = "";
                    string AtotalConveyance = "";
                    string AtotalLeaveEncashAmt = "";
                    string AtotalGratuity = "";
                    string AtotalRC = "";
                    string Atotalcs = "";
                    string AtotalIncentivs = "";
                    string AtotalUniformAllw = "";
                    string AtotalSpecialAllw = "";
                    string AtotalFoodAllowance = "";
                    string AtotalNightShiftAllw = "";
                    string AtotalTravelAllw = "";
                    string AtotalMobileAllw = "";
                    string AtotalMedicalAllw = "";

                    string AtotalELAmt = "";
                    string AtotalLunchAmt = "";
                    string AtotalOutfitAllowance = "";


                    string AtotalAddlAmount = "";
                    string Atotaltempgross = "";
                    string Atotalpay1 = "";
                    string Atotalpay2 = "";
                    string Atotalpay3 = "";
                    string AtotalLWF = "";
                    string AtotalPMSBYDed = "";
                    string AtotalPVCDed = "";

                    string AtotalCanteenAdv = "";
                    string AtotalPenalty = "";
                    string AtotalATMDed = "";
                    string AtotalREGDed = "";

                    string AtotalFoodDed = "";
                    string AtotalAdminCharge = "";

                    string AtotalIDCardDed = "";
                    string AtotalExtraDed = "";
                    string AtotalOtherDed = "";
                    string AtotalSecDepDed = "";
                    string AtotalLoanDed = "";
                    string AtotalAdvDed = "";
                    string AtotalWCDed = "";

                    string AtotalAttbonus = "";
                    string AtotalArrears = "";
                    string AtotalPerformanceAllw = "";
                    string AtotalWOAmt = "";
                    string AtotalNpotsAmt = "";

                    string AtotalADDL4HR, AtotalQTRALLOW, AtotalRELALLOW, AtotalOTESICWAGES, AtotalSITEALLOW, AtotalGunAllw, AtotalFireAllw,
AtotalFixedADDL4HR, AtotalFixedQTRALLOW, AtotalFixedRELALLOW, AtotalFixedOTESICWAGES, AtotalFixedSITEALLOW, AtotalFixedGunAllw, AtotalFixedFireAllw,
AtotalTelephoneAllw, AtotalReimbursement, AtotalHardshipAllw, AtotalPaidHolidayAllw, AtotalServiceCharge,
AtotalFixedTelephoneAllw, AtotalFixedReimbursement, AtotalFixedHardshipAllw, AtotalFixedPaidHolidayAllw, AtotalFixedServiceCharge = "";


                    //for totalfixedwages
                    float TotalCBasic = 0;
                    float TotalCDA = 0;
                    float TotalCHRA = 0;
                    float TotalCCCA = 0;

                    float TotalCConveyance = 0;
                    float TotalCWA = 0;
                    float TotalCNFHS = 0;
                    float TotalCRC = 0;
                    float TotalCCS = 0;
                    float TotalCAddlAmount = 0;
                    float TotalCFoodAllw = 0;
                    float TotalCWOAmt = 0;
                    float TotalCNHSAmt = 0;
                    float TotalCMedicalAllw = 0;
                    float TotalCSplAllw = 0;
                    float TotalCMobileAllw = 0;
                    float TotalCTravelAllw = 0;
                    float TotalCBonus = 0;
                    float TotalCGratuity = 0;
                    float TotalCOTAmt = 0;
                    float TotalCServiceWeightage = 0;
                    float TotalCArrears = 0;
                    float TotalCAttBonus = 0;
                    float TotalCNightAllw = 0;
                    float TotalCLeaveAmount = 0;
                    float TotalCOtherAllw = 0;
                    float TotalCIncentives = 0;
                    float TotalCPerformanceAllw = 0;


                    float TotalCADDL4HR = 0; float TotalCQTRALLOW = 0; float TotalCRELALLOW = 0; float TotalCOTESICWAGES = 0; float TotalCSITEALLOW = 0; float TotalCGunAllw = 0; float TotalCFireAllw = 0;
                    float TotalCFixedADDL4HR = 0; float TotalCFixedQTRALLOW = 0; float TotalCFixedRELALLOW = 0; float TotalCFixedOTESICWAGES = 0; float TotalCFixedSITEALLOW = 0; float TotalCFixedGunAllw = 0; float TotalCFixedFireAllw = 0;
                    float TotalCTelephoneAllw = 0; float TotalCReimbursement = 0; float TotalCHardshipAllw = 0; float TotalCPaidHolidayAllw = 0; float TotalCServiceCharge = 0;
                    float TotalCFixedTelephoneAllw = 0; float TotalCFixedReimbursement = 0; float TotalCFixedHardshipAllw = 0; float TotalCFixedPaidHolidayAllw = 0; float TotalCFixedServiceCharge = 0;
                    float TotalCRankAllw = 0; float TotalCFixedRankAllw = 0;

                    string ATotalCBasic = "";
                    string ATotalCDA = "";
                    string ATotalCHRA = "";
                    string ATotalCCCA = "";

                    string ATotalCConveyance = "";
                    string ATotalCWA = "";
                    string ATotalCNFHS = "";
                    string ATotalCRC = "";
                    string ATotalCCS = "";
                    string ATotalCAddlAmount = "";
                    string ATotalCFoodAllw = "";
                    string ATotalCWOAmt = "";
                    string ATotalCNHSAmt = "";
                    string ATotalCMedicalAllw = "";
                    string ATotalCSplAllw = "";
                    string ATotalCMobileAllw = "";
                    string ATotalCTravelAllw = "";
                    string ATotalCBonus = "";
                    string ATotalCGratuity = "";
                    string ATotalCOTAmt = "";
                    string ATotalCServiceWeightage = "";
                    string ATotalCArrears = "";
                    string ATotalCAttBonus = "";
                    string ATotalCNightAllw = "";
                    string AtotalCLeaveAmount = "";
                    string AtotalCOtherAllw = "";
                    string AtotalCIncentives = "";
                    string AtotalFixedearning = "";
                    string AtotalCPerformanceAllw = "";

                    string ATotalCADDL4HR = ""; string ATotalCQTRALLOW = ""; string ATotalCRELALLOW = ""; string ATotalCOTESICWAGES = ""; string ATotalCSITEALLOW = ""; string ATotalCGunAllw = ""; string ATotalCFireAllw = ""; string
ATotalCFixedADDL4HR = ""; string ATotalCFixedQTRALLOW = ""; string ATotalCFixedRELALLOW = ""; string ATotalCFixedOTESICWAGES = ""; string ATotalCFixedSITEALLOW = ""; string ATotalCFixedGunAllw = ""; string ATotalCFixedFireAllw = ""; string
ATotalCTelephoneAllw = ""; string ATotalCReimbursement = ""; string ATotalCHardshipAllw = ""; string ATotalCPaidHolidayAllw = ""; string ATotalCServiceCharge = ""; string
ATotalCFixedTelephoneAllw = ""; string ATotalCFixedReimbursement = ""; string ATotalCFixedHardshipAllw = ""; string ATotalCFixedPaidHolidayAllw = ""; string ATotalCFixedServiceCharge = "";
                    string ATotalRankAllw = ""; string ATotalCFixedRankAllw = "";
                    //

                    #endregion

                    int SNo = 1;
                    int CheckSNo = 1;
                    int nextpagerecordscount = 0;
                    int targetpagerecors = 4;
                    int secondpagerecords = targetpagerecors + 2;
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {

                        #region for declare values

                        EmpBankAcNo = (dt.Rows[i]["EmpBankAcNo"].ToString());
                        empname = (dt.Rows[i]["EmpName"].ToString());
                        empid = (dt.Rows[i]["EmpId"].ToString());
                        design = (dt.Rows[i]["Design"].ToString());
                        //pfno = (dt.Rows[i]["EmpEpfNo"].ToString());
                        esino = (dt.Rows[i]["EmpESINo"].ToString());
                        ClientEmpid = dt.Rows[i]["OldEmpid"].ToString();
                        BankName = dt.Rows[i]["EmpBankName"].ToString();
                        IFSCCode = dt.Rows[i]["EmpIFSCcode"].ToString();
                        Site = dt.Rows[i]["Site"].ToString();
                        DOB = dt.Rows[i]["EmpDtofBirth"].ToString();
                        DOJ = dt.Rows[i]["EmpDtofJoining"].ToString();
                        Sex = dt.Rows[i]["EmpSex"].ToString();
                        MOB = dt.Rows[i]["MOB"].ToString();
                        UANNo = dt.Rows[i]["EmpUANNumber"].ToString();
                        AadhaarNo = dt.Rows[i]["AadharCardNo"].ToString();
                        Department = dt.Rows[i]["Department"].ToString();
                        if (tempgross > 0)
                        {
                            Atempgross = tempgross.ToString();
                        }
                        else
                        {
                            Atempgross = "-";
                        }

                        noofduties = float.Parse(dt.Rows[i]["NoOfDuties"].ToString());
                        if (noofduties > 0)
                        {
                            Anoofduties = noofduties.ToString();
                        }
                        else
                        {
                            Anoofduties = "-";
                        }
                        basic = float.Parse(dt.Rows[i]["Basic"].ToString());
                        if (basic > 0)
                        {
                            Abasic = basic.ToString();
                        }
                        else
                        {
                            Abasic = "-";
                        }


                        ots = float.Parse(dt.Rows[i]["Duties"].ToString());

                        if (ots > 0)
                        {
                            Aots = ots.ToString();
                        }
                        else
                        {
                            Aots = "-";
                        }
                        otamt = float.Parse(dt.Rows[i]["Amount"].ToString());
                        if (otamt > 0)
                        {
                            Aotamt = otamt.ToString();
                        }
                        else
                        {
                            Aotamt = "-";
                        }


                        WOAmt = float.Parse(dt.Rows[i]["woamt"].ToString());
                        if (WOAmt > 0)
                        {
                            AWOAmt = WOAmt.ToString();
                        }
                        else
                        {
                            AWOAmt = "-";
                        }

                        NPOTSAmt = float.Parse(dt.Rows[i]["Npotsamt"].ToString());
                        if (NPOTSAmt > 0)
                        {
                            ANPOTSAmt = NPOTSAmt.ToString();
                        }
                        else
                        {
                            ANPOTSAmt = "-";
                        }

                        nhs = float.Parse(dt.Rows[i]["NHS"].ToString());
                        if (nhs > 0)
                        {
                            Anhs = nhs.ToString();
                        }
                        else
                        {
                            Anhs = "-";
                        }

                        PLdays = float.Parse(dt.Rows[i]["pldays"].ToString());
                        if (PLdays > 0)
                        {
                            APLdays = PLdays.ToString();
                        }
                        else
                        {
                            APLdays = "-";
                        }

                        Wos = float.Parse(dt.Rows[i]["WO"].ToString());
                        if (Wos > 0)
                        {
                            AWOs = Wos.ToString();
                        }
                        else
                        {
                            AWOs = "-";
                        }

                        nhsamt = float.Parse(dt.Rows[i]["Nhsamt"].ToString());
                        if (nhsamt > 0)
                        {
                            Anhsamt = nhsamt.ToString();
                        }
                        else
                        {
                            Anhsamt = "-";
                        }
                        SalAdv = float.Parse(dt.Rows[i]["SalAdvDed"].ToString());
                        if (SalAdv > 0)
                        {
                            ASalAdv = SalAdv.ToString();
                        }
                        else
                        {
                            ASalAdv = "-";
                        }

                        UniformDed = float.Parse(dt.Rows[i]["UniformDed"].ToString());
                        if (UniformDed > 0)
                        {
                            AUniformDed = UniformDed.ToString();
                        }
                        else
                        {
                            AUniformDed = "-";
                        }

                        LWF = float.Parse(dt.Rows[i]["owf"].ToString());
                        if (LWF > 0)
                        {
                            ALWF = LWF.ToString();
                        }
                        else
                        {
                            ALWF = "-";
                        }

                        PVCDed = float.Parse(dt.Rows[i]["PVCDed"].ToString());
                        if (PVCDed > 0)
                        {
                            APVCDed = PVCDed.ToString();
                        }
                        else
                        {
                            APVCDed = "-";
                        }
                        Penalty = float.Parse(dt.Rows[i]["Penalty"].ToString());
                        if (Penalty > 0)
                        {
                            APenalty = Penalty.ToString();
                        }
                        else
                        {
                            APenalty = "-";
                        }
                        GD = float.Parse(dt.Rows[i]["GenDedn"].ToString());
                        if (GD > 0)
                        {
                            AGD = GD.ToString();
                        }
                        else
                        {
                            AGD = "-";
                        }

                        VPF = float.Parse(dt.Rows[i]["VPF"].ToString());
                        if (VPF > 0)
                        {
                            AVPF = VPF.ToString();
                        }
                        else
                        {
                            AVPF = "-";
                        }

                        PF = float.Parse(dt.Rows[i]["PF"].ToString());
                        if (PF > 0)
                        {
                            APF = PF.ToString();
                        }
                        else
                        {
                            APF = "-";
                        }

                        


                        ESI = float.Parse(dt.Rows[i]["ESI"].ToString());
                        if (ESI > 0)
                        {
                            AESI = ESI.ToString();
                        }
                        else
                        {
                            AESI = "-";
                        }
                        PT = float.Parse(dt.Rows[i]["ProfTax"].ToString());
                        if (PT > 0)
                        {
                            APT = PT.ToString();
                        }
                        else
                        {
                            APT = "-";
                        }

                        CanteenAdv = float.Parse(dt.Rows[i]["CanteenAdv"].ToString());
                        if (CanteenAdv > 0)
                        {
                            ACanteenAdv = CanteenAdv.ToString();
                        }
                        else
                        {
                            ACanteenAdv = "-";
                        }

                        ATMDed = float.Parse(dt.Rows[i]["atmded"].ToString());
                        if (ATMDed > 0)
                        {
                            AATMDed = ATMDed.ToString();
                        }
                        else
                        {
                            AATMDed = "-";
                        }

                        REGDed = float.Parse(dt.Rows[i]["RegistrationFee"].ToString());
                        if (REGDed > 0)
                        {
                            AREGDed = REGDed.ToString();
                        }
                        else
                        {
                            AREGDed = "-";
                        }

                        FoodDed = float.Parse(dt.Rows[i]["FoodDed"].ToString());
                        if (FoodDed > 0)
                        {
                            AFoodDed = FoodDed.ToString();
                        }
                        else
                        {
                            AFoodDed = "-";
                        }

                        AdminChargesDed = float.Parse(dt.Rows[i]["AdminCharges"].ToString());
                        if (AdminChargesDed > 0)
                        {
                            AAdmincharge = AdminChargesDed.ToString();
                        }
                        else
                        {
                            AAdmincharge = "-";
                        }

                        IDCardDed = float.Parse(dt.Rows[i]["IDCardDed"].ToString());
                        if (IDCardDed > 0)
                        {
                            AIDCardDed = IDCardDed.ToString();
                        }
                        else
                        {
                            AIDCardDed = "-";
                        }

                        ExtraDed = float.Parse(dt.Rows[i]["Extra"].ToString());
                        if (ExtraDed > 0)
                        {
                            AExtraDed = ExtraDed.ToString();
                        }
                        else
                        {
                            AExtraDed = "-";
                        }

                        OtherDed = float.Parse(dt.Rows[i]["OtherDed"].ToString());
                        if (OtherDed > 0)
                        {
                            AOtherDed = OtherDed.ToString();
                        }
                        else
                        {
                            AOtherDed = "-";
                        }

                        SecDepDed = float.Parse(dt.Rows[i]["SecDepDedn"].ToString());
                        if (SecDepDed > 0)
                        {
                            ASecDepDed = SecDepDed.ToString();
                        }
                        else
                        {
                            ASecDepDed = "-";
                        }

                        LoanDed = float.Parse(dt.Rows[i]["loanded"].ToString());
                        if (LoanDed > 0)
                        {
                            ALoanDed = LoanDed.ToString();
                        }
                        else
                        {
                            ALoanDed = "-";
                        }

                        AdvDed = float.Parse(dt.Rows[i]["AdvDed"].ToString());
                        if (AdvDed > 0)
                        {
                            AAdvDed = AdvDed.ToString();
                        }
                        else
                        {
                            AAdvDed = "-";
                        }

                        WCDed = float.Parse(dt.Rows[i]["WCDed"].ToString());
                        if (WCDed > 0)
                        {
                            AWCDed = WCDed.ToString();
                        }
                        else
                        {
                            AWCDed = "-";
                        }

                        TotalDed = float.Parse(dt.Rows[i]["Totaldeduct"].ToString());
                        if (TotalDed > 0)
                        {
                            ATotalDed = TotalDed.ToString();
                        }
                        else
                        {
                            ATotalDed = "-";
                        }

                        AdvBonus = float.Parse(dt.Rows[i]["AdvBonus"].ToString());
                        if (AdvBonus > 0)
                        {
                            AAdvBonus = AdvBonus.ToString();
                        }
                        else
                        {
                            AAdvBonus = "-";
                        }

                        Netpay = float.Parse(dt.Rows[i]["ActualAmount"].ToString());
                        if (Netpay > 0)
                        {
                            ANetpay = Netpay.ToString();
                        }
                        else
                        {
                            ANetpay = "-";
                        }

                        DriverSalary = float.Parse(dt.Rows[i]["DriverSalary"].ToString());
                        if (DriverSalary > 0)
                        {
                            ADriverSalary = DriverSalary.ToString();
                        }
                        else
                        {
                            ADriverSalary = "-";
                        }
                        gross = float.Parse(dt.Rows[i]["Gross"].ToString());
                        if (gross > 0)
                        {
                            Agross = gross.ToString();
                        }
                        else
                        {
                            Agross = "-";
                        }

                        Da = float.Parse(dt.Rows[i]["DA"].ToString());
                        if (Da > 0)
                        {
                            ADa = Da.ToString();
                        }
                        else
                        {
                            ADa = "-";
                        }
                        Hra = float.Parse(dt.Rows[i]["HRA"].ToString());
                        if (Hra > 0)
                        {
                            AHra = Hra.ToString();
                        }
                        else
                        {
                            AHra = "-";
                        }
                        cca = float.Parse(dt.Rows[i]["CCA"].ToString());
                        if (cca > 0)
                        {
                            Acca = cca.ToString();
                        }
                        else
                        {
                            Acca = "-";
                        }
                        //
                        Conveyance = float.Parse(dt.Rows[i]["Conveyance"].ToString());
                        if (Conveyance > 0)
                        {
                            AConveyance = Conveyance.ToString();
                        }
                        else
                        {
                            AConveyance = "-";
                        }
                        LeaveEncashAmt = float.Parse(dt.Rows[i]["Leavewages"].ToString());
                        if (LeaveEncashAmt > 0)
                        {
                            ALeaveEncashAmt = LeaveEncashAmt.ToString();
                        }
                        else
                        {
                            ALeaveEncashAmt = "-";
                        }
                        Gratuity = float.Parse(dt.Rows[i]["Gratuity"].ToString());
                        if (Gratuity > 0)
                        {
                            AGratuity = Gratuity.ToString();
                        }
                        else
                        {
                            AGratuity = "-";
                        }
                        RC = float.Parse(dt.Rows[i]["RC"].ToString());
                        if (RC > 0)
                        {
                            ARC = RC.ToString();
                        }
                        else
                        {
                            ARC = "-";
                        }
                        cs = float.Parse(dt.Rows[i]["cs"].ToString());
                        if (cs > 0)
                        {
                            Acs = cs.ToString();
                        }
                        else
                        {
                            Acs = "-";
                        }
                        Incentivs = float.Parse(dt.Rows[i]["Incentivs"].ToString());
                        if (Incentivs > 0)
                        {
                            AIncentivs = Incentivs.ToString();
                        }
                        else
                        {
                            AIncentivs = "-";
                        }

                        Fixedearnings = float.Parse(dt.Rows[i]["FixedEarnings"].ToString());
                        if (Fixedearnings > 0)
                        {
                            AFixedearnings = Fixedearnings.ToString();
                        }
                        else
                        {
                            AFixedearnings = "-";
                        }


                        SpecialAllw = float.Parse(dt.Rows[i]["SplAllowance"].ToString());
                        if (SpecialAllw > 0)
                        {
                            ASpecialAllw = SpecialAllw.ToString();
                        }
                        else
                        {
                            ASpecialAllw = "-";
                        }
                        FoodAllowance = float.Parse(dt.Rows[i]["FoodAllowance"].ToString());
                        if (FoodAllowance > 0)
                        {
                            AFoodAllowance = FoodAllowance.ToString();
                        }
                        else
                        {
                            AFoodAllowance = "-";
                        }
                        NightShiftAllw = float.Parse(dt.Rows[i]["NightAllw"].ToString());
                        if (NightShiftAllw > 0)
                        {
                            ANightShiftAllw = NightShiftAllw.ToString();
                        }
                        else
                        {
                            ANightShiftAllw = "-";
                        }
                        TravelAllw = float.Parse(dt.Rows[i]["TravelAllw"].ToString());
                        if (TravelAllw > 0)
                        {
                            ATravelAllw = TravelAllw.ToString();
                        }
                        else
                        {
                            ATravelAllw = "-";
                        }
                        MobileAllw = float.Parse(dt.Rows[i]["MobileAllw"].ToString());
                        if (MobileAllw > 0)
                        {
                            AMobileAllw = MobileAllw.ToString();
                        }
                        else
                        {
                            AMobileAllw = "-";
                        }

                        MedicalAllw = float.Parse(dt.Rows[i]["MedicalAllowance"].ToString());
                        if (MedicalAllw > 0)
                        {
                            AMedicalAllw = MedicalAllw.ToString();
                        }
                        else
                        {
                            AMedicalAllw = "-";
                        }


                        AddlAmount = float.Parse(dt.Rows[i]["AddlAmount"].ToString());
                        if (AddlAmount > 0)
                        {
                            AAddlAmount = AddlAmount.ToString();
                        }
                        else
                        {
                            AAddlAmount = "-";
                        }
                        Nfhs = float.Parse(dt.Rows[i]["Nfhs"].ToString());
                        if (Nfhs > 0)
                        {
                            ANfhs = Nfhs.ToString();
                        }
                        else
                        {
                            ANfhs = "-";
                        }

                        //
                        otherallw = float.Parse(dt.Rows[i]["OtherAllowance"].ToString());
                        if (otherallw > 0)
                        {
                            Aotherallw = otherallw.ToString();
                        }
                        else
                        {
                            Aotherallw = "-";
                        }
                        Wa = float.Parse(dt.Rows[i]["WashAllowance"].ToString());
                        if (Wa > 0)
                        {
                            AWa = Wa.ToString();
                        }
                        else
                        {
                            AWa = "-";
                        }
                        Bonus = float.Parse(dt.Rows[i]["Bonus"].ToString());
                        if (Bonus > 0)
                        {
                            ABonus = Bonus.ToString();
                        }
                        else
                        {
                            ABonus = "-";
                        }

                        CBasic = float.Parse(dt.Rows[i]["cdBasic"].ToString());
                        if (CBasic > 0)
                        {
                            CdABasic = CBasic.ToString();
                        }
                        else
                        {
                            CdABasic = "-";
                        }

                        CDA = float.Parse(dt.Rows[i]["cdDA"].ToString());
                        if (CDA > 0)
                        {
                            CdADA = CDA.ToString();
                        }
                        else
                        {
                            CdADA = "-";
                        }

                        CHRA = float.Parse(dt.Rows[i]["cdHRA"].ToString());
                        if (CHRA > 0)
                        {
                            CdAHRA = CHRA.ToString();
                        }
                        else
                        {
                            CdAHRA = "-";
                        }

                        CCCA = float.Parse(dt.Rows[i]["cdcca"].ToString());
                        if (CCCA > 0)
                        {
                            CdACCA = CCCA.ToString();
                        }
                        else
                        {
                            CdACCA = "-";
                        }

                        CConveyance = float.Parse(dt.Rows[i]["cdConv"].ToString());
                        if (CConveyance > 0)
                        {
                            CdAConveyance = CConveyance.ToString();
                        }
                        else
                        {
                            CdAConveyance = "-";
                        }

                        CWA = float.Parse(dt.Rows[i]["cdWashAllw"].ToString());
                        if (CWA > 0)
                        {
                            CdAWA = CWA.ToString();
                        }
                        else
                        {
                            CdAWA = "-";
                        }

                        CNFHS = float.Parse(dt.Rows[i]["cdNFhs"].ToString());
                        if (CNFHS > 0)
                        {
                            CdANFHS = CNFHS.ToString();
                        }
                        else
                        {
                            CdANFHS = "-";
                        }

                        CRC = float.Parse(dt.Rows[i]["cdRC"].ToString());
                        if (CRC > 0)
                        {
                            CdARC = CRC.ToString();
                        }
                        else
                        {
                            CdARC = "-";
                        }

                        CCS = float.Parse(dt.Rows[i]["cdCS"].ToString());
                        if (CCS > 0)
                        {
                            CdACS = CCS.ToString();
                        }
                        else
                        {
                            CdACS = "-";
                        }

                        CAddlAmount = float.Parse(dt.Rows[i]["cdAddlAmount"].ToString());
                        if (CAddlAmount > 0)
                        {
                            CdAAddlAmount = CAddlAmount.ToString();
                        }
                        else
                        {
                            CdAAddlAmount = "-";
                        }


                        CFoodAllw = float.Parse(dt.Rows[i]["CdFoodAllw"].ToString());
                        if (CFoodAllw > 0)
                        {
                            CdAFoodAllw = CFoodAllw.ToString();
                        }
                        else
                        {
                            CdAFoodAllw = "-";
                        }

                        CWOAmt = float.Parse(dt.Rows[i]["cdWoRate"].ToString());
                        if (CWOAmt > 0)
                        {
                            CdAWOAmt = CWOAmt.ToString();
                        }
                        else
                        {
                            CdAWOAmt = "-";
                        }

                        CNHSAmt = float.Parse(dt.Rows[i]["cdNHs"].ToString());
                        if (CNHSAmt > 0)
                        {
                            CdANHSAmt = CNHSAmt.ToString();
                        }
                        else
                        {
                            CdANHSAmt = "-";
                        }

                        CMedicalAllw = float.Parse(dt.Rows[i]["cdMedicalAllw"].ToString());
                        if (CMedicalAllw > 0)
                        {
                            CdAMedicalAllw = CMedicalAllw.ToString();
                        }
                        else
                        {
                            CdAMedicalAllw = "-";
                        }

                        CSplAllw = float.Parse(dt.Rows[i]["cdSPLALLW"].ToString());
                        if (CSplAllw > 0)
                        {
                            CdASplAllw = CSplAllw.ToString();
                        }
                        else
                        {
                            CdASplAllw = "-";
                        }

                        CMobileAllw = float.Parse(dt.Rows[i]["cdMobileAllw"].ToString());
                        if (CMobileAllw > 0)
                        {
                            CdAMobileAllw = CMobileAllw.ToString();
                        }
                        else
                        {
                            CdAMobileAllw = "-";
                        }

                        CTravelAllw = float.Parse(dt.Rows[i]["cdTravelAllw"].ToString());
                        if (CTravelAllw > 0)
                        {
                            CdATravelAllw = CTravelAllw.ToString();
                        }
                        else
                        {
                            CdATravelAllw = "-";
                        }

                        CBonus = float.Parse(dt.Rows[i]["cdBonus"].ToString());
                        if (CBonus > 0)
                        {
                            CdABonus
                                = CBonus.ToString();
                        }
                        else
                        {
                            CdABonus = "-";
                        }

                        CGratuity = float.Parse(dt.Rows[i]["cdGratuity"].ToString());
                        if (CGratuity > 0)
                        {
                            CdAGratuity
                                = CGratuity.ToString();
                        }
                        else
                        {
                            CdAGratuity = "-";
                        }

                        COTAmt = float.Parse(dt.Rows[i]["cdOTS"].ToString());
                        if (COTAmt > 0)
                        {
                            CdAOTAmt = COTAmt.ToString();
                        }
                        else
                        {
                            CdAOTAmt = "-";
                        }

                        CServiceWeightage = float.Parse(dt.Rows[i]["cdServiceweightage"].ToString());
                        if (CServiceWeightage > 0)
                        {
                            CdAServiceWeightage = CServiceWeightage.ToString();
                        }
                        else
                        {
                            CdAServiceWeightage = "-";
                        }

                        CArrears = float.Parse(dt.Rows[i]["cdArrears"].ToString());
                        if (CArrears > 0)
                        {
                            CdAArrears = CArrears.ToString();
                        }
                        else
                        {
                            CdAArrears = "-";
                        }

                        CAttBonus = float.Parse(dt.Rows[i]["cdAttBonus"].ToString());
                        if (CAttBonus > 0)
                        {
                            CdAAttBonus = CAttBonus.ToString();
                        }
                        else
                        {
                            CdAAttBonus = "-";
                        }

                        CNightAllw = float.Parse(dt.Rows[i]["cdNightAllw"].ToString());
                        if (CNightAllw > 0)
                        {
                            CdANightAllw = CNightAllw.ToString();
                        }
                        else
                        {
                            CdANightAllw = "-";
                        }

                        CLeaveAmount = float.Parse(dt.Rows[i]["cdLeaveAmount"].ToString());
                        if (CLeaveAmount > 0)
                        {
                            CdALeaveAmount = CLeaveAmount.ToString();
                        }
                        else
                        {
                            CdALeaveAmount = "-";
                        }

                        COtherAllw = float.Parse(dt.Rows[i]["cdOtherallowance"].ToString());
                        if (COtherAllw > 0)
                        {
                            CdAOtherAllw = COtherAllw.ToString();
                        }
                        else
                        {
                            CdAOtherAllw = "-";
                        }

                        CIncentives = float.Parse(dt.Rows[i]["cdInsentives"].ToString());
                        if (CIncentives > 0)
                        {
                            CdAIncntives = CIncentives.ToString();
                        }
                        else
                        {
                            CdAIncntives = "-";
                        }

                        Arrears = float.Parse(dt.Rows[i]["Arrears"].ToString());

                        if (Arrears > 0)
                        {
                            AArrears = Arrears.ToString();
                        }
                        else
                        {
                            AArrears = "-";
                        }

                        AttBonus = float.Parse(dt.Rows[i]["AttBonus"].ToString());
                        if (AttBonus > 0)
                        {
                            AAttBonus = AttBonus.ToString();
                        }
                        else
                        {
                            AAttBonus = "-";
                        }

                        ADDL4HR = float.Parse(dt.Rows[i]["ADDL4HR"].ToString());
                        if (ADDL4HR > 0)
                        {
                            AADDL4HR = ADDL4HR.ToString();
                        }
                        else
                        {
                            AADDL4HR = "-";
                        }
                        QTRALLOW = float.Parse(dt.Rows[i]["QTRALLOW"].ToString());
                        if (QTRALLOW > 0)
                        {
                            AQTRALLOW = QTRALLOW.ToString();
                        }
                        else
                        {
                            AQTRALLOW = "-";
                        }
                        RELALLOW = float.Parse(dt.Rows[i]["RELALLOW"].ToString());
                        if (RELALLOW > 0)
                        {
                            ARELALLOW = RELALLOW.ToString();
                        }
                        else
                        {
                            ARELALLOW = "-";
                        }
                        OTESICWAGES = float.Parse(dt.Rows[i]["OTESICWAGES"].ToString());
                        if (OTESICWAGES > 0)
                        {
                            AOTESICWAGES = OTESICWAGES.ToString();
                        }
                        else
                        {
                            AOTESICWAGES = "-";
                        }
                        SITEALLOW = float.Parse(dt.Rows[i]["SITEALLOW"].ToString());
                        if (SITEALLOW > 0)
                        {
                            ASITEALLOW = SITEALLOW.ToString();
                        }
                        else
                        {
                            ASITEALLOW = "-";
                        }
                        GunAllw = float.Parse(dt.Rows[i]["GunAllw"].ToString());
                        if (GunAllw > 0)
                        {
                            AGunAllw = GunAllw.ToString();
                        }
                        else
                        {
                            AGunAllw = "-";
                        }
                        FireAllw = float.Parse(dt.Rows[i]["FireAllw"].ToString());
                        if (FireAllw > 0)
                        {
                            AFireAllw = FireAllw.ToString();
                        }
                        else
                        {
                            AFireAllw = "-";
                        }
                        TelephoneAllw = float.Parse(dt.Rows[i]["TelephoneAllw"].ToString());
                        if (TelephoneAllw > 0)
                        {
                            ATelephoneAllw = TelephoneAllw.ToString();
                        }
                        else
                        {
                            ATelephoneAllw = "-";
                        }
                        Reimbursement = float.Parse(dt.Rows[i]["Reimbursement"].ToString());
                        if (Reimbursement > 0)
                        {
                            AReimbursement = Reimbursement.ToString();
                        }
                        else
                        {
                            AReimbursement = "-";
                        }
                        HardshipAllw = float.Parse(dt.Rows[i]["HardshipAllw"].ToString());
                        if (HardshipAllw > 0)
                        {
                            AHardshipAllw = HardshipAllw.ToString();
                        }
                        else
                        {
                            AHardshipAllw = "-";
                        }

                        RankAllw = float.Parse(dt.Rows[i]["RankAllw"].ToString());
                        if (RankAllw > 0)
                        {
                            ARankAllw = RankAllw.ToString();
                        }
                        else
                        {
                            ARankAllw = "-";
                        }

                        PerformanceAllw = float.Parse(dt.Rows[i]["PerformanceAllw"].ToString());
                        if (PerformanceAllw > 0)
                        {
                            APerformanceAllw = PerformanceAllw.ToString();
                        }
                        else
                        {
                            APerformanceAllw = "-";
                        }

                        PaidHolidayAllw = float.Parse(dt.Rows[i]["PaidHolidayAllw"].ToString());
                        if (PaidHolidayAllw > 0)
                        {
                            APaidHolidayAllw = PaidHolidayAllw.ToString();
                        }
                        else
                        {
                            APaidHolidayAllw = "-";
                        }
                        ServiceCharge = float.Parse(dt.Rows[i]["ServiceCharge"].ToString());
                        if (ServiceCharge > 0)
                        {
                            AServiceCharge = ServiceCharge.ToString();
                        }
                        else
                        {
                            AServiceCharge = "-";
                        }
                        FixedADDL4HR = float.Parse(dt.Rows[i]["FixedADDL4HR"].ToString());
                        if (FixedADDL4HR > 0)
                        {
                            AFixedADDL4HR = FixedADDL4HR.ToString();
                        }
                        else
                        {
                            AFixedADDL4HR = "-";
                        }
                        FixedQTRALLOW = float.Parse(dt.Rows[i]["FixedQTRALLOW"].ToString());
                        if (FixedQTRALLOW > 0)
                        {
                            AFixedQTRALLOW = FixedQTRALLOW.ToString();
                        }
                        else
                        {
                            AFixedQTRALLOW = "-";
                        }
                        FixedRELALLOW = float.Parse(dt.Rows[i]["FixedRELALLOW"].ToString());
                        if (FixedRELALLOW > 0)
                        {
                            AFixedRELALLOW = FixedRELALLOW.ToString();
                        }
                        else
                        {
                            AFixedRELALLOW = "-";
                        }
                        FixedOTESICWAGES = float.Parse(dt.Rows[i]["FixedOTESICWAGES"].ToString());
                        if (FixedOTESICWAGES > 0)
                        {
                            AFixedOTESICWAGES = FixedOTESICWAGES.ToString();
                        }
                        else
                        {
                            AFixedOTESICWAGES = "-";
                        }
                        FixedSITEALLOW = float.Parse(dt.Rows[i]["FixedSITEALLOW"].ToString());
                        if (FixedSITEALLOW > 0)
                        {
                            AFixedSITEALLOW = FixedSITEALLOW.ToString();
                        }
                        else
                        {
                            AFixedSITEALLOW = "-";
                        }
                        FixedGunAllw = float.Parse(dt.Rows[i]["FixedGunAllw"].ToString());
                        if (FixedGunAllw > 0)
                        {
                            AFixedGunAllw = FixedGunAllw.ToString();
                        }
                        else
                        {
                            AFixedGunAllw = "-";
                        }
                        FixedFireAllw = float.Parse(dt.Rows[i]["FixedFireAllw"].ToString());
                        if (FixedFireAllw > 0)
                        {
                            AFixedFireAllw = FixedFireAllw.ToString();
                        }
                        else
                        {
                            AFixedFireAllw = "-";
                        }
                        FixedTelephoneAllw = float.Parse(dt.Rows[i]["FixedTelephoneAllw"].ToString());
                        if (FixedTelephoneAllw > 0)
                        {
                            AFixedTelephoneAllw = FixedTelephoneAllw.ToString();
                        }
                        else
                        {
                            AFixedTelephoneAllw = "-";
                        }
                        FixedReimbursement = float.Parse(dt.Rows[i]["FixedReimbursement"].ToString());
                        if (FixedReimbursement > 0)
                        {
                            AFixedReimbursement = FixedReimbursement.ToString();
                        }
                        else
                        {
                            AFixedReimbursement = "-";
                        }
                        FixedHardshipAllw = float.Parse(dt.Rows[i]["FixedHardshipAllw"].ToString());
                        if (FixedHardshipAllw > 0)
                        {
                            AFixedHardshipAllw = FixedHardshipAllw.ToString();
                        }
                        else
                        {
                            AFixedHardshipAllw = "-";
                        }

                        FixedRankAllw = float.Parse(dt.Rows[i]["FixedRankAllw"].ToString());
                        if (FixedRankAllw > 0)
                        {
                            AFixedRankAllw = FixedRankAllw.ToString();
                        }
                        else
                        {
                            AFixedRankAllw = "-";
                        }

                        FixedPaidHolidayAllw = float.Parse(dt.Rows[i]["FixedPaidHolidayAllw"].ToString());
                        if (FixedPaidHolidayAllw > 0)
                        {
                            AFixedPaidHolidayAllw = FixedPaidHolidayAllw.ToString();
                        }
                        else
                        {
                            AFixedPaidHolidayAllw = "-";
                        }
                        FixedServiceCharge = float.Parse(dt.Rows[i]["FixedServiceCharge"].ToString());
                        if (FixedServiceCharge > 0)
                        {
                            AFixedServiceCharge = FixedServiceCharge.ToString();
                        }
                        else
                        {
                            AFixedServiceCharge = "-";
                        }

                        CPerformanceAllw = float.Parse(dt.Rows[i]["cdPerformanceAllw"].ToString());
                        if (CPerformanceAllw > 0)
                        {
                            CdAPerformanceAllw = CPerformanceAllw.ToString();
                        }
                        else
                        {
                            CdAPerformanceAllw = "-";
                        }

                        #endregion


                        nextpagerecordscount++;
                        #region for values by Anil Reddy on 27-12-2016
                        cell = new PdfPCell(new Phrase((SNo).ToString(), FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.5f);
                        Maintable.AddCell(cell);

                        string OldEmpid = "";
                        string MOBS = "";
                        string SiteS = "";
                        OldEmpid = dt.Rows[i]["OldEmpid"].ToString();
                        MOBS = dt.Rows[i]["MOB"].ToString();
                        SiteS = dt.Rows[i]["Site"].ToString();

                        PdfPCell cellN = new PdfPCell();
                        Paragraph CcellHead9 = new Paragraph();
                        CcellHead9.Add(new Chunk(dt.Rows[i]["EmpId"].ToString() + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        if (OldEmpid.Trim().Length > 0)
                        {
                            CcellHead9.Add(new Chunk(OldEmpid + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead9.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (MOBS.Trim().Length > 0)
                        {
                            CcellHead9.Add(new Chunk(MOBS + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead9.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (SiteS.Trim().Length > 0)
                        {
                            CcellHead9.Add(new Chunk(SiteS + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead9.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        cellN.AddElement(CcellHead9);
                        cellN.HorizontalAlignment = 0;
                        cellN.Colspan = 1;
                        cellN.SetLeading(0, 1.3f);
                        Maintable.AddCell(cellN);

                        cell = new PdfPCell();

                        string EmpFatherName = "";
                        string EmpESINo = "";
                        string EmpUANNumber = "";
                        EmpFatherName = dt.Rows[i]["EmpFatherName"].ToString();
                        EmpESINo = dt.Rows[i]["EmpESINo"].ToString();
                        EmpUANNumber = dt.Rows[i]["EmpUANNumber"].ToString();

                        Paragraph CcellHead5 = new Paragraph();
                        CcellHead5.Add(new Chunk(dt.Rows[i]["EmpName"].ToString() + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));

                        if (EmpFatherName.Trim().Length > 0)
                        {
                            CcellHead5.Add(new Chunk(EmpFatherName + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead5.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpESINo.Trim().Length > 0)
                        {
                            CcellHead5.Add(new Chunk(EmpESINo + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead5.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpUANNumber.Trim().Length > 0)
                        {
                            CcellHead5.Add(new Chunk(EmpUANNumber + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead5.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        cell.AddElement(CcellHead5);
                        cell.SetLeading(0, 1.3f);
                        cell.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        cell.Colspan = 1;
                        Maintable.AddCell(cell);


                        string AadharCardNo = "";
                        string EmpBankName = "";
                        string EmpBankAcNos = "";
                        string EmpIFSCcode = "";

                        AadharCardNo = dt.Rows[i]["AadharCardNo"].ToString();
                        EmpBankName = dt.Rows[i]["EmpBankName"].ToString();
                        EmpBankAcNos = dt.Rows[i]["EmpBankAcNo"].ToString();
                        EmpIFSCcode = dt.Rows[i]["EmpIFSCcode"].ToString();

                        PdfPCell cellHead7 = new PdfPCell();
                        Paragraph CcellHead7 = new Paragraph();
                        if (AadharCardNo.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(AadharCardNo + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpBankName.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(EmpBankName + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpBankAcNos.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(EmpBankAcNos + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpIFSCcode.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(EmpIFSCcode + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        cellHead7.AddElement(CcellHead7);
                        cellHead7.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        cellHead7.Border = 16;
                        cellHead7.SetLeading(0, 1.3f);
                        Maintable.AddCell(cellHead7);


                        string EmpSex = "";
                        string EmpDtofBirth = "";
                        string EmpDtofJoining = "";

                        EmpSex = dt.Rows[i]["EmpSex"].ToString();
                        EmpDtofBirth = dt.Rows[i]["EmpDtofBirth"].ToString();
                        EmpDtofJoining = dt.Rows[i]["EmpDtofJoining"].ToString();

                        PdfPCell cellHead8 = new PdfPCell();
                        Paragraph CcellHead8 = new Paragraph();

                        CcellHead8.Add(new Chunk(dt.Rows[i]["Design"].ToString() + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));

                        if (EmpSex.Trim().Length > 0)
                        {
                            CcellHead8.Add(new Chunk(EmpSex + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead8.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpDtofBirth.Trim().Length > 0)
                        {
                            CcellHead8.Add(new Chunk(EmpDtofBirth + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead8.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpDtofJoining.Trim().Length > 0)
                        {
                            CcellHead8.Add(new Chunk(EmpDtofJoining + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead8.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        cellHead8.AddElement(CcellHead8);
                        cellHead8.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        cellHead8.SetLeading(0, 1.3f);
                        Maintable.AddCell(cellHead8);

                        #region for fixed wages
                        cell = new PdfPCell();
                        Paragraph CcellHead6 = new Paragraph();
                        if (CdABasic != "-")
                        {
                            CcellHead6.Add(new Chunk("Basic+DA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdADA != "-")
                        {
                            CcellHead6.Add(new Chunk("\nCDA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAHRA != "-")
                        {
                            CcellHead6.Add(new Chunk("\nHRA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdACCA != "-")
                        {
                            CcellHead6.Add(new Chunk("\nCCA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAConveyance != "-")
                        {
                            CcellHead6.Add(new Chunk("\nConv", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAWA != "-")
                        {
                            CcellHead6.Add(new Chunk("\nWA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdANFHS != "-")
                        {
                            CcellHead6.Add(new Chunk("\nNfhs", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdALeaveAmount != "-")
                        {
                            CcellHead6.Add(new Chunk("\nLW", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAGratuity != "-")
                        {
                            CcellHead6.Add(new Chunk("\nGratuity", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdABonus != "-")
                        {
                            CcellHead6.Add(new Chunk("\nBonus", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAAddlAmount != "-")
                        {
                            CcellHead6.Add(new Chunk("\nAddl Amt", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAArrears != "-")
                        {
                            CcellHead6.Add(new Chunk("\nArrears", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAAttBonus != "-")
                        {
                            CcellHead6.Add(new Chunk("\nAtbonus", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead6.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead6);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0.5f;
                        cell.BorderWidthRight = 0;
                        Maintable.AddCell(cell);

                        cell = new PdfPCell();
                        Paragraph CcellHead1110 = new Paragraph();

                        if (CdABasic != "-")
                        {
                            CcellHead1110.Add(new Chunk(CdABasic, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (CdADA != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdADA, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAHRA != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAHRA, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdACCA != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdACCA, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAConveyance != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAConveyance, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAWA != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAWA, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdANFHS != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdANFHS, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdALeaveAmount != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdALeaveAmount, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAGratuity != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAGratuity, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdABonus != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdABonus, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAAddlAmount != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAAddlAmount, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAArrears != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAArrears, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAAttBonus != "-")
                        {
                            CcellHead1110.Add(new Chunk("\n" + CdAAttBonus, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead1110.SetLeading(0, 1.2f);
                        CcellHead1110.Alignment = 2;
                        cell.AddElement(CcellHead1110);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        //cell.PaddingLeft = 25;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);
                        #region for total

                        TotalCBasic += CBasic;
                        if (TotalCBasic > 0)
                        {
                            ATotalCBasic = TotalCBasic.ToString();
                        }
                        else
                        {
                            ATotalCBasic = "-";
                        }

                        TotalCDA += CDA;
                        if (TotalCDA > 0)
                        {
                            ATotalCDA = TotalCDA.ToString();
                        }
                        else
                        {
                            ATotalCDA = "-";
                        }
                        TotalCHRA += CHRA;
                        if (TotalCHRA > 0)
                        {
                            ATotalCHRA = TotalCHRA.ToString("");
                        }
                        else
                        {
                            ATotalCHRA = "-";
                        }
                        TotalCCCA += CCCA;
                        if (TotalCCCA > 0)
                        {
                            ATotalCCCA = TotalCCCA.ToString("");
                        }
                        else
                        {
                            ATotalCCCA = "-";
                        }
                        TotalCConveyance += CConveyance;
                        if (TotalCConveyance > 0)
                        {
                            ATotalCConveyance = TotalCConveyance.ToString("");
                        }
                        else
                        {
                            ATotalCConveyance = "-";
                        }
                        TotalCWA += CWA;
                        if (TotalCWA > 0)
                        {
                            ATotalCWA = TotalCWA.ToString("");
                        }
                        else
                        {
                            ATotalCWA = "-";
                        }
                        TotalCOtherAllw += COtherAllw;
                        if (TotalCOtherAllw > 0)
                        {
                            AtotalCOtherAllw = TotalCOtherAllw.ToString("");
                        }
                        else
                        {
                            AtotalCOtherAllw = "-";
                        }
                        TotalCLeaveAmount += CLeaveAmount;
                        if (TotalCLeaveAmount > 0)
                        {
                            AtotalCLeaveAmount = TotalCLeaveAmount.ToString("");
                        }
                        else
                        {
                            AtotalCLeaveAmount = "-";
                        }
                        TotalCGratuity += CGratuity;
                        if (TotalCGratuity > 0)
                        {
                            ATotalCGratuity = TotalCGratuity.ToString("");
                        }
                        else
                        {
                            ATotalCGratuity = "-";
                        }
                        TotalCBonus += CBonus;
                        if (TotalCBonus > 0)
                        {
                            ATotalCBonus = TotalCBonus.ToString("");
                        }
                        else
                        {
                            ATotalCBonus = "-";
                        }
                        TotalCAddlAmount += CAddlAmount;
                        if (TotalCAddlAmount > 0)
                        {
                            ATotalCAddlAmount = TotalCAddlAmount.ToString("");
                        }
                        else
                        {
                            ATotalCAddlAmount = "-";
                        }

                        TotalCArrears += CArrears;
                        if (TotalCArrears > 0)
                        {
                            ATotalCArrears = TotalCArrears.ToString("");
                        }
                        else
                        {
                            ATotalCArrears = "-";
                        }

                        TotalCAttBonus += CAttBonus;
                        if (TotalCAttBonus > 0)
                        {
                            ATotalCAttBonus = TotalCAttBonus.ToString("");
                        }
                        else
                        {
                            ATotalCAttBonus = "-";
                        }

                        #endregion for total

                        cell = new PdfPCell();
                        Paragraph CcellHead18 = new Paragraph();

                        if (CdAOtherAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("O Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (CdACS != "-")
                        {
                            CcellHead18.Add(new Chunk("CS\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdARC != "-")
                        {
                            CcellHead18.Add(new Chunk("RC\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdASplAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("SplAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAFoodAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("FoodAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdANightAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("Nig Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdATravelAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("TravelAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAMobileAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("MobileAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAMedicalAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("Med Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAOTAmt != "-")
                        {
                            CcellHead18.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAWOAmt != "-")
                        {
                            CcellHead18.Add(new Chunk("WO Amt\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdANHSAmt != "-")
                        {
                            CcellHead18.Add(new Chunk("NHS Amt\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAIncntives != "-")
                        {
                            CcellHead18.Add(new Chunk("Reimb\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedADDL4HR != "-")
                        {
                            CcellHead18.Add(new Chunk("Addl4HR\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedQTRALLOW != "-")
                        {
                            CcellHead18.Add(new Chunk("Qtr Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedRELALLOW != "-")
                        {
                            CcellHead18.Add(new Chunk("REL Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedOTESICWAGES != "-")
                        {
                            CcellHead18.Add(new Chunk("OT ESI\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedSITEALLOW != "-")
                        {
                            CcellHead18.Add(new Chunk("Site Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedGunAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("Gun Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedFireAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("Fire Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedTelephoneAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("Tel Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedReimbursement != "-")
                        {
                            CcellHead18.Add(new Chunk("Re-ment\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedHardshipAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("H-S Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedRankAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("RankAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedPaidHolidayAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("PH Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedServiceCharge != "-")
                        {
                            CcellHead18.Add(new Chunk("SC\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAPerformanceAllw != "-")
                        {
                            CcellHead18.Add(new Chunk("Per Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead18.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead18);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0;
                        cell.PaddingBottom = 5;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        cell = new PdfPCell();
                        Paragraph CcellHead19 = new Paragraph();


                        if (CdAOtherAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAOtherAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (CdACS != "-")
                        {
                            CcellHead19.Add(new Chunk(CdACS + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdARC != "-")
                        {
                            CcellHead19.Add(new Chunk(CdARC + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (CdASplAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdASplAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAFoodAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAFoodAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdANightAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdANightAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdATravelAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdATravelAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAMobileAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAMobileAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (CdAMedicalAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAMedicalAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAOTAmt != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAOTAmt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAWOAmt != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAWOAmt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdANHSAmt != "-")
                        {
                            CcellHead19.Add(new Chunk(CdANHSAmt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAIncntives != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAIncntives + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedADDL4HR != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedADDL4HR + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedQTRALLOW != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedQTRALLOW + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedRELALLOW != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedRELALLOW + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedOTESICWAGES != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedOTESICWAGES + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedSITEALLOW != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedSITEALLOW + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedGunAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedGunAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedFireAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedFireAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedTelephoneAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedTelephoneAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedReimbursement != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedReimbursement + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedHardshipAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedHardshipAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedRankAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedRankAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedPaidHolidayAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedPaidHolidayAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFixedServiceCharge != "-")
                        {
                            CcellHead19.Add(new Chunk(AFixedServiceCharge + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (CdAPerformanceAllw != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAPerformanceAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead19.SetLeading(0, 1.2f);
                        CcellHead19.Alignment = 2;
                        cell.AddElement(CcellHead19);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        //cell.PaddingLeft = 25;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);



                        #region for total
                        TotalCOTAmt += COTAmt;
                        if (TotalCOTAmt > 0)
                        {
                            ATotalCOTAmt = TotalCOTAmt.ToString();
                        }
                        else
                        {
                            ATotalCOTAmt = "-";
                        }
                        TotalCNHSAmt += CNHSAmt;
                        if (TotalCNHSAmt > 0)
                        {
                            ATotalCNHSAmt = TotalCNHSAmt.ToString();
                        }
                        else
                        {
                            ATotalCNHSAmt = "-";
                        }

                        TotalCWOAmt += CWOAmt;
                        if (TotalCWOAmt > 0)
                        {
                            ATotalCWOAmt = TotalCWOAmt.ToString();
                        }
                        else
                        {
                            ATotalCWOAmt = "-";
                        }

                        TotalCNFHS += CNFHS;
                        if (TotalCNFHS > 0)
                        {
                            ATotalCNFHS = TotalCNFHS.ToString();
                        }
                        else
                        {
                            ATotalCNFHS = "-";
                        }
                        TotalCCS += CCS;
                        if (TotalCCS > 0)
                        {
                            ATotalCCS = TotalCCS.ToString();
                        }
                        else
                        {
                            ATotalCCS = "-";
                        }
                        TotalCRC += CRC;
                        if (TotalCRC > 0)
                        {
                            ATotalCRC = TotalCRC.ToString();
                        }
                        else
                        {
                            ATotalCRC = "-";
                        }
                        TotalCIncentives += CIncentives;
                        if (TotalCIncentives > 0)
                        {
                            AtotalCIncentives = TotalCIncentives.ToString();
                        }
                        else
                        {
                            AtotalCIncentives = "-";
                        }
                        TotalCSplAllw += CSplAllw;
                        if (TotalCSplAllw > 0)
                        {
                            ATotalCSplAllw = TotalCSplAllw.ToString();
                        }
                        else
                        {
                            ATotalCSplAllw = "-";
                        }
                        TotalCFoodAllw += CFoodAllw;
                        if (TotalCFoodAllw > 0)
                        {
                            ATotalCFoodAllw = TotalCFoodAllw.ToString();
                        }
                        else
                        {
                            ATotalCFoodAllw = "-";
                        }
                        TotalCNightAllw += CNightAllw;
                        if (TotalCNightAllw > 0)
                        {
                            ATotalCNightAllw = TotalCNightAllw.ToString();
                        }
                        else
                        {
                            ATotalCNightAllw = "-";
                        }
                        TotalCTravelAllw += CTravelAllw;
                        if (TotalCTravelAllw > 0)
                        {
                            ATotalCTravelAllw = TotalCTravelAllw.ToString();
                        }
                        else
                        {
                            ATotalCTravelAllw = "-";
                        }

                        TotalCMobileAllw += CMobileAllw;
                        if (TotalCMobileAllw > 0)
                        {
                            ATotalCMobileAllw = TotalCMobileAllw.ToString();
                        }
                        else
                        {
                            ATotalCMobileAllw = "-";
                        }

                        TotalCMedicalAllw += CMedicalAllw;
                        if (TotalCMedicalAllw > 0)
                        {
                            ATotalCMedicalAllw = TotalCMedicalAllw.ToString();
                        }
                        else
                        {
                            ATotalCMedicalAllw = "-";
                        }


                        TotalCFixedADDL4HR += FixedADDL4HR;
                        if (TotalCFixedADDL4HR > 0)
                        {
                            ATotalCFixedADDL4HR = TotalCFixedADDL4HR.ToString();
                        }
                        else
                        {
                            ATotalCFixedADDL4HR = "-";
                        }

                        TotalCFixedQTRALLOW += FixedQTRALLOW;
                        if (TotalCFixedQTRALLOW > 0)
                        {
                            ATotalCFixedQTRALLOW = TotalCFixedQTRALLOW.ToString();
                        }
                        else
                        {
                            ATotalCFixedQTRALLOW = "-";
                        }

                        TotalCFixedRELALLOW += FixedRELALLOW;
                        if (TotalCFixedRELALLOW > 0)
                        {
                            ATotalCFixedRELALLOW = TotalCFixedRELALLOW.ToString();
                        }
                        else
                        {
                            ATotalCFixedRELALLOW = "-";
                        }

                        TotalCFixedOTESICWAGES += FixedOTESICWAGES;
                        if (TotalCFixedOTESICWAGES > 0)
                        {
                            ATotalCFixedOTESICWAGES = TotalCFixedOTESICWAGES.ToString();
                        }
                        else
                        {
                            ATotalCFixedOTESICWAGES = "-";
                        }

                        TotalCFixedSITEALLOW += FixedSITEALLOW;
                        if (TotalCFixedSITEALLOW > 0)
                        {
                            ATotalCFixedSITEALLOW = TotalCFixedSITEALLOW.ToString();
                        }
                        else
                        {
                            ATotalCFixedSITEALLOW = "-";
                        }

                        TotalCFixedGunAllw += FixedGunAllw;
                        if (TotalCFixedGunAllw > 0)
                        {
                            ATotalCFixedGunAllw = TotalCFixedGunAllw.ToString();
                        }
                        else
                        {
                            ATotalCFixedGunAllw = "-";
                        }

                        TotalCFixedFireAllw += FixedFireAllw;
                        if (TotalCFixedFireAllw > 0)
                        {
                            ATotalCFixedFireAllw = TotalCFixedFireAllw.ToString();
                        }
                        else
                        {
                            ATotalCFixedFireAllw = "-";
                        }

                        TotalCFixedTelephoneAllw += FixedTelephoneAllw;
                        if (TotalCFixedTelephoneAllw > 0)
                        {
                            ATotalCFixedTelephoneAllw = TotalCFixedTelephoneAllw.ToString();
                        }
                        else
                        {
                            ATotalCFixedTelephoneAllw = "-";
                        }

                        TotalCFixedReimbursement += FixedReimbursement;
                        if (TotalCFixedReimbursement > 0)
                        {
                            ATotalCFixedReimbursement = TotalCFixedReimbursement.ToString();
                        }
                        else
                        {
                            ATotalCFixedReimbursement = "-";
                        }

                        TotalCFixedHardshipAllw += FixedHardshipAllw;
                        if (TotalCFixedHardshipAllw > 0)
                        {
                            ATotalCFixedHardshipAllw = TotalCFixedHardshipAllw.ToString();
                        }
                        else
                        {
                            ATotalCFixedHardshipAllw = "-";
                        }

                        TotalCFixedRankAllw += FixedRankAllw;
                        if (TotalCFixedRankAllw > 0)
                        {
                            ATotalCFixedRankAllw = TotalCFixedRankAllw.ToString();
                        }
                        else
                        {
                            ATotalCFixedRankAllw = "-";
                        }

                        TotalCFixedPaidHolidayAllw += FixedPaidHolidayAllw;
                        if (TotalCFixedPaidHolidayAllw > 0)
                        {
                            ATotalCFixedPaidHolidayAllw = TotalCFixedPaidHolidayAllw.ToString();
                        }
                        else
                        {
                            ATotalCFixedPaidHolidayAllw = "-";
                        }

                        TotalCFixedServiceCharge += FixedServiceCharge;
                        if (TotalCFixedServiceCharge > 0)
                        {
                            ATotalCFixedServiceCharge = TotalCFixedServiceCharge.ToString();
                        }
                        else
                        {
                            ATotalCFixedServiceCharge = "-";
                        }

                        TotalCPerformanceAllw += CPerformanceAllw;
                        if (TotalCPerformanceAllw > 0)
                        {
                            AtotalCPerformanceAllw = TotalCPerformanceAllw.ToString();
                        }
                        else
                        {
                            AtotalCPerformanceAllw = "-";
                        }

                        //                   
                        #endregion for total

                        #endregion for fixed wages

                        if (ddlpaymenttype.SelectedIndex == 1)
                        {
                            cell = new PdfPCell(new Phrase(Anoofduties + "\n\n" + Anhs + "\n\n" + AWOs + "\n\n" + APLdays, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                            cell.HorizontalAlignment = 1;
                            cell.Colspan = 1;
                            cell.SetLeading(0, 1.2f);
                            Maintable.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase(Anoofduties + "\n\n" + Aots + "\n\n" + Anhs + "\n\n" + AWOs + "\n\n" + APLdays, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                            cell.HorizontalAlignment = 1;
                            cell.Colspan = 1;
                            cell.SetLeading(0, 1.2f);
                            Maintable.AddCell(cell);
                        }

                        #region for total
                        totalnoofduties += noofduties;

                        if (totalnoofduties > 0)
                        {
                            Atotalnoofduties = totalnoofduties.ToString();
                        }
                        else
                        {
                            Atotalnoofduties = "-";
                        }
                        totalots += ots;
                        if (totalots > 0)
                        {
                            Atotalots = totalots.ToString();
                        }
                        else
                        {
                            Atotalots = "-";
                        }
                        totalnhs += nhs;
                        if (totalnhs > 0)
                        {
                            Atotalnhs = totalnhs.ToString();
                        }
                        else
                        {
                            Atotalnhs = "-";
                        }

                        totalpldays += PLdays;
                        if (totalpldays > 0)
                        {
                            Atotalpldays = totalpldays.ToString();
                        }
                        else
                        {
                            Atotalpldays = "-";
                        }

                        totalWos += Wos;
                        if (totalWos > 0)
                        {
                            AtotalWos = totalWos.ToString();
                        }
                        else
                        {
                            AtotalWos = "-";
                        }

                        #endregion for total
                        cell = new PdfPCell();
                        Paragraph CcellHead116 = new Paragraph();
                        if (Abasic != "-")
                        {
                            CcellHead116.Add(new Chunk("Basic+DA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ADa != "-")
                        {
                            CcellHead116.Add(new Chunk("\nDA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AHra != "-")
                        {
                            CcellHead116.Add(new Chunk("\nHRA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Acca != "-")
                        {
                            CcellHead116.Add(new Chunk("\nCCA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AConveyance != "-")
                        {
                            CcellHead116.Add(new Chunk("\nConv", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AWa != "-")
                        {
                            CcellHead116.Add(new Chunk("\nWA", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ANfhs != "-")
                        {
                            CcellHead116.Add(new Chunk("\nNfhs", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ALeaveEncashAmt != "-")
                        {
                            CcellHead116.Add(new Chunk("\nAdv LW", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AGratuity != "-")
                        {
                            CcellHead116.Add(new Chunk("\nAdv Gratuity", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ABonus != "-")
                        {
                            CcellHead116.Add(new Chunk("\nAdv Bonus", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AAddlAmount != "-")
                        {
                            CcellHead116.Add(new Chunk("\nAddl Amt", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AArrears != "-")
                        {
                            CcellHead116.Add(new Chunk("\nArrears", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AAttBonus != "-")
                        {
                            CcellHead116.Add(new Chunk("\nAtBonus", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead116.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead116);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0.5f;
                        cell.BorderWidthRight = 0;
                        Maintable.AddCell(cell);

                        cell = new PdfPCell();
                        Paragraph CcellHead117 = new Paragraph();
                        if (Abasic != "-")
                        {
                            CcellHead117.Add(new Chunk(Abasic, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ADa != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + ADa, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AHra != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AHra, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Acca != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + Acca, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AConveyance != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AConveyance, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AWa != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AWa, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ANfhs != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + ANfhs, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ALeaveEncashAmt != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + ALeaveEncashAmt, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AGratuity != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AGratuity, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ABonus != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + ABonus, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AAddlAmount != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AAddlAmount, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AArrears != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AArrears, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AAttBonus != "-")
                        {
                            CcellHead117.Add(new Chunk("\n" + AAttBonus, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead117.SetLeading(0, 1.2f);
                        CcellHead117.Alignment = 2;
                        cell.AddElement(CcellHead117);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        //cell.PaddingLeft = 25;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);
                        #region for total
                        totalbasic += basic;
                        if (totalbasic > 0)
                        {
                            Atotalbasic = totalbasic.ToString();
                        }
                        else
                        {
                            Atotalbasic = "-";
                        }

                        totalDa += Da;
                        if (totalDa > 0)
                        {
                            AtotalDa = totalDa.ToString();
                        }
                        else
                        {
                            AtotalDa = "-";
                        }
                        totalHra += Hra;
                        if (totalHra > 0)
                        {
                            AtotalHra = totalHra.ToString();
                        }
                        else
                        {
                            AtotalHra = "-";
                        }
                        totalcca += cca;
                        if (totalcca > 0)
                        {
                            Atotalcca = totalcca.ToString();
                        }
                        else
                        {
                            Atotalcca = "-";
                        }
                        totalConveyance += Conveyance;
                        if (totalConveyance > 0)
                        {
                            AtotalConveyance = totalConveyance.ToString();
                        }
                        else
                        {
                            AtotalConveyance = "-";
                        }
                        totalWa += Wa;
                        if (totalWa > 0)
                        {
                            AtotalWa = totalWa.ToString();
                        }
                        else
                        {
                            AtotalWa = "-";
                        }
                        totalotherallw += otherallw;
                        if (totalotherallw > 0)
                        {
                            Atotalotherallw = totalotherallw.ToString();
                        }
                        else
                        {
                            Atotalotherallw = "-";
                        }
                        totalLeaveEncashAmt += LeaveEncashAmt;
                        if (totalLeaveEncashAmt > 0)
                        {
                            AtotalLeaveEncashAmt = totalLeaveEncashAmt.ToString();
                        }
                        else
                        {
                            AtotalLeaveEncashAmt = "-";
                        }
                        totalGratuity += Gratuity;
                        if (totalGratuity > 0)
                        {
                            AtotalGratuity = totalGratuity.ToString();
                        }
                        else
                        {
                            AtotalGratuity = "-";
                        }
                        totalBonus += Bonus;
                        if (totalBonus > 0)
                        {
                            AtotalBonus = totalBonus.ToString();
                        }
                        else
                        {
                            AtotalBonus = "-";
                        }
                        totalAddlAmount += AddlAmount;
                        if (totalAddlAmount > 0)
                        {
                            AtotalAddlAmount = totalAddlAmount.ToString();
                        }
                        else
                        {
                            AtotalAddlAmount = "-";
                        }

                        totalarrears += Arrears;
                        if (totalarrears > 0)
                        {
                            AtotalArrears = totalarrears.ToString();
                        }
                        else
                        {
                            AtotalArrears = "-";
                        }

                        totalattbonus += AttBonus;
                        if (totalattbonus > 0)
                        {
                            AtotalAttbonus = totalattbonus.ToString();
                        }
                        else
                        {
                            AtotalAttbonus = "-";
                        }
                        #endregion for total

                        cell = new PdfPCell();
                        Paragraph CcellHead118 = new Paragraph();


                        if (Aotherallw != "-")
                        {

                            CcellHead118.Add(new Chunk("O Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (Acs != "-")
                        {
                            CcellHead118.Add(new Chunk("CS\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ARC != "-")
                        {
                            CcellHead118.Add(new Chunk("RC\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ASpecialAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("SplAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFoodAllowance != "-")
                        {
                            CcellHead118.Add(new Chunk("FoodAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ANightShiftAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Nig Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ATravelAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("TravelAllw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AMobileAllw != "-")
                        {
                            CcellHead8.Add(new Chunk("Mob Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AMedicalAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Med Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Aotamt != "-")
                        {
                            CcellHead118.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AWOAmt != "-")
                        {
                            CcellHead118.Add(new Chunk("WO Amt\n ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ANPOTSAmt != "-")
                        {
                            CcellHead118.Add(new Chunk("NpotAmt\n ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Anhsamt != "-")
                        {
                            CcellHead118.Add(new Chunk("NHS Amt\n ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AIncentivs != "-")
                        {
                            CcellHead118.Add(new Chunk("Reimb\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AADDL4HR != "-")
                        {
                            CcellHead118.Add(new Chunk("Addl4HR\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AQTRALLOW != "-")
                        {
                            CcellHead118.Add(new Chunk("Qtr Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ARELALLOW != "-")
                        {
                            CcellHead118.Add(new Chunk("REL Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AOTESICWAGES != "-")
                        {
                            CcellHead118.Add(new Chunk("OT ESI\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ASITEALLOW != "-")
                        {
                            CcellHead118.Add(new Chunk("Site Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AGunAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Gun Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFireAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Fire Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ATelephoneAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Tel Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AReimbursement != "-")
                        {
                            CcellHead118.Add(new Chunk("Re-ment\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AHardshipAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("H-S Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ARankAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Rank Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (APaidHolidayAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("PH Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AServiceCharge != "-")
                        {
                            CcellHead118.Add(new Chunk("SC\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APerformanceAllw != "-")
                        {
                            CcellHead118.Add(new Chunk("Per Allw\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead118.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead118);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0;
                        cell.PaddingBottom = 5;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);


                        cell = new PdfPCell();
                        Paragraph CcellHead119 = new Paragraph();


                        if (Aotherallw != "-")
                        {
                            CcellHead119.Add(new Chunk(Aotherallw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Acs != "-")
                        {
                            CcellHead119.Add(new Chunk(Acs + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ARC != "-")
                        {
                            CcellHead119.Add(new Chunk(ARC + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ASpecialAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(ASpecialAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFoodAllowance != "-")
                        {
                            CcellHead119.Add(new Chunk(AFoodAllowance + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ANightShiftAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(ANightShiftAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ATravelAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(ATravelAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AMobileAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(AMobileAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AMedicalAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(AMedicalAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Aotamt != "-")
                        {
                            CcellHead119.Add(new Chunk(Aotamt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AWOAmt != "-")
                        {
                            CcellHead119.Add(new Chunk(AWOAmt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ANPOTSAmt != "-")
                        {
                            CcellHead119.Add(new Chunk(ANPOTSAmt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Anhsamt != "-")
                        {
                            CcellHead119.Add(new Chunk(Anhsamt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (Anhsamt != "-")
                        {
                            CcellHead119.Add(new Chunk(Anhsamt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AIncentivs != "-")
                        {
                            CcellHead119.Add(new Chunk(AIncentivs + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AADDL4HR != "-")
                        {
                            CcellHead119.Add(new Chunk(AADDL4HR + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AQTRALLOW != "-")
                        {
                            CcellHead119.Add(new Chunk(AQTRALLOW + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ARELALLOW != "-")
                        {
                            CcellHead119.Add(new Chunk(ARELALLOW + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AOTESICWAGES != "-")
                        {
                            CcellHead119.Add(new Chunk(AOTESICWAGES + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ASITEALLOW != "-")
                        {
                            CcellHead119.Add(new Chunk(ASITEALLOW + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AGunAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(AGunAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AFireAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(AFireAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ATelephoneAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(ATelephoneAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AReimbursement != "-")
                        {
                            CcellHead119.Add(new Chunk(AReimbursement + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AHardshipAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(AHardshipAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (ARankAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(ARankAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (APaidHolidayAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(APaidHolidayAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AServiceCharge != "-")
                        {
                            CcellHead119.Add(new Chunk(AServiceCharge + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APerformanceAllw != "-")
                        {
                            CcellHead119.Add(new Chunk(APerformanceAllw + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead119.SetLeading(0, 1.2f);
                        CcellHead119.Alignment = 2;
                        cell.AddElement(CcellHead119);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        cell.PaddingLeft = 25;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);



                        #region for total
                        totalotamt += otamt;
                        if (totalotamt > 0)
                        {
                            Atotalotamt = totalotamt.ToString();
                        }
                        else
                        {
                            Atotalotamt = "-";
                        }

                        totalWOAmt += WOAmt;
                        if (totalWOAmt > 0)
                        {
                            AtotalWOAmt = totalWOAmt.ToString();
                        }
                        else
                        {
                            AtotalWOAmt = "-";
                        }

                        totalNPOTSAmt += NPOTSAmt;
                        if (totalNPOTSAmt > 0)
                        {
                            AtotalNpotsAmt = totalNPOTSAmt.ToString();
                        }
                        else
                        {
                            AtotalNpotsAmt = "-";
                        }

                        totalnhsamt += nhsamt;
                        if (totalnhsamt > 0)
                        {
                            Atotalnhsamt = totalnhsamt.ToString();
                        }
                        else
                        {
                            Atotalnhsamt = "-";
                        }

                        totalNfhs += Nfhs;
                        if (totalNfhs > 0)
                        {
                            AtotalNfhs = totalNfhs.ToString();
                        }
                        else
                        {
                            AtotalNfhs = "-";
                        }
                        totalcs += cs;
                        if (totalcs > 0)
                        {
                            Atotalcs = totalcs.ToString();
                        }
                        else
                        {
                            Atotalcs = "-";
                        }
                        totalRC += RC;
                        if (totalRC > 0)
                        {
                            AtotalRC = totalRC.ToString();
                        }
                        else
                        {
                            AtotalRC = "-";
                        }
                        totalIncentivs += Incentivs;
                        if (totalIncentivs > 0)
                        {
                            AtotalIncentivs = totalIncentivs.ToString();
                        }
                        else
                        {
                            AtotalIncentivs = "-";
                        }
                        totalUniformAllw += UniformAllw;
                        if (totalUniformAllw > 0)
                        {
                            AtotalUniformAllw = totalUniformAllw.ToString();
                        }
                        else
                        {
                            AtotalUniformAllw = "-";
                        }
                        totalSpecialAllw += SpecialAllw;
                        if (totalSpecialAllw > 0)
                        {
                            AtotalSpecialAllw = totalSpecialAllw.ToString();
                        }
                        else
                        {
                            AtotalSpecialAllw = "-";
                        }
                        totalFoodAllowance += FoodAllowance;
                        if (totalFoodAllowance > 0)
                        {
                            AtotalFoodAllowance = totalFoodAllowance.ToString();
                        }
                        else
                        {
                            AtotalFoodAllowance = "-";
                        }
                        totalNightShiftAllw += NightShiftAllw;
                        if (totalNightShiftAllw > 0)
                        {
                            AtotalNightShiftAllw = totalNightShiftAllw.ToString();
                        }
                        else
                        {
                            AtotalNightShiftAllw = "-";
                        }
                        totalTravelAllw += TravelAllw;
                        if (totalTravelAllw > 0)
                        {
                            AtotalTravelAllw = totalTravelAllw.ToString();
                        }
                        else
                        {
                            AtotalTravelAllw = "-";
                        }

                        totalMobileAllw += MobileAllw;
                        if (totalMobileAllw > 0)
                        {
                            AtotalMobileAllw = totalMobileAllw.ToString();
                        }
                        else
                        {
                            AtotalMobileAllw = "-";
                        }

                        totalMedicalAllw += MedicalAllw;
                        if (totalMedicalAllw > 0)
                        {
                            AtotalMedicalAllw = totalMedicalAllw.ToString();
                        }
                        else
                        {
                            AtotalMedicalAllw = "-";
                        }


                        TotalCADDL4HR += ADDL4HR;
                        if (TotalCADDL4HR > 0)
                        {
                            ATotalCADDL4HR = TotalCADDL4HR.ToString();
                        }
                        else
                        {
                            ATotalCADDL4HR = "-";
                        }

                        TotalCQTRALLOW += QTRALLOW;
                        if (TotalCQTRALLOW > 0)
                        {
                            ATotalCQTRALLOW = TotalCQTRALLOW.ToString();
                        }
                        else
                        {
                            ATotalCQTRALLOW = "-";
                        }

                        TotalCRELALLOW += RELALLOW;
                        if (TotalCRELALLOW > 0)
                        {
                            ATotalCRELALLOW = TotalCRELALLOW.ToString();
                        }
                        else
                        {
                            ATotalCRELALLOW = "-";
                        }

                        TotalCOTESICWAGES += OTESICWAGES;
                        if (TotalCOTESICWAGES > 0)
                        {
                            ATotalCOTESICWAGES = TotalCOTESICWAGES.ToString();
                        }
                        else
                        {
                            ATotalCOTESICWAGES = "-";
                        }

                        TotalCSITEALLOW += SITEALLOW;
                        if (TotalCSITEALLOW > 0)
                        {
                            ATotalCSITEALLOW = TotalCSITEALLOW.ToString();
                        }
                        else
                        {
                            ATotalCSITEALLOW = "-";
                        }

                        TotalCGunAllw += GunAllw;
                        if (TotalCGunAllw > 0)
                        {
                            ATotalCGunAllw = TotalCGunAllw.ToString();
                        }
                        else
                        {
                            ATotalCGunAllw = "-";
                        }

                        TotalCFireAllw += FireAllw;
                        if (TotalCFireAllw > 0)
                        {
                            ATotalCFireAllw = TotalCFireAllw.ToString();
                        }
                        else
                        {
                            ATotalCFireAllw = "-";
                        }

                        TotalCTelephoneAllw += TelephoneAllw;
                        if (TotalCTelephoneAllw > 0)
                        {
                            ATotalCTelephoneAllw = TotalCTelephoneAllw.ToString();
                        }
                        else
                        {
                            ATotalCTelephoneAllw = "-";
                        }

                        TotalCReimbursement += Reimbursement;
                        if (TotalCReimbursement > 0)
                        {
                            ATotalCReimbursement = TotalCReimbursement.ToString();
                        }
                        else
                        {
                            ATotalCReimbursement = "-";
                        }

                        TotalCHardshipAllw += HardshipAllw;
                        if (TotalCHardshipAllw > 0)
                        {
                            ATotalCHardshipAllw = TotalCHardshipAllw.ToString();
                        }
                        else
                        {
                            ATotalCHardshipAllw = "-";
                        }


                        TotalCRankAllw += RankAllw;
                        if (TotalCRankAllw > 0)
                        {
                            ATotalRankAllw = TotalCRankAllw.ToString();
                        }
                        else
                        {
                            ATotalRankAllw = "-";
                        }

                        TotalCPaidHolidayAllw += PaidHolidayAllw;
                        if (TotalCPaidHolidayAllw > 0)
                        {
                            ATotalCPaidHolidayAllw = TotalCPaidHolidayAllw.ToString();
                        }
                        else
                        {
                            ATotalCPaidHolidayAllw = "-";
                        }

                        TotalCServiceCharge += ServiceCharge;
                        if (TotalCServiceCharge > 0)
                        {
                            ATotalCServiceCharge = TotalCServiceCharge.ToString();
                        }
                        else
                        {
                            ATotalCServiceCharge = "-";
                        }


                        totalPerformanceAllw += PerformanceAllw;
                        if (totalPerformanceAllw > 0)
                        {
                            AtotalPerformanceAllw = totalPerformanceAllw.ToString();
                        }
                        else
                        {
                            AtotalPerformanceAllw = "-";
                        }


                        #endregion for total
                        cell = new PdfPCell(new Phrase(Agross, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        totalgross += gross;
                        if (totalgross > 0)
                        {
                            Atotalgross = totalgross.ToString();
                        }
                        else
                        {
                            Atotalgross = "-";
                        }

                        cell = new PdfPCell();
                        Paragraph CcellHead111 = new Paragraph();

                        if (AVPF != "-")
                        {
                            CcellHead111.Add(new Chunk("VPF", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APF != "-")
                        {
                            CcellHead111.Add(new Chunk("\nPF", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AESI != "-")
                        {
                            CcellHead111.Add(new Chunk("\nESI", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APT != "-")
                        {
                            CcellHead111.Add(new Chunk("\nPT", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ALWF != "-")
                        {
                            CcellHead111.Add(new Chunk("\nLWF", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }


                        CcellHead111.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead111);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0.5f;
                        cell.BorderWidthRight = 0;
                        Maintable.AddCell(cell);


                        cell = new PdfPCell();
                        Paragraph CcellHead1112 = new Paragraph();

                        if (AVPF != "-")
                        {
                            CcellHead1112.Add(new Chunk(AVPF, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APF != "-")
                        {
                            CcellHead1112.Add(new Chunk("\n"+APF, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AESI != "-")
                        {
                            CcellHead1112.Add(new Chunk("\n" + AESI, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APT != "-")
                        {
                            CcellHead1112.Add(new Chunk("\n" + APT, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ALWF != "-")
                        {
                            CcellHead1112.Add(new Chunk("\n" + ALWF, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead1112.SetLeading(0, 1.2f);
                        CcellHead1112.Alignment = 2;
                        cell.AddElement(CcellHead1112);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);
                        #region for total
                        totalVPF += VPF;
                        if (totalVPF > 0)
                        {
                            AtotalVPF = totalVPF.ToString();
                        }
                        else
                        {
                            AtotalVPF = "-";
                        }


                        totalPF += PF;
                        if (totalPF > 0)
                        {
                            AtotalPF = totalPF.ToString();
                        }
                        else
                        {
                            AtotalPF = "-";
                        }
                        totalESI += ESI;
                        if (totalESI > 0)
                        {
                            AtotalESI = totalESI.ToString();
                        }
                        else
                        {
                            AtotalESI = "-";
                        }
                        totalPT += PT;
                        if (totalPT > 0)
                        {
                            AtotalPT = totalPT.ToString();
                        }
                        else
                        {
                            AtotalPT = "-";
                        }

                        totalLWF += LWF;
                        if (totalLWF > 0)
                        {
                            AtotalLWF = totalLWF.ToString();
                        }
                        else
                        {
                            AtotalLWF = "-";
                        }
                        #endregion for total

                        // cell = new PdfPCell(new Phrase("Advance-1\nAdvance-2\nAdvance-3\nUniform Ded\nRent", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell = new PdfPCell();
                        Paragraph CcellHead14 = new Paragraph();




                        //if (ACanteenAdv != "-")
                        {
                            CcellHead14.Add(new Chunk("CAdv\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AFoodDed != "-")
                        {
                            CcellHead14.Add(new Chunk("Food Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AGD != "-")
                        {
                            CcellHead14.Add(new Chunk("GD\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APenalty != "-")
                        {
                            CcellHead14.Add(new Chunk("Advance\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (ASalAdv != "-")
                        {
                            CcellHead14.Add(new Chunk("Sal Adv\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AUniformDed != "-")
                        {
                            CcellHead14.Add(new Chunk("Unif Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AATMDed != "-")
                        {
                            CcellHead14.Add(new Chunk("ATM Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AREGDed != "-")
                        {
                            CcellHead14.Add(new Chunk("Reg Fee\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AIDCardDed != "-")
                        {
                            CcellHead14.Add(new Chunk("IDCard Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AExtraDed != "-")
                        {
                            CcellHead14.Add(new Chunk("TDS Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AOtherDed != "-")
                        {
                            CcellHead14.Add(new Chunk("OtherDed\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ASecDepDed != "-")
                        {
                            CcellHead14.Add(new Chunk("SecDep Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ALoanDed != "-")
                        {
                            CcellHead14.Add(new Chunk("Loan Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AAdvDed != "-")
                        {
                            CcellHead14.Add(new Chunk("MIS Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AWCDed != "-")
                        {
                            CcellHead14.Add(new Chunk("WC Ded\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APVCDed != "-")
                        {
                            CcellHead14.Add(new Chunk("PVC", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AAdmincharge != "-")
                        {
                            CcellHead14.Add(new Chunk("Ad.Chrg", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        CcellHead14.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead14);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0.5f;
                        cell.BorderWidthRight = 0;
                        Maintable.AddCell(cell);

                        cell = new PdfPCell();
                        Paragraph CcellHead15 = new Paragraph();



                        //if (ACanteenAdv != "-")
                        {

                            CcellHead15.Add(new Chunk(ACanteenAdv + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AFoodDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AFoodDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AGD != "-")
                        {
                            CcellHead15.Add(new Chunk(AGD + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APenalty != "-")
                        {
                            CcellHead15.Add(new Chunk(APenalty + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ASalAdv != "-")
                        {

                            CcellHead15.Add(new Chunk(ASalAdv + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }


                        if (AUniformDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AUniformDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AATMDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AATMDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AREGDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AREGDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AIDCardDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AIDCardDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AExtraDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AExtraDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AOtherDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AOtherDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ASecDepDed != "-")
                        {
                            CcellHead15.Add(new Chunk(ASecDepDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (ALoanDed != "-")
                        {
                            CcellHead15.Add(new Chunk(ALoanDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AAdvDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AAdvDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (AWCDed != "-")
                        {
                            CcellHead15.Add(new Chunk(AWCDed + "\n", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (APVCDed != "-")
                        {
                            CcellHead15.Add(new Chunk(APVCDed, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (AAdmincharge != "-")
                        {
                            CcellHead15.Add(new Chunk(AAdmincharge, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }


                        CcellHead15.SetLeading(0, 1.2f);
                        CcellHead15.Alignment = 2;
                        cell.AddElement(CcellHead15);
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        #region for total

                        totalGD += GD;
                        if (totalGD > 0)
                        {
                            AtotalGD = totalGD.ToString();
                        }
                        else
                        {
                            AtotalGD = "-";
                        }



                        totalCanteenAdv += CanteenAdv;
                        if (totalCanteenAdv > 0)
                        {
                            AtotalCanteenAdv = totalCanteenAdv.ToString();
                        }
                        else
                        {
                            AtotalCanteenAdv = "-";
                        }

                        totalFoodDed += FoodDed;
                        if (totalFoodDed > 0)
                        {
                            AtotalFoodDed = totalFoodDed.ToString();
                        }
                        else
                        {
                            AtotalFoodDed = "-";
                        }

                        totalPenalty += Penalty;
                        if (totalPenalty > 0)
                        {
                            AtotalPenalty = totalPenalty.ToString();
                        }
                        else
                        {
                            AtotalPenalty = "-";
                        }

                        totalSalAdv += SalAdv;
                        if (totalSalAdv > 0)
                        {
                            AtotalSalAdv = totalSalAdv.ToString();
                        }
                        else
                        {
                            AtotalSalAdv = "-";
                        }

                        totalUniformDed += UniformDed;
                        if (totalUniformDed > 0)
                        {
                            AtotalUniformDed = totalUniformDed.ToString();
                        }
                        else
                        {
                            AtotalUniformDed = "-";
                        }

                        totalATMDed += ATMDed;
                        if (totalATMDed > 0)
                        {
                            AtotalATMDed = totalATMDed.ToString();
                        }
                        else
                        {
                            AtotalATMDed = "-";
                        }

                        totalREGDed += REGDed;
                        if (totalREGDed > 0)
                        {
                            AtotalREGDed = totalREGDed.ToString();
                        }
                        else
                        {
                            AtotalREGDed = "-";
                        }

                        totalIDCardDed += IDCardDed;
                        if (totalIDCardDed > 0)
                        {
                            AtotalIDCardDed = totalIDCardDed.ToString();
                        }
                        else
                        {
                            AtotalIDCardDed = "-";
                        }

                        totalExtraDed += ExtraDed;
                        if (totalExtraDed > 0)
                        {
                            AtotalExtraDed = totalExtraDed.ToString();
                        }
                        else
                        {
                            AtotalExtraDed = "-";
                        }

                        totalOtherDed += OtherDed;
                        if (totalOtherDed > 0)
                        {
                            AtotalOtherDed = totalOtherDed.ToString();
                        }
                        else
                        {
                            AtotalOtherDed = "-";
                        }

                        totalSecDepDed += SecDepDed;
                        if (totalSecDepDed > 0)
                        {
                            AtotalSecDepDed = totalSecDepDed.ToString();
                        }
                        else
                        {
                            AtotalSecDepDed = "-";
                        }

                        totalLoanDed += LoanDed;
                        if (totalLoanDed > 0)
                        {
                            AtotalLoanDed = totalLoanDed.ToString();
                        }
                        else
                        {
                            AtotalLoanDed = "-";
                        }

                        totalAdvDed += AdvDed;
                        if (totalAdvDed > 0)
                        {
                            AtotalAdvDed = totalAdvDed.ToString();
                        }
                        else
                        {
                            AtotalAdvDed = "-";
                        }

                        totalWCDed += WCDed;
                        if (totalWCDed > 0)
                        {
                            AtotalWCDed = totalWCDed.ToString();
                        }
                        else
                        {
                            AtotalWCDed = "-";
                        }

                        totalPVCDed += PVCDed;
                        if (totalPVCDed > 0)
                        {
                            AtotalPVCDed = totalPVCDed.ToString();
                        }
                        else
                        {
                            AtotalPVCDed = "-";
                        }

                        totalAdminCharge += AdminChargesDed;
                        if (totalAdminCharge > 0)
                        {
                            AtotalAdminCharge = totalAdminCharge.ToString();
                        }
                        else
                        {
                            AtotalAdminCharge = "-";
                        }



                        #endregion for total

                        if (ddlpaymenttype.SelectedIndex == 4)
                        {
                            cell = new PdfPCell(new Phrase(ATotalDed + "\n" + AAdvBonus, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                            cell.HorizontalAlignment = 2;
                            cell.Colspan = 1;
                            cell.SetLeading(0, 1.2f);
                            Maintable.AddCell(cell);
                        }
                        else
                        {
                            cell = new PdfPCell(new Phrase(ATotalDed, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                            cell.HorizontalAlignment = 2;
                            cell.Colspan = 1;
                            cell.SetLeading(0, 1.2f);
                            Maintable.AddCell(cell);
                        }


                        totalTotalDed += TotalDed;
                        if (totalTotalDed > 0)
                        {
                            AtotalTotalDed = totalTotalDed.ToString();
                        }
                        else
                        {
                            AtotalTotalDed = "-";
                        }

                        totalAdvbonus += AdvBonus;
                        if (totalAdvbonus > 0)
                        {
                            AtotalAdvbonus = totalAdvbonus.ToString();
                        }
                        else
                        {
                            AtotalAdvbonus = "-";
                        }

                        cell = new PdfPCell(new Phrase(ADriverSalary, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        totalDriverSalary += DriverSalary;
                        if (totalDriverSalary > 0)
                        {
                            AtotalDriverSalary = totalDriverSalary.ToString();
                        }
                        else
                        {
                            AtotalDriverSalary = "-";
                        }

                        cell = new PdfPCell(new Phrase(ANetpay, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        totalNetpay += Netpay;
                        if (totalNetpay > 0)
                        {
                            AtotalNetpay = totalNetpay.ToString();
                        }
                        else
                        {
                            AtotalNetpay = "-";
                        }
                        cell = new PdfPCell(new Phrase(EmpBankAcNo, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        //  Maintable.AddCell(cell);

                        #endregion

                        SNo++;

                    }
                    document.Add(Maintable);

                    if (nextpagerecordscount == targetpagerecors)
                    {
                        targetpagerecors = secondpagerecords;
                        document.NewPage();
                        nextpagerecordscount = 0;
                    }


                    #region for total values by Anil Reddy on 27-12-2016

                    PdfPTable Maintable2 = new PdfPTable(22);
                    Maintable2.TotalWidth = 990f;
                    Maintable2.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 6.5f, 9.5f, 9.5f, 6.3f, 4.5f, 4.5f, 4.7f, 5f, 4f, 4.7f, 4.9f, 5f, 5.4f, 5f, 4.3f, 4.7f, 5.5f, 5f, 5f, 5f, 5f };
                    Maintable2.SetWidths(width2);

                    cell = new PdfPCell(new Phrase("Grand Total", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 5;
                    Maintable2.AddCell(cell);

                    Paragraph CcellHead110 = new Paragraph();
                    if (ATotalCBasic != "-")
                    {
                        CcellHead110.Add(new Chunk("Basic+DA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCDA != "-")
                    {
                        CcellHead110.Add(new Chunk("\nDA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCHRA != "-")
                    {
                        CcellHead110.Add(new Chunk("\nHRA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCCCA != "-")
                    {
                        CcellHead110.Add(new Chunk("\nCCA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCConveyance != "-")
                    {
                        CcellHead110.Add(new Chunk("\nConv", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCWA != "-")
                    {
                        CcellHead110.Add(new Chunk("\nWA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCNFHS != "-")
                    {
                        CcellHead110.Add(new Chunk("\nNfhs", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalCLeaveAmount != "-")
                    {
                        CcellHead110.Add(new Chunk("\nAdv LW", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCGratuity != "-")
                    {
                        CcellHead110.Add(new Chunk("\nAdv Gratuity", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCBonus != "-")
                    {
                        CcellHead110.Add(new Chunk("\nAdv Bonus", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCAddlAmount != "-")
                    {
                        CcellHead110.Add(new Chunk("\nAddl Amt", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCArrears != "-")
                    {
                        CcellHead110.Add(new Chunk("\nArrears", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCAttBonus != "-")
                    {
                        CcellHead110.Add(new Chunk("\nAtt Bonus", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }




                    CcellHead110.SetLeading(0, 1.2f);
                    CcellHead110.Alignment = 0;
                    cell.AddElement(CcellHead110);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0.5f;
                    cell.BorderWidthRight = 0;
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead112 = new Paragraph();
                    if (ATotalCBasic != "-")
                    {
                        CcellHead112.Add(new Chunk(ATotalCBasic, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCDA != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCDA, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCHRA != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCHRA, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCCCA != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCCCA, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCConveyance != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCConveyance, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCWA != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCWA, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCNFHS != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCNFHS, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalCLeaveAmount != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + AtotalCLeaveAmount, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCGratuity != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCGratuity, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCBonus != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCBonus, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCAddlAmount != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCAddlAmount, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCArrears != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCArrears, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCAttBonus != "-")
                    {
                        CcellHead112.Add(new Chunk("\n" + ATotalCAttBonus, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead112.SetLeading(0, 1.2f);
                    CcellHead112.Alignment = 2;
                    cell.AddElement(CcellHead112);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell();
                    Paragraph CcellHead113 = new Paragraph();
                    if (AtotalCOtherAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("O Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCCS != "-")
                    {
                        CcellHead113.Add(new Chunk("CS\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCRC != "-")
                    {
                        CcellHead113.Add(new Chunk("RC\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }


                    if (ATotalCSplAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Spl Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFoodAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Food Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCNightAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Nigt Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCTravelAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Travel Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCMobileAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Mobile Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCMedicalAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Med Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCOTAmt != "-")
                    {
                        CcellHead113.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCWOAmt != "-")
                    {
                        CcellHead113.Add(new Chunk("WO Amt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCNHSAmt != "-")
                    {
                        CcellHead113.Add(new Chunk("NHS Amt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalCIncentives != "-")
                    {
                        CcellHead113.Add(new Chunk("Reimb\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedADDL4HR != "-")
                    {
                        CcellHead113.Add(new Chunk("Addl4HR\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedQTRALLOW != "-")
                    {
                        CcellHead113.Add(new Chunk("Qtr Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedRELALLOW != "-")
                    {
                        CcellHead113.Add(new Chunk("REL Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedOTESICWAGES != "-")
                    {
                        CcellHead113.Add(new Chunk("OT ESI\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedSITEALLOW != "-")
                    {
                        CcellHead113.Add(new Chunk("Site Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedGunAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Gun Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedFireAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Fire Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedTelephoneAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Tel Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedReimbursement != "-")
                    {
                        CcellHead113.Add(new Chunk("Re-ment\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedHardshipAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("H-S Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedRankAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("RankAllw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedPaidHolidayAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("PH Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedServiceCharge != "-")
                    {
                        CcellHead113.Add(new Chunk("SC\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalCPerformanceAllw != "-")
                    {
                        CcellHead113.Add(new Chunk("Per Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead113.SetLeading(0, 1.2f);
                    CcellHead113.Alignment = 0;
                    cell.AddElement(CcellHead113);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead23 = new Paragraph();

                    if (AtotalCOtherAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(AtotalCOtherAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCCS != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCCS + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCRC != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCRC + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }



                    if (ATotalCSplAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCSplAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFoodAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFoodAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCNightAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCNightAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCTravelAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCTravelAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCMobileAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCMobileAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCMedicalAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCMedicalAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCOTAmt != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCOTAmt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCWOAmt != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCWOAmt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCNHSAmt != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCNHSAmt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalCIncentives != "-")
                    {
                        CcellHead23.Add(new Chunk(AtotalCIncentives + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedADDL4HR != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedADDL4HR + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedQTRALLOW != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedQTRALLOW + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedRELALLOW != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedRELALLOW + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedOTESICWAGES != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedOTESICWAGES + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedSITEALLOW != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedSITEALLOW + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedGunAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedGunAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedFireAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedFireAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedTelephoneAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedTelephoneAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedReimbursement != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedReimbursement + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedHardshipAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedHardshipAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedRankAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedRankAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedPaidHolidayAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedPaidHolidayAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFixedServiceCharge != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCFixedServiceCharge + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalCPerformanceAllw != "-")
                    {
                        CcellHead23.Add(new Chunk(AtotalCPerformanceAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }



                    CcellHead23.SetLeading(0, 1.2f);
                    CcellHead23.Alignment = 2;
                    cell.AddElement(CcellHead23);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    Maintable2.AddCell(cell);

                    if (ddlpaymenttype.SelectedIndex == 1)
                    {
                        cell = new PdfPCell(new Phrase(Atotalnoofduties + "\n\n" + Atotalnhs + "\n\n" + AtotalWos + "\n\n" + Atotalpldays, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable2.AddCell(cell);
                    }

                    else
                    {

                        cell = new PdfPCell(new Phrase(Atotalnoofduties + "\n\n" + Atotalots + "\n\n" + Atotalnhs + "\n\n" + AtotalWos + "\n\n" + Atotalpldays, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable2.AddCell(cell);
                    }


                    #region for Normal Wages


                    Paragraph CcellHead10 = new Paragraph();
                    if (Atotalbasic != "-")
                    {
                        CcellHead10.Add(new Chunk("Basic+DA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalDa != "-")
                    {
                        CcellHead10.Add(new Chunk("\nDA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalHra != "-")
                    {
                        CcellHead10.Add(new Chunk("\nHRA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalcca != "-")
                    {
                        CcellHead10.Add(new Chunk("\nCCA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalConveyance != "-")
                    {
                        CcellHead10.Add(new Chunk("\nConv", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalWa != "-")
                    {
                        CcellHead10.Add(new Chunk("\nWA", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalNfhs != "-")
                    {
                        CcellHead10.Add(new Chunk("\nNfhs", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalLeaveEncashAmt != "-")
                    {
                        CcellHead10.Add(new Chunk("\nLW", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalGratuity != "-")
                    {
                        CcellHead10.Add(new Chunk("\nGratuity", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalBonus != "-")
                    {
                        CcellHead10.Add(new Chunk("\nBonus", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAddlAmount != "-")
                    {
                        CcellHead10.Add(new Chunk("\nAddl Amt", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalArrears != "-")
                    {
                        CcellHead10.Add(new Chunk("\nArrears", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAttbonus != "-")
                    {
                        CcellHead10.Add(new Chunk("\nAttBonus", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }


                    CcellHead10.SetLeading(0, 1.2f);
                    CcellHead10.Alignment = 0;
                    cell.AddElement(CcellHead10);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0.5f;
                    cell.BorderWidthRight = 0;
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead11 = new Paragraph();
                    if (Atotalbasic != "-")
                    {
                        CcellHead11.Add(new Chunk(Atotalbasic, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalDa != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalDa, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalHra != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalHra, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalcca != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + Atotalcca, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalConveyance != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalConveyance, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalWa != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalWa, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalNfhs != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalNfhs, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalLeaveEncashAmt != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalLeaveEncashAmt, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalGratuity != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalGratuity, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalBonus != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalBonus, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAddlAmount != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalAddlAmount, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalArrears != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalArrears, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAttbonus != "-")
                    {
                        CcellHead11.Add(new Chunk("\n" + AtotalAttbonus, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead11.SetLeading(0, 1.2f);
                    CcellHead11.Alignment = 2;
                    cell.AddElement(CcellHead11);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell();
                    Paragraph CcellHead12 = new Paragraph();
                    if (Atotalotherallw != "-")
                    {

                        CcellHead12.Add(new Chunk("O Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalcs != "-")
                    {
                        CcellHead12.Add(new Chunk("CS\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalRC != "-")
                    {
                        CcellHead12.Add(new Chunk("RC\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }



                    if (AtotalUniformAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Uniform Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalSpecialAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Spl Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalFoodAllowance != "-")
                    {
                        CcellHead12.Add(new Chunk("Food Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalNightShiftAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Nigt Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalTravelAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Travel Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalMobileAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Mobile Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalMedicalAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Med Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalotamt != "-")
                    {
                        CcellHead12.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalWOAmt != "-")
                    {
                        CcellHead12.Add(new Chunk("WO Amt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalNpotsAmt != "-")
                    {
                        CcellHead12.Add(new Chunk("NPOTAmt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalnhsamt != "-")
                    {
                        CcellHead12.Add(new Chunk("NHS Amt\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalIncentivs != "-")
                    {
                        CcellHead12.Add(new Chunk("Inc", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (ATotalCADDL4HR != "-")
                    {
                        CcellHead12.Add(new Chunk("Addl4HR\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCQTRALLOW != "-")
                    {
                        CcellHead12.Add(new Chunk("Qtr Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCRELALLOW != "-")
                    {
                        CcellHead12.Add(new Chunk("REL Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCOTESICWAGES != "-")
                    {
                        CcellHead12.Add(new Chunk("OT ESI\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCSITEALLOW != "-")
                    {
                        CcellHead12.Add(new Chunk("Site Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCGunAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Gun Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFireAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Fire Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCTelephoneAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Tel Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCReimbursement != "-")
                    {
                        CcellHead12.Add(new Chunk("Re-ment\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCHardshipAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("H-S Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalRankAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Rank Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCPaidHolidayAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("PH Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCServiceCharge != "-")
                    {
                        CcellHead12.Add(new Chunk("SC\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalPerformanceAllw != "-")
                    {
                        CcellHead12.Add(new Chunk("Per Allw\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead12.SetLeading(0, 1.2f);
                    CcellHead12.Alignment = 0;
                    cell.AddElement(CcellHead12);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead13 = new Paragraph();

                    if (Atotalotherallw != "-")
                    {
                        CcellHead13.Add(new Chunk(Atotalotherallw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalcs != "-")
                    {
                        CcellHead13.Add(new Chunk(Atotalcs + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalRC != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalRC + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }



                    if (AtotalUniformAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalUniformAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalSpecialAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalSpecialAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalFoodAllowance != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalFoodAllowance + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalNightShiftAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalNightShiftAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalTravelAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalTravelAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalMobileAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalMobileAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalMedicalAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalMedicalAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalotamt != "-")
                    {
                        CcellHead13.Add(new Chunk(Atotalotamt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalWOAmt != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalWOAmt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalNpotsAmt != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalNpotsAmt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (Atotalnhsamt != "-")
                    {
                        CcellHead13.Add(new Chunk(Atotalnhsamt + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalIncentivs != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalIncentivs + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCADDL4HR != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCADDL4HR + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCQTRALLOW != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCQTRALLOW + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCRELALLOW != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCRELALLOW + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCOTESICWAGES != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCOTESICWAGES + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCSITEALLOW != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCSITEALLOW + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCGunAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCGunAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCFireAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCFireAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCTelephoneAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCTelephoneAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCReimbursement != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCReimbursement + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCHardshipAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCHardshipAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalRankAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalRankAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCPaidHolidayAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCPaidHolidayAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (ATotalCServiceCharge != "-")
                    {
                        CcellHead13.Add(new Chunk(ATotalCServiceCharge + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalPerformanceAllw != "-")
                    {
                        CcellHead13.Add(new Chunk(AtotalPerformanceAllw + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead13.SetLeading(0, 1.2f);
                    CcellHead13.Alignment = 2;
                    cell.AddElement(CcellHead13);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);

                    #endregion for Fixed Wages

                    cell = new PdfPCell(new Phrase(Atotalgross, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);



                    cell = new PdfPCell();
                    Paragraph CcellHead20 = new Paragraph();

                    if (AtotalVPF != "-")
                    {
                        CcellHead20.Add(new Chunk("VPF", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalPF != "-")
                    {
                        CcellHead20.Add(new Chunk("\nPF", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalESI != "-")
                    {
                        CcellHead20.Add(new Chunk("\nESI", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalPT != "-")
                    {
                        CcellHead20.Add(new Chunk("\nPT", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalLWF != "-")
                    {
                        CcellHead20.Add(new Chunk("\nLWF", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }



                    CcellHead20.SetLeading(0, 1.2f);
                    cell.AddElement(CcellHead20);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0.5f;
                    cell.BorderWidthRight = 0;
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead21 = new Paragraph();

                    if (AtotalPF != "-")
                    {
                        CcellHead21.Add(new Chunk(AtotalPF, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalESI != "-")
                    {
                        CcellHead21.Add(new Chunk("\n" + AtotalESI, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }


                    if (AtotalPT != "-")
                    {
                        CcellHead21.Add(new Chunk("\n" + AtotalPT, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalLWF != "-")
                    {
                        CcellHead21.Add(new Chunk("\n" + AtotalLWF, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead21.SetLeading(0, 1.2f);
                    CcellHead21.Alignment = 2;
                    cell.AddElement(CcellHead21);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);



                    cell = new PdfPCell();
                    Paragraph CcellHead16 = new Paragraph();



                    //if (ACanteenAdv != "-")
                    {
                        CcellHead16.Add(new Chunk("CAdv\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalFoodDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Food Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalGD != "-")
                    {
                        CcellHead16.Add(new Chunk("GD\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }


                    if (AtotalPenalty != "-")
                    {
                        CcellHead16.Add(new Chunk("Advance\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalSalAdv != "-")
                    {

                        CcellHead16.Add(new Chunk("Sal Adv\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalUniformDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Uniform\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalATMDed != "-")
                    {
                        CcellHead16.Add(new Chunk("ATM Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalREGDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Reg Fee\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalIDCardDed != "-")
                    {
                        CcellHead16.Add(new Chunk("IDCard Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalExtraDed != "-")
                    {
                        CcellHead16.Add(new Chunk("TDS Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalOtherDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Other Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalSecDepDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Sec Dep Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalLoanDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Loan Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAdvDed != "-")
                    {
                        CcellHead16.Add(new Chunk("Adv Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalWCDed != "-")
                    {
                        CcellHead16.Add(new Chunk("WC Ded\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalPVCDed != "-")
                    {
                        CcellHead16.Add(new Chunk("PVC", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAdminCharge != "-")
                    {
                        CcellHead16.Add(new Chunk("Ad.Chrg", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead16.SetLeading(0, 1.2f);
                    cell.AddElement(CcellHead16);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0.5f;
                    cell.BorderWidthRight = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell();
                    Paragraph CcellHead17 = new Paragraph();



                    //if (AtotalCanteenAdv != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalCanteenAdv + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalFoodDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalFoodDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalGD != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalGD + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }


                    if (AtotalPenalty != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalPenalty + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalSalAdv != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalSalAdv + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalUniformDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalUniformDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalATMDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalATMDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalREGDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalREGDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalIDCardDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalIDCardDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalExtraDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalExtraDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalOtherDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalOtherDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalSecDepDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalSecDepDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalLoanDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalLoanDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalAdvDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalAdvDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalWCDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalWCDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    if (AtotalPVCDed != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalPVCDed + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }
                    if (AtotalAdminCharge != "-")
                    {
                        CcellHead17.Add(new Chunk(AtotalAdminCharge + "\n", FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    }

                    CcellHead17.SetLeading(0, 1.2f);
                    CcellHead17.Alignment = 2;
                    cell.AddElement(CcellHead17);
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);

                    if (ddlpaymenttype.SelectedIndex == 4)
                    {
                        cell = new PdfPCell(new Phrase(AtotalTotalDed + "\n" + AtotalAdvbonus, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable2.AddCell(cell);
                    }
                    else
                    {
                        cell = new PdfPCell(new Phrase(AtotalTotalDed, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable2.AddCell(cell);
                    }

                    cell = new PdfPCell(new Phrase(AtotalDriverSalary, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(AtotalNetpay, FontFactory.GetFont(Fontstyle, 8, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);


                    #endregion


                    cell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    cell.FixedHeight = 20f;
                    Maintable2.AddCell(cell);

                    float EmptotalforBank = 0;
                    float TotalAmountforBank = 0;
                    float EmpTotalforCash = 0;
                    float TotalAmountForCash = 0;

                    string SPName1 = "IMEPaysheetSummary";
                    Hashtable htsummary = new Hashtable();
                    htsummary.Add("@ClientId", clientid);
                    htsummary.Add("@month", month);
                    htsummary.Add("@PaymentOption", Paysheetoption);

                    DataTable dtsummary = config.ExecuteAdaptorAsyncWithParams(SPName1, htsummary).Result;
                    if (dtsummary.Rows.Count > 0)
                    {
                        EmptotalforBank = Convert.ToSingle(dtsummary.Rows[0]["BankEmpTotal"].ToString());
                        TotalAmountforBank = Convert.ToSingle(dtsummary.Rows[0]["BankTotalAmount"].ToString());
                        EmpTotalforCash = Convert.ToSingle(dtsummary.Rows[0]["cashtotalemp"].ToString());
                        TotalAmountForCash = Convert.ToSingle(dtsummary.Rows[0]["cashtotalamount"].ToString());

                    }

                    cell = new PdfPCell(new Phrase("Summary", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 7;
                    cell.Border = 0;
                    cell.PaddingLeft = 300f;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Employee Total", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Amount", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 9;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Bank.", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 7;
                    cell.PaddingLeft = 300f;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(EmptotalforBank.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(TotalAmountforBank.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 9;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(" Cash", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 7;
                    cell.PaddingLeft = 300f;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(EmpTotalforCash.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(TotalAmountForCash.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 9;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);



                    cell = new PdfPCell(new Phrase("Authorised Signatory", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 22;
                    cell.Border = 0;
                    cell.PaddingTop = 40;
                    Maintable2.AddCell(cell);



                    document.Add(Maintable2);

                    string filename = ddlcname.SelectedItem.Text + "/PaySheet for-" + GetMonthName() + " -" + GetMonthOfYear() + ".pdf";

                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=\"" + filename + "\"");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }
            }
            catch (Exception ex)
            {

            }

        }

        protected void btnpaysheetOnlyOTS_Click(object sender, EventArgs e)
        {
            try
            {
                if (ddlClients.SelectedIndex <= 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                    return;
                }

                var formatInfoinfo = new DateTimeFormatInfo();
                string[] monthName = formatInfoinfo.MonthNames;
                int payMonth = GetMonth(ddlmonth.SelectedValue);

                int month = GetMonthBasedOnSelectionDateorMonth();
                string selectmonth = string.Empty;

                int Font_size = 10;
                string fontsyle = "verdana";


                #region for clients Qry by Anil Reddy on 27-12-2016

                string selectclientaddress = "select * from clients where clientid= '" + ddlClients.SelectedValue + "'";
                DataTable dtclientaddress = config.ExecuteReaderWithQueryAsync(selectclientaddress).Result;

                string AddrHno = ""; string AddrColony = ""; string AddrArea = ""; string AddrStreet = ""; string Addrcity = ""; string Addrstate = ""; string Addrpin = "";
                if (dtclientaddress.Rows.Count > 0)
                {
                    AddrHno = dtclientaddress.Rows[0]["ClientAddrHno"].ToString();
                    AddrStreet = dtclientaddress.Rows[0]["ClientAddrStreet"].ToString();
                    AddrArea = dtclientaddress.Rows[0]["ClientAddrArea"].ToString();
                    AddrColony = dtclientaddress.Rows[0]["ClientAddrColony"].ToString();
                    Addrcity = dtclientaddress.Rows[0]["ClientAddrcity"].ToString();
                    Addrstate = dtclientaddress.Rows[0]["ClientAddrstate"].ToString();
                    Addrpin = dtclientaddress.Rows[0]["ClientAddrpin"].ToString();
                }

                string[] ClientAdress = new string[7];
                if (AddrHno.Length > 0)
                {
                    ClientAdress[0] = AddrHno;
                }
                else
                {
                    ClientAdress[0] = "";
                }
                if (AddrStreet.Length > 0)
                {
                    ClientAdress[1] = AddrStreet;
                }
                else
                {
                    ClientAdress[1] = "";
                }
                if (AddrArea.Length > 0)
                {
                    ClientAdress[2] = AddrArea;
                }
                else
                {
                    ClientAdress[2] = "";
                }
                if (AddrColony.Length > 0)
                {
                    ClientAdress[3] = AddrArea;
                }
                else
                {
                    ClientAdress[3] = "";
                }
                if (Addrcity.Length > 0)
                {
                    ClientAdress[4] = AddrColony;
                }
                else
                {
                    ClientAdress[4] = "";
                }
                if (Addrstate.Length > 0)
                {
                    ClientAdress[5] = Addrcity;
                }
                else
                {
                    ClientAdress[5] = "";
                }
                if (Addrpin.Length > 0)
                {
                    ClientAdress[6] = Addrstate;
                }
                else
                {
                    ClientAdress[6] = "";
                }


                string Address1 = string.Empty;

                for (int i = 0; i < 7; i++)
                {
                    Address1 += "  " + ClientAdress[i];
                }
                #endregion

                #region for CompanyInfo Qry by Anil Reddy on 27-12-2016
                string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
                DataTable compInfo = config.ExecuteReaderWithQueryAsync(strQry).Result;
                string companyName = "Your Company Name";
                string companyAddress = "Your Company Address";
                string PFNOForms = "";
                string TotalPFNOForms = "";
                if (compInfo.Rows.Count > 0)
                {
                    companyName = compInfo.Rows[0]["CompanyName"].ToString();
                    companyAddress = compInfo.Rows[0]["Address"].ToString();
                }
                #endregion


                var clientid = ddlClients.SelectedValue;
                var Paysheetoption = ddlpaymenttype.SelectedIndex;


                var list = new List<string>();

                if (gvattendancezero.Rows.Count > 0)
                {
                    for (int i = 0; i < gvattendancezero.Rows.Count; i++)
                    {
                        CheckBox chkEmpid = gvattendancezero.Rows[i].FindControl("chkindividual") as CheckBox;
                        Label lblempid = gvattendancezero.Rows[i].FindControl("lblempid") as Label;

                        if (chkEmpid.Checked == true)
                        {
                            list.Add(lblempid.Text);
                        }

                    }
                }

                string Empids = string.Join(",", list.ToArray());

                if (list.Count == 0)
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Empids');", true);
                    return;
                }

                DataTable dtEmpidsList = new DataTable();
                dtEmpidsList.Columns.Add("Empid");
                if (list.Count != 0)
                {
                    foreach (string s in list)
                    {
                        DataRow row = dtEmpidsList.NewRow();
                        row["Empid"] = s;
                        dtEmpidsList.Rows.Add(row);
                    }
                }

                var SPName = "";
                Hashtable HTPaysheet = new Hashtable();
                SPName = "IMEPaysheetpdfs";
                HTPaysheet.Add("@ClientId", clientid);
                HTPaysheet.Add("@month", month);
                HTPaysheet.Add("@PaymentOption", Paysheetoption);
                HTPaysheet.Add("@EmpIDList", dtEmpidsList);

                DataTable dt = config.ExecuteAdaptorAsyncWithParams(SPName, HTPaysheet).Result;

                MemoryStream ms = new MemoryStream();


                if (dt.Rows.Count > 0)
                {
                    Document document = new Document(PageSize.LEGAL.Rotate());
                    var writer = PdfWriter.GetInstance(document, ms);
                    PageEventHelperPageNo pageEventHelper = new PageEventHelperPageNo();
                    writer.PageEvent = pageEventHelper;
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                    string imagepath1 = Server.MapPath("images");
                    int j = 0;

                    int FontSize = 10;
                    PdfPTable Maintable1 = new PdfPTable(21);
                    Maintable1.TotalWidth = 850f;
                    Maintable1.LockedWidth = true;
                    float[] width1 = new float[] { 2f, 6.5f, 7.5f, 11f, 5.5f, 4f, 4.5f, 4.5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5f, 5.5f, 5f, 5f, 5f };
                    Maintable1.SetWidths(width1);

                    PdfPCell cell;
                    #region for headings
                    cell = new PdfPCell(new Phrase("FORM-XVII", FontFactory.GetFont(Fontstyle, 12, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    cell.PaddingTop = -15;
                    Maintable1.AddCell(cell);
                    cell = new PdfPCell(new Phrase("REGISTER OF WAGES", FontFactory.GetFont(Fontstyle, Font_size + 2, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("   [Rule 78(1)(a)(i)]", FontFactory.GetFont(Fontstyle, Font_size + 2, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(" ", FontFactory.GetFont(Fontstyle, Font_size + 2, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Name and Address of Contractor : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 4;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(companyName + "\n" + companyAddress, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = -30f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Name and Address of Establishment : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = 20f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Address1, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("Nature and location of work : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 4;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(dt.Rows[0]["TypeOfWork"].ToString(), FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = -30f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Name and Address of principal Employer : ", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.BOLD, BaseColor.WHITE)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.PaddingLeft = 20f;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Address1, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.WHITE)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 6;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    Paragraph Ccellnature1 = new Paragraph();
                    Ccellnature1.Add(new Chunk("Wages Period : ", FontFactory.GetFont(Fontstyle, Font_size + 1, Font.BOLD, BaseColor.BLACK)));
                    Ccellnature1.Add(new Chunk(GetMonthName() + "-" + GetMonthOfYear(), FontFactory.GetFont(Fontstyle, Font_size + 1, Font.NORMAL, BaseColor.BLACK)));
                    cell.AddElement(Ccellnature1);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    Maintable1.AddCell(cell);

                    document.Add(Maintable1);
                    PdfPTable Maintable = new PdfPTable(15);
                    Maintable.TotalWidth = 850f;
                    Maintable.LockedWidth = true;
                    Maintable.HeaderRows = 1;
                    float[] width = new float[] { 2f, 6.5f, 9.5f, 9.5f, 6.3f, 4.5f, 4.5f, 4.7f, 5f, 4f, 4.7f, 4.9f, 4f, 4f, 4f };
                    Maintable.SetWidths(width);


                    #endregion

                    #region For table headings by Anil Reddy on 27-12-2016


                    cell = new PdfPCell(new Phrase("No", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Emp ID No \n C.EmpID \n MOB  \n Site ", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Emp Name \n Father's Name  \n ESI No \n UAN No", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Aadhaar No\n Bank \n A/C No \n IFSC Code", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Design \n Sex \n DOB \n DOJ", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Fixed Wages", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);
                    cell = new PdfPCell(new Phrase("OT's", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);


                    cell = new PdfPCell(new Phrase("Earnings", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Deductions", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Total Ded", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Net pay", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.3f);
                    Maintable.AddCell(cell);



                    #endregion

                    #region  for variables by Anil Reddy on 27-12-2016

                    string EmpBankAcNo = "";
                    float VPF = 0;
                    float PF = 0;
                    float ESI = 0;
                    float TotalDed = 0;
                    float Netpay = 0;
                    float gross = 0;
                    float ots = 0;
                    float otamt = 0;


                    float COTAmt = 0;


                    //end fixed wages

                    string AVPF = "";
                    string APF = "";
                    string AESI = "";

                    string ATotalDed = "";
                    string ANetpay = "";
                    string Agross = "";

                    string Aots = "";
                    string Aotamt = "";


                    //for fixed wages A

                    string CdAOTAmt = "";

                    //end fixed wages A
                    string empname = "";
                    string ClientEmpid = "";
                    string BankName = "";
                    string IFSCCode = "";
                    string Site = "";
                    string DOB = "";
                    string DOJ = "";
                    string Sex = "";
                    string MOB = "";
                    string UANNo = "";
                    string AadhaarNo = "";
                    string Department = "";
                    string empid = "";
                    string design = "";
                    string pfno = "";
                    string esino = "";

                    #endregion

                    #region  for total variables by Anil Reddy on 27-12-2016

                    float totalVPF = 0;
                    float totalPF = 0;
                    float totalESI = 0;
                    float totalTotalDed = 0;
                    float totalNetpay = 0;
                    float totalgross = 0;

                    float totalots = 0;
                    float totalotamt = 0;

                    string AtotalVPF = "";
                    string AtotalPF = "";
                    string AtotalESI = "";

                    string AtotalTotalDed = "";
                    string AtotalNetpay = "";
                    string Atotalgross = "";

                    string Atotalots = "";
                    string Atotalotamt = "";


                    //for totalfixedwages

                    float TotalCOTAmt = 0;

                    string ATotalCOTAmt = "";
                    //

                    #endregion

                    int SNo = 1;
                    int CheckSNo = 1;
                    int nextpagerecordscount = 0;
                    int targetpagerecors = 4;
                    int secondpagerecords = targetpagerecors + 2;
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {

                        #region for declare values

                        EmpBankAcNo = (dt.Rows[i]["EmpBankAcNo"].ToString());
                        empname = (dt.Rows[i]["EmpName"].ToString());
                        empid = (dt.Rows[i]["EmpId"].ToString());
                        design = (dt.Rows[i]["Design"].ToString());
                        //pfno = (dt.Rows[i]["EmpEpfNo"].ToString());
                        esino = (dt.Rows[i]["EmpESINo"].ToString());
                        ClientEmpid = dt.Rows[i]["OldEmpid"].ToString();
                        BankName = dt.Rows[i]["EmpBankName"].ToString();
                        IFSCCode = dt.Rows[i]["EmpIFSCcode"].ToString();
                        Site = dt.Rows[i]["Site"].ToString();
                        DOB = dt.Rows[i]["EmpDtofBirth"].ToString();
                        DOJ = dt.Rows[i]["EmpDtofJoining"].ToString();
                        Sex = dt.Rows[i]["EmpSex"].ToString();
                        MOB = dt.Rows[i]["MOB"].ToString();
                        UANNo = dt.Rows[i]["EmpUANNumber"].ToString();
                        AadhaarNo = dt.Rows[i]["AadharCardNo"].ToString();
                        Department = dt.Rows[i]["Department"].ToString();



                        ots = float.Parse(dt.Rows[i]["Duties"].ToString());

                        if (ots > 0)
                        {
                            Aots = ots.ToString();
                        }
                        else
                        {
                            Aots = "-";
                        }
                        otamt = float.Parse(dt.Rows[i]["Amount"].ToString());
                        if (otamt > 0)
                        {
                            Aotamt = otamt.ToString();
                        }
                        else
                        {
                            Aotamt = "-";
                        }

                        VPF = float.Parse(dt.Rows[i]["VPF"].ToString());
                        if (VPF > 0)
                        {
                            AVPF = VPF.ToString();
                        }
                        else
                        {
                            AVPF = "-";
                        }

                        PF = float.Parse(dt.Rows[i]["PF"].ToString());
                        if (PF > 0)
                        {
                            APF = PF.ToString();
                        }
                        else
                        {
                            APF = "-";
                        }
                        ESI = float.Parse(dt.Rows[i]["ESI"].ToString());
                        if (ESI > 0)
                        {
                            AESI = ESI.ToString();
                        }
                        else
                        {
                            AESI = "-";
                        }


                        TotalDed = float.Parse(dt.Rows[i]["Totaldeduct"].ToString());
                        if (TotalDed > 0)
                        {
                            ATotalDed = TotalDed.ToString();
                        }
                        else
                        {
                            ATotalDed = "-";
                        }
                        Netpay = float.Parse(dt.Rows[i]["ActualAmount"].ToString());
                        if (Netpay > 0)
                        {
                            ANetpay = Netpay.ToString();
                        }
                        else
                        {
                            ANetpay = "-";
                        }
                        gross = float.Parse(dt.Rows[i]["Gross"].ToString());
                        if (gross > 0)
                        {
                            Agross = gross.ToString();
                        }
                        else
                        {
                            Agross = "-";
                        }


                        COTAmt = float.Parse(dt.Rows[i]["cdOTS"].ToString());
                        if (COTAmt > 0)
                        {
                            CdAOTAmt = COTAmt.ToString();
                        }
                        else
                        {
                            CdAOTAmt = "-";
                        }



                        #endregion


                        nextpagerecordscount++;
                        #region for values by Anil Reddy on 27-12-2016
                        cell = new PdfPCell(new Phrase((SNo).ToString(), FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.5f);
                        Maintable.AddCell(cell);

                        string OldEmpid = "";
                        string MOBS = "";
                        string SiteS = "";
                        OldEmpid = dt.Rows[i]["OldEmpid"].ToString();
                        MOBS = dt.Rows[i]["MOB"].ToString();
                        SiteS = dt.Rows[i]["Site"].ToString();

                        PdfPCell cellN = new PdfPCell();
                        Paragraph CcellHead9 = new Paragraph();
                        CcellHead9.Add(new Chunk(dt.Rows[i]["EmpId"].ToString() + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        if (OldEmpid.Trim().Length > 0)
                        {
                            CcellHead9.Add(new Chunk(OldEmpid + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead9.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        if (MOBS.Trim().Length > 0)
                        {
                            CcellHead9.Add(new Chunk(MOBS + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead9.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (SiteS.Trim().Length > 0)
                        {
                            CcellHead9.Add(new Chunk(SiteS + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead9.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        cellN.AddElement(CcellHead9);
                        cellN.HorizontalAlignment = 0;
                        cellN.Colspan = 1;
                        cellN.SetLeading(0, 1.3f);
                        Maintable.AddCell(cellN);

                        cell = new PdfPCell();

                        string EmpFatherName = "";
                        string EmpESINo = "";
                        string EmpUANNumber = "";
                        EmpFatherName = dt.Rows[i]["EmpFatherName"].ToString();
                        EmpESINo = dt.Rows[i]["EmpESINo"].ToString();
                        EmpUANNumber = dt.Rows[i]["EmpUANNumber"].ToString();

                        Paragraph CcellHead5 = new Paragraph();
                        CcellHead5.Add(new Chunk(dt.Rows[i]["EmpName"].ToString() + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));

                        if (EmpFatherName.Trim().Length > 0)
                        {
                            CcellHead5.Add(new Chunk(EmpFatherName + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead5.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpESINo.Trim().Length > 0)
                        {
                            CcellHead5.Add(new Chunk(EmpESINo + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead5.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpUANNumber.Trim().Length > 0)
                        {
                            CcellHead5.Add(new Chunk(EmpUANNumber + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead5.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        cell.AddElement(CcellHead5);
                        cell.SetLeading(0, 1.3f);
                        cell.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        cell.Colspan = 1;
                        Maintable.AddCell(cell);


                        string AadharCardNo = "";
                        string EmpBankName = "";
                        string EmpBankAcNos = "";
                        string EmpIFSCcode = "";

                        AadharCardNo = dt.Rows[i]["AadharCardNo"].ToString();
                        EmpBankName = dt.Rows[i]["EmpESINo"].ToString();
                        EmpBankAcNos = dt.Rows[i]["EmpBankAcNo"].ToString();
                        EmpIFSCcode = dt.Rows[i]["EmpIFSCcode"].ToString();

                        PdfPCell cellHead7 = new PdfPCell();
                        Paragraph CcellHead7 = new Paragraph();
                        if (AadharCardNo.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(AadharCardNo + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpBankName.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(EmpBankName + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpBankAcNos.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(EmpBankAcNos + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpIFSCcode.Trim().Length > 0)
                        {
                            CcellHead7.Add(new Chunk(EmpIFSCcode + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead7.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        cellHead7.AddElement(CcellHead7);
                        cellHead7.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        cellHead7.Border = 15;
                        cellHead7.SetLeading(0, 1.3f);
                        Maintable.AddCell(cellHead7);


                        string EmpSex = "";
                        string EmpDtofBirth = "";
                        string EmpDtofJoining = "";

                        EmpSex = dt.Rows[i]["EmpSex"].ToString();
                        EmpDtofBirth = dt.Rows[i]["EmpDtofBirth"].ToString();
                        EmpDtofJoining = dt.Rows[i]["EmpDtofJoining"].ToString();

                        PdfPCell cellHead8 = new PdfPCell();
                        Paragraph CcellHead8 = new Paragraph();

                        CcellHead8.Add(new Chunk(dt.Rows[i]["Design"].ToString() + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));

                        if (EmpSex.Trim().Length > 0)
                        {
                            CcellHead8.Add(new Chunk(EmpSex + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead8.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpDtofBirth.Trim().Length > 0)
                        {
                            CcellHead8.Add(new Chunk(EmpDtofBirth + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead8.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        if (EmpDtofJoining.Trim().Length > 0)
                        {
                            CcellHead8.Add(new Chunk(EmpDtofJoining + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead8.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        cellHead8.AddElement(CcellHead8);
                        cellHead8.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        cellHead8.SetLeading(0, 1.3f);
                        Maintable.AddCell(cellHead8);

                        #region for fixed wages
                        cell = new PdfPCell();
                        Paragraph CcellHead18 = new Paragraph();

                        //if (CdAOTAmt != "-")
                        {
                            CcellHead18.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }
                        CcellHead18.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead18);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0;
                        cell.PaddingBottom = 5;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        cell = new PdfPCell();
                        Paragraph CcellHead19 = new Paragraph();
                        if (CdAOTAmt != "-")
                        {
                            CcellHead19.Add(new Chunk(CdAOTAmt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        else
                        {
                            CcellHead19.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        CcellHead19.SetLeading(0, 1.2f);
                        CcellHead19.Alignment = 2;
                        cell.AddElement(CcellHead19);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        //cell.PaddingLeft = 25;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);



                        #region for total
                        TotalCOTAmt += COTAmt;
                        if (TotalCOTAmt > 0)
                        {
                            ATotalCOTAmt = TotalCOTAmt.ToString();
                        }
                        else
                        {
                            ATotalCOTAmt = "-";
                        }

                        //                   
                        #endregion for total

                        #endregion for fixed wages


                        cell = new PdfPCell(new Phrase(Aots, FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        #region for total

                        totalots += ots;
                        if (totalots > 0)
                        {
                            Atotalots = totalots.ToString();
                        }
                        else
                        {
                            Atotalots = "-";
                        }
                        #endregion for total

                        cell = new PdfPCell();
                        Paragraph CcellHead118 = new Paragraph();

                        //if (Aotamt != "-")
                        {
                            CcellHead118.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }


                        CcellHead118.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead118);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0;
                        cell.PaddingBottom = 5;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);


                        cell = new PdfPCell();
                        Paragraph CcellHead119 = new Paragraph();




                        if (Aotamt != "-")
                        {
                            CcellHead119.Add(new Chunk(Aotamt + "\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        else
                        {
                            CcellHead119.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, Font_size - 1, Font.NORMAL, BaseColor.BLACK)));
                        }

                        CcellHead119.SetLeading(0, 1.2f);
                        CcellHead9.Alignment = 2;
                        cell.AddElement(CcellHead119);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        cell.PaddingLeft = 10;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);



                        #region for total
                        totalotamt += otamt;
                        if (totalotamt > 0)
                        {
                            Atotalotamt = totalotamt.ToString();
                        }
                        else
                        {
                            Atotalotamt = "-";
                        }



                        #endregion for total
                        cell = new PdfPCell(new Phrase(Agross, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        totalgross += gross;
                        if (totalgross > 0)
                        {
                            Atotalgross = totalgross.ToString();
                        }
                        else
                        {
                            Atotalgross = "-";
                        }

                        cell = new PdfPCell();
                        Paragraph CcellHead111 = new Paragraph();

                        // if (APF != "-")

                        {
                            CcellHead111.Add(new Chunk("VPF", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        {
                            CcellHead111.Add(new Chunk("\nPF", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }

                        //  if (AESI != "-")
                        {
                            CcellHead111.Add(new Chunk("\nESI", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        CcellHead111.SetLeading(0, 1.2f);
                        cell.AddElement(CcellHead111);
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0.5f;
                        cell.BorderWidthRight = 0;
                        Maintable.AddCell(cell);


                        cell = new PdfPCell();
                        Paragraph CcellHead1112 = new Paragraph();

                        if (AVPF != "-")
                        {
                            CcellHead1112.Add(new Chunk(AVPF, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead1112.Add(new Chunk("-", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));

                        }

                        if (APF != "-")
                        {
                            CcellHead1112.Add(new Chunk("\n" + APF, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead1112.Add(new Chunk("-", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));

                        }
                        if (AESI != "-")
                        {
                            CcellHead1112.Add(new Chunk("\n" + AESI, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }
                        else
                        {
                            CcellHead1112.Add(new Chunk("\n-", FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        }


                        CcellHead1112.SetLeading(0, 1.2f);
                        CcellHead1112.Alignment = 2;
                        cell.AddElement(CcellHead1112);
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.BorderWidthBottom = 0.5f;
                        cell.BorderWidthTop = 0.5f;
                        cell.BorderWidthLeft = 0;
                        cell.BorderWidthRight = 0.5f;
                        //cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);
                        #region for total
                        totalVPF += VPF;
                        if (totalVPF > 0)
                        {
                            AtotalVPF = totalVPF.ToString();
                        }
                        else
                        {
                            AtotalVPF = "-";
                        }


                        totalPF += PF;
                        if (totalPF > 0)
                        {
                            AtotalPF = totalPF.ToString();
                        }
                        else
                        {
                            AtotalPF = "-";
                        }
                        totalESI += ESI;
                        if (totalESI > 0)
                        {
                            AtotalESI = totalESI.ToString();
                        }
                        else
                        {
                            AtotalESI = "-";
                        }

                        #endregion for total

                        cell = new PdfPCell(new Phrase(ATotalDed, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        totalTotalDed += TotalDed;
                        if (totalTotalDed > 0)
                        {
                            AtotalTotalDed = totalTotalDed.ToString();
                        }
                        else
                        {
                            AtotalTotalDed = "-";
                        }
                        cell = new PdfPCell(new Phrase(ANetpay, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        Maintable.AddCell(cell);

                        totalNetpay += Netpay;
                        if (totalNetpay > 0)
                        {
                            AtotalNetpay = totalNetpay.ToString();
                        }
                        else
                        {
                            AtotalNetpay = "-";
                        }
                        cell = new PdfPCell(new Phrase(EmpBankAcNo, FontFactory.GetFont(Fontstyle, 9, Font.NORMAL, BaseColor.BLACK)));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        //  Maintable.AddCell(cell);

                        #endregion

                        SNo++;

                    }
                    document.Add(Maintable);

                    if (nextpagerecordscount == targetpagerecors)
                    {
                        targetpagerecors = secondpagerecords;
                        document.NewPage();
                        nextpagerecordscount = 0;
                    }



                    #region for total values by Anil Reddy on 27-12-2016

                    PdfPTable Maintable2 = new PdfPTable(15);
                    Maintable2.TotalWidth = 850f;
                    Maintable2.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 6.5f, 9.5f, 9.5f, 6.3f, 4.5f, 4.5f, 4.7f, 5f, 4f, 4.7f, 4.9f, 4f, 4f, 4f };
                    Maintable2.SetWidths(width2);

                    cell = new PdfPCell(new Phrase("Grand Total", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 5;
                    Maintable2.AddCell(cell);
                    cell = new PdfPCell();
                    Paragraph CcellHead113 = new Paragraph();


                    // if (ATotalCOTAmt != "-")
                    {
                        CcellHead113.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }


                    CcellHead113.SetLeading(0, 1.2f);
                    CcellHead113.Alignment = 0;
                    cell.AddElement(CcellHead113);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead23 = new Paragraph();


                    if (ATotalCOTAmt != "-")
                    {
                        CcellHead23.Add(new Chunk(ATotalCOTAmt + "\n", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }
                    else
                    {
                        CcellHead23.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }
                    CcellHead23.SetLeading(0, 1.2f);
                    CcellHead23.Alignment = 2;
                    cell.AddElement(CcellHead23);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    Maintable2.AddCell(cell);



                    cell = new PdfPCell(new Phrase(Atotalots, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);



                    #region for Normal Wages



                    cell = new PdfPCell();
                    Paragraph CcellHead12 = new Paragraph();

                    // if (Atotalotamt != "-")
                    {
                        CcellHead12.Add(new Chunk("OT Amt\n", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }
                    CcellHead12.SetLeading(0, 1.2f);
                    CcellHead12.Alignment = 0;
                    cell.AddElement(CcellHead12);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead13 = new Paragraph();


                    if (Atotalotamt != "-")
                    {
                        CcellHead13.Add(new Chunk(Atotalotamt + "\n", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }

                    else
                    {
                        CcellHead13.Add(new Chunk("-\n", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }



                    CcellHead13.SetLeading(0, 1.2f);
                    CcellHead13.Alignment = 2;
                    cell.AddElement(CcellHead13);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);

                    #endregion for Fixed Wages

                    cell = new PdfPCell(new Phrase(Atotalgross, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);



                    cell = new PdfPCell();
                    Paragraph CcellHead20 = new Paragraph();

                    // if (AtotalPF != "-")

                    {
                        CcellHead20.Add(new Chunk("VPF", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }
                    {
                        CcellHead20.Add(new Chunk("\nPF", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }

                    // if (AtotalESI != "-")
                    {
                        CcellHead20.Add(new Chunk("\nESI", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }



                    CcellHead20.SetLeading(0, 1.2f);
                    cell.AddElement(CcellHead20);
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0.5f;
                    cell.BorderWidthRight = 0;
                    Maintable2.AddCell(cell);


                    cell = new PdfPCell();
                    Paragraph CcellHead21 = new Paragraph();

                    if (AtotalPF != "-")
                    {
                        CcellHead21.Add(new Chunk(AtotalPF, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }

                    else
                    {

                        CcellHead21.Add(new Chunk("-", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));

                    }

                    if (AtotalESI != "-")
                    {
                        CcellHead21.Add(new Chunk("\n" + AtotalESI, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }
                    else
                    {
                        CcellHead21.Add(new Chunk("\n-", FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    }
                    CcellHead21.SetLeading(0, 1.2f);
                    CcellHead21.Alignment = 2;
                    cell.AddElement(CcellHead21);
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.BorderWidthBottom = 0.5f;
                    cell.BorderWidthTop = 0.5f;
                    cell.BorderWidthLeft = 0;
                    cell.BorderWidthRight = 0.5f;
                    //cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);




                    cell = new PdfPCell(new Phrase(AtotalTotalDed, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(AtotalNetpay, FontFactory.GetFont(Fontstyle, 9, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    Maintable2.AddCell(cell);


                    #endregion


                    cell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 21;
                    cell.Border = 0;
                    cell.FixedHeight = 20f;
                    Maintable2.AddCell(cell);

                    float EmptotalforBank = 0;
                    float TotalAmountforBank = 0;
                    float EmpTotalforCash = 0;
                    float TotalAmountForCash = 0;


                    string SPName1 = "IMEPaysheetSummary";
                    Hashtable htsummary = new Hashtable();
                    htsummary.Add("@ClientId", clientid);
                    htsummary.Add("@month", month);
                    htsummary.Add("@PaymentOption", Paysheetoption);

                    DataTable dtsummary = config.ExecuteAdaptorAsyncWithParams(SPName1, htsummary).Result;


                    if (dtsummary.Rows.Count > 0)
                    {
                        EmptotalforBank = Convert.ToSingle(dtsummary.Rows[0]["BankEmpTotal"].ToString());
                        TotalAmountforBank = Convert.ToSingle(dtsummary.Rows[0]["BankTotalAmount"].ToString());
                        EmpTotalforCash = Convert.ToSingle(dtsummary.Rows[0]["cashtotalemp"].ToString());
                        TotalAmountForCash = Convert.ToSingle(dtsummary.Rows[0]["cashtotalamount"].ToString());

                    }

                    cell = new PdfPCell(new Phrase("Summary", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    cell.PaddingLeft = 300f;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Employee Total", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Amount", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Bank.", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 5;
                    cell.PaddingLeft = 300f;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(EmptotalforBank.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(TotalAmountforBank.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(" Cash", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 5;
                    cell.PaddingLeft = 300f;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(EmpTotalforCash.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);

                    cell = new PdfPCell(new Phrase(TotalAmountForCash.ToString(), FontFactory.GetFont(Fontstyle, Font_size, Font.ITALIC, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 5;
                    cell.Border = 0;
                    Maintable2.AddCell(cell);



                    cell = new PdfPCell(new Phrase("Authorised Signatory", FontFactory.GetFont(Fontstyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 15;
                    cell.Border = 0;
                    cell.PaddingTop = 40;
                    Maintable2.AddCell(cell);



                    document.Add(Maintable2);

                    string filename = ddlcname.SelectedItem.Text + "/Paysheet for-" + GetMonthName() + " -" + GetMonthOfYear() + ".pdf";

                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=\"" + filename + "\"");
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }
            }
            catch (Exception ex)
            {

            }

        }

        protected void btndownloadWagesummary_Click(object sender, EventArgs e)
        {
            if (ddlClients.SelectedIndex <= 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert()", "alert('Please Select Client ID/Name')", true);
                return;
            }

            var formatInfoinfo = new DateTimeFormatInfo();
            string[] monthName = formatInfoinfo.MonthNames;
            int payMonth = GetMonth(ddlmonth.SelectedValue);

            int month = GetMonthBasedOnSelectionDateorMonth();


            string date = string.Empty;





            var list = new List<string>();

            if (gvattendancezero.Rows.Count > 0)
            {
                for (int i = 0; i < gvattendancezero.Rows.Count; i++)
                {
                    CheckBox chkEmpid = gvattendancezero.Rows[i].FindControl("chkindividual") as CheckBox;
                    Label lblempid = gvattendancezero.Rows[i].FindControl("lblempid") as Label;

                    if (chkEmpid.Checked == true)
                    {
                        list.Add(lblempid.Text);
                    }

                }
            }

            string Empids = string.Join(",", list.ToArray());

            if (list.Count == 0)
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "showlalert", "alert('Please Select Empids');", true);
                return;
            }

            DataTable dtEmpidsList = new DataTable();
            dtEmpidsList.Columns.Add("Empid");
            if (list.Count != 0)
            {
                foreach (string s in list)
                {
                    DataRow row = dtEmpidsList.NewRow();
                    row["Empid"] = s;
                    dtEmpidsList.Rows.Add(row);
                }
            }

            DataTable dt = null;
            var clientid = ddlClients.SelectedValue;
            string SPName = "WageSheetSummary";


            Hashtable ht = new Hashtable();
            ht.Add("@clientids", clientid);
            ht.Add("@Month", month);
            ht.Add("@EmpIDList", dtEmpidsList);
            ht.Add("@Option", "Paysheet");


            dt = config.ExecuteAdaptorWithParams(SPName, ht).Result;
            DataTable dtgroup = dt.DefaultView.ToTable(true, "ClientID");

            string strQry = "select * from companyinfo where BranchID='" + Session["Branch"].ToString() + "' ";
            DataTable compInfo = config.ExecuteAdaptorAsyncWithQueryParams(strQry).Result;
            string companyName = "Your Company Name";
            string companyAddress = "Your Company Address";
            string PFNOForms = "";
            string TotalPFNOForms = "";
            if (compInfo.Rows.Count > 0)
            {
                companyName = compInfo.Rows[0]["CompanyName"].ToString();
                companyAddress = compInfo.Rows[0]["Address"].ToString();
                //PFNOForms = compInfo.Rows[0]["PFNoForms"].ToString();
            }


            MemoryStream ms = new MemoryStream();
            string fontsyle = "Courier New";


            int Fontsize = 12;
            if (dt.Rows.Count > 0)
            {

                Document document = new Document(PageSize.A4.Rotate());
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

                for (int j = 0; j < dtgroup.Rows.Count; j++)
                {
                    document.NewPage();


                    PdfPTable Maintable = new PdfPTable(14);
                    Maintable.TotalWidth = 790;
                    Maintable.HeaderRows = 3;
                    Maintable.LockedWidth = true;
                    float[] width = new float[] { 1f, 1.5f, 1.5f, 1f, 1f, 1f, 1f, 1.2f, 1f, 1f, 1f, 1f, 1f, 1f };
                    Maintable.SetWidths(width);



                    PdfPCell cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 1, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cell.Colspan = 7;
                    cell.Border = 0;
                    //Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Zone", FontFactory.GetFont(fontsyle, Fontsize + 1, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cell.Colspan = 1;
                    cell.Border = 0;
                    //Maintable.AddCell(cell);

                    cell = new PdfPCell(new Phrase("PF1/WB1/KOLKATA/WEST/SEC", FontFactory.GetFont(fontsyle, Fontsize + 1, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell.Colspan = 6;
                    cell.Border = 0;
                    // Maintable.AddCell(cell);

                    PdfPCell cellunit = new PdfPCell(new Phrase("UNIT SUMMARY OF", FontFactory.GetFont(fontsyle, Fontsize + 1, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellunit.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellunit.Colspan = 3;
                    cellunit.Border = 0;
                    Maintable.AddCell(cellunit);

                    PdfPCell cell33 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell33.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell33.Colspan = 2;
                    cell33.Border = 0;
                    Maintable.AddCell(cell33);

                    PdfPCell cell52 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell52.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell52.Colspan = 2;
                    cell52.Border = 0;
                    Maintable.AddCell(cell52);

                    cell52 = new PdfPCell(new Phrase("Unit Code", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell52.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cell52.Colspan = 2;
                    cell52.Border = 0;
                    Maintable.AddCell(cell52);

                    string Clientid = dtgroup.Rows[j]["Clientid"].ToString();
                    PdfPCell cell22 = new PdfPCell(new Phrase(Clientid, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell22.HorizontalAlignment = 3; //0=Left, 1=Centre, 2=Right
                    cell22.Colspan = 5;
                    cell22.Border = 0;
                    Maintable.AddCell(cell22);

                    PdfPCell celldata2 = new PdfPCell(new Phrase("EMPLOYEE", FontFactory.GetFont(fontsyle, Fontsize + 1, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    celldata2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    celldata2.Colspan = 3;
                    celldata2.Border = 0;
                    Maintable.AddCell(celldata2);

                    PdfPCell cell3 = new PdfPCell(new Phrase("Salary Month", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell3.Colspan = 2;
                    cell3.Border = 0;
                    Maintable.AddCell(cell3);

                    PdfPCell cell5 = new PdfPCell(new Phrase(GetMonthName() + " " + GetMonthOfYear(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell5.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell5.Colspan = 2;
                    cell5.Border = 0;
                    Maintable.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("Unit", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell5.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cell5.Colspan = 1;
                    cell5.Border = 0;
                    Maintable.AddCell(cell5);

                    string strClientname = "select ClientName from Clients where clientid='" + Clientid + "'";
                    DataTable dtclientname = config.ExecuteAdaptorAsyncWithQueryParams(strClientname).Result;
                    string Clientname = "";
                    if (dtclientname.Rows.Count > 0)
                    {
                        Clientname = dtclientname.Rows[0]["ClientName"].ToString();
                    }

                    PdfPCell cell2 = new PdfPCell(new Phrase(Clientname, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell2.Colspan = 6;
                    cell2.Border = 0;
                    Maintable.AddCell(cell2);



                    PdfPCell cell6 = new PdfPCell(new Phrase("Slno", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell6.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell6.Colspan = 1;
                    cell6.BorderWidthTop = 0.2f;
                    cell6.BorderWidthBottom = 0.2f;
                    cell6.BorderWidthLeft = 0;
                    cell6.BorderWidthRight = 0;
                    Maintable.AddCell(cell6);

                    PdfPCell cell7 = new PdfPCell(new Phrase("Emp No\n" + "Employee Name", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell7.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell7.Colspan = 2;
                    cell7.BorderWidthTop = 0.2f;
                    cell7.BorderWidthBottom = 0.2f;
                    cell7.BorderWidthLeft = 0;
                    cell7.BorderWidthRight = 0;
                    Maintable.AddCell(cell7);

                    PdfPCell cell8 = new PdfPCell(new Phrase("DUTY\n" + "OT DUTY", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell8.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell8.Colspan = 1;
                    cell8.BorderWidthTop = 0.2f;
                    cell8.BorderWidthBottom = 0.2f;
                    cell8.BorderWidthLeft = 0;
                    cell8.BorderWidthRight = 0;
                    Maintable.AddCell(cell8);

                    PdfPCell cell9 = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell9.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell9.Colspan = 1;
                    cell9.BorderWidthTop = 0.2f;
                    cell9.BorderWidthBottom = 0.2f;
                    cell9.BorderWidthLeft = 0;
                    cell9.BorderWidthRight = 0;
                    Maintable.AddCell(cell9);

                    PdfPCell cell11 = new PdfPCell(new Phrase("PF\n" + "PT", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell11.Colspan = 1;
                    cell11.BorderWidthTop = 0.2f;
                    cell11.BorderWidthBottom = 0.2f;
                    cell11.BorderWidthLeft = 0;
                    cell11.BorderWidthRight = 0;
                    Maintable.AddCell(cell11);

                    PdfPCell cell12 = new PdfPCell(new Phrase(" ESI\n" + "LWF\n" + "ADM", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell12.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell12.Colspan = 1;
                    cell12.BorderWidthTop = 0.2f;
                    cell12.BorderWidthBottom = 0.2f;
                    cell12.BorderWidthLeft = 0;
                    cell12.BorderWidthRight = 0;
                    Maintable.AddCell(cell12);

                    PdfPCell cell13 = new PdfPCell(new Phrase("Adv\n" + "Uni\n" + "Misd", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cell13.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cell13.Colspan = 1;
                    cell13.BorderWidthTop = 0.2f;
                    cell13.BorderWidthBottom = 0.2f;
                    cell13.BorderWidthLeft = 0;
                    cell13.BorderWidthRight = 0;
                    Maintable.AddCell(cell13);

                    PdfPCell cellFine = new PdfPCell(new Phrase("Fine\n" + "Misc", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellFine.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellFine.Colspan = 1;
                    cellFine.BorderWidthTop = 0.2f;
                    cellFine.BorderWidthBottom = 0.2f;
                    cellFine.BorderWidthLeft = 0;
                    cellFine.BorderWidthRight = 0;
                    Maintable.AddCell(cellFine);

                    PdfPCell cellDed = new PdfPCell(new Phrase("TotalDeduction", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellDed.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellDed.Colspan = 1;
                    cellDed.BorderWidthTop = 0.2f;
                    cellDed.BorderWidthBottom = 0.2f;
                    cellDed.BorderWidthLeft = 0;
                    cellDed.BorderWidthRight = 0;
                    Maintable.AddCell(cellDed);

                    PdfPCell cellnetpay = new PdfPCell(new Phrase("NetPay\nOthers", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellnetpay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellnetpay.Colspan = 1;
                    cellnetpay.BorderWidthTop = 0.2f;
                    cellnetpay.BorderWidthBottom = 0.2f;
                    cellnetpay.BorderWidthLeft = 0;
                    cellnetpay.BorderWidthRight = 0;
                    Maintable.AddCell(cellnetpay);

                    PdfPCell cellOtpay = new PdfPCell(new Phrase("OT PAY\n" + "ESI\n" + "OT NET", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellOtpay.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellOtpay.Colspan = 1;
                    cellOtpay.BorderWidthTop = 0.2f;
                    cellOtpay.BorderWidthBottom = 0.2f;
                    cellOtpay.BorderWidthLeft = 0;
                    cellOtpay.BorderWidthRight = 0;
                    Maintable.AddCell(cellOtpay);

                    PdfPCell cellGrand = new PdfPCell(new Phrase("GRAND TOTAL", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellGrand.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellGrand.Colspan = 1;
                    cellGrand.BorderWidthTop = 0.2f;
                    cellGrand.BorderWidthBottom = 0.2f;
                    cellGrand.BorderWidthLeft = 0;
                    cellGrand.BorderWidthRight = 0;
                    Maintable.AddCell(cellGrand);

                    PdfPCell cellSign = new PdfPCell(new Phrase("SIGN", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellSign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellSign.Colspan = 1;
                    cellSign.BorderWidthTop = 0.2f;
                    cellSign.BorderWidthBottom = 0.2f;
                    cellSign.BorderWidthLeft = 0;
                    cellSign.BorderWidthRight = 0;
                    Maintable.AddCell(cellSign);

                    int pagecount = 0;
                    string Sno = "";
                    string ClientID = "";
                    //string Clientname = "";
                    string Empid = "";
                    string Empname = "";
                    string Desgn = "";
                    float Noofduties = 0;
                    float Ots = 0;
                    float Tot = 0;
                    float Wo = 0;
                    float Leave = 0;
                    float PH = 0;
                    float CanteenAdv = 0;
                    float Uniform = 0;
                    float Penalty = 0;
                    float ATMDed = 0;
                    float TotalDeds = 0;
                    float Gross = 0;
                    float PF = 0;
                    float ESI = 0;
                    float ProfTax = 0;
                    float OWF = 0;
                    float AdminCharges = 0;
                    float Misd = 0;
                    float TotalDeductions = 0;
                    float Netpay = 0;
                    float OTAmt = 0;
                    float ESIONOT = 0;
                    float OTNet = 0;
                    float ActualAmount = 0;
                    string BankName = "";
                    string AcNo = "";
                    string RefNo = "";
                    string IFSCCode = "";
                    float Others = 0;
                    string Remarks = "";

                    float TotalNoofduties = 0;
                    float TotalOts = 0;
                    float TotalTot = 0;
                    float TotalWo = 0;
                    float TotalLeave = 0;
                    float TotalPH = 0;
                    float TotalCanteenAdv = 0;
                    float TotalUniform = 0;
                    float TotalPenalty = 0;
                    float TotalATMDed = 0;
                    float TotalTotalDeds = 0;
                    float TotalGross = 0;
                    float TotalPF = 0;
                    float TotalESI = 0;
                    float TotalProfTax = 0;
                    float TotalOWF = 0;
                    float TotalAdminCharges = 0;
                    float TotalMisd = 0;
                    float TotalTotalDeductions = 0;
                    float TotalNetpay = 0;
                    float TotalOTAmt = 0;
                    float TotalESIONOT = 0;
                    float TotalOTNet = 0;
                    float TotalActualAmount = 0;
                    float TotalOthers = 0;

                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        if (dtgroup.Rows[j]["Clientid"].ToString() == dt.Rows[i]["Clientid"].ToString())
                        {

                            Sno = dt.Rows[i]["Sno"].ToString();
                            ClientID = dt.Rows[i]["Clientid"].ToString();
                            // Clientname = dt.Rows[i]["Client Name"].ToString();
                            Empid = dt.Rows[i]["EmpId"].ToString();
                            Empname = dt.Rows[i]["Name"].ToString();
                            Noofduties = Convert.ToSingle(dt.Rows[i]["NoOfDuties"].ToString());
                            Ots = Convert.ToSingle(dt.Rows[i]["ots"].ToString());
                            CanteenAdv = Convert.ToSingle(dt.Rows[i]["CanteenAdv"].ToString());
                            Uniform = Convert.ToSingle(dt.Rows[i]["UniformDed"].ToString());
                            Penalty = Convert.ToSingle(dt.Rows[i]["penalty"].ToString());
                            ATMDed = Convert.ToSingle(dt.Rows[i]["ATMDed"].ToString());
                            Gross = Convert.ToSingle(dt.Rows[i]["Gross"].ToString());
                            PF = Convert.ToSingle(dt.Rows[i]["PF"].ToString());
                            ESI = Convert.ToSingle(dt.Rows[i]["ESI"].ToString());
                            ProfTax = Convert.ToSingle(dt.Rows[i]["ProfTax"].ToString());
                            OWF = Convert.ToSingle(dt.Rows[i]["OWF"].ToString());
                            AdminCharges = Convert.ToSingle(dt.Rows[i]["AdminCharges"].ToString());
                            Misd = Convert.ToSingle(dt.Rows[i]["Misd"].ToString());
                            TotalDeductions = Convert.ToSingle(dt.Rows[i]["TotalDeductions"].ToString());
                            Netpay = Convert.ToSingle(dt.Rows[i]["Netpay"].ToString());
                            OTAmt = Convert.ToSingle(dt.Rows[i]["OTAmt"].ToString());
                            ESIONOT = Convert.ToSingle(dt.Rows[i]["ESIONOT"].ToString());
                            OTNet = Convert.ToSingle(dt.Rows[i]["OTNet"].ToString());
                            Others = Convert.ToSingle(dt.Rows[i]["OthersAllw"].ToString());
                            ActualAmount = Convert.ToSingle(dt.Rows[i]["ActualAmount"].ToString());
                            BankName = dt.Rows[i]["Bank"].ToString();
                            AcNo = dt.Rows[i]["ACNo"].ToString();
                            RefNo = dt.Rows[i]["RefNo"].ToString();
                            IFSCCode = dt.Rows[i]["IFSCCode"].ToString();
                            Remarks = dt.Rows[i]["Remarks"].ToString();

                            PdfPCell cellsno = new PdfPCell(new Phrase(Sno, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellsno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno.Colspan = 1;
                            cellsno.BorderWidthTop = 0.2f;
                            cellsno.BorderWidthBottom = 0;
                            cellsno.BorderWidthLeft = 0;
                            cellsno.BorderWidthRight = 0;
                            Maintable.AddCell(cellsno);

                            PdfPCell cellempname = new PdfPCell(new Phrase(Empid + "\n" + Empname, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                            cellempname.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellempname.Colspan = 2;
                            cellempname.BorderWidthTop = 0.2f;
                            cellempname.BorderWidthBottom = 0;
                            cellempname.BorderWidthLeft = 0;
                            cellempname.BorderWidthRight = 0;
                            Maintable.AddCell(cellempname);

                            PdfPCell cellduty = new PdfPCell(new Phrase(Noofduties.ToString() + "\n" + Ots.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellduty.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellduty.Colspan = 1;
                            cellduty.BorderWidthTop = 0.2f;
                            cellduty.BorderWidthBottom = 0;
                            cellduty.BorderWidthLeft = 0;
                            cellduty.BorderWidthRight = 0;
                            Maintable.AddCell(cellduty);
                            TotalNoofduties += Noofduties;
                            TotalOts += Ots;

                            PdfPCell cellGross = new PdfPCell(new Phrase(Gross.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                            cellGross.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellGross.Colspan = 1;
                            cellGross.BorderWidthTop = 0.2f;
                            cellGross.BorderWidthBottom = 0;
                            cellGross.BorderWidthLeft = 0;
                            cellGross.BorderWidthRight = 0;
                            Maintable.AddCell(cellGross);
                            TotalGross += Gross;

                            PdfPCell cellPF = new PdfPCell(new Phrase(PF.ToString() + "\n" + ProfTax.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellPF.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellPF.Colspan = 1;
                            cellPF.BorderWidthTop = 0.2f;
                            cellPF.BorderWidthBottom = 0;
                            cellPF.BorderWidthLeft = 0;
                            cellPF.BorderWidthRight = 0;
                            Maintable.AddCell(cellPF);
                            TotalPF += PF;
                            TotalProfTax += ProfTax;

                            PdfPCell cellESI = new PdfPCell(new Phrase(ESI + "\n" + OWF + "\n" + AdminCharges, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellESI.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellESI.Colspan = 1;
                            cellESI.BorderWidthTop = 0.2f;
                            cellESI.BorderWidthBottom = 0;
                            cellESI.BorderWidthLeft = 0;
                            cellESI.BorderWidthRight = 0;
                            Maintable.AddCell(cellESI);
                            TotalESI += ESI;
                            TotalOWF += OWF;
                            TotalAdminCharges += AdminCharges;

                            PdfPCell celladv = new PdfPCell(new Phrase(CanteenAdv + "\n" + Uniform + "\n" + Misd, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            celladv.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            celladv.Colspan = 1;
                            celladv.BorderWidthTop = 0.2f;
                            celladv.BorderWidthBottom = 0;
                            celladv.BorderWidthLeft = 0;
                            celladv.BorderWidthRight = 0;
                            Maintable.AddCell(celladv);
                            TotalCanteenAdv += CanteenAdv;
                            TotalUniform += Uniform;
                            TotalMisd += Misd;

                            PdfPCell cellFine2 = new PdfPCell(new Phrase(Penalty + "\n" + ATMDed, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellFine2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellFine2.Colspan = 1;
                            cellFine2.BorderWidthTop = 0.2f;
                            cellFine2.BorderWidthBottom = 0;
                            cellFine2.BorderWidthLeft = 0;
                            cellFine2.BorderWidthRight = 0;
                            Maintable.AddCell(cellFine2);
                            TotalPenalty += Penalty;
                            TotalATMDed += ATMDed;

                            PdfPCell cellDed2 = new PdfPCell(new Phrase(TotalDeductions.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                            cellDed2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellDed2.Colspan = 1;
                            cellDed2.BorderWidthTop = 0.2f;
                            cellDed2.BorderWidthBottom = 0;
                            cellDed2.BorderWidthLeft = 0;
                            cellDed2.BorderWidthRight = 0;
                            Maintable.AddCell(cellDed2);
                            TotalTotalDeductions += TotalDeductions;

                            PdfPCell cellnetpay2 = new PdfPCell(new Phrase(Netpay.ToString() + "\n" + Others.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                            cellnetpay2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellnetpay2.Colspan = 1;
                            cellnetpay2.BorderWidthTop = 0.2f;
                            cellnetpay2.BorderWidthBottom = 0;
                            cellnetpay2.BorderWidthLeft = 0;
                            cellnetpay2.BorderWidthRight = 0;
                            Maintable.AddCell(cellnetpay2);
                            TotalNetpay += Netpay;
                            TotalOthers += Others;

                            PdfPCell cellOtpay2 = new PdfPCell(new Phrase(OTAmt + "\n" + ESIONOT + "\n" + OTNet, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellOtpay2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellOtpay2.Colspan = 1;
                            cellOtpay2.BorderWidthTop = 0.2f;
                            cellOtpay2.BorderWidthBottom = 0;
                            cellOtpay2.BorderWidthLeft = 0;
                            cellOtpay2.BorderWidthRight = 0;
                            Maintable.AddCell(cellOtpay2);
                            TotalOTAmt += OTAmt;
                            TotalESIONOT += ESIONOT;
                            TotalOTNet += OTNet;

                            PdfPCell cellGrand2 = new PdfPCell(new Phrase(ActualAmount.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                            cellGrand2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellGrand2.Colspan = 1;
                            cellGrand2.BorderWidthTop = 0.2f;
                            cellGrand2.BorderWidthBottom = 0;
                            cellGrand2.BorderWidthLeft = 0;
                            cellGrand2.BorderWidthRight = 0;
                            Maintable.AddCell(cellGrand2);
                            TotalActualAmount += ActualAmount;

                            PdfPCell cellSign2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellSign2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellSign2.Colspan = 1;
                            cellSign2.BorderWidthTop = 0.2f;
                            cellSign2.BorderWidthBottom = 0;
                            cellSign2.BorderWidthLeft = 0;
                            cellSign2.BorderWidthRight = 0;
                            Maintable.AddCell(cellSign2);

                            PdfPCell cellSno2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellSno2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellSno2.Colspan = 1;
                            cellSno2.BorderWidthTop = 0;
                            cellSno2.BorderWidthBottom = 0.2f;
                            cellSno2.BorderWidthLeft = 0;
                            cellSno2.BorderWidthRight = 0;
                            Maintable.AddCell(cellSno2);

                            PdfPCell cellBank = new PdfPCell(new Phrase("Bank : " + BankName, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellBank.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellBank.Colspan = 2;
                            cellBank.BorderWidthTop = 0;
                            cellBank.BorderWidthBottom = 0.2f;
                            cellBank.BorderWidthLeft = 0;
                            cellBank.BorderWidthRight = 0;
                            Maintable.AddCell(cellBank);

                            PdfPCell cellacno = new PdfPCell(new Phrase("AC No " + AcNo, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellacno.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellacno.Colspan = 4;
                            cellacno.BorderWidthTop = 0;
                            cellacno.BorderWidthBottom = 0.2f;
                            cellacno.BorderWidthLeft = 0;
                            cellacno.BorderWidthRight = 0;
                            Maintable.AddCell(cellacno);

                            PdfPCell cellrefno = new PdfPCell(new Phrase("Refno " + RefNo, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellrefno.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellrefno.Colspan = 3;
                            cellrefno.BorderWidthTop = 0;
                            cellrefno.BorderWidthBottom = 0.2f;
                            cellrefno.BorderWidthLeft = 0;
                            cellrefno.BorderWidthRight = 0;
                            Maintable.AddCell(cellrefno);

                            PdfPCell cellifsccode = new PdfPCell(new Phrase("IFSC " + IFSCCode, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellifsccode.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellifsccode.Colspan = 2;
                            cellifsccode.BorderWidthTop = 0;
                            cellifsccode.BorderWidthBottom = 0.2f;
                            cellifsccode.BorderWidthLeft = 0;
                            cellifsccode.BorderWidthRight = 0;
                            Maintable.AddCell(cellifsccode);

                            PdfPCell cellspace = new PdfPCell(new Phrase(Remarks, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.NORMAL, BaseColor.BLACK)));
                            cellspace.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                            cellspace.Colspan = 2;
                            cellspace.BorderWidthTop = 0;
                            cellspace.BorderWidthBottom = 0.2f;
                            cellspace.BorderWidthLeft = 0;
                            cellspace.BorderWidthRight = 0;
                            Maintable.AddCell(cellspace);
                        }

                    }

                    PdfPCell cellsnototal = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellsnototal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellsnototal.Colspan = 1;
                    cellsnototal.BorderWidthTop = 0.2f;
                    cellsnototal.BorderWidthBottom = 0.2f;
                    cellsnototal.BorderWidthLeft = 0;
                    cellsnototal.BorderWidthRight = 0;
                    Maintable.AddCell(cellsnototal);

                    PdfPCell cellempnametotal = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellempnametotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellempnametotal.Colspan = 2;
                    cellempnametotal.BorderWidthTop = 0.2f;
                    cellempnametotal.BorderWidthBottom = 0.2f;
                    cellempnametotal.BorderWidthLeft = 0;
                    cellempnametotal.BorderWidthRight = 0;
                    Maintable.AddCell(cellempnametotal);

                    PdfPCell celldutytotal = new PdfPCell(new Phrase(TotalNoofduties.ToString() + "\n" + TotalOts.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    celldutytotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    celldutytotal.Colspan = 1;
                    celldutytotal.BorderWidthTop = 0.2f;
                    celldutytotal.BorderWidthBottom = 0.2f;
                    celldutytotal.BorderWidthLeft = 0;
                    celldutytotal.BorderWidthRight = 0;
                    Maintable.AddCell(celldutytotal);

                    PdfPCell cellGrosstotal = new PdfPCell(new Phrase(TotalGross.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellGrosstotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellGrosstotal.Colspan = 1;
                    cellGrosstotal.BorderWidthTop = 0.2f;
                    cellGrosstotal.BorderWidthBottom = 0.2f;
                    cellGrosstotal.BorderWidthLeft = 0;
                    cellGrosstotal.BorderWidthRight = 0;
                    Maintable.AddCell(cellGrosstotal);

                    PdfPCell cellPFtotal = new PdfPCell(new Phrase(TotalPF.ToString() + "\n" + TotalProfTax.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellPFtotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellPFtotal.Colspan = 1;
                    cellPFtotal.BorderWidthTop = 0.2f;
                    cellPFtotal.BorderWidthBottom = 0.2f;
                    cellPFtotal.BorderWidthLeft = 0;
                    cellPFtotal.BorderWidthRight = 0;
                    Maintable.AddCell(cellPFtotal);

                    PdfPCell cellESItotal = new PdfPCell(new Phrase(TotalESI + "\n" + TotalOWF + "\n" + TotalAdminCharges, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellESItotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellESItotal.Colspan = 1;
                    cellESItotal.BorderWidthTop = 0.2f;
                    cellESItotal.BorderWidthBottom = 0.2f;
                    cellESItotal.BorderWidthLeft = 0;
                    cellESItotal.BorderWidthRight = 0;
                    Maintable.AddCell(cellESItotal);

                    PdfPCell celladvtotal = new PdfPCell(new Phrase(TotalCanteenAdv + "\n" + TotalUniform + "\n" + TotalMisd, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    celladvtotal.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    celladvtotal.Colspan = 1;
                    celladvtotal.BorderWidthTop = 0.2f;
                    celladvtotal.BorderWidthBottom = 0.2f;
                    celladvtotal.BorderWidthLeft = 0;
                    celladvtotal.BorderWidthRight = 0;
                    Maintable.AddCell(celladvtotal);

                    PdfPCell cellFine2total = new PdfPCell(new Phrase(TotalPenalty + "\n" + TotalATMDed, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellFine2total.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellFine2total.Colspan = 1;
                    cellFine2total.BorderWidthTop = 0.2f;
                    cellFine2total.BorderWidthBottom = 0.2f;
                    cellFine2total.BorderWidthLeft = 0;
                    cellFine2total.BorderWidthRight = 0;
                    Maintable.AddCell(cellFine2total);

                    PdfPCell cellDed2total = new PdfPCell(new Phrase(TotalTotalDeductions.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellDed2total.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellDed2total.Colspan = 1;
                    cellDed2total.BorderWidthTop = 0.2f;
                    cellDed2total.BorderWidthBottom = 0.2f;
                    cellDed2total.BorderWidthLeft = 0;
                    cellDed2total.BorderWidthRight = 0;
                    Maintable.AddCell(cellDed2total);


                    PdfPCell cellnetpay2total = new PdfPCell(new Phrase(TotalNetpay.ToString() + "\n" + TotalOthers.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellnetpay2total.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellnetpay2total.Colspan = 1;
                    cellnetpay2total.BorderWidthTop = 0.2f;
                    cellnetpay2total.BorderWidthBottom = 0.2f;
                    cellnetpay2total.BorderWidthLeft = 0;
                    cellnetpay2total.BorderWidthRight = 0;
                    Maintable.AddCell(cellnetpay2total);


                    PdfPCell cellOtpay2total = new PdfPCell(new Phrase(TotalOTAmt + "\n" + TotalESIONOT + "\n" + TotalOTNet, FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellOtpay2total.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellOtpay2total.Colspan = 1;
                    cellOtpay2total.BorderWidthTop = 0.2f;
                    cellOtpay2total.BorderWidthBottom = 0.2f;
                    cellOtpay2total.BorderWidthLeft = 0;
                    cellOtpay2total.BorderWidthRight = 0;
                    Maintable.AddCell(cellOtpay2total);

                    PdfPCell cellGrand2total = new PdfPCell(new Phrase(TotalActualAmount.ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellGrand2total.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellGrand2total.Colspan = 1;
                    cellGrand2total.BorderWidthTop = 0.2f;
                    cellGrand2total.BorderWidthBottom = 0.2f;
                    cellGrand2total.BorderWidthLeft = 0;
                    cellGrand2total.BorderWidthRight = 0;
                    Maintable.AddCell(cellGrand2total);


                    PdfPCell cellSign2total = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize - 2, iTextSharp.text.Font.BOLD, BaseColor.BLACK)));
                    cellSign2total.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellSign2total.Colspan = 1;
                    cellSign2total.BorderWidthTop = 0.2f;
                    cellSign2total.BorderWidthBottom = 0.2f;
                    cellSign2total.BorderWidthLeft = 0;
                    cellSign2total.BorderWidthRight = 0;
                    Maintable.AddCell(cellSign2total);

                    document.Add(Maintable);


                }


                string filename = "PaySheetSummary" + ".pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=\"" + filename + "\"");
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();
            }
        }

        protected void lbtn_ExportNew_Click(object sender, EventArgs e)
        {
            string filename = "PaySheetReport " + ".xls";
            gve.ExportGrid(filename, hidGridView);
        }

        protected void Chk_Month_CheckedChanged(object sender, EventArgs e)
        {
            if (Chk_Month.Checked == true)
            {
                Txt_Month.Visible = true;
                ddlmonth.SelectedIndex = 0;
                ddlmonth.Visible = false;
            }
            else
            {
                Txt_Month.Visible = false;
                ddlmonth.SelectedIndex = 0;
                ddlmonth.Visible = true;
            }
        }
    }
}