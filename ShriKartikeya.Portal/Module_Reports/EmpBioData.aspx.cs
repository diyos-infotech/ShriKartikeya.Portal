using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using KLTS.Data;
using System.IO;
using System.Globalization;
using iTextSharp.text;
using iTextSharp.text.pdf;
using System.Web.Script.Services;
using System.Data.SqlClient;
using System.Web.Script.Serialization;
using System.Web.Services;
using System.Collections.Generic;
using System.Text;
using Ionic.Zip;
using ShriKartikeya.Portal.DAL;

namespace ShriKartikeya.Portal
{
    public partial class EmpBioData : System.Web.UI.Page
    {
        DataTable dt;
        string EmpIDPrefix = "";
        string fontsyle = "verdana";
        string CmpIDPrefix = "";
        string BranchID = "";
        AppConfiguration Config = new AppConfiguration();


        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {

                GetWebConfigdata();
                if (!IsPostBack)
                {
                    if (Session["UserId"] != null && Session["AccessLevel"] != null)
                    {
                        string PID = Session["AccessLevel"].ToString();
                        // DisplayLinks(PID);
                        // PreviligeUsers(Convert.ToInt32(Session["AccessLevel"]));
                    }
                    else
                    {
                        Response.Redirect("login.aspx");
                    }
                }
            }
            catch (Exception ex)
            {
                GoToLoginPage();
            }


        }

        public void GoToLoginPage()
        {
            ScriptManager.RegisterStartupScript(this, GetType(), "show alert", "alert('Your Session Expired.Please Login');", true);
            Response.Redirect("~/login.aspx");
        }

        protected void GetWebConfigdata()
        {
            EmpIDPrefix = Session["EmpIDPrefix"].ToString();
            CmpIDPrefix = Session["CmpIDPrefix"].ToString();
            BranchID = Session["BranchID"].ToString();
        }

        #region for Declaration Form

        public void BioDataIndividual()
        {
            int Fontsize = 10;
            string fontsyle = "calibri";

            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string EmprCode = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string EmpDtofBirths = "";
            string Dateofjoining = "";
            string educationqualification = "";
            string previouspost = "";
            string nationality = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";
            string Emppresentaddress = "";
            string Emppermanentaddress = "";
            string EmpESIDispName = "";
            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";



            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string prphone = "";
            string pephone = "";
            string SpouseName = "";
            string FatherName = "";
            #endregion

            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;

            string CompanyName = "";
            string Address = "";

            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();
            }

            string queryre = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + txtEmpid.Text+ "' and PFNominee='Y'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(queryre).Result;
            string residence = ""; string place = "";
            string queryres = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + txtEmpid.Text + "' and PFNominee='Y'  ";
            DataTable dtesione = Config.ExecuteReaderWithQueryAsync(queryres).Result;
            string RNames = "";
            string RTypes = "";
            if (dtesione.Rows.Count > 0)
            {
                RNames = dtesione.Rows[0]["RName"].ToString();
                RTypes = dtesione.Rows[0]["RType"].ToString();

            }
            string BranchDetails = "select * from branchdetails";
            DataTable dtBranchDetails = Config.ExecuteReaderWithQueryAsync(BranchDetails).Result;
            string Branchname = "";

            if (dtBranchDetails.Rows.Count > 0)
            {
                Branchname = dtBranchDetails.Rows[0]["Branchname"].ToString();

            }





            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesis = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesis.Rows.Count > 0)
            {
                Esino = dtesis.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string Gender = "";

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                EmprCode = dtEmpdetails.Rows[0]["EmprCode"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                EmpDtofBirths = dtEmpdetails.Rows[0]["EmpDtofBirths"].ToString();
                Dateofjoining = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();




                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();
                Emppresentaddress = dtEmpdetails.Rows[0]["Emppresentaddress"].ToString();
                Emppermanentaddress = dtEmpdetails.Rows[0]["Emppermanentaddress"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }

                EmpESIDispName = dtEmpdetails.Rows[0]["EmpESIDispName"].ToString();

                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();


                #endregion

                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                string imagepath2 = Server.MapPath("assets/Images/ESIC-LOGO102.png");
                string imagepath3 = Server.MapPath("assets/seal.jpg");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");
                if (File.Exists(imagepath2))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    // gif2.SpacingBefore = 50;
                    gif2.ScalePercent(80f);
                    gif2.SetAbsolutePosition(65f, 925f);
                    document.Add(new Paragraph(" "));
                    document.Add(gif2);
                }


                #region Headings of the Pdf



                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                table.SetWidths(width);

                PdfPCell celllogoHeadEmp = new PdfPCell(new Phrase("Employee: " + Empid + "    ESI Declaration", FontFactory.GetFont(fontsyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                celllogoHeadEmp.HorizontalAlignment = 0;
                celllogoHeadEmp.Colspan = 6;
                celllogoHeadEmp.Border = 0;
                celllogoHeadEmp.PaddingTop = -30f;
                table.AddCell(celllogoHeadEmp);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                celllogoHead.HorizontalAlignment = 2;
                celllogoHead.Colspan = 3;
                celllogoHead.Border = 0;
                table.AddCell(celllogoHead);

                PdfPCell cellHead = new PdfPCell(new Phrase("DECLARATION FORM", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                cellHead.PaddingLeft = -250;
                table.AddCell(cellHead);

                PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead2.HorizontalAlignment = 1;
                cellHead2.Colspan = 6;
                cellHead2.Border = 0;
                table.AddCell(cellHead2);

                PdfPCell cellHead4 = new PdfPCell(new Phrase("To be filled in the employee after reading instructions overleaf. Two postcard size photographs are to be attached this form.This form is free of cost", FontFactory.GetFont(fontsyle, 10, Font.NORMAL, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 0;
                cellHead4.Colspan = 6;
                cellHead4.Border = 0;
                cellHead4.SetLeading(0f, 1.2f);
                table.AddCell(cellHead4);
                table.AddCell(cellspace);

                PdfPCell cellHead5 = new PdfPCell(new Phrase("A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead5.HorizontalAlignment = 0;
                cellHead5.Colspan = 6;
                cellHead5.Border = 0;
                table.AddCell(cellHead5);
                table.AddCell(cellspace);

                document.Add(table);

                #endregion


                #region Basic Information of the Employee

                PdfPTable table2 = new PdfPTable(6);
                table2.TotalWidth = 500f;
                table2.LockedWidth = true;
                float[] width1 = new float[] { 5f, 1.5f, 2f, 2f, 1.5f, 2f };
                table2.SetWidths(width1);

                PdfPCell cellInsuranceno2 = new PdfPCell(new Phrase("1  Insurance No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellInsuranceno2.HorizontalAlignment = 0;
                cellInsuranceno2.Colspan = 0;
                cellInsuranceno2.Border = 0;
                cellInsuranceno2.PaddingTop = 5;
                table2.AddCell(cellInsuranceno2);

                PdfPCell cellInsuranceno4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellInsuranceno4.HorizontalAlignment = 0;
                cellInsuranceno4.Colspan = 0;
                cellInsuranceno4.Border = 0;
                cellInsuranceno4.PaddingTop = 5;
                table2.AddCell(cellInsuranceno4);

                PdfPCell cellInsuranceno3 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellInsuranceno3.HorizontalAlignment = 0;
                cellInsuranceno3.Colspan = 3;
                cellInsuranceno3.Border = 0;
                cellInsuranceno3.PaddingTop = 5;
                table2.AddCell(cellInsuranceno3);


                PdfPCell cellspace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellspace4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace4.Colspan = 1;
                cellspace4.Border = 0;
                table2.AddCell(cellspace4);

                PdfPCell cellname2 = new PdfPCell(new Phrase("2  Name", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellname2.HorizontalAlignment = 0;
                cellname2.Colspan = 0;
                cellname2.Border = 0;
                cellname2.PaddingTop = 5;
                table2.AddCell(cellname2);

                PdfPCell cellname4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellname4.HorizontalAlignment = 0;
                cellname4.Colspan = 0;
                cellname4.Border = 0;
                cellname4.PaddingTop = 5;
                table2.AddCell(cellname4);

                PdfPCell cellname3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellname3.HorizontalAlignment = 0;
                cellname3.Colspan = 3;
                cellname3.Border = 0;
                cellname3.PaddingTop = 5;
                table2.AddCell(cellname3);

                table2.AddCell(cellspace4);

                PdfPCell cellfather = new PdfPCell(new Phrase("3  Father / Husband's Name  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfather.HorizontalAlignment = 0;
                cellfather.Colspan = 0;
                cellfather.Border = 0;
                cellfather.PaddingTop = 5;
                table2.AddCell(cellfather);


                PdfPCell cellfather1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfather1.HorizontalAlignment = 0;
                cellfather1.Colspan = 0;
                cellfather1.Border = 0;
                cellfather1.PaddingTop = 5;
                table2.AddCell(cellfather1);


                PdfPCell cellfather3 = new PdfPCell(new Phrase(fathername, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfather3.HorizontalAlignment = 0;
                cellfather3.Colspan = 3;
                cellfather3.Border = 0;
                cellfather3.PaddingTop = 5;
                table2.AddCell(cellfather3);

                table2.AddCell(cellspace4);

                PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Sex ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth.HorizontalAlignment = 0;
                cellDateofbirth.Colspan = 0;
                cellDateofbirth.Border = 0;
                cellDateofbirth.PaddingTop = 5;
                table2.AddCell(cellDateofbirth);

                PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth2.HorizontalAlignment = 0;
                cellDateofbirth2.Colspan = 0;
                cellDateofbirth2.Border = 0;
                cellDateofbirth2.PaddingTop = 5;
                table2.AddCell(cellDateofbirth2);

                string value = "";
                if (EmpDtofBirths.Length > 0)
                {
                    value = EmpDtofBirths + " / " + Gender;

                }
                else
                {
                    value = Gender;
                }

                PdfPCell cellDateofbirth1 = new PdfPCell(new Phrase(value, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateofbirth1.HorizontalAlignment = 0;
                cellDateofbirth1.Colspan = 3;
                cellDateofbirth1.Border = 0;
                cellDateofbirth1.PaddingTop = 5;
                table2.AddCell(cellDateofbirth1);

                table2.AddCell(cellspace4);

                PdfPCell Maritalstatus = new PdfPCell(new Phrase("5  Marital status", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Maritalstatus.HorizontalAlignment = 0;
                Maritalstatus.Colspan = 0;
                Maritalstatus.Border = 0;
                Maritalstatus.PaddingTop = 5;
                table2.AddCell(Maritalstatus);

                PdfPCell Maritalstatus2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Maritalstatus2.HorizontalAlignment = 0;
                Maritalstatus2.Colspan = 0;
                Maritalstatus2.Border = 0;
                Maritalstatus2.PaddingTop = 5;
                table2.AddCell(Maritalstatus2);


                PdfPCell Maritalstatus1 = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Maritalstatus1.HorizontalAlignment = 0;
                Maritalstatus1.Colspan = 3;
                Maritalstatus1.Border = 0;
                Maritalstatus1.PaddingTop = 5;
                Maritalstatus1.PaddingRight = -10;
                table2.AddCell(Maritalstatus1);

                table2.AddCell(cellspace4);

                document.Add(table2);

                #region Employee Addresses



                PdfPTable tbldata2 = new PdfPTable(3);
                tbldata2.TotalWidth = 500f;
                tbldata2.LockedWidth = true;
                float[] widthdata2 = new float[] { 5f, 1.5f, 5f };

                PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                data2space.Colspan = 3;
                data2space.Border = 0;
                //tbldata2.AddCell(data2space);
                //tbldata2.AddCell(data2space);
                //tbldata2.AddCell(data2space);

                PdfPCell cellPresentaddr = new PdfPCell(new Phrase("6  Permanent Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddr.HorizontalAlignment = 0;
                cellPresentaddr.Colspan = 0;
                cellPresentaddr.Border = 0;
                cellPresentaddr.PaddingTop = 5;
                tbldata2.AddCell(cellPresentaddr);

                PdfPCell cellPresentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddrcol.HorizontalAlignment = 0;
                cellPresentaddrcol.Colspan = 0;
                cellPresentaddrcol.Border = 0;
                cellPresentaddrcol.PaddingTop = 5;
                cellPresentaddrcol.PaddingLeft = 14;
                tbldata2.AddCell(cellPresentaddrcol);




                #region permanent address String array

                string[] PeAdress = new string[8];

                if (pelmark.Length > 0)
                {
                    PeAdress[0] = pelmark + ", ";
                }
                else
                {
                    PeAdress[0] = "";
                }
                if (peTown.Length > 0)
                {
                    PeAdress[1] = peTown + ", ";
                }
                else
                {
                    PeAdress[1] = "";
                }

                if (pePostOffice.Length > 0)
                {
                    PeAdress[2] = pePostOffice + ", ";
                }
                else
                {
                    PeAdress[2] = "";
                }
                if (peTaluka.Length > 0)
                {
                    PeAdress[3] = peTaluka + ", ";
                }
                else
                {
                    PeAdress[3] = " ";
                }
                if (pePoliceStation.Length > 0)
                {
                    PeAdress[4] = pePoliceStation + ", ";
                }
                else
                {
                    PeAdress[4] = " ";
                }
                if (pecity.Length > 0)
                {
                    PeAdress[5] = pecity + ", ";
                }
                else
                {
                    PeAdress[5] = " ";
                }

                if (peState.Length > 0)
                {
                    PeAdress[6] = peState + " ";
                }
                else
                {
                    PeAdress[6] = ".";
                }


                if (pePincode.Length > 0)
                {
                    PeAdress[7] = " -" + pePincode + ".";
                }
                else
                {
                    PeAdress[7] = "";
                }

                string Address2 = string.Empty;

                for (int i = 0; i < 8; i++)
                {
                    Address2 += PeAdress[i];
                }


                #endregion

                PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddr1.HorizontalAlignment = 0;
                cellPresentaddr1.Colspan = 0;
                cellPresentaddr1.Border = 0;
                cellPresentaddr1.PaddingTop = 5;
                cellPresentaddr1.PaddingLeft = -98;
                tbldata2.AddCell(cellPresentaddr1);


                tbldata2.AddCell(data2space);



                PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("7  Current Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddr.HorizontalAlignment = 0;
                cellPerminentaddr.Colspan = 0;
                cellPerminentaddr.Border = 0;
                cellPerminentaddr.PaddingTop = 5;
                //cellPerminentaddr.PaddingLeft = -3;
                tbldata2.AddCell(cellPerminentaddr);

                PdfPCell cellPerminentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddrcol.HorizontalAlignment = 0;
                cellPerminentaddrcol.Colspan = 0;
                cellPerminentaddrcol.Border = 0;
                cellPerminentaddrcol.PaddingTop = 5;
                cellPerminentaddrcol.PaddingLeft = 14;
                //cellPerminentaddr.PaddingLeft = -3;
                tbldata2.AddCell(cellPerminentaddrcol);

                #region Present address String array

                string[] PrAdress = new string[8];
                if (prLmark.Length > 0)
                {
                    PrAdress[0] = prLmark + ", ";
                }
                else
                {
                    PrAdress[0] = "";
                }
                if (prTown.Length > 0)
                {
                    PrAdress[1] = prTown + ", ";
                }
                else
                {
                    PrAdress[1] = "";
                }

                if (prPostOffice.Length > 0)
                {
                    PrAdress[2] = prPostOffice + ", ";
                }
                else
                {
                    PrAdress[2] = "";
                }
                if (prTaluka.Length > 0)
                {
                    PrAdress[3] = prTaluka + ", ";
                }
                else
                {
                    PrAdress[3] = "";
                }
                if (prPoliceStation.Length > 0)
                {
                    PrAdress[4] = prPoliceStation + ", ";
                }
                else
                {
                    PrAdress[4] = "";
                }
                if (prcity.Length > 0)
                {
                    PrAdress[5] = prcity + ", ";
                }
                else
                {
                    PrAdress[5] = "";
                }

                if (prState.Length > 0)
                {
                    PrAdress[6] = prState + " ";
                }
                else
                {
                    PrAdress[6] = ".";
                }


                if (prPincode.Length > 0)
                {
                    PrAdress[7] = " -" + prPincode + ".";
                }
                else
                {
                    PrAdress[7] = "";
                }

                string Address1 = string.Empty;

                for (int i = 0; i < 8; i++)
                {
                    Address1 += PrAdress[i];
                }


                #endregion

                PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Emppresentaddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddr1.HorizontalAlignment = 0;
                cellPerminentaddr1.Colspan = 0;
                cellPerminentaddr1.Border = 0;
                cellPerminentaddr1.PaddingTop = 5;
                cellPerminentaddr1.PaddingLeft = -98;
                tbldata2.AddCell(cellPerminentaddr1);

                PdfPCell cellBranchOffice = new PdfPCell(new Phrase("8  Branch Office / ESI Dispensary", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranchOffice.HorizontalAlignment = 0;
                cellBranchOffice.Colspan = 0;
                cellBranchOffice.Border = 0;
                cellBranchOffice.PaddingTop = 5;
                tbldata2.AddCell(cellBranchOffice);

                PdfPCell cellBranchOfficecol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranchOfficecol.HorizontalAlignment = 0;
                cellBranchOfficecol.Colspan = 0;
                cellBranchOfficecol.Border = 0;
                cellBranchOfficecol.PaddingTop = 5;
                cellBranchOfficecol.PaddingLeft = 14;
                tbldata2.AddCell(cellBranchOfficecol);


                PdfPCell cellBranchOffice1 = new PdfPCell(new Phrase(EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranchOffice1.HorizontalAlignment = 0;
                cellBranchOffice1.Colspan = 0;
                cellBranchOffice1.Border = 0;
                cellBranchOffice1.PaddingTop = 5;
                cellBranchOffice1.PaddingLeft = -98;
                tbldata2.AddCell(cellBranchOffice1);

                tbldata2.AddCell(data2space);

                document.Add(tbldata2);

                #endregion

                PdfPTable table3 = new PdfPTable(6);
                table3.TotalWidth = 500f;
                table3.LockedWidth = true;
                float[] width2 = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                table3.SetWidths(width2);



                PdfPCell cellphyst = new PdfPCell(new Phrase("B) EMPLOYER'S PARTICULARS   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellphyst.HorizontalAlignment = 0;
                cellphyst.Colspan = 6;
                cellphyst.Border = 0;
                cellphyst.PaddingTop = 3;
                cellphyst.PaddingLeft = -3;
                table3.AddCell(cellphyst);




                document.Add(table3);


                PdfPTable data1 = new PdfPTable(3);
                data1.TotalWidth = 500f;
                data1.LockedWidth = true;
                float[] widthdate = new float[] { 5f, 1.5f, 5f };
                data1.SetWidths(widthdate);



                PdfPCell celldata15 = new PdfPCell(new Phrase("9  Employer's Code No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata15.HorizontalAlignment = 0;
                celldata15.Colspan = 0;
                celldata15.Border = 0;
                celldata15.PaddingTop = 5;
                data1.AddCell(celldata15);

                PdfPCell celldatacol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatacol.HorizontalAlignment = 0;
                celldatacol.Colspan = 0;
                celldatacol.Border = 0;
                celldatacol.PaddingTop = 5;
                celldatacol.PaddingLeft = -35;
                data1.AddCell(celldatacol);


                PdfPCell celldataid = new PdfPCell(new Phrase(EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldataid.HorizontalAlignment = 0;
                celldataid.Colspan = 0;
                celldataid.Border = 0;
                celldataid.PaddingTop = 5;
                celldataid.PaddingLeft = -45;
                data1.AddCell(celldataid);


                PdfPCell cellAppointment = new PdfPCell(new Phrase("10  Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAppointment.HorizontalAlignment = 0;
                cellAppointment.Colspan = 0;
                cellAppointment.Border = 0;
                cellAppointment.PaddingTop = 5;
                cellAppointment.PaddingLeft = -3;
                data1.AddCell(cellAppointment);

                PdfPCell cellAppointment2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAppointment2.HorizontalAlignment = 0;
                cellAppointment2.Colspan = 0;
                cellAppointment2.Border = 0;
                cellAppointment2.PaddingTop = 5;
                cellAppointment2.PaddingLeft = -35;
                data1.AddCell(cellAppointment2);


                PdfPCell cellAppointment1 = new PdfPCell(new Phrase(Dateofjoining, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAppointment1.HorizontalAlignment = 0;
                cellAppointment1.Colspan = 0;
                cellAppointment1.Border = 0;
                cellAppointment1.PaddingTop = 5;
                cellAppointment1.PaddingLeft = -45;
                data1.AddCell(cellAppointment1);


                PdfPCell cellNameadd = new PdfPCell(new Phrase("11  Name & Address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNameadd.HorizontalAlignment = 0;
                cellNameadd.Colspan = 0;
                cellNameadd.Border = 0;
                cellNameadd.PaddingTop = 5;
                cellNameadd.PaddingLeft = -3;
                data1.AddCell(cellNameadd);

                PdfPCell cellNameadd2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNameadd2.HorizontalAlignment = 0;
                cellNameadd2.Colspan = 0;
                cellNameadd2.Border = 0;
                cellNameadd2.PaddingTop = 5;
                cellNameadd2.PaddingLeft = -35;
                data1.AddCell(cellNameadd2);


                PdfPCell cellNameadd1 = new PdfPCell(new Phrase(CompanyName + "\n" + Address, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNameadd1.HorizontalAlignment = 0;
                cellNameadd1.Colspan = 0;
                cellNameadd1.Border = 0;
                cellNameadd1.PaddingTop = 5;
                cellNameadd1.PaddingLeft = -45;
                data1.AddCell(cellNameadd1);




                document.Add(data1);



                #endregion


                #region for prevemp

                PdfPTable data4 = new PdfPTable(2);
                data4.TotalWidth = 500f;
                data4.LockedWidth = true;
                float[] widthdate4 = new float[] { 2f, 1f };
                data4.SetWidths(widthdate4);

                PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty.HorizontalAlignment = 0;
                cellempty.Colspan = 2;
                cellempty.Border = 0;
                cellempty.PaddingTop = 5;


                PdfPCell celldataref = new PdfPCell(new Phrase("12  In case of any previous employment please fill up the details as under", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldataref.HorizontalAlignment = 0;
                celldataref.Colspan = 6;
                celldataref.Border = 0;
                celldataref.PaddingTop = 5;
                celldataref.PaddingLeft = -3;
                data4.AddCell(celldataref);

                document.Add(data4);

                #endregion for prevemp


                #region Employee Reference Details



                PdfPTable tblReferences = new PdfPTable(4);
                tblReferences.TotalWidth = 500f;
                tblReferences.LockedWidth = true;
                float[] widthRef = new float[] { 2f, 2f, 2f, 2f };
                tblReferences.SetWidths(widthRef);

                PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                Refspace.Colspan = 4;
                Refspace.Border = 0;




                PdfPCell celldata26 = new PdfPCell(new Phrase("a) Previous ins No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata26.HorizontalAlignment = 0;
                celldata26.Colspan = 4;
                celldata26.Border = 0;
                celldata26.PaddingTop = 5;
                celldata26.PaddingLeft = 20;
                tblReferences.AddCell(celldata26);

                PdfPCell celldata28 = new PdfPCell(new Phrase("b) Empir's Code No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata28.HorizontalAlignment = 0;
                celldata28.Colspan = 4;
                celldata28.Border = 0;
                celldata28.PaddingTop = 5;
                celldata28.PaddingLeft = 20;
                tblReferences.AddCell(celldata28);


                PdfPCell cellnameemp = new PdfPCell(new Phrase("c) Name & address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnameemp.HorizontalAlignment = 0;
                cellnameemp.Colspan = 4;
                cellnameemp.Border = 0;
                cellnameemp.PaddingTop = 5;
                cellnameemp.PaddingLeft = 20;
                tblReferences.AddCell(cellnameemp);

                tblReferences.AddCell(Refspace);

                PdfPCell celldetaisnominee = new PdfPCell(new Phrase("C)Details of Nominees U/S 71 ESI Act 1948/Rule56(2) of ESI(Central) Rules, 1950 for payment of cash benefit in the event of death)", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                celldetaisnominee.HorizontalAlignment = 0;
                celldetaisnominee.Colspan = 6;
                celldetaisnominee.Border = 0;
                celldetaisnominee.PaddingTop = 5;
                celldetaisnominee.PaddingLeft = -3;
                tblReferences.AddCell(celldetaisnominee);

                PdfPCell cellnamedata = new PdfPCell(new Phrase("Name :  " + RNames, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnamedata.HorizontalAlignment = 0;
                cellnamedata.Colspan = 4;
                cellnamedata.Border = 0;
                cellnamedata.PaddingTop = 5;
                cellnamedata.PaddingLeft = 20;
                tblReferences.AddCell(cellnamedata);





                string relationTypess = "";
                if (relationTypess != "--Select--")
                {
                    PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :  " + RTypes, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRelationship.HorizontalAlignment = 0;
                    cellRelationship.Colspan = 4;
                    cellRelationship.Border = 0;
                    cellRelationship.PaddingTop = 5;
                    cellRelationship.PaddingLeft = 20;
                    tblReferences.AddCell(cellRelationship);
                }
                else
                {
                    PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRelationship.HorizontalAlignment = 0;
                    cellRelationship.Colspan = 4;
                    cellRelationship.Border = 0;
                    cellRelationship.PaddingTop = 5;
                    cellRelationship.PaddingLeft = 20;
                    tblReferences.AddCell(cellRelationship);
                }

                PdfPCell cellAddress = new PdfPCell(new Phrase("Address :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAddress.HorizontalAlignment = 0;
                cellAddress.Colspan = 4;
                cellAddress.Border = 0;
                cellAddress.PaddingLeft = 20;
                cellAddress.PaddingTop = 5;
                tblReferences.AddCell(cellAddress);

                tblReferences.AddCell(Refspace);


                #endregion

                document.Add(tblReferences);

                #region for family
                PdfPTable tblReference = new PdfPTable(6);
                tblReference.TotalWidth = 500f;
                tblReference.LockedWidth = true;
                float[] widths1 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                tblReference.SetWidths(widths1);

                PdfPCell Refcspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                Refcspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Refcspace.Colspan = 6;
                Refcspace.Border = 0;
                //tblReference.AddCell(Refcspace);



                PdfPCell cellPARTICULARS = new PdfPCell(new Phrase("D) FAMILY PARTICULARS OF INSURED PERSON ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellPARTICULARS.HorizontalAlignment = 0;
                cellPARTICULARS.Colspan = 6;
                cellPARTICULARS.Border = 0;
                cellPARTICULARS.PaddingLeft = 0;
                cellPARTICULARS.PaddingTop = 5;
                tblReference.AddCell(cellPARTICULARS);



                PdfPCell cnamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cnamec.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cnamec.BorderWidthLeft = 0;
                cnamec.BorderWidthRight = 0;
                cnamec.BorderWidthTop = 0.5f;
                cnamec.BorderWidthBottom = 0.8f;
                tblReference.AddCell(cnamec);

                PdfPCell caddressc = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                caddressc.HorizontalAlignment = 1;//0=Left, 1=Centre, 2=Right
                caddressc.BorderWidthLeft = 0;
                caddressc.BorderWidthRight = 0;
                caddressc.BorderWidthTop = 0.5f;
                caddressc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(caddressc);

                PdfPCell crelationshipc = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                crelationshipc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                crelationshipc.BorderWidthLeft = 0;
                crelationshipc.BorderWidthRight = 0;
                crelationshipc.BorderWidthTop = 0.5f;
                crelationshipc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(crelationshipc);

                PdfPCell cdobc = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cdobc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cdobc.BorderWidthLeft = 0;
                cdobc.BorderWidthRight = 0;
                cdobc.BorderWidthTop = 0.8f;
                cdobc.BorderWidthBottom = 0.6f;
                tblReference.AddCell(cdobc);

                PdfPCell camtc = new PdfPCell(new Phrase("Whether residing With", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                camtc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                camtc.BorderWidthLeft = 0;
                camtc.BorderWidthRight = 0;
                camtc.BorderWidthTop = 0.5f;
                camtc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(camtc);

                PdfPCell cminorc = new PdfPCell(new Phrase("if No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cminorc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cminorc.BorderWidthLeft = 0;
                cminorc.BorderWidthRight = 0;
                cminorc.BorderWidthTop = 0.5f;
                cminorc.BorderWidthBottom = 0.8f;
                tblReference.AddCell(cminorc);

                int s = 1;
                if (dtesi.Rows.Count > 0)
                {
                    for (int k = 0; k < dtesi.Rows.Count; k++)
                    {
                        string Relname = dtesi.Rows[k]["Rname"].ToString();
                        string RPlace = dtesi.Rows[k]["RPlace"].ToString();
                        string Relage = dtesi.Rows[k]["age"].ToString();
                        string RelDOFBirth = dtesi.Rows[k]["DOfBirth"].ToString();
                        if (Relage == "0")
                        {
                            if (RelDOFBirth == "01/01/1900")
                            {
                                Relage = "";
                            }
                            else
                            {
                                Relage = RelDOFBirth;
                            }
                        }
                        else if (Relage.Length > 0 && Relage != "0")
                        {
                            Relage = dtesi.Rows[k]["age"].ToString();
                        }
                        else
                        {
                            Relage = "";
                        }


                        PdfPCell cellsno = new PdfPCell(new Phrase((s).ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellsno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellsno.BorderWidthLeft = 0;
                        cellsno.BorderWidthRight = 0;
                        cellsno.BorderWidthTop = 0;
                        cellsno.BorderWidthBottom = 0;
                        tblReference.AddCell(cellsno);

                        PdfPCell cellsno4 = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellsno4.BorderWidthLeft = 0;
                        cellsno4.BorderWidthRight = 0;
                        cellsno4.BorderWidthTop = 0;
                        cellsno4.BorderWidthBottom = 0;
                        tblReference.AddCell(cellsno4);



                        PdfPCell cellsno2 = new PdfPCell(new Phrase(Relage, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellsno2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellsno2.BorderWidthLeft = 0;
                        cellsno2.BorderWidthRight = 0;
                        cellsno2.BorderWidthTop = 0;
                        cellsno2.BorderWidthBottom = 0;
                        tblReference.AddCell(cellsno2);

                        string relationTypes = "";
                        string RelrelationType = dtesi.Rows[k]["RType"].ToString();
                        if (relationTypes != "--Select--")
                        {
                            PdfPCell cellRType = new PdfPCell(new Phrase(RelrelationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellRType.BorderWidthLeft = 0;
                            cellRType.BorderWidthRight = 0;
                            cellRType.BorderWidthTop = 0;
                            cellRType.BorderWidthBottom = 0;
                            tblReference.AddCell(cellRType);
                        }
                        else
                        {
                            PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellRType.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellRType.BorderWidthLeft = 0;
                            cellRType.BorderWidthRight = 0;
                            cellRType.BorderWidthTop = 0;
                            cellRType.BorderWidthBottom = 0;
                            tblReference.AddCell(cellRType);
                        }



                        string RResidences = "";
                        string RResidenced = dtesi.Rows[k]["RResidence"].ToString();
                        if (RResidences != "--Select--")
                        {
                            PdfPCell cellRResidences = new PdfPCell(new Phrase(RResidenced, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellRResidences.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellRResidences.BorderWidthLeft = 0;
                            cellRResidences.BorderWidthRight = 0;
                            cellRResidences.BorderWidthTop = 0;
                            cellRResidences.BorderWidthBottom = 0;
                            tblReference.AddCell(cellRResidences);
                        }
                        else
                        {
                            PdfPCell cellRResidences1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellRResidences1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellRResidences1.BorderWidthLeft = 0;
                            cellRResidences1.BorderWidthRight = 0;
                            cellRResidences1.BorderWidthTop = 0;
                            cellRResidences1.BorderWidthBottom = 0;
                            tblReference.AddCell(cellRResidences1);
                        }
                        if (RResidenced == "Yes")
                        {
                            //RPlace
                            PdfPCell cellplace = new PdfPCell(new Phrase(Emppresentaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellplace.BorderWidthLeft = 0;
                            cellplace.BorderWidthRight = 0;
                            cellplace.BorderWidthTop = 0;
                            cellplace.BorderWidthBottom = 0;
                            tblReference.AddCell(cellplace);
                        }
                        else if (RResidenced == "No")
                        {
                            //RPlace
                            PdfPCell cellplace = new PdfPCell(new Phrase(Emppermanentaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellplace.BorderWidthLeft = 0;
                            cellplace.BorderWidthRight = 0;
                            cellplace.BorderWidthTop = 0;
                            cellplace.BorderWidthBottom = 0;
                            tblReference.AddCell(cellplace);
                        }

                        s++;
                    }
                }
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReferences.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);
                tblReference.AddCell(Refcspace);





                PdfPCell cpt1c = new PdfPCell(new Phrase("ESI Corporation Temporary Identity Card", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cpt1c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cpt1c.Colspan = 6;
                cpt1c.Border = 0;
                tblReference.AddCell(cpt1c);

                PdfPCell cpt2c = new PdfPCell(new Phrase("Name ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cpt2c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cpt2c.Colspan = 2;
                cpt2c.Border = 0;
                tblReference.AddCell(cpt2c);

                PdfPCell cpt2c1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cpt2c1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cpt2c1.Colspan = 0;
                cpt2c1.Border = 0;
                // tblReference.AddCell(cpt2c1);

                PdfPCell cpt2c2 = new PdfPCell(new Phrase(": " + name, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cpt2c2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cpt2c2.Colspan = 4;
                cpt2c2.Border = 0;
                tblReference.AddCell(cpt2c2);


                PdfPCell Ins = new PdfPCell(new Phrase("Ins No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Ins.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Ins.Colspan = 2;
                Ins.Border = 0;
                tblReference.AddCell(Ins);

                PdfPCell Ins1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Ins1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Ins1.Colspan = 0;
                Ins1.Border = 0;
                //  tblReference.AddCell(Ins1);

                PdfPCell Ins2 = new PdfPCell(new Phrase(": " + Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Ins2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Ins2.Colspan = 4;
                Ins2.Border = 0;
                tblReference.AddCell(Ins2);

                PdfPCell Appointment = new PdfPCell(new Phrase("Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Appointment.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Appointment.Colspan = 2;
                Appointment.Border = 0;
                tblReference.AddCell(Appointment);


                PdfPCell Appointment1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Appointment1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Appointment1.Colspan = 0;
                Appointment1.Border = 0;
                //tblReference.AddCell(Appointment1);

                PdfPCell Appointment2 = new PdfPCell(new Phrase(": " + Dateofjoining, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Appointment2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Appointment2.Colspan = 4;
                Appointment2.Border = 0;
                tblReference.AddCell(Appointment2);

                PdfPCell Branch = new PdfPCell(new Phrase("Branch Office", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Branch.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Branch.Colspan = 2;
                Branch.Border = 0;
                tblReference.AddCell(Branch);

                PdfPCell Branch1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Branch1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Branch1.Colspan = 4;
                Branch1.Border = 0;
                tblReference.AddCell(Branch1);

                PdfPCell Dispensary = new PdfPCell(new Phrase("ESI Dispensary ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Dispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Dispensary.Colspan = 2;
                Dispensary.Border = 0;
                tblReference.AddCell(Dispensary);


                PdfPCell Dispensary1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Dispensary1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Dispensary1.Colspan = 0;
                Dispensary1.Border = 0;
                // tblReference.AddCell(Dispensary1);

                PdfPCell Dispensary2 = new PdfPCell(new Phrase(": " + EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Dispensary2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Dispensary2.Colspan = 4;
                Dispensary2.Border = 0;
                tblReference.AddCell(Dispensary2);

                PdfPCell code = new PdfPCell(new Phrase("Employer's code No", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                code.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                code.Colspan = 2;
                code.Border = 0;
                tblReference.AddCell(code);

                PdfPCell code1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                code1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                code1.Colspan = 0;
                code1.Border = 0;
                //tblReference.AddCell(code1);

                PdfPCell code2 = new PdfPCell(new Phrase(": " + EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                code2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                code2.Colspan = 4;
                code2.Border = 0;
                tblReference.AddCell(code2);



                PdfPCell Validity = new PdfPCell(new Phrase("Validity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Validity.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Validity.Colspan = 2;
                Validity.Border = 0;
                tblReference.AddCell(Validity);


                PdfPCell Validity1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Validity1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Validity1.Colspan = 4;
                Validity1.Border = 0;
                tblReference.AddCell(Validity1);

                PdfPCell date1 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                date1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                date1.Colspan = 2;
                date1.Border = 0;
                tblReference.AddCell(date1);


                PdfPCell date11 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                date11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                date11.Colspan = 4;
                date11.Border = 0;
                tblReference.AddCell(date11);

                tblReference.AddCell(Refcspace);

                if (File.Exists(imagepathArrow))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    // gif2.SpacingBefore = 50;
                    gif2.ScalePercent(80f);
                    gif2.SetAbsolutePosition(65f, 925f);
                    PdfPCell sealImg = new PdfPCell();
                    sealImg.AddElement(gif2);
                    sealImg.Border = 0;
                    sealImg.HorizontalAlignment = 0;
                    sealImg.Colspan = 6;
                    sealImg.PaddingLeft = -370f;
                    sealImg.PaddingBottom = -10f;
                    //sealImg.PaddingRight = -400f;
                    sealImg.PaddingTop = 0;
                    tblReference.AddCell(sealImg);
                    //    document.Add(new Paragraph(" "));
                    //    document.Add(gif2);
                }

                PdfPCell cellsign = new PdfPCell(new Phrase("    Signature of T.I Of I.P   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsign.HorizontalAlignment = 0;
                cellsign.Colspan = 3;
                cellsign.Border = 0;
                cellsign.PaddingTop = 5;
                cellsign.PaddingLeft = 50;
                tblReference.AddCell(cellsign);


                PdfPCell cellrecrutment = new PdfPCell(new Phrase("Signature of B.M. With Seal  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellrecrutment.HorizontalAlignment = 0;
                cellrecrutment.Colspan = 3;
                cellrecrutment.Border = 0;
                cellrecrutment.PaddingTop = 5;
                cellrecrutment.PaddingLeft = 50;
                tblReference.AddCell(cellrecrutment);


                document.Add(tblReference);

                #endregion for family

                document.NewPage();


                #region Employee Refer Details



                PdfPTable tblRefer = new PdfPTable(2);
                tblRefer.TotalWidth = 500f;
                tblRefer.LockedWidth = true;
                float[] widthRefer = new float[] { 5f, 5f };
                tblRefer.SetWidths(widthRefer);

                PdfPCell Referspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                Referspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                Referspace.Colspan = 4;
                Referspace.Border = 0;

                PdfPCell celldeclare = new PdfPCell(new Phrase("I declare that my dependent parents income from all sources is 1) Father's income Rs................... (2) Mother's income Rs.................... Total Rs................(Rupees.............................................) and he/she/they,is /are Wholly dependent on me and also resides with me. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldeclare.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                celldeclare.Colspan = 2;
                celldeclare.Border = 0;
                celldeclare.PaddingTop = 5;
                celldeclare.SetLeading(0f, 1.2f);
                tblRefer.AddCell(celldeclare);

                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);


                PdfPCell cellhereby = new PdfPCell(new Phrase("I hereby declare that the particulars given by me are correct to the best of knowledge and belief.I undertake to intimate the corporation any changes in the membership of my family within 15 days of such change.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhereby.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellhereby.Colspan = 2;
                cellhereby.Border = 0;
                cellhereby.PaddingLeft = 0;
                cellhereby.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellhereby);


                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);


                //

                PdfPCell cellSRFDETECTIVE = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontsyle, 12, Font.BOLD, BaseColor.BLACK)));
                cellSRFDETECTIVE.HorizontalAlignment = 0;
                cellSRFDETECTIVE.Colspan = 2;
                cellSRFDETECTIVE.Border = 0;
                cellSRFDETECTIVE.PaddingTop = 5;
                cellSRFDETECTIVE.PaddingLeft = 0;
                tblRefer.AddCell(cellSRFDETECTIVE);


                tblRefer.AddCell(Referspace);


                PdfPCell cellAuthorised = new PdfPCell(new Phrase("Authorised signatory  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAuthorised.HorizontalAlignment = 0;
                cellAuthorised.Colspan = 2;
                cellAuthorised.Border = 0;
                cellAuthorised.PaddingTop = 5;
                cellAuthorised.PaddingLeft = 0;

                tblRefer.AddCell(cellAuthorised);



                PdfPCell cellCounter = new PdfPCell(new Phrase("Counter signature by the employer  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellCounter.HorizontalAlignment = 0;
                cellCounter.Colspan = 2;
                cellCounter.Border = 0;
                cellCounter.PaddingTop = 5;
                cellCounter.PaddingLeft = 0;
                tblRefer.AddCell(cellCounter);

                // tblRefer.AddCell(Referspace);


                if (File.Exists(imagepath3))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath3);

                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    // gif2.SpacingBefore = 50;
                    gif2.ScalePercent(80f);
                    gif2.SetAbsolutePosition(65f, 925f);
                    PdfPCell sealImg = new PdfPCell();
                    sealImg.AddElement(gif2);
                    sealImg.Border = 0;
                    sealImg.HorizontalAlignment = 0;
                    sealImg.Colspan = 2;
                    sealImg.PaddingLeft = -400f;
                    sealImg.PaddingTop = 0;
                    tblRefer.AddCell(sealImg);
                    //    document.Add(new Paragraph(" "));
                    //    document.Add(gif2);
                }


                PdfPCell cellCounter1 = new PdfPCell(new Phrase("Signature with seal ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellCounter1.HorizontalAlignment = 0;
                cellCounter1.Colspan = 1;
                cellCounter1.Border = 0;
                cellCounter1.PaddingTop = 5;
                cellCounter1.PaddingLeft = 0;
                tblRefer.AddCell(cellCounter1);

                if (File.Exists(imagepathArrow))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    // gif2.SpacingBefore = 50;
                    gif2.ScalePercent(80f);
                    gif2.SetAbsolutePosition(65f, 925f);
                    PdfPCell sealImg = new PdfPCell();
                    sealImg.AddElement(gif2);
                    sealImg.Border = 0;
                    sealImg.HorizontalAlignment = 2;
                    sealImg.Colspan = 1;
                    sealImg.PaddingLeft = -60f;
                    sealImg.PaddingBottom = -10f;
                    //sealImg.PaddingRight = -400f;
                    sealImg.PaddingTop = 0;
                    tblRefer.AddCell(sealImg);
                    //    document.Add(new Paragraph(" "));
                    //    document.Add(gif2);
                }

                PdfPCell cellseal = new PdfPCell(new Phrase("Dated:...................", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellseal.HorizontalAlignment = 0;
                cellseal.Colspan = 0;
                cellseal.BorderWidthLeft = 0;
                cellseal.BorderWidthRight = 0;
                cellseal.BorderWidthTop = 0;
                cellseal.PaddingBottom = 5;
                cellseal.BorderWidthBottom = 1.5f;
                //cellseal.PaddingTop = 30f;

                //cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                //cellseal.BorderWidthBottom = 1f;
                tblRefer.AddCell(cellseal);





                PdfPCell cellSignature = new PdfPCell(new Phrase("Signature / T.I & IP", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellSignature.Colspan = 0;
                cellSignature.BorderWidthLeft = 0;
                cellSignature.BorderWidthRight = 0;
                cellSignature.BorderWidthTop = 0;
                cellSignature.BorderWidthBottom = 1.5f;
                cellSignature.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                // cellSignature.BorderWidthBottom = 1f;
                cellSignature.PaddingLeft = 10;
                cellseal.PaddingBottom = 5;
                //cellseal.PaddingTop = 30f;
                tblRefer.AddCell(cellSignature);



                tblRefer.AddCell(Referspace);

                PdfPCell cellINSTRUCTIONS = new PdfPCell(new Phrase("INSTRUCTIONS  ", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                cellINSTRUCTIONS.HorizontalAlignment = 0;
                cellINSTRUCTIONS.Colspan = 2;
                cellINSTRUCTIONS.Border = 0;
                cellINSTRUCTIONS.PaddingTop = 5;
                cellINSTRUCTIONS.PaddingLeft = 0;
                tblRefer.AddCell(cellINSTRUCTIONS);


                PdfPCell cellSubmission = new PdfPCell(new Phrase(" 1. Submission of Form -1,is governed by regulations 11 & 12 of ESI (General) Regulations, 1950  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSubmission.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellSubmission.Colspan = 2;
                cellSubmission.Border = 0;
                cellSubmission.PaddingTop = 5;
                cellSubmission.PaddingLeft = 0;
                cellSubmission.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellSubmission);



                PdfPCell cellFamily = new PdfPCell(new Phrase(" 2. Family means all or any of the following relatives of an insured person namely:-(i) a spouse (ii) a minor legitimate or adopted child dependant upon the I.P.(iii) a child who is wholly dependent on the earnings of the I.P.and who is(a) receiving education, till he or she attains the age 21 yrs(b) an unmarried daughter ;(iv) a child who is infirm by reason of any physical or mental abononormally pr imjury and is wholly dependent on the earnings of the I.P.so lo9ng as the infirmity continues;(v) dependent parents(please seen section 2 clause 11 of the 7 ESI Act 1948 for details)   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFamily.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellFamily.Colspan = 2;
                cellFamily.Border = 0;
                cellFamily.PaddingTop = 5;
                cellFamily.PaddingLeft = 0;
                cellFamily.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellFamily);




                PdfPCell cellcards = new PdfPCell(new Phrase(" 3. Identity cards is Non-transferable.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcards.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellcards.Colspan = 2;
                cellcards.Border = 0;
                cellcards.PaddingTop = 5;
                cellcards.PaddingLeft = 0;
                cellcards.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellcards);




                PdfPCell cellidentity = new PdfPCell(new Phrase(" 4. Loss of identity card be reported to employer /Branch manger immediately   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellidentity.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellidentity.Colspan = 2;
                cellidentity.Border = 0;
                cellidentity.PaddingTop = 5;
                cellidentity.PaddingLeft = 0;
                cellidentity.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellidentity);



                PdfPCell cellsubmission1 = new PdfPCell(new Phrase(" 5. Submission of faise informationsattracts penal action under section 84 of ESI .Act,1948   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsubmission1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellsubmission1.Colspan = 2;
                cellsubmission1.Border = 0;
                cellsubmission1.PaddingTop = 5;
                cellsubmission1.PaddingLeft = 0;
                cellsubmission1.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellsubmission1);





                PdfPCell cellduly = new PdfPCell(new Phrase(" 6. This form duly filled in must reach. the concerned Branch office within 10 days of appointment of an Employee .Dealy attracts penal action under section 85 of the ACT,against employer.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellduly.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellduly.Colspan = 2;
                cellduly.Border = 0;
                cellduly.PaddingTop = 5;
                cellduly.PaddingLeft = 0;
                cellduly.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellduly);




                PdfPCell cellperson = new PdfPCell(new Phrase(" 7. As an insured person you and your dependent family members are entitled to full medical care.the other benetifits in cash  include (1) sickness benfit(2) temporary disablement benfit (3)permanent disablement benfit (4) dependents benefit and (5) maternity benfit(in case of women employees)subject to fulfilment of contribution conditions.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellperson.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellperson.Colspan = 2;
                cellperson.Border = 0;
                cellperson.PaddingTop = 5;
                cellperson.PaddingLeft = 0;
                cellperson.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellperson);



                PdfPCell cellmore = new PdfPCell(new Phrase(" 8. For more details please visit website of ESIC at www.esic.org.in or contact regional office or branch office.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellmore.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellmore.Colspan = 2;
                cellmore.Border = 0;
                cellmore.PaddingTop = 5;
                cellmore.PaddingLeft = 0;
                cellmore.SetLeading(0f, 1.2f);
                tblRefer.AddCell(cellmore);


                tblRefer.AddCell(Referspace);




                PdfPCell cellBRACH = new PdfPCell(new Phrase(" FOR BRANCH OFFICE USE ONLY   ", FontFactory.GetFont(fontsyle, 13, Font.BOLD, BaseColor.BLACK)));
                cellBRACH.HorizontalAlignment = 1;
                cellBRACH.Colspan = 2;
                cellBRACH.Border = 0;
                cellBRACH.PaddingTop = 5;
                tblRefer.AddCell(cellBRACH);

                tblRefer.AddCell(Referspace);

                PdfPCell cellDateOfAllotment = new PdfPCell(new Phrase(" 1. Date Of Allotment Of Ins No:   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDateOfAllotment.HorizontalAlignment = 0;
                cellDateOfAllotment.Colspan = 2;
                cellDateOfAllotment.Border = 0;
                cellDateOfAllotment.PaddingTop = 5;
                cellDateOfAllotment.PaddingLeft = 0;
                tblRefer.AddCell(cellDateOfAllotment);


                PdfPCell cellIssue = new PdfPCell(new Phrase(" 2. Date Of Issue Of TIC:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellIssue.HorizontalAlignment = 0;
                cellIssue.Colspan = 2;
                cellIssue.Border = 0;
                cellIssue.PaddingTop = 5;
                cellIssue.PaddingLeft = 0;
                tblRefer.AddCell(cellIssue);


                PdfPCell cellDisp = new PdfPCell(new Phrase(" 3. Name / No. Of Disp:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellDisp.HorizontalAlignment = 0;
                cellDisp.Colspan = 2;
                cellDisp.Border = 0;
                cellDisp.PaddingTop = 5;
                cellDisp.PaddingLeft = 0;
                tblRefer.AddCell(cellDisp);

                PdfPCell cellMedical = new PdfPCell(new Phrase(" 4. Whether reciprocal Medical arrangement involved ? If yes, please indicate:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                cellMedical.HorizontalAlignment = 0;
                cellMedical.Colspan = 2;
                cellMedical.Border = 0;
                cellMedical.PaddingTop = 5;
                cellMedical.PaddingLeft = 0;
                tblRefer.AddCell(cellMedical);

                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);

                PdfPCell cellBranch = new PdfPCell(new Phrase(" Signature of Branch Manger   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBranch.HorizontalAlignment = 0;
                cellBranch.Colspan = 2;
                cellBranch.Border = 0;
                cellBranch.PaddingTop = 5;
                cellBranch.PaddingLeft = 300;
                tblRefer.AddCell(cellBranch);

                tblRefer.AddCell(Referspace);
                tblRefer.AddCell(Referspace);
                document.Add(tblRefer);



                PdfPTable tblReferen = new PdfPTable(6);
                tblReferen.TotalWidth = 500f;
                tblReferen.LockedWidth = true;
                float[] widths3 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                tblReferen.SetWidths(widths3);

                PdfPCell Referencspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                Referencspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                Referencspace.Colspan = 6;
                Referencspace.Border = 0;
                tblReferen.AddCell(Referencspace);




                PdfPCell canamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                canamec.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                canamec.BorderWidthLeft = 0;
                canamec.BorderWidthRight = 0;
                canamec.BorderWidthTop = 0;
                canamec.BorderWidthBottom = 0;
                tblReferen.AddCell(canamec);

                PdfPCell caddressca = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                caddressca.HorizontalAlignment = 0;//0=Left, 1=Centre, 2=Right
                caddressca.BorderWidthLeft = 0;
                caddressca.BorderWidthRight = 0;
                caddressca.BorderWidthTop = 0;
                caddressca.BorderWidthBottom = 0;
                tblReferen.AddCell(caddressca);

                PdfPCell crelationshipca = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                crelationshipca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                crelationshipca.BorderWidthLeft = 0;
                crelationshipca.BorderWidthRight = 0;
                crelationshipca.BorderWidthTop = 0;
                crelationshipca.BorderWidthBottom = 0;
                tblReferen.AddCell(crelationshipca);

                PdfPCell cdobca = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                cdobca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cdobca.BorderWidthLeft = 0;
                cdobca.BorderWidthRight = 0;
                cdobca.BorderWidthTop = 0;
                cdobca.BorderWidthBottom = 0;

                tblReferen.AddCell(cdobca);

                PdfPCell camtca = new PdfPCell(new Phrase("Whether residing With him/her", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                camtca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                camtca.BorderWidthLeft = 0;
                camtca.BorderWidthRight = 0;
                camtca.BorderWidthTop = 0;
                camtca.BorderWidthBottom = 0;
                tblReferen.AddCell(camtca);

                PdfPCell cminorca = new PdfPCell(new Phrase("If No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                cminorca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cminorca.BorderWidthLeft = 0;
                cminorca.BorderWidthRight = 0;
                cminorca.BorderWidthTop = 0;
                cminorca.BorderWidthBottom = 0f;
                tblReferen.AddCell(cminorca);



                // document.Add(tblReferen);

                #endregion Employee Refer Details



                string filename = txtName.Text + " - " + txtEmpid.Text + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        public void BiodataBulk()
        {
            int Fontsize = 10;
            string fontsyle = "calibri";

            if (txtfromempid.Text == "" || txttoempid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee Series');", true);
                return;
            }

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string Dateofjoining = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string EmpDtofBirths = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";



            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string prphone = "";
            string pephone = "";
            string Emppresentaddress = "";
            string Emppermanentaddress = "";
            string EmpESIDispName = "";
            string FatherName = "";
            string SpouseName = "";

            #endregion

            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;

            string CompanyName = "";
            string Address = "";

            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();


            }

            string BranchDetails = "select * from branchdetails";
            DataTable dtBranchDetails = Config.ExecuteReaderWithQueryAsync(BranchDetails).Result;
            string Branchname = "";

            if (dtBranchDetails.Rows.Count > 0)
            {
                Branchname = dtBranchDetails.Rows[0]["Branchname"].ToString();

            }





            #region  Begin  New Code

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string fromempid = "";
            string toempid = "";

            DataTable dtEmpdetails = null;
            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;
            }

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataBulk";
            HTEmpBiodata.Add("@FromEmpid", fromempid);
            HTEmpBiodata.Add("@ToEmpid", toempid);
            #endregion End Assign values To the Variables



            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string Gender = "";

            if (dtEmpdetails.Rows.Count > 0)
            {

                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();

                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                string imagepath2 = Server.MapPath("assets/Images/ESIC-LOGO102.png");
                string imagepath3 = Server.MapPath("assets/seal.jpg");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");

                for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                {
                    document.NewPage();
                    #region Assining data to Variables
                    Idno = dtEmpdetails.Rows[m]["EmpId"].ToString();
                    string EmprCode = "";
                    EmprCode = dtEmpdetails.Rows[m]["EmprCode"].ToString();
                    name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                    Gender = dtEmpdetails.Rows[m]["EmpSex"].ToString();
                    maritalstatus = dtEmpdetails.Rows[m]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    contactno = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    dateofbirth = dtEmpdetails.Rows[m]["EmpDtofBirth"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    Dateofjoining = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    EmpDtofBirths = dtEmpdetails.Rows[m]["EmpDtofBirths"].ToString();
                    educationqualification = dtEmpdetails.Rows[m]["EmpQualification"].ToString();
                    height = dtEmpdetails.Rows[m]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[m]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[m]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[m]["EmpLanguagesKnown"].ToString();
                    string lgknwn = "";

                    if (Languagesknown.Length > 0)
                    {
                        string qry = "select language from languages where languageid in (" + Languagesknown + ")";
                        DataTable dtqry = Config.ExecuteReaderWithQueryAsync(qry).Result;


                        string lang = "";

                        var list = new List<string>();

                        if (dtqry.Rows.Count > 0)
                        {
                            for (int u = 0; u < dtqry.Rows.Count; u++)
                            {
                                lang = dtqry.Rows[u]["language"].ToString();

                                list.Add(lang);
                            }

                        }

                        lgknwn = string.Join(",", list.ToArray());
                    }

                    identificationmark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[m]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[m]["EmpBloodGroup"].ToString();

                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[m]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[m]["EmpRefAddr2"].ToString();

                    date = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();



                    EmergencyPhone = dtEmpdetails.Rows[m]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[m]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[m]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[m]["EmpComplexion"].ToString();




                    prLmark = dtEmpdetails.Rows[m]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[m]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[m]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[m]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[m]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[m]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[m]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[m]["prPincode"].ToString();

                    pelmark = dtEmpdetails.Rows[m]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[m]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[m]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[m]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[m]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[m]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[m]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[m]["pePincode"].ToString();
                    // pephone = dtEmpdetails.Rows[m]["pephone"].ToString();

                    clientname = dtEmpdetails.Rows[m]["clientname"].ToString();

                    string Image1 = "";

                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[m]["Image"].ToString();
                    }
                    else
                    {

                    }

                    Emppresentaddress = dtEmpdetails.Rows[m]["Emppresentaddress"].ToString();
                    Emppermanentaddress = dtEmpdetails.Rows[m]["Emppermanentaddress"].ToString();
                    EmpESIDispName = dtEmpdetails.Rows[m]["EmpESIDispName"].ToString();
                    FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                    SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();

                    #endregion



                    string queryre = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + Idno + "' and PFNominee='Y'  ";
                    DataTable dtesi = Config.ExecuteReaderWithQueryAsync(queryre).Result;

                    string residence = ""; string place = "";
                    string queryres = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + Idno + "' and PFNominee='Y'  ";
                    DataTable dtesione = Config.ExecuteReaderWithQueryAsync(queryres).Result;
                    string RNames = "";
                    string RTypes = "";
                    if (dtesione.Rows.Count > 0)
                    {
                        RNames = dtesione.Rows[0]["RName"].ToString();
                        RTypes = dtesione.Rows[0]["RType"].ToString();

                    }

                    string query = " select RName,age from EmpRelationships where EmpId='" + Idno + "' and RType='Father' ";
                    DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

                    if (dtfather.Rows.Count > 0)
                    {
                        Fname = dtfather.Rows[0]["RName"].ToString();
                        Fage = dtfather.Rows[0]["age"].ToString();
                        if (Fage == "0")
                        {
                            Fage = "";
                        }
                        else
                        {
                            Fage = dtfather.Rows[0]["age"].ToString();
                        }
                    }
                    string query1 = " select RName,age from EmpRelationships where EmpId='" + Idno + "' and RType='Mother' ";
                    DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

                    if (dtmother.Rows.Count > 0)
                    {
                        Mname = dtmother.Rows[0]["RName"].ToString();
                        Mage = dtmother.Rows[0]["age"].ToString();
                        if (Mage == "0")
                        {
                            Mage = "";
                        }
                        else
                        {
                            Mage = dtmother.Rows[0]["age"].ToString();
                        }
                    }

                    string query2 = " select EmpESINo from EmpESICodes where Empid='" + Idno + "'  ";
                    DataTable dtesis = Config.ExecuteReaderWithQueryAsync(query2).Result;
                    if (dtesis.Rows.Count > 0)
                    {
                        Esino = dtesis.Rows[0]["EmpESINo"].ToString();

                    }


                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }


                    #region Headings of the Pdf



                    PdfPTable table = new PdfPTable(6);
                    table.TotalWidth = 500f;
                    table.LockedWidth = true;
                    float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                    table.SetWidths(width);

                    PdfPCell celllogoHeadEmp = new PdfPCell(new Phrase("Employee: " + Idno + "    ESI Declaration", FontFactory.GetFont(fontsyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celllogoHeadEmp.HorizontalAlignment = 0;
                    celllogoHeadEmp.Colspan = 6;
                    celllogoHeadEmp.Border = 0;
                    celllogoHeadEmp.PaddingTop = -30f;
                    table.AddCell(celllogoHeadEmp);

                    PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 6;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celllogoHead.HorizontalAlignment = 2;
                    celllogoHead.Colspan = 3;
                    celllogoHead.Border = 0;
                    table.AddCell(celllogoHead);

                    PdfPCell cellHead = new PdfPCell(new Phrase("DECLARATION FORM", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 1;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.PaddingLeft = -250;
                    table.AddCell(cellHead);

                    PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead2.HorizontalAlignment = 1;
                    cellHead2.Colspan = 6;
                    cellHead2.Border = 0;
                    table.AddCell(cellHead2);

                    PdfPCell cellHead4 = new PdfPCell(new Phrase("To be filled in the employee after reading instructions overleaf. Two postcard size photographs are to be attached this form.This form is free of cost", FontFactory.GetFont(fontsyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    cellHead4.HorizontalAlignment = 0;
                    cellHead4.Colspan = 6;
                    cellHead4.Border = 0;
                    cellHead4.SetLeading(0f, 1.2f);
                    table.AddCell(cellHead4);
                    table.AddCell(cellspace);

                    PdfPCell cellHead5 = new PdfPCell(new Phrase("A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead5.HorizontalAlignment = 0;
                    cellHead5.Colspan = 6;
                    cellHead5.Border = 0;
                    table.AddCell(cellHead5);
                    table.AddCell(cellspace);

                    document.Add(table);

                    #endregion


                    #region Basic Information of the Employee

                    PdfPTable table2 = new PdfPTable(6);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    float[] width1 = new float[] { 5f, 1.5f, 2f, 2f, 1.5f, 2f };
                    table2.SetWidths(width1);

                    PdfPCell cellInsuranceno2 = new PdfPCell(new Phrase("1  Insurance No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno2.HorizontalAlignment = 0;
                    cellInsuranceno2.Colspan = 0;
                    cellInsuranceno2.Border = 0;
                    cellInsuranceno2.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno2);

                    PdfPCell cellInsuranceno4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno4.HorizontalAlignment = 0;
                    cellInsuranceno4.Colspan = 0;
                    cellInsuranceno4.Border = 0;
                    cellInsuranceno4.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno4);

                    PdfPCell cellInsuranceno3 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno3.HorizontalAlignment = 0;
                    cellInsuranceno3.Colspan = 3;
                    cellInsuranceno3.Border = 0;
                    cellInsuranceno3.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno3);


                    PdfPCell cellspace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellspace4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace4.Colspan = 1;
                    cellspace4.Border = 0;
                    table2.AddCell(cellspace4);

                    PdfPCell cellname2 = new PdfPCell(new Phrase("2  Name", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname2.HorizontalAlignment = 0;
                    cellname2.Colspan = 0;
                    cellname2.Border = 0;
                    cellname2.PaddingTop = 5;
                    table2.AddCell(cellname2);

                    PdfPCell cellname4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname4.HorizontalAlignment = 0;
                    cellname4.Colspan = 0;
                    cellname4.Border = 0;
                    cellname4.PaddingTop = 5;
                    table2.AddCell(cellname4);

                    PdfPCell cellname3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellname3.HorizontalAlignment = 0;
                    cellname3.Colspan = 3;
                    cellname3.Border = 0;
                    cellname3.PaddingTop = 5;
                    table2.AddCell(cellname3);

                    table2.AddCell(cellspace4);

                    PdfPCell cellfather = new PdfPCell(new Phrase("3  Father / Husband's Name  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather.HorizontalAlignment = 0;
                    cellfather.Colspan = 0;
                    cellfather.Border = 0;
                    cellfather.PaddingTop = 5;
                    table2.AddCell(cellfather);


                    PdfPCell cellfather1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather1.HorizontalAlignment = 0;
                    cellfather1.Colspan = 0;
                    cellfather1.Border = 0;
                    cellfather1.PaddingTop = 5;
                    table2.AddCell(cellfather1);


                    PdfPCell cellfather3 = new PdfPCell(new Phrase(fathername, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather3.HorizontalAlignment = 0;
                    cellfather3.Colspan = 3;
                    cellfather3.Border = 0;
                    cellfather3.PaddingTop = 5;
                    table2.AddCell(cellfather3);

                    table2.AddCell(cellspace4);

                    PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Sex ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth.HorizontalAlignment = 0;
                    cellDateofbirth.Colspan = 0;
                    cellDateofbirth.Border = 0;
                    cellDateofbirth.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth);

                    PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth2.HorizontalAlignment = 0;
                    cellDateofbirth2.Colspan = 0;
                    cellDateofbirth2.Border = 0;
                    cellDateofbirth2.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth2);

                    string value = "";
                    if (EmpDtofBirths.Length > 0)
                    {
                        value = EmpDtofBirths + " / " + Gender;

                    }
                    else
                    {
                        value = Gender;
                    }

                    PdfPCell cellDateofbirth1 = new PdfPCell(new Phrase(value, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth1.HorizontalAlignment = 0;
                    cellDateofbirth1.Colspan = 3;
                    cellDateofbirth1.Border = 0;
                    cellDateofbirth1.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth1);

                    table2.AddCell(cellspace4);

                    PdfPCell Maritalstatus = new PdfPCell(new Phrase("5  Marital status", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus.HorizontalAlignment = 0;
                    Maritalstatus.Colspan = 0;
                    Maritalstatus.Border = 0;
                    Maritalstatus.PaddingTop = 5;
                    table2.AddCell(Maritalstatus);

                    PdfPCell Maritalstatus2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus2.HorizontalAlignment = 0;
                    Maritalstatus2.Colspan = 0;
                    Maritalstatus2.Border = 0;
                    Maritalstatus2.PaddingTop = 5;
                    table2.AddCell(Maritalstatus2);


                    PdfPCell Maritalstatus1 = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus1.HorizontalAlignment = 0;
                    Maritalstatus1.Colspan = 3;
                    Maritalstatus1.Border = 0;
                    Maritalstatus1.PaddingTop = 5;
                    Maritalstatus1.PaddingRight = -10;
                    table2.AddCell(Maritalstatus1);

                    table2.AddCell(cellspace4);

                    document.Add(table2);

                    #region Employee Addresses



                    PdfPTable tbldata2 = new PdfPTable(3);
                    tbldata2.TotalWidth = 500f;
                    tbldata2.LockedWidth = true;
                    float[] widthdata2 = new float[] { 5f, 1.5f, 5f };

                    PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    data2space.Colspan = 3;
                    data2space.Border = 0;
                    //tbldata2.AddCell(data2space);
                    //tbldata2.AddCell(data2space);
                    //tbldata2.AddCell(data2space);

                    PdfPCell cellPresentaddr = new PdfPCell(new Phrase("6  Permanent Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 0;
                    cellPresentaddr.Border = 0;
                    cellPresentaddr.PaddingTop = 5;
                    tbldata2.AddCell(cellPresentaddr);

                    PdfPCell cellPresentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddrcol.HorizontalAlignment = 0;
                    cellPresentaddrcol.Colspan = 0;
                    cellPresentaddrcol.Border = 0;
                    cellPresentaddrcol.PaddingTop = 5;
                    cellPresentaddrcol.PaddingLeft = 14;
                    tbldata2.AddCell(cellPresentaddrcol);




                    #region permanent address String array

                    string[] PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = " -" + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    string Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion

                    PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddr1.HorizontalAlignment = 0;
                    cellPresentaddr1.Colspan = 0;
                    cellPresentaddr1.Border = 0;
                    cellPresentaddr1.PaddingTop = 5;
                    cellPresentaddr1.PaddingLeft = -98;
                    tbldata2.AddCell(cellPresentaddr1);


                    tbldata2.AddCell(data2space);



                    PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("7  Current Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 0;
                    cellPerminentaddr.Border = 0;
                    cellPerminentaddr.PaddingTop = 5;
                    //cellPerminentaddr.PaddingLeft = -3;
                    tbldata2.AddCell(cellPerminentaddr);

                    PdfPCell cellPerminentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddrcol.HorizontalAlignment = 0;
                    cellPerminentaddrcol.Colspan = 0;
                    cellPerminentaddrcol.Border = 0;
                    cellPerminentaddrcol.PaddingTop = 5;
                    cellPerminentaddrcol.PaddingLeft = 14;
                    //cellPerminentaddr.PaddingLeft = -3;
                    tbldata2.AddCell(cellPerminentaddrcol);

                    #region Present address String array

                    string[] PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = " -" + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    string Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion

                    PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Emppresentaddress, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddr1.HorizontalAlignment = 0;
                    cellPerminentaddr1.Colspan = 0;
                    cellPerminentaddr1.Border = 0;
                    cellPerminentaddr1.PaddingTop = 5;
                    cellPerminentaddr1.PaddingLeft = -98;
                    tbldata2.AddCell(cellPerminentaddr1);

                    PdfPCell cellBranchOffice = new PdfPCell(new Phrase("8  Branch Office / ESI Dispensary", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOffice.HorizontalAlignment = 0;
                    cellBranchOffice.Colspan = 0;
                    cellBranchOffice.Border = 0;
                    cellBranchOffice.PaddingTop = 5;
                    tbldata2.AddCell(cellBranchOffice);

                    PdfPCell cellBranchOfficecol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOfficecol.HorizontalAlignment = 0;
                    cellBranchOfficecol.Colspan = 0;
                    cellBranchOfficecol.Border = 0;
                    cellBranchOfficecol.PaddingTop = 5;
                    cellBranchOfficecol.PaddingLeft = 14;
                    tbldata2.AddCell(cellBranchOfficecol);


                    PdfPCell cellBranchOffice1 = new PdfPCell(new Phrase(EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOffice1.HorizontalAlignment = 0;
                    cellBranchOffice1.Colspan = 0;
                    cellBranchOffice1.Border = 0;
                    cellBranchOffice1.PaddingTop = 5;
                    cellBranchOffice1.PaddingLeft = -98;
                    tbldata2.AddCell(cellBranchOffice1);

                    tbldata2.AddCell(data2space);

                    document.Add(tbldata2);

                    #endregion

                    PdfPTable table3 = new PdfPTable(6);
                    table3.TotalWidth = 500f;
                    table3.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                    table3.SetWidths(width2);



                    PdfPCell cellphyst = new PdfPCell(new Phrase("B) EMPLOYER'S PARTICULARS   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellphyst.HorizontalAlignment = 0;
                    cellphyst.Colspan = 6;
                    cellphyst.Border = 0;
                    cellphyst.PaddingTop = 3;
                    cellphyst.PaddingLeft = -3;
                    table3.AddCell(cellphyst);




                    document.Add(table3);


                    PdfPTable data1 = new PdfPTable(3);
                    data1.TotalWidth = 500f;
                    data1.LockedWidth = true;
                    float[] widthdate = new float[] { 5f, 1.5f, 5f };
                    data1.SetWidths(widthdate);



                    PdfPCell celldata15 = new PdfPCell(new Phrase("9  Employer's Code No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata15.HorizontalAlignment = 0;
                    celldata15.Colspan = 0;
                    celldata15.Border = 0;
                    celldata15.PaddingTop = 5;
                    data1.AddCell(celldata15);

                    PdfPCell celldatacol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldatacol.HorizontalAlignment = 0;
                    celldatacol.Colspan = 0;
                    celldatacol.Border = 0;
                    celldatacol.PaddingTop = 5;
                    celldatacol.PaddingLeft = -35;
                    data1.AddCell(celldatacol);


                    PdfPCell celldataid = new PdfPCell(new Phrase(EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldataid.HorizontalAlignment = 0;
                    celldataid.Colspan = 0;
                    celldataid.Border = 0;
                    celldataid.PaddingTop = 5;
                    celldataid.PaddingLeft = -45;
                    data1.AddCell(celldataid);


                    PdfPCell cellAppointment = new PdfPCell(new Phrase("10  Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment.HorizontalAlignment = 0;
                    cellAppointment.Colspan = 0;
                    cellAppointment.Border = 0;
                    cellAppointment.PaddingTop = 5;
                    cellAppointment.PaddingLeft = -3;
                    data1.AddCell(cellAppointment);

                    PdfPCell cellAppointment2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment2.HorizontalAlignment = 0;
                    cellAppointment2.Colspan = 0;
                    cellAppointment2.Border = 0;
                    cellAppointment2.PaddingTop = 5;
                    cellAppointment2.PaddingLeft = -35;
                    data1.AddCell(cellAppointment2);


                    PdfPCell cellAppointment1 = new PdfPCell(new Phrase(Dateofjoining, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment1.HorizontalAlignment = 0;
                    cellAppointment1.Colspan = 0;
                    cellAppointment1.Border = 0;
                    cellAppointment1.PaddingTop = 5;
                    cellAppointment1.PaddingLeft = -45;
                    data1.AddCell(cellAppointment1);


                    PdfPCell cellNameadd = new PdfPCell(new Phrase("11  Name & Address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd.HorizontalAlignment = 0;
                    cellNameadd.Colspan = 0;
                    cellNameadd.Border = 0;
                    cellNameadd.PaddingTop = 5;
                    cellNameadd.PaddingLeft = -3;
                    data1.AddCell(cellNameadd);

                    PdfPCell cellNameadd2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd2.HorizontalAlignment = 0;
                    cellNameadd2.Colspan = 0;
                    cellNameadd2.Border = 0;
                    cellNameadd2.PaddingTop = 5;
                    cellNameadd2.PaddingLeft = -35;
                    data1.AddCell(cellNameadd2);


                    PdfPCell cellNameadd1 = new PdfPCell(new Phrase(CompanyName + "\n" + Address, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd1.HorizontalAlignment = 0;
                    cellNameadd1.Colspan = 0;
                    cellNameadd1.Border = 0;
                    cellNameadd1.PaddingTop = 5;
                    cellNameadd1.PaddingLeft = -45;
                    data1.AddCell(cellNameadd1);




                    document.Add(data1);



                    #endregion


                    #region for prevemp

                    PdfPTable data4 = new PdfPTable(2);
                    data4.TotalWidth = 500f;
                    data4.LockedWidth = true;
                    float[] widthdate4 = new float[] { 2f, 1f };
                    data4.SetWidths(widthdate4);

                    PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempty.HorizontalAlignment = 0;
                    cellempty.Colspan = 2;
                    cellempty.Border = 0;
                    cellempty.PaddingTop = 5;


                    PdfPCell celldataref = new PdfPCell(new Phrase("12  In case of any previous employment please fill up the details as under", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldataref.HorizontalAlignment = 0;
                    celldataref.Colspan = 6;
                    celldataref.Border = 0;
                    celldataref.PaddingTop = 5;
                    celldataref.PaddingLeft = -3;
                    data4.AddCell(celldataref);

                    document.Add(data4);

                    #endregion for prevemp


                    #region Employee Reference Details



                    PdfPTable tblReferences = new PdfPTable(4);
                    tblReferences.TotalWidth = 500f;
                    tblReferences.LockedWidth = true;
                    float[] widthRef = new float[] { 2f, 2f, 2f, 2f };
                    tblReferences.SetWidths(widthRef);

                    PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Refspace.Colspan = 4;
                    Refspace.Border = 0;




                    PdfPCell celldata26 = new PdfPCell(new Phrase("a) Previous ins No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata26.HorizontalAlignment = 0;
                    celldata26.Colspan = 4;
                    celldata26.Border = 0;
                    celldata26.PaddingTop = 5;
                    celldata26.PaddingLeft = 20;
                    tblReferences.AddCell(celldata26);

                    PdfPCell celldata28 = new PdfPCell(new Phrase("b) Empir's Code No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata28.HorizontalAlignment = 0;
                    celldata28.Colspan = 4;
                    celldata28.Border = 0;
                    celldata28.PaddingTop = 5;
                    celldata28.PaddingLeft = 20;
                    tblReferences.AddCell(celldata28);


                    PdfPCell cellnameemp = new PdfPCell(new Phrase("c) Name & address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellnameemp.HorizontalAlignment = 0;
                    cellnameemp.Colspan = 4;
                    cellnameemp.Border = 0;
                    cellnameemp.PaddingTop = 5;
                    cellnameemp.PaddingLeft = 20;
                    tblReferences.AddCell(cellnameemp);

                    tblReferences.AddCell(Refspace);

                    PdfPCell celldetaisnominee = new PdfPCell(new Phrase("C)Details of Nominees U/S 71 ESI Act 1948/Rule56(2) of ESI(Central) Rules, 1950 for payment of cash benefit in the event of death)", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    celldetaisnominee.HorizontalAlignment = 0;
                    celldetaisnominee.Colspan = 6;
                    celldetaisnominee.Border = 0;
                    celldetaisnominee.PaddingTop = 5;
                    celldetaisnominee.PaddingLeft = -3;
                    tblReferences.AddCell(celldetaisnominee);

                    PdfPCell cellnamedata = new PdfPCell(new Phrase("Name :  " + RNames, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellnamedata.HorizontalAlignment = 0;
                    cellnamedata.Colspan = 4;
                    cellnamedata.Border = 0;
                    cellnamedata.PaddingTop = 5;
                    cellnamedata.PaddingLeft = 20;
                    tblReferences.AddCell(cellnamedata);





                    string relationTypess = "";
                    if (relationTypess != "--Select--")
                    {
                        PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :  " + RTypes, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRelationship.HorizontalAlignment = 0;
                        cellRelationship.Colspan = 4;
                        cellRelationship.Border = 0;
                        cellRelationship.PaddingTop = 5;
                        cellRelationship.PaddingLeft = 20;
                        tblReferences.AddCell(cellRelationship);
                    }
                    else
                    {
                        PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRelationship.HorizontalAlignment = 0;
                        cellRelationship.Colspan = 4;
                        cellRelationship.Border = 0;
                        cellRelationship.PaddingTop = 5;
                        cellRelationship.PaddingLeft = 20;
                        tblReferences.AddCell(cellRelationship);
                    }

                    PdfPCell cellAddress = new PdfPCell(new Phrase("Address :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.Border = 0;
                    cellAddress.PaddingLeft = 20;
                    cellAddress.PaddingTop = 5;
                    tblReferences.AddCell(cellAddress);

                    tblReferences.AddCell(Refspace);


                    #endregion

                    document.Add(tblReferences);

                    #region for family
                    PdfPTable tblReference = new PdfPTable(6);
                    tblReference.TotalWidth = 500f;
                    tblReference.LockedWidth = true;
                    float[] widths1 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    tblReference.SetWidths(widths1);

                    PdfPCell Refcspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    Refcspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Refcspace.Colspan = 6;
                    Refcspace.Border = 0;
                    //tblReference.AddCell(Refcspace);



                    PdfPCell cellPARTICULARS = new PdfPCell(new Phrase("D) FAMILY PARTICULARS OF INSURED PERSON ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellPARTICULARS.HorizontalAlignment = 0;
                    cellPARTICULARS.Colspan = 6;
                    cellPARTICULARS.Border = 0;
                    cellPARTICULARS.PaddingLeft = 0;
                    cellPARTICULARS.PaddingTop = 5;
                    tblReference.AddCell(cellPARTICULARS);



                    PdfPCell cnamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cnamec.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnamec.BorderWidthLeft = 0;
                    cnamec.BorderWidthRight = 0;
                    cnamec.BorderWidthTop = 0.5f;
                    cnamec.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(cnamec);

                    PdfPCell caddressc = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    caddressc.HorizontalAlignment = 1;//0=Left, 1=Centre, 2=Right
                    caddressc.BorderWidthLeft = 0;
                    caddressc.BorderWidthRight = 0;
                    caddressc.BorderWidthTop = 0.5f;
                    caddressc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(caddressc);

                    PdfPCell crelationshipc = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    crelationshipc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    crelationshipc.BorderWidthLeft = 0;
                    crelationshipc.BorderWidthRight = 0;
                    crelationshipc.BorderWidthTop = 0.5f;
                    crelationshipc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(crelationshipc);

                    PdfPCell cdobc = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cdobc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cdobc.BorderWidthLeft = 0;
                    cdobc.BorderWidthRight = 0;
                    cdobc.BorderWidthTop = 0.8f;
                    cdobc.BorderWidthBottom = 0.6f;
                    tblReference.AddCell(cdobc);

                    PdfPCell camtc = new PdfPCell(new Phrase("Whether residing With", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    camtc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    camtc.BorderWidthLeft = 0;
                    camtc.BorderWidthRight = 0;
                    camtc.BorderWidthTop = 0.5f;
                    camtc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(camtc);

                    PdfPCell cminorc = new PdfPCell(new Phrase("if No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cminorc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cminorc.BorderWidthLeft = 0;
                    cminorc.BorderWidthRight = 0;
                    cminorc.BorderWidthTop = 0.5f;
                    cminorc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(cminorc);

                    int s = 1;
                    if (dtesi.Rows.Count > 0)
                    {
                        for (int k = 0; k < dtesi.Rows.Count; k++)
                        {
                            string Relname = dtesi.Rows[k]["Rname"].ToString();
                            string RPlace = dtesi.Rows[k]["RPlace"].ToString();
                            string Relage = dtesi.Rows[k]["age"].ToString();
                            string RelDOFBirth = dtesi.Rows[k]["DOfBirth"].ToString();
                            if (Relage == "0")
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    Relage = "";
                                }
                                else
                                {
                                    Relage = RelDOFBirth;
                                }
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtesi.Rows[k]["age"].ToString();
                            }
                            else
                            {
                                Relage = "";
                            }


                            PdfPCell cellsno = new PdfPCell(new Phrase((s).ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno.BorderWidthLeft = 0;
                            cellsno.BorderWidthRight = 0;
                            cellsno.BorderWidthTop = 0;
                            cellsno.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno);

                            PdfPCell cellsno4 = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno4.BorderWidthLeft = 0;
                            cellsno4.BorderWidthRight = 0;
                            cellsno4.BorderWidthTop = 0;
                            cellsno4.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno4);



                            PdfPCell cellsno2 = new PdfPCell(new Phrase(Relage, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno2.BorderWidthLeft = 0;
                            cellsno2.BorderWidthRight = 0;
                            cellsno2.BorderWidthTop = 0;
                            cellsno2.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno2);

                            string relationTypes = "";
                            string RelrelationType = dtesi.Rows[k]["RType"].ToString();
                            if (relationTypes != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(RelrelationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRType.BorderWidthLeft = 0;
                                cellRType.BorderWidthRight = 0;
                                cellRType.BorderWidthTop = 0;
                                cellRType.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRType.BorderWidthLeft = 0;
                                cellRType.BorderWidthRight = 0;
                                cellRType.BorderWidthTop = 0;
                                cellRType.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRType);
                            }


                            string RResidences = "";
                            string RResidenced = dtesi.Rows[k]["RResidence"].ToString();
                            if (RResidences != "--Select--")
                            {
                                PdfPCell cellRResidences = new PdfPCell(new Phrase(RResidenced, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRResidences.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRResidences.BorderWidthLeft = 0;
                                cellRResidences.BorderWidthRight = 0;
                                cellRResidences.BorderWidthTop = 0;
                                cellRResidences.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRResidences);
                            }
                            else
                            {
                                PdfPCell cellRResidences1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRResidences1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRResidences1.BorderWidthLeft = 0;
                                cellRResidences1.BorderWidthRight = 0;
                                cellRResidences1.BorderWidthTop = 0;
                                cellRResidences1.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRResidences1);
                            }
                            if (RResidenced == "Yes")
                            {
                                //RPlace
                                PdfPCell cellplace = new PdfPCell(new Phrase(Emppresentaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellplace.BorderWidthLeft = 0;
                                cellplace.BorderWidthRight = 0;
                                cellplace.BorderWidthTop = 0;
                                cellplace.BorderWidthBottom = 0;
                                tblReference.AddCell(cellplace);
                            }
                            else if (RResidenced == "No")
                            {
                                //RPlace
                                PdfPCell cellplace = new PdfPCell(new Phrase(Emppermanentaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellplace.BorderWidthLeft = 0;
                                cellplace.BorderWidthRight = 0;
                                cellplace.BorderWidthTop = 0;
                                cellplace.BorderWidthBottom = 0;
                                tblReference.AddCell(cellplace);
                            }

                            s++;
                        }
                    }
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReferences.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);





                    PdfPCell cpt1c = new PdfPCell(new Phrase("ESI Corporation Temporary Identity Card", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt1c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt1c.Colspan = 6;
                    cpt1c.Border = 0;
                    tblReference.AddCell(cpt1c);

                    PdfPCell cpt2c = new PdfPCell(new Phrase("Name ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c.Colspan = 2;
                    cpt2c.Border = 0;
                    tblReference.AddCell(cpt2c);

                    PdfPCell cpt2c1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c1.Colspan = 0;
                    cpt2c1.Border = 0;
                    // tblReference.AddCell(cpt2c1);

                    PdfPCell cpt2c2 = new PdfPCell(new Phrase(": " + name, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c2.Colspan = 4;
                    cpt2c2.Border = 0;
                    tblReference.AddCell(cpt2c2);


                    PdfPCell Ins = new PdfPCell(new Phrase("Ins No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins.Colspan = 2;
                    Ins.Border = 0;
                    tblReference.AddCell(Ins);

                    PdfPCell Ins1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins1.Colspan = 0;
                    Ins1.Border = 0;
                    //  tblReference.AddCell(Ins1);

                    PdfPCell Ins2 = new PdfPCell(new Phrase(": " + Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins2.Colspan = 4;
                    Ins2.Border = 0;
                    tblReference.AddCell(Ins2);

                    PdfPCell Appointment = new PdfPCell(new Phrase("Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment.Colspan = 2;
                    Appointment.Border = 0;
                    tblReference.AddCell(Appointment);


                    PdfPCell Appointment1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment1.Colspan = 0;
                    Appointment1.Border = 0;
                    //tblReference.AddCell(Appointment1);

                    PdfPCell Appointment2 = new PdfPCell(new Phrase(": " + Dateofjoining, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment2.Colspan = 4;
                    Appointment2.Border = 0;
                    tblReference.AddCell(Appointment2);

                    PdfPCell Branch = new PdfPCell(new Phrase("Branch Office", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Branch.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Branch.Colspan = 2;
                    Branch.Border = 0;
                    tblReference.AddCell(Branch);

                    PdfPCell Branch1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Branch1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Branch1.Colspan = 4;
                    Branch1.Border = 0;
                    tblReference.AddCell(Branch1);

                    PdfPCell Dispensary = new PdfPCell(new Phrase("ESI Dispensary ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary.Colspan = 2;
                    Dispensary.Border = 0;
                    tblReference.AddCell(Dispensary);


                    PdfPCell Dispensary1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary1.Colspan = 0;
                    Dispensary1.Border = 0;
                    // tblReference.AddCell(Dispensary1);

                    PdfPCell Dispensary2 = new PdfPCell(new Phrase(": " + EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary2.Colspan = 4;
                    Dispensary2.Border = 0;
                    tblReference.AddCell(Dispensary2);

                    PdfPCell code = new PdfPCell(new Phrase("Employer's code No ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code.Colspan = 2;
                    code.Border = 0;
                    tblReference.AddCell(code);

                    PdfPCell code1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code1.Colspan = 0;
                    code1.Border = 0;
                    //tblReference.AddCell(code1);

                    PdfPCell code2 = new PdfPCell(new Phrase(": " + EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code2.Colspan = 4;
                    code2.Border = 0;
                    tblReference.AddCell(code2);



                    PdfPCell Validity = new PdfPCell(new Phrase("Validity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Validity.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Validity.Colspan = 2;
                    Validity.Border = 0;
                    tblReference.AddCell(Validity);


                    PdfPCell Validity1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Validity1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Validity1.Colspan = 4;
                    Validity1.Border = 0;
                    tblReference.AddCell(Validity1);

                    PdfPCell date1 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    date1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    date1.Colspan = 2;
                    date1.Border = 0;
                    tblReference.AddCell(date1);


                    PdfPCell date11 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    date11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    date11.Colspan = 4;
                    date11.Border = 0;
                    tblReference.AddCell(date11);

                    tblReference.AddCell(Refcspace);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 6;
                        sealImg.PaddingLeft = -370f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblReference.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellsign = new PdfPCell(new Phrase("    Signature of T.I Of I.P   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellsign.HorizontalAlignment = 0;
                    cellsign.Colspan = 3;
                    cellsign.Border = 0;
                    cellsign.PaddingTop = 5;
                    cellsign.PaddingLeft = 50;
                    tblReference.AddCell(cellsign);


                    PdfPCell cellrecrutment = new PdfPCell(new Phrase("Signature of B.M. With Seal  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellrecrutment.HorizontalAlignment = 0;
                    cellrecrutment.Colspan = 3;
                    cellrecrutment.Border = 0;
                    cellrecrutment.PaddingTop = 5;
                    cellrecrutment.PaddingLeft = 50;
                    tblReference.AddCell(cellrecrutment);


                    document.Add(tblReference);

                    #endregion for family

                    document.NewPage();


                    #region Employee Refer Details



                    PdfPTable tblRefer = new PdfPTable(2);
                    tblRefer.TotalWidth = 500f;
                    tblRefer.LockedWidth = true;
                    float[] widthRefer = new float[] { 5f, 5f };
                    tblRefer.SetWidths(widthRefer);

                    PdfPCell Referspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                    Referspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Referspace.Colspan = 4;
                    Referspace.Border = 0;

                    PdfPCell celldeclare = new PdfPCell(new Phrase("I declare that my dependent parents income from all sources is 1) Father's income Rs................... (2) Mother's income Rs.................... Total Rs................(Rupees.............................................) and he/she/they,is /are Wholly dependent on me and also resides with me. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldeclare.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    celldeclare.Colspan = 2;
                    celldeclare.Border = 0;
                    celldeclare.PaddingTop = 5;
                    celldeclare.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(celldeclare);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);


                    PdfPCell cellhereby = new PdfPCell(new Phrase("I hereby declare that the particulars given by me are correct to the best of knowledge and belief.I undertake to intimate the corporation any changes in the membership of my family within 15 days of such change.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellhereby.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellhereby.Colspan = 2;
                    cellhereby.Border = 0;
                    cellhereby.PaddingLeft = 0;
                    cellhereby.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellhereby);


                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);


                    //

                    PdfPCell cellSRFDETECTIVE = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontsyle, 12, Font.BOLD, BaseColor.BLACK)));
                    cellSRFDETECTIVE.HorizontalAlignment = 0;
                    cellSRFDETECTIVE.Colspan = 2;
                    cellSRFDETECTIVE.Border = 0;
                    cellSRFDETECTIVE.PaddingTop = 5;
                    cellSRFDETECTIVE.PaddingLeft = 0;
                    tblRefer.AddCell(cellSRFDETECTIVE);


                    tblRefer.AddCell(Referspace);


                    PdfPCell cellAuthorised = new PdfPCell(new Phrase("Authorised signatory  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthorised.HorizontalAlignment = 0;
                    cellAuthorised.Colspan = 2;
                    cellAuthorised.Border = 0;
                    cellAuthorised.PaddingTop = 5;
                    cellAuthorised.PaddingLeft = 0;
                    tblRefer.AddCell(cellAuthorised);



                    PdfPCell cellCounter = new PdfPCell(new Phrase("Counter signature by the employer  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellCounter.HorizontalAlignment = 0;
                    cellCounter.Colspan = 2;
                    cellCounter.Border = 0;
                    cellCounter.PaddingTop = 5;
                    cellCounter.PaddingLeft = 0;
                    tblRefer.AddCell(cellCounter);

                    // tblRefer.AddCell(Referspace);

                    if (File.Exists(imagepath3))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath3);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 2;
                        sealImg.PaddingLeft = -400f;
                        sealImg.PaddingTop = 0;
                        tblRefer.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    PdfPCell cellCounter1 = new PdfPCell(new Phrase("Signature with seal ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellCounter1.HorizontalAlignment = 0;
                    cellCounter1.Colspan = 1;
                    cellCounter1.Border = 0;
                    cellCounter1.PaddingTop = 5;
                    cellCounter1.PaddingLeft = 0;
                    tblRefer.AddCell(cellCounter1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 1;
                        sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblRefer.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellseal = new PdfPCell(new Phrase("Dated:................... \n\n", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellseal.HorizontalAlignment = 0;
                    cellseal.Colspan = 0;
                    cellseal.BorderWidthLeft = 0;
                    cellseal.BorderWidthRight = 0;
                    cellseal.BorderWidthTop = 0;
                    cellseal.BorderWidthBottom = 1.5f;
                    cellseal.PaddingBottom = 5;
                    cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                    tblRefer.AddCell(cellseal);





                    PdfPCell cellSignature = new PdfPCell(new Phrase("Signature / T.I & IP", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellSignature.Colspan = 0;
                    cellSignature.Border = 0;
                    cellSignature.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                    cellSignature.BorderWidthBottom = 1.5f;
                    cellSignature.PaddingLeft = 10;
                    cellSignature.PaddingBottom = 5;
                    tblRefer.AddCell(cellSignature);





                    tblRefer.AddCell(Referspace);

                    PdfPCell cellINSTRUCTIONS = new PdfPCell(new Phrase("INSTRUCTIONS  ", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellINSTRUCTIONS.HorizontalAlignment = 0;
                    cellINSTRUCTIONS.Colspan = 2;
                    cellINSTRUCTIONS.Border = 0;
                    cellINSTRUCTIONS.PaddingTop = 5;
                    cellINSTRUCTIONS.PaddingLeft = 0;
                    tblRefer.AddCell(cellINSTRUCTIONS);


                    PdfPCell cellSubmission = new PdfPCell(new Phrase(" 1. Submission of Form -1,is governed by regulations 11 & 12 of ESI (General) Regulations, 1950  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSubmission.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellSubmission.Colspan = 2;
                    cellSubmission.Border = 0;
                    cellSubmission.PaddingTop = 5;
                    cellSubmission.PaddingLeft = 0;
                    cellSubmission.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellSubmission);



                    PdfPCell cellFamily = new PdfPCell(new Phrase(" 2. Family means all or any of the following relatives of an insured person namely:-(i) a spouse (ii) a minor legitimate or adopted child dependant upon the I.P.(iii) a child who is wholly dependent on the earnings of the I.P.and who is(a) receiving education, till he or she attains the age 21 yrs(b) an unmarried daughter ;(iv) a child who is infirm by reason of any physical or mental abononormally pr imjury and is wholly dependent on the earnings of the I.P.so lo9ng as the infirmity continues;(v) dependent parents(please seen section 2 clause 11 of the 7 ESI Act 1948 for details)   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellFamily.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellFamily.Colspan = 2;
                    cellFamily.Border = 0;
                    cellFamily.PaddingTop = 5;
                    cellFamily.PaddingLeft = 0;
                    cellFamily.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellFamily);




                    PdfPCell cellcards = new PdfPCell(new Phrase(" 3. Identity cards is Non-transferable.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellcards.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellcards.Colspan = 2;
                    cellcards.Border = 0;
                    cellcards.PaddingTop = 5;
                    cellcards.PaddingLeft = 0;
                    cellcards.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellcards);




                    PdfPCell cellidentity = new PdfPCell(new Phrase(" 4. Loss of identity card be reported to employer /Branch manger immediately   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellidentity.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellidentity.Colspan = 2;
                    cellidentity.Border = 0;
                    cellidentity.PaddingTop = 5;
                    cellidentity.PaddingLeft = 0;
                    cellidentity.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellidentity);



                    PdfPCell cellsubmission1 = new PdfPCell(new Phrase(" 5. Submission of faise informationsattracts penal action under section 84 of ESI .Act,1948   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellsubmission1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellsubmission1.Colspan = 2;
                    cellsubmission1.Border = 0;
                    cellsubmission1.PaddingTop = 5;
                    cellsubmission1.PaddingLeft = 0;
                    cellsubmission1.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellsubmission1);





                    PdfPCell cellduly = new PdfPCell(new Phrase(" 6. This form duly filled in must reach. the concerned Branch office within 10 days of appointment of an Employee .Dealy attracts penal action under section 85 of the ACT,against employer.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellduly.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellduly.Colspan = 2;
                    cellduly.Border = 0;
                    cellduly.PaddingTop = 5;
                    cellduly.PaddingLeft = 0;
                    cellduly.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellduly);




                    PdfPCell cellperson = new PdfPCell(new Phrase(" 7. As an insured person you and your dependent family members are entitled to full medical care.the other benetifits in cash  include (1) sickness benfit(2) temporary disablement benfit (3)permanent disablement benfit (4) dependents benefit and (5) maternity benfit(in case of women employees)subject to fulfilment of contribution conditions.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellperson.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellperson.Colspan = 2;
                    cellperson.Border = 0;
                    cellperson.PaddingTop = 5;
                    cellperson.PaddingLeft = 0;
                    cellperson.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellperson);



                    PdfPCell cellmore = new PdfPCell(new Phrase(" 8. For more details please visit website of ESIC at www.esic.org.in or contact regional office or branch office.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellmore.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmore.Colspan = 2;
                    cellmore.Border = 0;
                    cellmore.PaddingTop = 5;
                    cellmore.PaddingLeft = 0;
                    cellmore.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellmore);


                    tblRefer.AddCell(Referspace);




                    PdfPCell cellBRACH = new PdfPCell(new Phrase(" FOR BRANCH OFFICE USE ONLY   ", FontFactory.GetFont(fontsyle, 13, Font.BOLD, BaseColor.BLACK)));
                    cellBRACH.HorizontalAlignment = 1;
                    cellBRACH.Colspan = 2;
                    cellBRACH.Border = 0;
                    cellBRACH.PaddingTop = 5;
                    tblRefer.AddCell(cellBRACH);

                    tblRefer.AddCell(Referspace);

                    PdfPCell cellDateOfAllotment = new PdfPCell(new Phrase(" 1. Date Of Allotment Of Ins No:   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateOfAllotment.HorizontalAlignment = 0;
                    cellDateOfAllotment.Colspan = 2;
                    cellDateOfAllotment.Border = 0;
                    cellDateOfAllotment.PaddingTop = 5;
                    cellDateOfAllotment.PaddingLeft = 0;
                    tblRefer.AddCell(cellDateOfAllotment);


                    PdfPCell cellIssue = new PdfPCell(new Phrase(" 2. Date Of Issue Of TIC:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellIssue.HorizontalAlignment = 0;
                    cellIssue.Colspan = 2;
                    cellIssue.Border = 0;
                    cellIssue.PaddingTop = 5;
                    cellIssue.PaddingLeft = 0;
                    tblRefer.AddCell(cellIssue);


                    PdfPCell cellDisp = new PdfPCell(new Phrase(" 3. Name / No. Of Disp:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellDisp.HorizontalAlignment = 0;
                    cellDisp.Colspan = 2;
                    cellDisp.Border = 0;
                    cellDisp.PaddingTop = 5;
                    cellDisp.PaddingLeft = 0;
                    tblRefer.AddCell(cellDisp);

                    PdfPCell cellMedical = new PdfPCell(new Phrase(" 4. Whether reciprocal Medical arrangement involved ? If yes, please indicate:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellMedical.HorizontalAlignment = 0;
                    cellMedical.Colspan = 2;
                    cellMedical.Border = 0;
                    cellMedical.PaddingTop = 5;
                    cellMedical.PaddingLeft = 0;
                    tblRefer.AddCell(cellMedical);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);

                    PdfPCell cellBranch = new PdfPCell(new Phrase(" Signature of Branch Manger   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranch.HorizontalAlignment = 0;
                    cellBranch.Colspan = 2;
                    cellBranch.Border = 0;
                    cellBranch.PaddingTop = 5;
                    cellBranch.PaddingLeft = 300;
                    tblRefer.AddCell(cellBranch);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);
                    document.Add(tblRefer);



                    PdfPTable tblReferen = new PdfPTable(6);
                    tblReferen.TotalWidth = 500f;
                    tblReferen.LockedWidth = true;
                    float[] widths3 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    tblReferen.SetWidths(widths3);

                    PdfPCell Referencspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    Referencspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Referencspace.Colspan = 6;
                    Referencspace.Border = 0;
                    tblReferen.AddCell(Referencspace);




                    PdfPCell canamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    canamec.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    canamec.BorderWidthLeft = 0;
                    canamec.BorderWidthRight = 0;
                    canamec.BorderWidthTop = 0;
                    canamec.BorderWidthBottom = 0;
                    tblReferen.AddCell(canamec);

                    PdfPCell caddressca = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    caddressca.HorizontalAlignment = 0;//0=Left, 1=Centre, 2=Right
                    caddressca.BorderWidthLeft = 0;
                    caddressca.BorderWidthRight = 0;
                    caddressca.BorderWidthTop = 0;
                    caddressca.BorderWidthBottom = 0;
                    tblReferen.AddCell(caddressca);

                    PdfPCell crelationshipca = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    crelationshipca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    crelationshipca.BorderWidthLeft = 0;
                    crelationshipca.BorderWidthRight = 0;
                    crelationshipca.BorderWidthTop = 0;
                    crelationshipca.BorderWidthBottom = 0;
                    tblReferen.AddCell(crelationshipca);

                    PdfPCell cdobca = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cdobca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdobca.BorderWidthLeft = 0;
                    cdobca.BorderWidthRight = 0;
                    cdobca.BorderWidthTop = 0;
                    cdobca.BorderWidthBottom = 0;

                    tblReferen.AddCell(cdobca);

                    PdfPCell camtca = new PdfPCell(new Phrase("Whether residing With him/her", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    camtca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camtca.BorderWidthLeft = 0;
                    camtca.BorderWidthRight = 0;
                    camtca.BorderWidthTop = 0;
                    camtca.BorderWidthBottom = 0;
                    tblReferen.AddCell(camtca);

                    PdfPCell cminorca = new PdfPCell(new Phrase("If No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cminorca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminorca.BorderWidthLeft = 0;
                    cminorca.BorderWidthRight = 0;
                    cminorca.BorderWidthTop = 0;
                    cminorca.BorderWidthBottom = 0f;
                    tblReferen.AddCell(cminorca);

                    // document.Add(tblReferen);

                    #endregion Employee Refer Details


                }
                string filename = "Declaration.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }

        }

        protected void btnESIDeclaration_Click(object sender, EventArgs e)
        {
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                BioDataIndividual();
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                BiodataBulk();

            }
        }


        #endregion for Declaration Form

        #region for PFForm

        public void PFFormBulk()
        {
            int Fontsize = 9;
            string fontsyle = "TIMES_ROMAN";

            var headfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK);
            var bodyfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD, BaseColor.BLACK);
            var bodyfontnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK);
            var Subheadnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.NORMAL, BaseColor.BLACK);
            var Subheadfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);


            if (txtfromempid.Text == "" || txttoempid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee Series');", true);
                return;
            }

            #region Variable Declaration

            string PFNO = "";
            string cmpnypfno = "";
            string Relage = "";
            string RelDOFBirth = "";
            string RelationPlace = "";
            string contactno = "";
            string Idno = "";
            string companyname = "";
            string companyaddress = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string FatherName = "";
            string SpouseName = "";
            string FSpouseName = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string Gender = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";



            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string prphone = "";
            string pephone = "";
            string FatherSpouseName = "";
            string Emppresentaddress = "";
            string Emppermanentaddress = "";



            #endregion

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string fromempid = "";
            string toempid = "";

            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables

            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;
            }

            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            SPName = "EmpBiodataBulk";
            HTEmpBiodata.Add("@FromEmpid", fromempid);
            HTEmpBiodata.Add("@ToEmpid", toempid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure





            if (dtEmpdetails.Rows.Count > 0)
            {

                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();

                for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                {
                    document.NewPage();
                    #region Assining data to Variables
                    Idno = dtEmpdetails.Rows[m]["EmpId"].ToString();
                    name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                    Gender = dtEmpdetails.Rows[m]["EmpSex"].ToString();
                    maritalstatus = dtEmpdetails.Rows[m]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    contactno = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    dateofbirth = dtEmpdetails.Rows[m]["EmpDtofBirths"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    educationqualification = dtEmpdetails.Rows[m]["EmpQualification"].ToString();
                    height = dtEmpdetails.Rows[m]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[m]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[m]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[m]["EmpLanguagesKnown"].ToString();
                    identificationmark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[m]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[m]["EmpBloodGroup"].ToString();

                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[m]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[m]["EmpRefAddr2"].ToString();

                    date = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();



                    EmergencyPhone = dtEmpdetails.Rows[m]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[m]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[m]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[m]["EmpComplexion"].ToString();
                    FatherName = dtEmpdetails.Rows[m]["EmpFatherName"].ToString();
                    SpouseName = dtEmpdetails.Rows[m]["EmpSpouseName"].ToString();
                    FSpouseName = dtEmpdetails.Rows[m]["SpouseName"].ToString();


                    prLmark = dtEmpdetails.Rows[m]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[m]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[m]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[m]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[m]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[m]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[m]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[m]["prPincode"].ToString();

                    pelmark = dtEmpdetails.Rows[m]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[m]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[m]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[m]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[m]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[m]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[m]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[m]["pePincode"].ToString();
                    companyname = dtEmpdetails.Rows[m]["CompanyName"].ToString();
                    companyaddress = dtEmpdetails.Rows[m]["CompanyAddress"].ToString();
                    // pephone = dtEmpdetails.Rows[m]["pephone"].ToString();

                    clientname = dtEmpdetails.Rows[m]["clientname"].ToString();

                    string Image1 = "";

                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[m]["Image"].ToString();
                    }
                    else
                    {

                    }

                    PFNO = dtEmpdetails.Rows[m]["PFNo"].ToString();
                    // cmpnypfno = dtEmpdetails.Rows[m]["PFNo"].ToString();

                    Emppresentaddress = dtEmpdetails.Rows[m]["Emppresentaddress"].ToString();
                    Emppermanentaddress = dtEmpdetails.Rows[m]["Emppermanentaddress"].ToString();



                    #endregion


                    #region for basic details

                    string querypf = " select *,case Convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else Convert(varchar(10),DOfBirth,103) end as DateOfBirth from EmpRelationships where EmpId='" + Idno + "' and PFNominee='Y' ";
                    DataTable dtpf = Config.ExecuteReaderWithQueryAsync(querypf).Result;
                    string residence = ""; string place = "";
                    int sno = 1;


                    string query2 = "select cities.city,* from emprelationships  left join empdetails on empdetails.empid=emprelationships.empid inner join cities on cities.cityid= empdetails.pecity where emprelationships.empid='" + Idno + "' ";
                    DataTable dtquery2 = Config.ExecuteReaderWithQueryAsync(query2).Result;
                    string RRes = ""; string RRes1 = "";
                    if (dtquery2.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtquery2.Rows.Count; i++)
                        {
                            RRes1 = dtquery2.Rows[i]["RResidence"].ToString();
                            if (RRes1 == "Yes")
                            {
                                RRes = dtquery2.Rows[i]["city"].ToString();
                            }


                        }

                    }

                    string cmpnyinfo = "select * from CompanyInfo";
                    DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(cmpnyinfo).Result;


                    if (DtCompanyInfo.Rows.Count > 0)
                    {

                        cmpnyinfo = DtCompanyInfo.Rows[0]["PFNo"].ToString();

                    }

                    #endregion for basic details


                    #region for PFForm


                    PdfPTable table = new PdfPTable(3);
                    table.TotalWidth = 550f;
                    table.LockedWidth = true;
                    float[] width = new float[] { 3f, 0.3f, 3f };
                    table.SetWidths(width);

                    #region for image
                    string imagepath2 = Server.MapPath("assets/EPFLogo.png");
                    string imagepathSeal = Server.MapPath("assets/seal.jpg");
                    string imagepathArrow = Server.MapPath("assets/Arrow.png");
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50f);
                        gif2.SetAbsolutePosition(60f, 885f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion

                    PdfPCell cellstart = new PdfPCell(new Phrase("Employee : " + Idno + "   PF Declaration", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellstart.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellstart.Colspan = 3;
                    cellstart.Border = 0;
                    cellstart.PaddingTop = -30f;
                    table.AddCell(cellstart);

                    PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 3;
                    cellspace.Border = 0;
                    //cellspace.PaddingTop = -5;
                    table.AddCell(cellspace);

                    PdfPCell cellheading = new PdfPCell(new Phrase("EMPLOYEES' PROVIDENT FUND ORGANISATION", headfont));
                    cellheading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading.Colspan = 3;
                    cellheading.Border = 0;
                    table.AddCell(cellheading);


                    PdfPCell cellheading1 = new PdfPCell(new Phrase("NOMINATION AND DECLARATION FORM ", Subheadfont));
                    cellheading1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading1.Colspan = 3;
                    cellheading1.PaddingLeft = -30f;
                    cellheading1.Border = 0;
                    table.AddCell(cellheading1);

                    PdfPCell cellheadingg1 = new PdfPCell(new Phrase("FOR UNEXEMPTED / EXEMPTED ESTABLISHMENTS", Subheadfont));
                    cellheadingg1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheadingg1.Colspan = 3;
                    cellheadingg1.Border = 0;
                    table.AddCell(cellheadingg1);

                    table.AddCell(cellspace);


                    PdfPCell cellheading2 = new PdfPCell(new Phrase("Declaration and Nomination form under the Employees' Provident Funds and Employee's Pension Scheme", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cellheading2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading2.Colspan = 3;
                    cellheading2.Border = 0;
                    table.AddCell(cellheading2);

                    PdfPCell cellheading3 = new PdfPCell(new Phrase("(Paragraph 33 & 61 of the Employees' Provident Fund Schema, 1952 and Paragraph 18 of the Employees' Pension Scheme, 1995 )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cellheading3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading3.Colspan = 3;
                    cellheading3.Border = 0;

                    table.AddCell(cellheading3);

                    table.AddCell(cellspace);


                    PdfPCell cellnamehead = new PdfPCell(new Phrase("1. Name :", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellnamehead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellnamehead.Colspan = 0;
                    cellnamehead.Border = 0;
                    table.AddCell(cellnamehead);

                    PdfPCell cellnamecol = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellnamecol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellnamecol.Colspan = 0;
                    cellnamecol.Border = 0;
                    table.AddCell(cellnamecol);

                    //PdfPCell cellname = new PdfPCell();
                    //var cellaaffsc = new Phrase();
                    //cellaaffsc.Add(new Chunk(name + "                        Employee No    ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    //cellaaffsc.Add(new Chunk(Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    //cellname.AddElement(cellaaffsc);


                    PdfPCell cellname = new PdfPCell(new Phrase(name + " Employee No : " + Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellname.Colspan = 0;
                    cellname.Border = 0;
                    //cellname.PaddingLeft = -100f;
                    table.AddCell(cellname);

                    table.AddCell(cellspace);


                    PdfPCell cellFathershead = new PdfPCell(new Phrase("2. Father's/Husband's Name\n    (In case of married woman)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellFathershead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFathershead.Colspan = 0;
                    cellFathershead.Border = 0;
                    table.AddCell(cellFathershead);

                    PdfPCell cellFatherscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellFatherscol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFatherscol.Colspan = 0;
                    cellFatherscol.Border = 0;
                    table.AddCell(cellFatherscol);

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }

                    PdfPCell cellFathername = new PdfPCell(new Phrase(FatherSpouseName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellFathername.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFathername.Colspan = 0;
                    cellFathername.Border = 0;
                    table.AddCell(cellFathername);

                    table.AddCell(cellspace);


                    PdfPCell cellDOBhead = new PdfPCell(new Phrase("3. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOBhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOBhead.Colspan = 0;
                    cellDOBhead.Border = 0;
                    table.AddCell(cellDOBhead);

                    PdfPCell cellDOBcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOBcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOBcol.Colspan = 0;
                    cellDOBcol.Border = 0;
                    table.AddCell(cellDOBcol);

                    PdfPCell cellDOB = new PdfPCell(new Phrase(dateofbirth.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellDOB.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOB.Colspan = 0;
                    cellDOB.Border = 0;
                    table.AddCell(cellDOB);

                    table.AddCell(cellspace);

                    PdfPCell cellSexhead = new PdfPCell(new Phrase("4. Gender", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellSexhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSexhead.Colspan = 0;
                    cellSexhead.Border = 0;
                    table.AddCell(cellSexhead);

                    PdfPCell cellSexcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellSexcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSexcol.Colspan = 0;
                    cellSexcol.Border = 0;
                    table.AddCell(cellSexcol);

                    PdfPCell cellSex = new PdfPCell(new Phrase(Gender.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellSex.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSex.Colspan = 0;
                    cellSex.Border = 0;
                    table.AddCell(cellSex);

                    table.AddCell(cellspace);

                    PdfPCell cellMSHead = new PdfPCell(new Phrase("5. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellMSHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMSHead.Colspan = 0;
                    cellMSHead.Border = 0;
                    table.AddCell(cellMSHead);

                    PdfPCell cellMScol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellMScol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMScol.Colspan = 0;
                    cellMScol.Border = 0;
                    table.AddCell(cellMScol);

                    PdfPCell cellMS = new PdfPCell(new Phrase(maritalstatus.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellMS.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMS.Colspan = 0;
                    cellMS.Border = 0;
                    table.AddCell(cellMS);

                    table.AddCell(cellspace);

                    PdfPCell cellANHead = new PdfPCell(new Phrase("6. Account No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellANHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellANHead.Colspan = 0;
                    cellANHead.Border = 0;
                    table.AddCell(cellANHead);

                    PdfPCell cellANcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellANcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellANcol.Colspan = 0;
                    cellANcol.Border = 0;
                    table.AddCell(cellANcol);

                    PdfPCell cellAN = new PdfPCell(new Phrase(cmpnyinfo + "" + PFNO, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellAN.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellAN.Colspan = 0;
                    cellAN.Border = 0;
                    table.AddCell(cellAN);

                    table.AddCell(cellspace);



                    PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("7. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 0;
                    cellPerminentaddr.Border = 0;
                    table.AddCell(cellPerminentaddr);

                    PdfPCell cellPerminentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPerminentaddr2.HorizontalAlignment = 0;
                    cellPerminentaddr2.Colspan = 0;
                    cellPerminentaddr2.Border = 0;

                    table.AddCell(cellPerminentaddr2);


                    #region Permanent address String array

                    string[] PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = "Landmark :  " + pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = "Vill : " + peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = "Taluka : " + peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = "City : " + pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = "State : " + peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = ", Pincode : " + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    string Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion


                    PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellPerminentaddr1.HorizontalAlignment = 0;
                    cellPerminentaddr1.Colspan = 0;
                    cellPerminentaddr1.Border = 0;
                    //cellPerminentaddr1.PaddingLeft = -140;
                    table.AddCell(cellPerminentaddr1);

                    table.AddCell(cellspace);

                    PdfPCell cellPresentaddr = new PdfPCell(new Phrase("8. Current Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 0;
                    cellPresentaddr.Border = 0;
                    table.AddCell(cellPresentaddr);

                    PdfPCell cellPresentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPresentaddr2.HorizontalAlignment = 0;
                    cellPresentaddr2.Colspan = 0;
                    cellPresentaddr2.Border = 0;
                    table.AddCell(cellPresentaddr2);

                    #region Present address String array

                    string[] PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = "Landmark :  " + prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = "Vill :  " + prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = "Taluka : " + prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = "City : " + prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = "State : " + prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = ", Pincode : " + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    string Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion

                    PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Emppresentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellPresentaddr1.HorizontalAlignment = 0;
                    cellPresentaddr1.Colspan = 0;
                    cellPresentaddr1.Border = 0;
                    //cellPresentaddr1.PaddingLeft = -140;i
                    table.AddCell(cellPresentaddr1);
                    table.AddCell(cellspace);

                    table.AddCell(cellspace);


                    PdfPCell cellDOJHead = new PdfPCell(new Phrase("9. Date of Joining", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDOJHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJHead.Colspan = 0;
                    cellDOJHead.Border = 0;
                    //table.AddCell(cellDOJHead);

                    PdfPCell cellDOJcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOJcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJcol.Colspan = 0;
                    cellDOJcol.Border = 0;
                    //table.AddCell(cellDOJcol);

                    PdfPCell cellDOJ = new PdfPCell(new Phrase(date.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellDOJ.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJ.Colspan = 0;
                    cellDOJ.Border = 0;
                    //table.AddCell(cellDOJ);

                    table.AddCell(cellspace);
                    table.AddCell(cellspace);
                    table.AddCell(cellspace);

                    PdfPCell cellPartA = new PdfPCell(new Phrase("PART - A (EPF) Para 18", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPartA.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellPartA.Colspan = 3;
                    cellPartA.Border = 0;
                    table.AddCell(cellPartA);

                    PdfPCell cellPartAdesc = new PdfPCell(new Phrase("I hereby nominate the person(s)/cancel the nomination made by me previously and nominate the person(s), mentioned below to receive the amount standing to my credit in the Employee's Provident Fund in the event of my death.", Subheadfont));
                    cellPartAdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellPartAdesc.Colspan = 3;
                    cellPartAdesc.Border = 0;
                    cellPartAdesc.PaddingTop = 20;
                    table.AddCell(cellPartAdesc);

                    document.Add(table);

                    PdfPTable table2 = new PdfPTable(6);
                    table2.TotalWidth = 550f;
                    table2.LockedWidth = true;
                    float[] widths = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    table2.SetWidths(widths);

                    PdfPCell cspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cspace.Colspan = 6;
                    cspace.Border = 0;
                    table2.AddCell(cspace);

                    PdfPCell cname = new PdfPCell(new Phrase("Name & Address Nominee/Nominees  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cname.Colspan = 2;
                    table2.AddCell(cname);

                    PdfPCell caddress = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    caddress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    caddress.Colspan = 0;
                    //table2.AddCell(caddress);

                    PdfPCell crelationship = new PdfPCell(new Phrase("Nominee's relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    crelationship.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    crelationship.Colspan = 2;
                    table2.AddCell(crelationship);

                    PdfPCell cdob = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cdob.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdob.Colspan = 2;
                    table2.AddCell(cdob);






                    if (dtpf.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtpf.Rows.Count; i++)
                        {
                            Fname = dtpf.Rows[i]["RName"].ToString();
                            PdfPCell cnamedesc = new PdfPCell(new Phrase(Fname, bodyfontnormal));
                            cnamedesc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cnamedesc.Colspan = 2;
                            cnamedesc.MinimumHeight = 30;
                            table2.AddCell(cnamedesc);

                            place = dtpf.Rows[i]["RPlace"].ToString();
                            PdfPCell caddressdesc = new PdfPCell(new Phrase(place, bodyfontnormal));
                            caddressdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            caddressdesc.Colspan = 0;
                            // table2.AddCell(caddressdesc);

                            relationType = dtpf.Rows[i]["RType"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell crelationshipdesc = new PdfPCell(new Phrase(relationType, bodyfontnormal));
                                crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                crelationshipdesc.Colspan = 2;
                                table2.AddCell(crelationshipdesc);
                            }
                            else
                            {

                                PdfPCell crelationshipdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                                crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                crelationshipdesc.Colspan = 2;
                                table2.AddCell(crelationshipdesc);
                            }

                            Relage = dtpf.Rows[i]["age"].ToString();
                            RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();
                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtpf.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + "\nAge : " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }


                            PdfPCell cdobnodesc = new PdfPCell(new Phrase(RelDOFBirth, bodyfontnormal));
                            cdobnodesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cdobnodesc.Colspan = 2;
                            table2.AddCell(cdobnodesc);

                            PdfPCell camtdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                            camtdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            camtdesc.Colspan = 0;
                            //table2.AddCell(camtdesc);

                            PdfPCell cminordesc = new PdfPCell(new Phrase("", bodyfontnormal));
                            cminordesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cminordesc.Colspan = 0;
                            //table2.AddCell(cminordesc);




                        }


                    }

                    PdfPCell camt = new PdfPCell(new Phrase("Total amount of share of accumulation in Provident Fund to be paid to each nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    camt.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camt.Colspan = 3;
                    camt.Border = 0;
                    table2.AddCell(camt);

                    PdfPCell camt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    camt11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camt11.Colspan = 3;
                    camt11.Border = 0;
                    table2.AddCell(camt11);

                    PdfPCell cminor = new PdfPCell(new Phrase("If the nominee is a minor, name & relationship & address of the guardian who may receive the amount during the minority of nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cminor.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminor.Colspan = 3;
                    cminor.Border = 0;
                    table2.AddCell(cminor);

                    PdfPCell cminor1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cminor1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminor1.Colspan = 3;
                    cminor1.Border = 0;
                    table2.AddCell(cminor1);

                    table2.AddCell(cspace);
                    table2.AddCell(cspace);

                    PdfPCell cpt1 = new PdfPCell(new Phrase("1.  *Certified that I have no family as defined in para 2(g) of the Employees' Provident Fund Scheme,1952 and should I acquire a family hereafter the above nomination should be deemed as cancelled.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpt1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt1.Colspan = 6;
                    cpt1.Border = 0;
                    table2.AddCell(cpt1);

                    PdfPCell cpt2 = new PdfPCell(new Phrase("2.  *Certified that my father/mother is/are dependant upon me.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpt2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2.Colspan = 6;
                    cpt2.Border = 0;
                    table2.AddCell(cpt2);

                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);

                    PdfPCell cpt3 = new PdfPCell(new Phrase("I hereby furnish below particulars of the members of my family who would be eligible to receive Widow / Widower / Children Pension in the event of my death :-", Subheadfont));
                    cpt3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt3.Colspan = 6;
                    cpt3.Border = 0;
                    table2.AddCell(cpt3);

                    PdfPCell csign = new PdfPCell(new Phrase("Signature or thumb impression of the Subscriber", Subheadfont));
                    csign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csign.Colspan = 3;
                    csign.Border = 0;
                    //table2.AddCell(csign);
                    document.Add(table2);

                    table2.AddCell(cellspace);

                    document.NewPage();






                    PdfPTable table3 = new PdfPTable(6);
                    table3.TotalWidth = 550f;
                    table3.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };
                    table3.SetWidths(width2);

                    PdfPCell cpartBemp = new PdfPCell(new Phrase("", headfont));
                    cpartBemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cpartBemp.Colspan = 6;
                    cpartBemp.Border = 0;
                    table3.AddCell(cpartBemp);

                    PdfPCell cpartB = new PdfPCell(new Phrase("PART B (EPS) (Para 18)", headfont));
                    cpartB.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cpartB.Colspan = 6;
                    cpartB.Border = 0;
                    cpartB.PaddingTop = 5;
                    table3.AddCell(cpartB);

                    //table3.AddCell(cellspace);

                    PdfPCell cpartBdesc = new PdfPCell(new Phrase("I hereby furnish below particular of the members of my family who would be eligible to receive widow/ children pension in the event of my death", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpartBdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpartBdesc.Colspan = 6;
                    cpartBdesc.Border = 0;
                    cpartBdesc.PaddingTop = 5;
                    //table3.AddCell(cpartBdesc);

                    table3.AddCell(cspace);

                    PdfPCell csno = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    csno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csno.Colspan = 1;
                    // table3.AddCell(csno);

                    PdfPCell cnameaddress = new PdfPCell(new Phrase("Name of the family member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnameaddress.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnameaddress.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 1;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 1;
                    table3.AddCell(cnameaddress);

                    PdfPCell cndob = new PdfPCell(new Phrase("Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cndob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cndob.Colspan = 3;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(cndob);

                    PdfPCell cnrelationship = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnrelationship.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnrelationship.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(cnrelationship);

                    PdfPCell csnonoemp = new PdfPCell(new Phrase("Relation with member", bodyfont));
                    csnonoemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csnonoemp.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(csnonoemp);


                    PdfPCell csnonoemp123 = new PdfPCell(new Phrase("", bodyfont));
                    csnonoemp123.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csnonoemp123.Colspan = 1;
                    csnonoemp123.PaddingTop = 15f;
                    csnonoemp123.Border = 0;
                    //table3.AddCell(csnonoemp123);

                    string familydetails = "select *,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(varchar(10),DOfBirth,103) end as dbirth from emprelationships where EmpId='" + Idno + "'";
                    DataTable dtfamilydetails = Config.ExecuteReaderWithQueryAsync(familydetails).Result;


                    RelDOFBirth = "";

                    if (dtfamilydetails.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtfamilydetails.Rows.Count; i++)
                        {



                            Fname = dtfamilydetails.Rows[i]["RName"].ToString();
                            PdfPCell cellRName = new PdfPCell(new Phrase(Fname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellRName.HorizontalAlignment = 0;
                            cellRName.Colspan = 1;
                            cellRName.MinimumHeight = 30;
                            table3.AddCell(cellRName);

                            place = dtfamilydetails.Rows[i]["RPlace"].ToString();
                            if (place.Length > 0)
                            {
                                RelationPlace = place;
                            }
                            else if (RRes.Length > 0)
                            {
                                RelationPlace = RRes;
                            }
                            else
                            {

                                RelationPlace = "";
                            }

                            PdfPCell cellres1 = new PdfPCell(new Phrase(RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellres1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellres1.Colspan = 3;
                            cellres1.MinimumHeight = 20;
                            table3.AddCell(cellres1);

                            RelDOFBirth = dtfamilydetails.Rows[i]["dbirth"].ToString();
                            Relage = dtfamilydetails.Rows[i]["age"].ToString();

                            if (RelDOFBirth.Length > 0)
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    RelDOFBirth = "";
                                }
                                else
                                {
                                    RelDOFBirth = dtfamilydetails.Rows[i]["dbirth"].ToString();

                                }
                            }


                            relationAge = dtfamilydetails.Rows[i]["age"].ToString();

                            if (relationAge.Length > 0 && relationAge != "0")
                            {
                                relationAge = "\nAge: " + dtfamilydetails.Rows[i]["age"].ToString();
                            }
                            else
                            {

                                relationAge = "";
                            }







                            PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellreldob1.Colspan = 1;
                            cellreldob1.MinimumHeight = 20;
                            table3.AddCell(cellreldob1);



                            relationType = dtfamilydetails.Rows[i]["rtype"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);


                            }



                        }


                    }


                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);

                    PdfPCell cpnt1 = new PdfPCell(new Phrase("** Certified that I have no family as defined in para 2(vii) of Employees' Pension Scheme 1995 and should I acquire a family hereafter I shall furnish particulars thereon in the above form.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt1.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    cpnt1.Colspan = 6;
                    cpnt1.Border = 0;
                    cpnt1.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -100f;
                        sealImg.PaddingRight = -130f;
                        sealImg.PaddingTop = 0;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cpnt121 = new PdfPCell(new Phrase("Signature of thumb impression of the subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt121.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cpnt121.Colspan = 6;
                    cpnt121.PaddingTop = 10f;
                    cpnt121.Border = 0;
                    cpnt121.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt121);



                    PdfPCell cpnt2 = new PdfPCell(new Phrase("I hereby nominate the following person for receiving the monthly Pension (admissible under para 16(2)(g)(i) and (ii) in the event of my death without leaving any eligible family member for receiving pension.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt2.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    cpnt2.Colspan = 6;
                    cpnt2.Border = 0;
                    cpnt2.PaddingTop = 5;
                    cpnt2.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt2);


                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);


                    PdfPCell cnameaddressp3 = new PdfPCell(new Phrase("Name and Address of the Nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnameaddressp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnameaddressp3.Colspan = 3;
                    cnameaddressp3.MinimumHeight = 30;
                    table3.AddCell(cnameaddressp3);

                    PdfPCell cndobp3 = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cndobp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cndobp3.Colspan = 2;
                    table3.AddCell(cndobp3);

                    PdfPCell cnrelationshipp3 = new PdfPCell(new Phrase("Relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnrelationshipp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnrelationshipp3.Colspan = 1;
                    table3.AddCell(cnrelationshipp3);


                    if (dtpf.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtpf.Rows.Count; i++)
                        {


                            place = dtpf.Rows[i]["RPlace"].ToString();
                            if (place.Length > 0)
                            {
                                RelationPlace = place;
                            }
                            else if (RRes.Length > 0)
                            {
                                RelationPlace = RRes;
                            }
                            else
                            {

                                RelationPlace = "";
                            }

                            Fname = dtpf.Rows[i]["RName"].ToString();
                            PdfPCell cellRName = new PdfPCell(new Phrase(Fname + "\n" + RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellRName.HorizontalAlignment = 1;
                            cellRName.Colspan = 3;
                            cellRName.MinimumHeight = 30;
                            table3.AddCell(cellRName);



                            RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();


                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = "\nAge : " + dtpf.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + "  " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }







                            PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellreldob1.Colspan = 2;
                            cellreldob1.MinimumHeight = 20;
                            table3.AddCell(cellreldob1);



                            relationType = dtpf.Rows[i]["rtype"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);


                            }



                        }


                    }

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -30f;
                        sealImg.PaddingRight = -80f;
                        sealImg.PaddingTop = 30;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cdate = new PdfPCell(new Phrase("Date : ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cdate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdate.Colspan = 3;
                    cdate.PaddingTop = 5;
                    cdate.Border = 0;
                    table3.AddCell(cdate);

                    PdfPCell cnsign = new PdfPCell(new Phrase("Signature of thumb impression of the Subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnsign.Colspan = 3;
                    cnsign.Border = 0;
                    cnsign.PaddingTop = 30;
                    table3.AddCell(cnsign);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);



                    PdfPCell ForUse = new PdfPCell(new Phrase("FOR OFFICE USE ONLY", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    ForUse.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    ForUse.Colspan = 6;
                    ForUse.Border = 0;
                    table3.AddCell(ForUse);

                    PdfPCell DojPf = new PdfPCell(new Phrase("Dt. of Joining E.P.F         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojPf.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojPf.Colspan = 3;
                    DojPf.BorderWidthTop = 1;
                    DojPf.BorderWidthLeft = 1;
                    DojPf.BorderWidthRight = 1;
                    DojPf.BorderWidthBottom = 0;
                    table3.AddCell(DojPf);

                    PdfPCell DojPf1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojPf1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojPf1.Colspan = 1;
                    DojPf1.BorderWidthTop = 1;
                    DojPf1.BorderWidthLeft = 0;
                    DojPf1.BorderWidthRight = 1;
                    DojPf1.BorderWidthBottom = 0;
                    table3.AddCell(DojPf1);

                    PdfPCell Entries = new PdfPCell(new Phrase("ENTRIES VERIFIED", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    Entries.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Entries.Colspan = 2;
                    Entries.BorderWidthTop = 1;
                    Entries.BorderWidthLeft = 0;
                    Entries.BorderWidthRight = 1;
                    Entries.BorderWidthBottom = 0;
                    table3.AddCell(Entries);

                    PdfPCell PastService = new PdfPCell(new Phrase("Past Service         ..............Year", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    PastService.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService.Colspan = 3;
                    PastService.BorderWidthTop = 0;
                    PastService.BorderWidthLeft = 1;
                    PastService.BorderWidthRight = 1;
                    PastService.BorderWidthBottom = 0;
                    table3.AddCell(PastService);

                    PdfPCell PastService1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    PastService1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService1.Colspan = 1;
                    PastService1.BorderWidthTop = 0;
                    PastService1.BorderWidthLeft = 0;
                    PastService1.BorderWidthRight = 1;
                    PastService1.BorderWidthBottom = 0;
                    table3.AddCell(PastService1);

                    PdfPCell PastService2 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    PastService2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService2.Colspan = 2;
                    PastService2.BorderWidthTop = 0;
                    PastService2.BorderWidthLeft = 0;
                    PastService2.BorderWidthRight = 1;
                    PastService2.BorderWidthBottom = 0;
                    table3.AddCell(PastService2);

                    PdfPCell DojEps = new PdfPCell(new Phrase("Date of Joining EPS         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojEps.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps.Colspan = 3;
                    DojEps.BorderWidthTop = 0;
                    DojEps.BorderWidthLeft = 1;
                    DojEps.BorderWidthRight = 1;
                    DojEps.BorderWidthBottom = 1;
                    table3.AddCell(DojEps);

                    PdfPCell DojEps1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    DojEps1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps1.Colspan = 1;
                    DojEps1.BorderWidthTop = 0;
                    DojEps1.BorderWidthLeft = 0;
                    DojEps1.BorderWidthRight = 1;
                    DojEps1.BorderWidthBottom = 1;
                    table3.AddCell(DojEps1);

                    PdfPCell DojEps2 = new PdfPCell(new Phrase("DA            SS            A.A.O.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojEps2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps2.Colspan = 2;
                    DojEps2.BorderWidthTop = 0;
                    DojEps2.BorderWidthLeft = 0;
                    DojEps2.BorderWidthRight = 1;
                    DojEps2.BorderWidthBottom = 1;
                    table3.AddCell(DojEps2);




                    PdfPCell cstrike = new PdfPCell(new Phrase("** Strike out whichever is not applicable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cstrike.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cstrike.Colspan = 6;
                    cstrike.Border = 0;
                    // table3.AddCell(cstrike);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);




                    PdfPCell ccert = new PdfPCell(new Phrase("CERTIFICATE BY EMPLOYER", headfont));
                    ccert.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    ccert.Colspan = 6;
                    ccert.Border = 0;
                    table3.AddCell(ccert);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);


                    PdfPCell ccertdesc = new PdfPCell(new Phrase("Certified that the above declaration and nomination has been signed/thumb impressed before me by Shri/Smt./Kum. " + name + " employed in my establishment after he/she has read the entries/ entries been read over to him/her by me and got confirmed by him/her", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    ccertdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    ccertdesc.Colspan = 6;
                    ccertdesc.Border = 0;
                    ccertdesc.SetLeading(0f, 1.2f);
                    table3.AddCell(ccertdesc);

                    table3.AddCell(cpartBemp);

                    PdfPCell cnplace = new PdfPCell(new Phrase("For " + companyname, Subheadfont));
                    cnplace.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnplace.Colspan = 6;
                    cnplace.PaddingTop = 30;
                    cnplace.Border = 0;
                    cnplace.PaddingBottom = 30;
                    table3.AddCell(cnplace);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -400f;
                        sealImg.PaddingRight = -400f;
                        sealImg.PaddingBottom = -20;
                        sealImg.PaddingTop = 0;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cnemp = new PdfPCell(new Phrase("Authorized Signatory", Subheadfont));
                    cnemp.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnemp.Colspan = 6;
                    cnemp.Border = 0;
                    cnemp.PaddingTop = 30;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp);
                    table3.AddCell(cpartBemp);

                    PdfPCell cnemp11 = new PdfPCell(new Phrase("Designation : ", Subheadfont));
                    cnemp11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnemp11.Colspan = 6;
                    cnemp11.Border = 0;
                    cnemp11.PaddingTop = 25;
                    cnemp11.PaddingLeft = 270;
                    table3.AddCell(cnemp11);
                    table3.AddCell(cpartBemp);

                    PdfPCell cnemp11w2 = new PdfPCell(new Phrase("Date :", Subheadfont));
                    cnemp11w2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cnemp11w2.Colspan = 2;
                    cnemp11w2.Border = 0;
                    //cnemp11w2.PaddingTop = 25;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp11w2);

                    PdfPCell cnemp11w = new PdfPCell(new Phrase(companyname, Subheadfont));
                    cnemp11w.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnemp11w.Colspan = 4;
                    cnemp11w.Border = 0;
                    cnemp11w.PaddingTop = 10;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp11w);
                    //table3.AddCell(cpartBemp);



                    PdfPCell cnempaddrw = new PdfPCell(new Phrase(companyaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                    cnempaddrw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnempaddrw.Colspan = 6;
                    cnempaddrw.Border = 0;
                    cnempaddrw.PaddingTop = 10;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnempaddrw);
                    // table3.AddCell(cpartBemp);





                    PdfPCell cnbxsign = new PdfPCell(new Phrase(" ", bodyfont));
                    cnbxsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnbxsign.Colspan = 2;
                    cnbxsign.MinimumHeight = 100;
                    //table3.AddCell(cnbxsign);

                    PdfPCell cnsgn = new PdfPCell(new Phrase("  Signature of the employer or other Authorized Officers of the\n  Establishment \n\n\n  Destination __________________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cnsgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cnsgn.Colspan = 4;
                    cnsgn.Border = 0;
                    //cnsgn.PaddingTop = 30;
                    table3.AddCell(cnsgn);

                    document.Add(table3);

                    #endregion for PFForm
                }


                string filename = "PFForm.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

        }

        public void PFFormIndividual()
        {
            int Fontsize = 9;
            string fontsyle = "TIMES_ROMAN";

            var headfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK);
            var bodyfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD, BaseColor.BLACK);
            var bodyfontnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK);
            var Subheadnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.NORMAL, BaseColor.BLACK);
            var Subheadfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);

            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Variable Declaration

            string PFNO = "";
            string cmpnypfno = "";
            string Relage = "";
            string RelDOFBirth = "";
            string RelationPlace = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string FatherName = "";
            string SpouseName = "";
            string FSpouseName = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string Gender = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";
            string companyaddress = "";
            string companyname = "";

            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";
            string Emppresentaddress = "";
            string Emppermanentaddress = "";



            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";



            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string prphone = "";
            string pephone = "";
            string FatherSpouseName = "";

            #endregion

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #region for basic details

            string querypf = " select *,case Convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else Convert(varchar(10),DOfBirth,103) end as DateOfBirth from EmpRelationships where EmpId='" + Empid + "' and PFNominee='Y' ";
            DataTable dtpf = Config.ExecuteReaderWithQueryAsync(querypf).Result;

            string residence = ""; string place = "";
            int sno = 1;


            string query2 = "select cities.city,* from emprelationships  left join empdetails on empdetails.empid=emprelationships.empid inner join cities on cities.cityid= empdetails.pecity where emprelationships.empid='" + txtEmpid.Text + "' ";
            DataTable dtquery2 = Config.ExecuteReaderWithQueryAsync(query2).Result;

            string RRes = ""; string RRes1 = "";
            if (dtquery2.Rows.Count > 0)
            {
                for (int i = 0; i < dtquery2.Rows.Count; i++)
                {
                    RRes1 = dtquery2.Rows[i]["RResidence"].ToString();
                    if (RRes1 == "Yes")
                    {
                        RRes = dtquery2.Rows[i]["city"].ToString();
                    }


                }

            }

            string cmpnyinfo = "select * from CompanyInfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(cmpnyinfo).Result;



            if (DtCompanyInfo.Rows.Count > 0)
            {

                cmpnyinfo = DtCompanyInfo.Rows[0]["PFNo"].ToString();

            }

            #endregion for basic details



            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirths"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();
                companyname = dtEmpdetails.Rows[0]["CompanyName"].ToString();
                companyaddress = dtEmpdetails.Rows[0]["CompanyAddress"].ToString();

                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }

                PFNO = dtEmpdetails.Rows[0]["PFNo"].ToString();
                // cmpnypfno = dtEmpdetails.Rows[0]["PFNo"].ToString();

                Emppresentaddress = dtEmpdetails.Rows[0]["Emppresentaddress"].ToString();
                Emppermanentaddress = dtEmpdetails.Rows[0]["Emppermanentaddress"].ToString();



                #endregion
            }

            #region for PFForm
            MemoryStream ms = new MemoryStream();
            Document document = new Document(PageSize.A4);
            var writer = PdfWriter.GetInstance(document, ms);
            document.Open();

            PdfPTable table = new PdfPTable(3);
            table.TotalWidth = 550f;
            table.LockedWidth = true;
            float[] width = new float[] { 3f, 0.3f, 3f };
            table.SetWidths(width);

            #region for image
            string imagepath2 = Server.MapPath("assets/EPFLogo.png");
            string imagepath3 = Server.MapPath("assets/seal.jpg");
            string imagepathArrow = Server.MapPath("assets/Arrow.png");
            if (File.Exists(imagepath2))
            {
                iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                // gif2.SpacingBefore = 50;
                gif2.ScalePercent(50f);
                gif2.SetAbsolutePosition(50f, 720f);
                document.Add(new Paragraph(" "));
                document.Add(gif2);
            }
            #endregion

            PdfPCell cellstart = new PdfPCell(new Phrase("Employee : " + Idno + "   PF Declaration", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellstart.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellstart.Colspan = 3;
            cellstart.Border = 0;
            cellstart.PaddingTop = -30f;
            table.AddCell(cellstart);

            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellspace.Colspan = 3;
            cellspace.Border = 0;
            //cellspace.PaddingTop = -5;
            table.AddCell(cellspace);

            PdfPCell cellheading = new PdfPCell(new Phrase("EMPLOYEES' PROVIDENT FUND ORGANISATION", headfont));
            cellheading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading.Colspan = 3;
            cellheading.Border = 0;
            table.AddCell(cellheading);


            PdfPCell cellheading1 = new PdfPCell(new Phrase("NOMINATION AND DECLARATION FORM ", Subheadfont));
            cellheading1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading1.Colspan = 3;
            cellheading1.PaddingLeft = -30f;
            cellheading1.Border = 0;
            table.AddCell(cellheading1);

            PdfPCell cellheadingg1 = new PdfPCell(new Phrase("FOR UNEXEMPTED / EXEMPTED ESTABLISHMENTS", Subheadfont));
            cellheadingg1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheadingg1.Colspan = 3;
            cellheadingg1.Border = 0;
            table.AddCell(cellheadingg1);

            table.AddCell(cellspace);

            PdfPCell cellheading2 = new PdfPCell(new Phrase("Declaration and Nomination form under the Employees' Provident Funds and Employee's Pension Scheme", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
            cellheading2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading2.Colspan = 3;
            cellheading2.Border = 0;
            table.AddCell(cellheading2);

            PdfPCell cellheading3 = new PdfPCell(new Phrase("(Paragraph 33 & 61 of the Employees' Provident Fund Schema, 1952 and Paragraph 18 of the Employees' Pension Scheme, 1995 )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
            cellheading3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellheading3.Colspan = 3;
            cellheading3.Border = 0;

            table.AddCell(cellheading3);

            table.AddCell(cellspace);


            PdfPCell cellnamehead = new PdfPCell(new Phrase("1. Name :", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellnamehead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellnamehead.Colspan = 0;
            cellnamehead.Border = 0;
            table.AddCell(cellnamehead);

            PdfPCell cellnamecol = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellnamecol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellnamecol.Colspan = 0;
            cellnamecol.Border = 0;
            table.AddCell(cellnamecol);

            //PdfPCell cellname = new PdfPCell();
            //var cellaaffsc = new Phrase();
            //cellaaffsc.Add(new Chunk(name + "                        Employee No    ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            //cellaaffsc.Add(new Chunk(Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            //cellname.AddElement(cellaaffsc);

            PdfPCell cellname = new PdfPCell(new Phrase(name + " Employee No : " + Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellname.Colspan = 0;
            cellname.Border = 0;
            //cellname.PaddingLeft = -100f;
            table.AddCell(cellname);

            table.AddCell(cellspace);


            PdfPCell cellFathershead = new PdfPCell(new Phrase("2. Father's/Husband's Name\n    (In case of married woman)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellFathershead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellFathershead.Colspan = 0;
            cellFathershead.Border = 0;
            table.AddCell(cellFathershead);

            PdfPCell cellFatherscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellFatherscol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellFatherscol.Colspan = 0;
            cellFatherscol.Border = 0;
            table.AddCell(cellFatherscol);

            if (FatherName.Length > 0)
            {
                FatherSpouseName = FatherName;
            }
            else if (SpouseName.Length > 0)
            {
                FatherSpouseName = SpouseName;
            }
            else if (FSpouseName.Length > 0)
            {
                FatherSpouseName = FSpouseName;
            }
            else
            {
                FatherSpouseName = "";
            }

            PdfPCell cellFathername = new PdfPCell(new Phrase(FatherSpouseName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellFathername.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellFathername.Colspan = 0;
            cellFathername.Border = 0;
            table.AddCell(cellFathername);

            table.AddCell(cellspace);


            PdfPCell cellDOBhead = new PdfPCell(new Phrase("3. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellDOBhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOBhead.Colspan = 0;
            cellDOBhead.Border = 0;
            table.AddCell(cellDOBhead);

            PdfPCell cellDOBcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellDOBcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOBcol.Colspan = 0;
            cellDOBcol.Border = 0;
            table.AddCell(cellDOBcol);

            PdfPCell cellDOB = new PdfPCell(new Phrase(dateofbirth.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellDOB.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOB.Colspan = 0;
            cellDOB.Border = 0;
            table.AddCell(cellDOB);

            table.AddCell(cellspace);

            PdfPCell cellSexhead = new PdfPCell(new Phrase("4. Gender", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellSexhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellSexhead.Colspan = 0;
            cellSexhead.Border = 0;
            table.AddCell(cellSexhead);

            PdfPCell cellSexcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellSexcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellSexcol.Colspan = 0;
            cellSexcol.Border = 0;
            table.AddCell(cellSexcol);

            PdfPCell cellSex = new PdfPCell(new Phrase(Gender.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellSex.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellSex.Colspan = 0;
            cellSex.Border = 0;
            table.AddCell(cellSex);

            table.AddCell(cellspace);

            PdfPCell cellMSHead = new PdfPCell(new Phrase("5. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellMSHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellMSHead.Colspan = 0;
            cellMSHead.Border = 0;
            table.AddCell(cellMSHead);

            PdfPCell cellMScol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellMScol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellMScol.Colspan = 0;
            cellMScol.Border = 0;
            table.AddCell(cellMScol);

            PdfPCell cellMS = new PdfPCell(new Phrase(maritalstatus.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellMS.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellMS.Colspan = 0;
            cellMS.Border = 0;
            table.AddCell(cellMS);

            table.AddCell(cellspace);

            PdfPCell cellANHead = new PdfPCell(new Phrase("6. Account No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellANHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellANHead.Colspan = 0;
            cellANHead.Border = 0;
            table.AddCell(cellANHead);

            PdfPCell cellANcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellANcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellANcol.Colspan = 0;
            cellANcol.Border = 0;
            table.AddCell(cellANcol);

            PdfPCell cellAN = new PdfPCell(new Phrase(cmpnyinfo + "" + PFNO, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellAN.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellAN.Colspan = 0;
            cellAN.Border = 0;
            table.AddCell(cellAN);

            table.AddCell(cellspace);



            PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("7. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPerminentaddr.HorizontalAlignment = 0;
            cellPerminentaddr.Colspan = 0;
            cellPerminentaddr.Border = 0;
            table.AddCell(cellPerminentaddr);

            PdfPCell cellPerminentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPerminentaddr2.HorizontalAlignment = 0;
            cellPerminentaddr2.Colspan = 0;
            cellPerminentaddr2.Border = 0;

            table.AddCell(cellPerminentaddr2);



            #region Permanent address String array

            string[] PeAdress = new string[8];

            if (pelmark.Length > 0)
            {
                PeAdress[0] = "Landmark :  " + pelmark + ", ";
            }
            else
            {
                PeAdress[0] = "";
            }
            if (peTown.Length > 0)
            {
                PeAdress[1] = "Vill : " + peTown + ", ";
            }
            else
            {
                PeAdress[1] = "";
            }

            if (pePostOffice.Length > 0)
            {
                PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
            }
            else
            {
                PeAdress[2] = "";
            }
            if (peTaluka.Length > 0)
            {
                PeAdress[3] = "Taluka : " + peTaluka + ", ";
            }
            else
            {
                PeAdress[3] = " ";
            }
            if (pePoliceStation.Length > 0)
            {
                PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
            }
            else
            {
                PeAdress[4] = " ";
            }
            if (pecity.Length > 0)
            {
                PeAdress[5] = "City : " + pecity + ", ";
            }
            else
            {
                PeAdress[5] = " ";
            }

            if (peState.Length > 0)
            {
                PeAdress[6] = "State : " + peState + " ";
            }
            else
            {
                PeAdress[6] = ".";
            }


            if (pePincode.Length > 0)
            {
                PeAdress[7] = ", Pincode : " + pePincode + ".";
            }
            else
            {
                PeAdress[7] = "";
            }

            string Address2 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address2 += PeAdress[i];
            }


            #endregion


            PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellPerminentaddr1.HorizontalAlignment = 0;
            cellPerminentaddr1.Colspan = 0;
            cellPerminentaddr1.Border = 0;
            //cellPerminentaddr1.PaddingLeft = -140;
            table.AddCell(cellPerminentaddr1);

            table.AddCell(cellspace);


            PdfPCell cellPresentaddr = new PdfPCell(new Phrase("8. Current Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPresentaddr.HorizontalAlignment = 0;
            cellPresentaddr.Colspan = 0;
            cellPresentaddr.Border = 0;
            table.AddCell(cellPresentaddr);

            PdfPCell cellPresentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPresentaddr2.HorizontalAlignment = 0;
            cellPresentaddr2.Colspan = 0;
            cellPresentaddr2.Border = 0;
            table.AddCell(cellPresentaddr2);

            #region Present address String array

            string[] PrAdress = new string[8];
            if (prLmark.Length > 0)
            {
                PrAdress[0] = "Landmark :  " + prLmark + ", ";
            }
            else
            {
                PrAdress[0] = "";
            }
            if (prTown.Length > 0)
            {
                PrAdress[1] = "Vill :  " + prTown + ", ";
            }
            else
            {
                PrAdress[1] = "";
            }

            if (prPostOffice.Length > 0)
            {
                PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
            }
            else
            {
                PrAdress[2] = "";
            }
            if (prTaluka.Length > 0)
            {
                PrAdress[3] = "Taluka : " + prTaluka + ", ";
            }
            else
            {
                PrAdress[3] = "";
            }
            if (prPoliceStation.Length > 0)
            {
                PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
            }
            else
            {
                PrAdress[4] = "";
            }
            if (prcity.Length > 0)
            {
                PrAdress[5] = "City : " + prcity + ", ";
            }
            else
            {
                PrAdress[5] = "";
            }

            if (prState.Length > 0)
            {
                PrAdress[6] = "State : " + prState + " ";
            }
            else
            {
                PrAdress[6] = ".";
            }


            if (prPincode.Length > 0)
            {
                PrAdress[7] = ", Pincode : " + prPincode + ".";
            }
            else
            {
                PrAdress[7] = "";
            }

            string Address1 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address1 += PrAdress[i];
            }


            #endregion

            PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Emppresentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellPresentaddr1.HorizontalAlignment = 0;
            cellPresentaddr1.Colspan = 0;
            cellPresentaddr1.Border = 0;
            //cellPresentaddr1.PaddingLeft = -140;i
            table.AddCell(cellPresentaddr1);
            table.AddCell(cellspace);

            table.AddCell(cellspace);


            PdfPCell cellDOJHead = new PdfPCell(new Phrase("9. Date of Joining", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellDOJHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOJHead.Colspan = 0;
            cellDOJHead.Border = 0;
            //table.AddCell(cellDOJHead);

            PdfPCell cellDOJcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellDOJcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOJcol.Colspan = 0;
            cellDOJcol.Border = 0;
            //table.AddCell(cellDOJcol);

            PdfPCell cellDOJ = new PdfPCell(new Phrase(date.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            cellDOJ.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellDOJ.Colspan = 0;
            cellDOJ.Border = 0;
            //table.AddCell(cellDOJ);

            table.AddCell(cellspace);
            table.AddCell(cellspace);
            table.AddCell(cellspace);

            PdfPCell cellPartA = new PdfPCell(new Phrase("PART - A (EPF) Para 18", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cellPartA.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellPartA.Colspan = 3;
            cellPartA.Border = 0;
            table.AddCell(cellPartA);

            PdfPCell cellPartAdesc = new PdfPCell(new Phrase("I hereby nominate the person(s)/cancel the nomination made by me previously and nominate the person(s), mentioned below to receive the amount standing to my credit in the Employee's Provident Fund in the event of my death.", Subheadfont));
            cellPartAdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellPartAdesc.Colspan = 3;
            cellPartAdesc.Border = 0;
            cellPartAdesc.PaddingTop = 20;
            table.AddCell(cellPartAdesc);

            document.Add(table);

            PdfPTable table2 = new PdfPTable(6);
            table2.TotalWidth = 550f;
            table2.LockedWidth = true;
            float[] widths = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
            table2.SetWidths(widths);

            PdfPCell cspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cspace.Colspan = 6;
            cspace.Border = 0;
            table2.AddCell(cspace);

            PdfPCell cname = new PdfPCell(new Phrase("Name & Address Nominee/Nominees  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cname.Colspan = 2;
            table2.AddCell(cname);

            PdfPCell caddress = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            caddress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            caddress.Colspan = 0;
            //table2.AddCell(caddress);

            PdfPCell crelationship = new PdfPCell(new Phrase("Nominee's relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            crelationship.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            crelationship.Colspan = 2;
            table2.AddCell(crelationship);

            PdfPCell cdob = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cdob.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cdob.Colspan = 2;
            table2.AddCell(cdob);






            if (dtpf.Rows.Count > 0)
            {
                for (int i = 0; i < dtpf.Rows.Count; i++)
                {
                    Fname = dtpf.Rows[i]["RName"].ToString();
                    PdfPCell cnamedesc = new PdfPCell(new Phrase(Fname, bodyfontnormal));
                    cnamedesc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnamedesc.Colspan = 2;
                    cnamedesc.MinimumHeight = 30;
                    table2.AddCell(cnamedesc);

                    place = dtpf.Rows[i]["RPlace"].ToString();
                    PdfPCell caddressdesc = new PdfPCell(new Phrase(place, bodyfontnormal));
                    caddressdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    caddressdesc.Colspan = 0;
                    // table2.AddCell(caddressdesc);

                    relationType = dtpf.Rows[i]["RType"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell crelationshipdesc = new PdfPCell(new Phrase(relationType, bodyfontnormal));
                        crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        crelationshipdesc.Colspan = 2;
                        table2.AddCell(crelationshipdesc);
                    }
                    else
                    {

                        PdfPCell crelationshipdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                        crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                        crelationshipdesc.Colspan = 2;
                        table2.AddCell(crelationshipdesc);
                    }

                    Relage = dtpf.Rows[i]["age"].ToString();
                    RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();
                    if (Relage == "0")
                    {
                        Relage = "";
                    }
                    else if (Relage.Length > 0 && Relage != "0")
                    {
                        Relage = dtpf.Rows[i]["age"].ToString();
                    }



                    if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                    {
                        RelDOFBirth = RelDOFBirth + "\nAge : " + Relage;
                    }
                    else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                    {
                        RelDOFBirth = Relage;
                    }
                    else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                    {
                        RelDOFBirth = RelDOFBirth;
                    }



                    PdfPCell cdobnodesc = new PdfPCell(new Phrase(RelDOFBirth, bodyfontnormal));
                    cdobnodesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdobnodesc.Colspan = 2;
                    table2.AddCell(cdobnodesc);

                    PdfPCell camtdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                    camtdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camtdesc.Colspan = 0;
                    //table2.AddCell(camtdesc);

                    PdfPCell cminordesc = new PdfPCell(new Phrase("", bodyfontnormal));
                    cminordesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminordesc.Colspan = 0;
                    //table2.AddCell(cminordesc);




                }


            }

            PdfPCell camt = new PdfPCell(new Phrase("Total amount of share of accumulation in Provident Fund to be paid to each nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            camt.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            camt.Colspan = 3;
            camt.Border = 0;
            table2.AddCell(camt);

            PdfPCell camt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            camt11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            camt11.Colspan = 3;
            camt11.Border = 0;
            table2.AddCell(camt11);

            PdfPCell cminor = new PdfPCell(new Phrase("If the nominee is a minor, name & relationship & address of the guardian who may receive the amount during the minority of nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cminor.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cminor.Colspan = 3;
            cminor.Border = 0;
            table2.AddCell(cminor);

            PdfPCell cminor1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cminor1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cminor1.Colspan = 3;
            cminor1.Border = 0;
            table2.AddCell(cminor1);

            table2.AddCell(cspace);
            table2.AddCell(cspace);

            PdfPCell cpt1 = new PdfPCell(new Phrase("1.  *Certified that I have no family as defined in para 2(g) of the Employees' Provident Fund Scheme,1952 and should I acquire a family hereafter the above nomination should be deemed as cancelled.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpt1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpt1.Colspan = 6;
            cpt1.Border = 0;
            table2.AddCell(cpt1);

            PdfPCell cpt2 = new PdfPCell(new Phrase("2.  *Certified that my father/mother is/are dependant upon me.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpt2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpt2.Colspan = 6;
            cpt2.Border = 0;
            table2.AddCell(cpt2);

            PdfPCell cpt3 = new PdfPCell(new Phrase("I hereby furnish below particulars of the members of my family who would be eligible to receive Widow / Widower / Children Pension in the event of my death :-", Subheadfont));
            cpt3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpt3.Colspan = 6;
            cpt3.Border = 0;
            table2.AddCell(cpt3);

            PdfPCell csign = new PdfPCell(new Phrase("Signature or thumb impression of the Subscriber", Subheadfont));
            csign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csign.Colspan = 3;
            csign.Border = 0;
            //table2.AddCell(csign);
            document.Add(table2);

            table2.AddCell(cellspace);

            document.NewPage();






            PdfPTable table3 = new PdfPTable(6);
            table3.TotalWidth = 550f;
            table3.LockedWidth = true;
            float[] width2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };
            table3.SetWidths(width2);

            PdfPCell cpartBemp = new PdfPCell(new Phrase("", headfont));
            cpartBemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cpartBemp.Colspan = 6;
            cpartBemp.Border = 0;
            table3.AddCell(cpartBemp);

            PdfPCell cpartB = new PdfPCell(new Phrase("PART B (EPS) (Para 18)", headfont));
            cpartB.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cpartB.Colspan = 6;
            cpartB.Border = 0;
            cpartB.PaddingTop = 5;
            table3.AddCell(cpartB);

            //table3.AddCell(cellspace);

            PdfPCell cpartBdesc = new PdfPCell(new Phrase("I hereby furnish below particular of the members of my family who would be eligible to receive widow/ children pension in the event of my death", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpartBdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cpartBdesc.Colspan = 6;
            cpartBdesc.Border = 0;
            cpartBdesc.PaddingTop = 5;
            //table3.AddCell(cpartBdesc);

            table3.AddCell(cspace);

            PdfPCell csno = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            csno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csno.Colspan = 1;
            // table3.AddCell(csno);

            PdfPCell cnameaddress = new PdfPCell(new Phrase("Name of the family member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnameaddress.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameaddress.Colspan = 1;
            cnameaddress.BorderWidthBottom = 1;
            cnameaddress.BorderWidthLeft = 1;
            cnameaddress.BorderWidthRight = 0;
            cnameaddress.BorderWidthTop = 1;
            table3.AddCell(cnameaddress);

            PdfPCell cndob = new PdfPCell(new Phrase("Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cndob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndob.Colspan = 3;
            cnameaddress.BorderWidthBottom = 1;
            cnameaddress.BorderWidthLeft = 0;
            cnameaddress.BorderWidthRight = 0;
            cnameaddress.BorderWidthTop = 0;
            table3.AddCell(cndob);

            PdfPCell cnrelationship = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnrelationship.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationship.Colspan = 1;
            cnameaddress.BorderWidthBottom = 1;
            cnameaddress.BorderWidthLeft = 0;
            cnameaddress.BorderWidthRight = 0;
            cnameaddress.BorderWidthTop = 0;
            table3.AddCell(cnrelationship);

            PdfPCell csnonoemp = new PdfPCell(new Phrase("Relation with member", bodyfont));
            csnonoemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csnonoemp.Colspan = 1;
            cnameaddress.BorderWidthBottom = 1;
            cnameaddress.BorderWidthLeft = 0;
            cnameaddress.BorderWidthRight = 0;
            cnameaddress.BorderWidthTop = 0;
            table3.AddCell(csnonoemp);


            PdfPCell csnonoemp123 = new PdfPCell(new Phrase("", bodyfont));
            csnonoemp123.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            csnonoemp123.Colspan = 1;
            csnonoemp123.PaddingTop = 15f;
            csnonoemp123.Border = 0;
            // table3.AddCell(csnonoemp123);


            if (dtEmpdetails.Rows.Count > 0)
            {
                for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                {



                    Fname = dtEmpdetails.Rows[i]["RName"].ToString();
                    PdfPCell cellRName = new PdfPCell(new Phrase(Fname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRName.HorizontalAlignment = 0;
                    cellRName.Colspan = 1;
                    //cellRName.Border = 0;
                    cellRName.MinimumHeight = 30;
                    table3.AddCell(cellRName);

                    place = dtEmpdetails.Rows[i]["RPlace"].ToString();
                    if (place.Length > 0)
                    {
                        RelationPlace = place;
                    }
                    else if (RRes.Length > 0)
                    {
                        RelationPlace = RRes;
                    }
                    else
                    {

                        RelationPlace = "";
                    }

                    PdfPCell cellres1 = new PdfPCell(new Phrase(RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellres1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellres1.Colspan = 3;
                    //cellres1.Border = 0;
                    cellres1.MinimumHeight = 20;
                    table3.AddCell(cellres1);



                    if (RelDOFBirth.Length > 0)
                    {
                        if (RelDOFBirth == "01/01/1900")
                        {
                            RelDOFBirth = "";
                        }
                        else
                        {
                            RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();

                        }
                    }


                    relationAge = dtEmpdetails.Rows[i]["age"].ToString();

                    if (relationAge.Length > 0 && relationAge != "0")
                    {
                        relationAge = "\nAge: " + dtEmpdetails.Rows[i]["age"].ToString();
                    }
                    else
                    {

                        relationAge = "";
                    }







                    PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellreldob1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellreldob1.Colspan = 1;
                    //cellreldob1.Border = 0;
                    cellreldob1.MinimumHeight = 20;
                    table3.AddCell(cellreldob1);



                    relationType = dtEmpdetails.Rows[i]["rtype"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 0;
                        //cellRType.Border = 0;
                        cellRType.Colspan = 1;
                        table3.AddCell(cellRType);
                    }
                    else
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 0;
                        cellRType.Colspan = 1;
                        table3.AddCell(cellRType);


                    }



                }


            }

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);

            PdfPCell cpnt1 = new PdfPCell(new Phrase("** Certified that I have no family as defined in para 2(vii) of Employees' Pension Scheme 1995 and should I acquire a family hereafter I shall furnish particulars thereon in the above form.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpnt1.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
            cpnt1.Colspan = 6;
            cpnt1.Border = 0;
            cpnt1.SetLeading(0f, 1.2f);
            table3.AddCell(cpnt1);

            if (File.Exists(imagepathArrow))
            {
                iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                // gif2.SpacingBefore = 50;
                gif2.ScalePercent(80f);
                gif2.SetAbsolutePosition(65f, 925f);
                PdfPCell sealImg = new PdfPCell();
                sealImg.AddElement(gif2);
                sealImg.Border = 0;
                sealImg.HorizontalAlignment = 2;
                sealImg.Colspan = 6;
                //sealImg.PaddingLeft = -60f;
                sealImg.PaddingBottom = -100f;
                sealImg.PaddingRight = -130f;
                sealImg.PaddingTop = 0;
                table3.AddCell(sealImg);
                //    document.Add(new Paragraph(" "));
                //    document.Add(gif2);
            }

            PdfPCell cpnt121 = new PdfPCell(new Phrase("Signature of thumb impression of the subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpnt121.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
            cpnt121.Colspan = 6;
            cpnt121.PaddingTop = 10f;
            cpnt121.Border = 0;
            cpnt121.SetLeading(0f, 1.2f);
            table3.AddCell(cpnt121);



            PdfPCell cpnt2 = new PdfPCell(new Phrase("I hereby nominate the following person for receiving the monthly Pension (admissible under para 16(2)(g)(i) and (ii) in the event of my death without leaving any eligible family member for receiving pension.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cpnt2.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
            cpnt2.Colspan = 6;
            cpnt2.Border = 0;
            cpnt2.PaddingTop = 5;
            cpnt2.SetLeading(0f, 1.2f);
            table3.AddCell(cpnt2);


            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);


            PdfPCell cnameaddressp3 = new PdfPCell(new Phrase("Name and Address of the Nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnameaddressp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnameaddressp3.Colspan = 3;
            cnameaddressp3.MinimumHeight = 30;
            table3.AddCell(cnameaddressp3);

            PdfPCell cndobp3 = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cndobp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cndobp3.Colspan = 2;
            table3.AddCell(cndobp3);

            PdfPCell cnrelationshipp3 = new PdfPCell(new Phrase("Relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnrelationshipp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnrelationshipp3.Colspan = 1;
            table3.AddCell(cnrelationshipp3);

            if (dtpf.Rows.Count > 0)
            {
                for (int i = 0; i < dtpf.Rows.Count; i++)
                {

                    place = dtpf.Rows[i]["RPlace"].ToString();
                    if (place.Length > 0)
                    {
                        RelationPlace = place;
                    }
                    else if (RRes.Length > 0)
                    {
                        RelationPlace = RRes;
                    }
                    else
                    {

                        RelationPlace = "";
                    }

                    Fname = dtpf.Rows[i]["RName"].ToString();
                    PdfPCell cellRName = new PdfPCell(new Phrase(Fname + "\n" + RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRName.HorizontalAlignment = 1;
                    cellRName.Colspan = 3;
                    cellRName.MinimumHeight = 30;
                    table3.AddCell(cellRName);






                    if (RelDOFBirth.Length > 0)
                    {
                        if (RelDOFBirth == "01/01/1900")
                        {
                            RelDOFBirth = "";
                        }
                        else
                        {
                            RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();

                        }
                    }


                    relationAge = dtpf.Rows[i]["age"].ToString();

                    if (relationAge.Length > 0 && relationAge != "0")
                    {
                        relationAge = "\nAge: " + dtpf.Rows[i]["age"].ToString();
                    }
                    else
                    {

                        relationAge = "";
                    }







                    PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellreldob1.Colspan = 2;
                    cellreldob1.MinimumHeight = 20;
                    table3.AddCell(cellreldob1);



                    relationType = dtpf.Rows[i]["rtype"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 1;
                        table3.AddCell(cellRType);
                    }
                    else
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 1;
                        table3.AddCell(cellRType);


                    }



                }


            }


            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);


            if (File.Exists(imagepathArrow))
            {
                iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                // gif2.SpacingBefore = 50;
                gif2.ScalePercent(80f);
                gif2.SetAbsolutePosition(65f, 925f);
                PdfPCell sealImg = new PdfPCell();
                sealImg.AddElement(gif2);
                sealImg.Border = 0;
                sealImg.HorizontalAlignment = 2;
                sealImg.Colspan = 6;
                //sealImg.PaddingLeft = -60f;
                sealImg.PaddingBottom = -30f;
                sealImg.PaddingRight = -80f;
                sealImg.PaddingTop = 30;
                table3.AddCell(sealImg);
                //    document.Add(new Paragraph(" "));
                //    document.Add(gif2);
            }

            PdfPCell cdate = new PdfPCell(new Phrase("Date : ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cdate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cdate.Colspan = 3;
            cdate.PaddingTop = 5;
            cdate.Border = 0;
            table3.AddCell(cdate);

            PdfPCell cnsign = new PdfPCell(new Phrase("Signature of thumb impression of the Subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            cnsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnsign.Colspan = 3;
            cnsign.Border = 0;
            cnsign.PaddingTop = 30;
            table3.AddCell(cnsign);

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);



            PdfPCell ForUse = new PdfPCell(new Phrase("FOR OFFICE USE ONLY", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            ForUse.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            ForUse.Colspan = 6;
            ForUse.Border = 0;
            table3.AddCell(ForUse);

            PdfPCell DojPf = new PdfPCell(new Phrase("Dt. of Joining E.P.F         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            DojPf.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            DojPf.Colspan = 3;
            DojPf.BorderWidthTop = 1;
            DojPf.BorderWidthLeft = 1;
            DojPf.BorderWidthRight = 1;
            DojPf.BorderWidthBottom = 0;
            table3.AddCell(DojPf);

            PdfPCell DojPf1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            DojPf1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            DojPf1.Colspan = 1;
            DojPf1.BorderWidthTop = 1;
            DojPf1.BorderWidthLeft = 0;
            DojPf1.BorderWidthRight = 1;
            DojPf1.BorderWidthBottom = 0;
            table3.AddCell(DojPf1);

            PdfPCell Entries = new PdfPCell(new Phrase("ENTRIES VERIFIED", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            Entries.Colspan = 2;
            Entries.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            Entries.BorderWidthTop = 1;
            Entries.BorderWidthLeft = 0;
            Entries.BorderWidthRight = 1;
            Entries.BorderWidthBottom = 0;
            table3.AddCell(Entries);

            PdfPCell PastService = new PdfPCell(new Phrase("Past Service         ..............Year", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            PastService.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            PastService.Colspan = 3;
            PastService.BorderWidthTop = 0;
            PastService.BorderWidthLeft = 1;
            PastService.BorderWidthRight = 1;
            PastService.BorderWidthBottom = 0;
            table3.AddCell(PastService);

            PdfPCell PastService1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            PastService1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            PastService1.Colspan = 1;
            PastService1.BorderWidthTop = 0;
            PastService1.BorderWidthLeft = 0;
            PastService1.BorderWidthRight = 1;
            PastService1.BorderWidthBottom = 0;
            table3.AddCell(PastService1);

            PdfPCell PastService2 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            PastService2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            PastService2.Colspan = 2;
            PastService2.BorderWidthTop = 0;
            PastService2.BorderWidthLeft = 0;
            PastService2.BorderWidthRight = 1;
            PastService2.BorderWidthBottom = 0;
            table3.AddCell(PastService2);

            PdfPCell DojEps = new PdfPCell(new Phrase("Date of Joining EPS         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            DojEps.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            DojEps.Colspan = 3;
            DojEps.BorderWidthTop = 0;
            DojEps.BorderWidthLeft = 1;
            DojEps.BorderWidthRight = 1;
            DojEps.BorderWidthBottom = 1;
            table3.AddCell(DojEps);

            PdfPCell DojEps1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
            DojEps1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            DojEps1.Colspan = 1;
            DojEps1.BorderWidthTop = 0;
            DojEps1.BorderWidthLeft = 0;
            DojEps1.BorderWidthRight = 1;
            DojEps1.BorderWidthBottom = 1;
            table3.AddCell(DojEps1);

            PdfPCell DojEps2 = new PdfPCell(new Phrase("DA            SS            A.A.O.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
            DojEps2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            DojEps2.Colspan = 2;
            DojEps2.BorderWidthTop = 0;
            DojEps2.BorderWidthLeft = 0;
            DojEps2.BorderWidthRight = 1;
            DojEps2.BorderWidthBottom = 1;
            table3.AddCell(DojEps2);




            PdfPCell cstrike = new PdfPCell(new Phrase("** Strike out whichever is not applicable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
            cstrike.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cstrike.Colspan = 6;
            cstrike.Border = 0;
            // table3.AddCell(cstrike);

            table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);




            PdfPCell ccert = new PdfPCell(new Phrase("CERTIFICATE BY EMPLOYER", headfont));
            ccert.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            ccert.Colspan = 6;
            ccert.Border = 0;
            table3.AddCell(ccert);

            // table3.AddCell(cpartBemp);
            //table3.AddCell(cpartBemp);
            table3.AddCell(cpartBemp);


            PdfPCell ccertdesc = new PdfPCell(new Phrase("Certified that the above declaration and nomination has been signed/thumb impressed before me by Shri/Smt./Kum. " + name + " employed in my establishment after he/she has read the entries/ entries been read over to him/her by me and got confirmed by him/her", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            ccertdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
            ccertdesc.Colspan = 6;
            ccertdesc.Border = 0;
            ccertdesc.SetLeading(0f, 1.2f);
            table3.AddCell(ccertdesc);

            table3.AddCell(cpartBemp);

            PdfPCell cnplace = new PdfPCell(new Phrase("For " + companyname, Subheadfont));
            cnplace.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
            cnplace.Colspan = 6;
            cnplace.PaddingTop = 10;
            cnplace.Border = 0;
            cnplace.PaddingBottom = 30;
            table3.AddCell(cnplace);

            if (File.Exists(imagepath3))
            {
                iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath3);

                gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                // gif2.SpacingBefore = 50;
                gif2.ScalePercent(80f);
                gif2.SetAbsolutePosition(65f, 925f);
                PdfPCell sealImg = new PdfPCell();
                sealImg.AddElement(gif2);
                sealImg.Border = 0;
                sealImg.HorizontalAlignment = 2;
                sealImg.Colspan = 6;
                //sealImg.PaddingLeft = -400f;
                sealImg.PaddingRight = -400f;
                sealImg.PaddingTop = 0;
                table3.AddCell(sealImg);
                //    document.Add(new Paragraph(" "));
                //    document.Add(gif2);
            }

            PdfPCell cnemp = new PdfPCell(new Phrase("Authorized Signatory", Subheadfont));
            cnemp.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
            cnemp.Colspan = 6;
            cnemp.Border = 0;
            cnemp.PaddingTop = 5;
            // cnemp.PaddingBottom = 30;
            table3.AddCell(cnemp);
            table3.AddCell(cpartBemp);

            PdfPCell cnemp11 = new PdfPCell(new Phrase("Designation : ", Subheadfont));
            cnemp11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnemp11.Colspan = 6;
            cnemp11.Border = 0;
            cnemp11.PaddingTop = 10;
            cnemp11.PaddingLeft = 270;
            table3.AddCell(cnemp11);
            table3.AddCell(cpartBemp);

            PdfPCell cnemp11w2 = new PdfPCell(new Phrase("Date :", Subheadfont));
            cnemp11w2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cnemp11w2.Colspan = 2;
            cnemp11w2.Border = 0;
            cnemp11w2.PaddingTop = 5;
            // cnemp.PaddingBottom = 30;
            table3.AddCell(cnemp11w2);

            PdfPCell cnemp11w = new PdfPCell(new Phrase(companyname, Subheadfont));
            cnemp11w.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
            cnemp11w.Colspan = 4;
            cnemp11w.Border = 0;
            cnemp11w.PaddingTop = 5;
            // cnemp.PaddingBottom = 30;
            table3.AddCell(cnemp11w);
            // table3.AddCell(cpartBemp);



            PdfPCell cnempaddrw = new PdfPCell(new Phrase(companyaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
            cnempaddrw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
            cnempaddrw.Colspan = 6;
            cnempaddrw.Border = 0;
            // cnempaddrw.PaddingTop = 10;
            // cnemp.PaddingBottom = 30;
            table3.AddCell(cnempaddrw);
            //table3.AddCell(cpartBemp);

            //PdfPCell cnemp11w2 = new PdfPCell(new Phrase("Date :", Subheadfont));
            //cnemp11w2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            //cnemp11w2.Colspan = 6;
            //cnemp11w2.Border = 0;
            ////cnemp11w2.PaddingTop = 25;
            //// cnemp.PaddingBottom = 30;
            //table3.AddCell(cnemp11w2);



            PdfPCell cnbxsign = new PdfPCell(new Phrase(" ", bodyfont));
            cnbxsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cnbxsign.Colspan = 2;
            cnbxsign.MinimumHeight = 100;
            //table3.AddCell(cnbxsign);

            PdfPCell cnsgn = new PdfPCell(new Phrase("  Signature of the employer or other Authorized Officers of the\n  Establishment \n\n\n  Destination __________________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cnsgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cnsgn.Colspan = 4;
            cnsgn.Border = 0;
            //cnsgn.PaddingTop = 30;
            table3.AddCell(cnsgn);

            document.Add(table3);

            #endregion for PFForm

            string filename = txtName.Text + " - " + txtEmpid.Text+ " - " + "PF.pdf";

            document.Close();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment;filename=" + filename);
            Response.Buffer = true;
            Response.Clear();
            Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
            Response.OutputStream.Flush();
            Response.End();

        }

        protected void btnPFForm_Click(object sender, EventArgs e)
        {
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                PFFormIndividual();
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                PFFormBulk();
            }
        }

        #endregion for PFForm

        #region for EnrolmentForm

        public void EnrolmentmentIndividual()
        {
            int Fontsize = 11;


            #region Variable Declaration

            string CompanyName = "";
            string SpouseName = "";
            string NomineeName = "";
            string NomineeRelation = "";
            string NomineeText = "";
            string FSpouseName = "";
            string FatherName = "";
            string FatherOccupation = "";
            string MotherName = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string dateofbirth = "";
            string Gender = "";
            string Dateofjoining = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string BloodGroupName = "";
            string MaritalStatusSpouseText = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";
            string MobileNumber = "";

            string relationName = "";
            string relationAge = "";
            string relationType = "";
            var PrevYrExp = "";

            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string AadharCardNo = "";
            string PanCardNo = "";

            string Esino = "";
            string PfNo = "";
            string pephone = "";
            string RType = "";
            string RName = "";
            string EmpPresentAddress = "";
            string EmpPermanentAddress = "";
            string RHThumb = "";
            string RHIndex = "";
            string RHMiddle = "";
            string RHRing = "";
            string RHLittle = "";
            string LHThumb = "";
            string LHIndex = "";
            string LHMiddle = "";
            string LHRing = "";
            string LHLittle = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;
            string EmpDtofBirths = "";

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                Dateofjoining = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                FatherOccupation = dtEmpdetails.Rows[0]["EmpFatherOccupation"].ToString();
                MobileNumber = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                MotherName = dtEmpdetails.Rows[0]["EmpMotherName"].ToString();
                PrevYrExp = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                RType = dtEmpdetails.Rows[0]["RType"].ToString();
                RName = dtEmpdetails.Rows[0]["RName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                EmpDtofBirths = dtEmpdetails.Rows[0]["EmpDtofBirths"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();

                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                RHThumb = dtEmpdetails.Rows[0]["RHThumb"].ToString();
                RHIndex = dtEmpdetails.Rows[0]["RHIndex"].ToString();
                RHMiddle = dtEmpdetails.Rows[0]["RHMiddle"].ToString();
                RHRing = dtEmpdetails.Rows[0]["RHRing"].ToString();
                RHLittle = dtEmpdetails.Rows[0]["RHLittle"].ToString();
                LHThumb = dtEmpdetails.Rows[0]["LHThumb"].ToString();
                LHIndex = dtEmpdetails.Rows[0]["LHIndex"].ToString();
                LHMiddle = dtEmpdetails.Rows[0]["LHMiddle"].ToString();
                LHRing = dtEmpdetails.Rows[0]["LHRing"].ToString();
                LHLittle = dtEmpdetails.Rows[0]["LHLittle"].ToString();

                string lgknwn = "";

                if (Languagesknown.Length > 0)
                {
                    string qry = "select language from languages where languageid in (" + Languagesknown + ")";
                    DataTable dtqry = Config.ExecuteReaderWithQueryAsync(qry).Result;


                    string lang = "";

                    var list = new List<string>();

                    if (dtqry.Rows.Count > 0)
                    {
                        for (int u = 0; u < dtqry.Rows.Count; u++)
                        {
                            lang = dtqry.Rows[u]["language"].ToString();

                            list.Add(lang);
                        }

                    }

                    lgknwn = string.Join(",", list.ToArray());
                }


                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();
                BloodGroupName = dtEmpdetails.Rows[0]["BloodGroupName"].ToString();
                EmpPresentAddress = dtEmpdetails.Rows[0]["EmpPresentAddress"].ToString();
                AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                PanCardNo = dtEmpdetails.Rows[0]["PanCardNo"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                EmpPermanentAddress = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();


                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }



                CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();

                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();


                #endregion


                string QueryNominee = "select top 1 RName as NomineeName ,Rtype as NomineeRelation from emprelationships where empid='" + Idno + "' and PFNominee='Y' order by id";
                DataTable DtNominee = Config.ExecuteReaderWithQueryAsync(QueryNominee).Result;

                if (DtNominee.Rows.Count > 0)
                {
                    NomineeRelation = DtNominee.Rows[0]["NomineeRelation"].ToString();
                    NomineeName = DtNominee.Rows[0]["NomineeName"].ToString();

                }


                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                string imagepath2 = Server.MapPath("assets/Images");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");

                #region Headings of the Pdf

                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = 570f;
                table.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                table.SetWidths(width);

                string fontstyle = "calibri";
                PdfPCell cellspace1 = new PdfPCell(new Phrase("Employee: " + Idno + "   Enrolment Form", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                cellspace1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellspace1.Colspan = 6;
                cellspace1.Border = 0;
                cellspace1.PaddingTop = -50;
                table.AddCell(cellspace1);

                PdfPCell cellspace = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;
                table.AddCell(cellspace);


                if (File.Exists(imagepath2))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    // gif2.SpacingBefore = 50;
                    gif2.ScalePercent(50);
                    gif2.SetAbsolutePosition(16f, 910f);
                    document.Add(new Paragraph(" "));
                    document.Add(gif2);
                }

                PdfPCell cellHead = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                cellHead.SetLeading(0f, 1.3f);
                table.AddCell(cellHead);

                BaseColor color = new BaseColor(255, 0, 0);
                PdfPCell cellHeadISO = new PdfPCell(new Phrase("ISO 9001-2008", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.NORMAL, color)));
                cellHeadISO.HorizontalAlignment = 0;
                cellHeadISO.Colspan = 6;
                cellHeadISO.Border = 0;
                cellHeadISO.PaddingTop = -5;
                cellHeadISO.PaddingLeft = 70;
                // table.AddCell(cellHeadISO);

                PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead2.HorizontalAlignment = 1;
                cellHead2.Colspan = 6;
                cellHead2.Border = 0;


                PdfPCell cellHead4 = new PdfPCell();
                var celldescription = new Phrase();
                celldescription.Add(new Chunk("                                                      ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldescription.Add(new Chunk("ENROLMENT FORM", FontFactory.GetFont(fontstyle, Fontsize + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                // celldescription.Add(new Chunk("                                              NO.", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead4.AddElement(celldescription);
                cellHead4.HorizontalAlignment = 1;
                cellHead4.PaddingLeft = 60f;
                cellHead4.Colspan = 6;
                cellHead4.Border = 0;
                table.AddCell(cellHead4);

                PdfPCell cellNo1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNo1.HorizontalAlignment = 0;
                cellNo1.Colspan = 3;
                cellNo1.Border = 0;
                cellNo1.PaddingLeft = -3;
                table.AddCell(cellNo1);

                if (Dateofjoining != "")
                {
                    PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : " + Dateofjoining, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldate1.HorizontalAlignment = 1;
                    celldate1.Colspan = 3;
                    celldate1.Border = 0;
                    celldate1.PaddingLeft = 135;
                    table.AddCell(celldate1);
                }
                else
                {
                    PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldate1.HorizontalAlignment = 1;
                    celldate1.Colspan = 3;
                    celldate1.Border = 0;
                    celldate1.PaddingLeft = 78;
                    table.AddCell(celldate1);
                }


                table.AddCell(cellspace);

                PdfPCell cellpost1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpost1.HorizontalAlignment = 0;
                cellpost1.Colspan = 0;
                cellpost1.Border = 0;
                cellpost1.PaddingLeft = 10;
                table.AddCell(cellpost1);



                document.Add(table);

                #endregion

                #region Basic Information of the Employee

                PdfPTable table2 = new PdfPTable(6);
                table2.TotalWidth = 570f;
                table2.LockedWidth = true;
                float[] width1 = new float[] { 5f, 2f, 5f, 2f, 1.5f, 2f };
                table2.SetWidths(width1);


                PdfPTable temptable1 = new PdfPTable(3);
                temptable1.TotalWidth = 400f;
                temptable1.LockedWidth = true;
                float[] tempwidth1 = new float[] { 5f, 2f, 5f };
                temptable1.SetWidths(tempwidth1);

                PdfPCell Contactno = new PdfPCell(new Phrase("1  Personal No. ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Contactno.HorizontalAlignment = 0;
                Contactno.Border = 0;
                Contactno.PaddingTop = 5;
                temptable1.AddCell(Contactno);

                PdfPCell Contactno2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Contactno2.HorizontalAlignment = 0;
                Contactno2.Border = 0;
                Contactno2.PaddingTop = 5;
                temptable1.AddCell(Contactno2);

                PdfPCell Contactno1 = new PdfPCell(new Phrase(Idno, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Contactno1.HorizontalAlignment = 0;
                Contactno1.Border = 0;
                Contactno1.PaddingTop = 5;
                temptable1.AddCell(Contactno1);

                PdfPCell Rank = new PdfPCell(new Phrase("2  Rank", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank.HorizontalAlignment = 0;
                Rank.Border = 0;
                Rank.PaddingTop = 5;
                temptable1.AddCell(Rank);

                PdfPCell Rank2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                Rank2.HorizontalAlignment = 0;
                Rank2.Border = 0;
                Rank2.PaddingTop = 5;
                temptable1.AddCell(Rank2);

                PdfPCell Rank1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                Rank1.HorizontalAlignment = 0;
                Rank1.Border = 0;
                Rank1.PaddingTop = 5;
                temptable1.AddCell(Rank1);




                PdfPCell cellName2 = new PdfPCell(new Phrase("3  Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName2.HorizontalAlignment = 0;
                cellName2.Border = 0;
                cellName2.PaddingTop = 5;
                temptable1.AddCell(cellName2);

                PdfPCell cellName4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName4.HorizontalAlignment = 0;
                cellName4.Border = 0;
                cellName4.PaddingTop = 5;
                temptable1.AddCell(cellName4);

                PdfPCell cellName3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName3.HorizontalAlignment = 0;
                cellName3.Border = 0;
                cellName3.PaddingTop = 5;
                temptable1.AddCell(cellName3);

                PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Age ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDateofbirth.HorizontalAlignment = 0;
                cellDateofbirth.Border = 0;
                cellDateofbirth.PaddingTop = 5;
                temptable1.AddCell(cellDateofbirth);

                PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDateofbirth2.HorizontalAlignment = 0;
                cellDateofbirth2.Border = 0;
                cellDateofbirth2.PaddingTop = 5;
                temptable1.AddCell(cellDateofbirth2);

                PdfPCell cellDateofbirth1;

                if (int.Parse(dateofbirth) == 0)
                {
                    cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth1.HorizontalAlignment = 0;
                    cellDateofbirth1.Border = 0;
                    cellDateofbirth1.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth1);
                }
                else
                {
                    cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths + " & " + dateofbirth, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth1.HorizontalAlignment = 0;
                    cellDateofbirth1.Border = 0;
                    cellDateofbirth1.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth1);
                }

                PdfPCell cellEdq = new PdfPCell(new Phrase("5  Qualification ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellEdq.HorizontalAlignment = 0;
                cellEdq.Border = 0;
                cellEdq.PaddingTop = 5;
                temptable1.AddCell(cellEdq);

                PdfPCell cellEdq2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellEdq2.HorizontalAlignment = 0;
                cellEdq2.Border = 0;
                cellEdq2.PaddingTop = 5;
                temptable1.AddCell(cellEdq2);

                PdfPCell cellEdq1 = new PdfPCell(new Phrase(educationqualification, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellEdq1.HorizontalAlignment = 0;
                cellEdq1.Border = 0;
                cellEdq1.PaddingTop = 5;
                temptable1.AddCell(cellEdq1);

                PdfPCell cellExperienc = new PdfPCell(new Phrase("6  Experience", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellExperienc.HorizontalAlignment = 0;
                cellExperienc.Border = 0;
                cellExperienc.PaddingTop = 5;
                temptable1.AddCell(cellExperienc);

                PdfPCell cellExperienc2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellExperienc2.HorizontalAlignment = 0;
                cellExperienc2.Border = 0;
                cellExperienc2.PaddingTop = 5;
                temptable1.AddCell(cellExperienc2);


                PdfPCell cellExperienc1 = new PdfPCell(new Phrase(PrevYrExp, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellExperienc1.HorizontalAlignment = 0;
                cellExperienc1.Border = 0;
                cellExperienc1.PaddingTop = 5;
                temptable1.AddCell(cellExperienc1);

                PdfPCell cellFather21 = new PdfPCell(new Phrase("7  Father’s Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellFather21.HorizontalAlignment = 0;
                cellFather21.Border = 0;
                cellFather21.PaddingTop = 5;
                temptable1.AddCell(cellFather21);

                PdfPCell cellFather41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellFather41.HorizontalAlignment = 0;
                cellFather41.Border = 0;
                cellFather41.PaddingTop = 5;
                temptable1.AddCell(cellFather41);

                PdfPCell cellFather31 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFather31.HorizontalAlignment = 0;
                cellFather31.Border = 0;
                cellFather31.PaddingTop = 5;
                temptable1.AddCell(cellFather31);

                PdfPCell cellMother21 = new PdfPCell(new Phrase("8  Mother’s Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellMother21.HorizontalAlignment = 0;
                cellMother21.Border = 0;
                cellMother21.PaddingTop = 5;
                temptable1.AddCell(cellMother21);

                PdfPCell cellMother41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellMother41.HorizontalAlignment = 0;
                cellMother41.Border = 0;
                cellMother41.PaddingTop = 5;
                temptable1.AddCell(cellMother41);

                PdfPCell cellMother31 = new PdfPCell(new Phrase(MotherName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMother31.HorizontalAlignment = 0;
                cellMother31.Border = 0;
                cellMother31.PaddingTop = 5;
                temptable1.AddCell(cellMother31);






                PdfPCell cellDesign = new PdfPCell(new Phrase("9  Occupation  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign.HorizontalAlignment = 0;
                cellDesign.Border = 0;
                cellDesign.PaddingTop = 5;
                temptable1.AddCell(cellDesign);

                PdfPCell cellDesign1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign1.HorizontalAlignment = 0;
                cellDesign1.Border = 0;
                cellDesign1.PaddingTop = 5;
                temptable1.AddCell(cellDesign1);

                PdfPCell cellDesign3 = new PdfPCell(new Phrase(FatherOccupation, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDesign3.HorizontalAlignment = 0;
                cellDesign3.Border = 0;
                cellDesign3.PaddingTop = 5;
                temptable1.AddCell(cellDesign3);

                PdfPCell cellMobile1 = new PdfPCell(new Phrase("10  Mobile No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellMobile1.HorizontalAlignment = 0;
                cellMobile1.Border = 0;
                cellMobile1.PaddingTop = 5;
                temptable1.AddCell(cellMobile1);

                PdfPCell cellMobile12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellMobile12.HorizontalAlignment = 0;
                cellMobile12.Border = 0;
                cellMobile12.PaddingTop = 5;
                temptable1.AddCell(cellMobile12);

                PdfPCell cellMobile11 = new PdfPCell(new Phrase(MobileNumber, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMobile11.HorizontalAlignment = 0;
                cellMobile11.Border = 0;
                cellMobile11.PaddingTop = 5;
                temptable1.AddCell(cellMobile11);

                PdfPCell cellAadhaar1 = new PdfPCell(new Phrase("11  Aadhaar No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellAadhaar1.HorizontalAlignment = 0;
                cellAadhaar1.Border = 0;
                cellAadhaar1.PaddingTop = 5;
                temptable1.AddCell(cellAadhaar1);

                PdfPCell cellAadhaar12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellAadhaar12.HorizontalAlignment = 0;
                cellAadhaar12.Border = 0;
                cellAadhaar12.PaddingTop = 5;
                temptable1.AddCell(cellAadhaar12);

                PdfPCell cellAadhaar11 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellAadhaar11.HorizontalAlignment = 0;
                cellAadhaar11.Border = 0;
                cellAadhaar11.PaddingTop = 5;
                temptable1.AddCell(cellAadhaar11);

                PdfPCell cellpan1 = new PdfPCell(new Phrase("12  PAN No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellpan1.HorizontalAlignment = 0;
                cellpan1.Border = 0;
                cellpan1.PaddingTop = 5;
                temptable1.AddCell(cellpan1);

                PdfPCell cellepan12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellepan12.HorizontalAlignment = 0;
                cellepan12.Border = 0;
                cellepan12.PaddingTop = 5;
                temptable1.AddCell(cellepan12);

                PdfPCell cellpanno11 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellpanno11.HorizontalAlignment = 0;
                cellpanno11.Border = 0;
                cellpanno11.PaddingTop = 5;
                temptable1.AddCell(cellpanno11);

                PdfPCell childTable1 = new PdfPCell(temptable1);
                childTable1.Border = 0;
                childTable1.HorizontalAlignment = 0;
                childTable1.Colspan = 3;
                table2.AddCell(childTable1);


                PdfPTable temptable2 = new PdfPTable(3);
                temptable2.TotalWidth = 70f;
                temptable2.LockedWidth = true;
                float[] tempwidth2 = new float[] { 2f, 3f, 2f };
                temptable2.SetWidths(tempwidth2);


                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[0]["Image"].ToString());
                    //empphoto.ScalePercent(23f);
                    empphoto.ScaleAbsolute(110.7f, 140.5f);
                    PdfPCell employeephoto = new PdfPCell();
                    Paragraph logo = new Paragraph();
                    logo.Add(new Chunk(empphoto, 0, 0));
                    employeephoto.AddElement(logo);
                    employeephoto.HorizontalAlignment = 2;
                    employeephoto.Border = 0;
                    employeephoto.Colspan = 3;

                    temptable2.AddCell(employeephoto);

                }


                PdfPCell childTable2 = new PdfPCell(temptable2);
                childTable2.Border = 0;
                childTable2.HorizontalAlignment = 0;
                childTable2.Colspan = 3;
                table2.AddCell(childTable2);

                document.Add(table2);

                #endregion Basic Information of the Employee

                #region Employee Addresses



                PdfPTable tbldatas2 = new PdfPTable(6);
                tbldatas2.TotalWidth = 580f;
                tbldatas2.LockedWidth = true;
                float[] widthdata2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };

                PdfPTable tbldata2 = new PdfPTable(3);
                tbldata2.TotalWidth = 290f;
                tbldata2.LockedWidth = true;
                float[] widths1 = new float[] { 2f, 1.5f, 3f };
                tbldata2.SetWidths(widths1);


                PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                data2space.Colspan = 6;
                data2space.Border = 0;


                PdfPCell cellPresentaddr = new PdfPCell(new Phrase("13  Present Address ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellPresentaddr.HorizontalAlignment = 0;
                cellPresentaddr.Colspan = 3;
                cellPresentaddr.Border = 0;
                cellPresentaddr.PaddingTop = 8;
                tbldata2.AddCell(cellPresentaddr);


                PdfPCell cellPresentaddrval = new PdfPCell(new Phrase(EmpPresentAddress, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPresentaddrval.HorizontalAlignment = 0;
                cellPresentaddrval.Colspan = 3;
                cellPresentaddrval.Border = 0;
                cellPresentaddrval.PaddingTop = 8;
                tbldata2.AddCell(cellPresentaddrval);







                PdfPCell childTables1 = new PdfPCell(tbldata2);
                childTables1.HorizontalAlignment = 0;
                childTables1.Colspan = 3;
                childTables1.Border = 0;
                tbldatas2.AddCell(childTables1);



                PdfPTable tbldata3 = new PdfPTable(3);
                tbldata3.TotalWidth = 290f;
                tbldata3.LockedWidth = true;
                float[] width2 = new float[] { 2f, 1.5f, 3f };
                tbldata3.SetWidths(width2);

                PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("Permanent Address", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellPerminentaddr.HorizontalAlignment = 0;
                cellPerminentaddr.Colspan = 3;
                cellPerminentaddr.Border = 0;
                cellPerminentaddr.PaddingTop = 8;
                cellPerminentaddr.PaddingLeft = 15;
                tbldata3.AddCell(cellPerminentaddr);


                PdfPCell cellPerminentaddrval = new PdfPCell(new Phrase(EmpPermanentAddress, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPerminentaddrval.HorizontalAlignment = 0;
                cellPerminentaddrval.Colspan = 3;
                cellPerminentaddrval.Border = 0;
                cellPerminentaddrval.PaddingTop = 8;
                cellPerminentaddrval.PaddingLeft = 15;
                tbldata3.AddCell(cellPerminentaddrval);




                PdfPCell childTables12 = new PdfPCell(tbldata3);
                childTables12.HorizontalAlignment = 0;
                childTables12.Colspan = 3;
                childTables12.Border = 0;
                tbldatas2.AddCell(childTables12);

                document.Add(tbldatas2);




                #endregion Employee Addresses

                #region for languages

                PdfPTable table3 = new PdfPTable(8);
                table3.TotalWidth = 580f;
                table3.LockedWidth = true;
                float[] widtha2 = new float[] { 1f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                table3.SetWidths(widtha2);

                PdfPCell celllanguage = new PdfPCell(new Phrase("14  Languages Known                   :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celllanguage.HorizontalAlignment = 0;
                celllanguage.Colspan = 4;
                celllanguage.Border = 0;
                celllanguage.PaddingTop = 8;
                celllanguage.PaddingLeft = -3;
                table3.AddCell(celllanguage);


                PdfPCell celllanguage1 = new PdfPCell(new Phrase(lgknwn, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celllanguage1.HorizontalAlignment = 0;
                celllanguage1.Colspan = 4;
                celllanguage1.Border = 0;
                celllanguage1.PaddingTop = 8;
                celllanguage1.PaddingLeft = -50;
                table3.AddCell(celllanguage1);

                PdfPCell cellphyst = new PdfPCell(new Phrase("15  Physical GDX ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellphyst.HorizontalAlignment = 0;
                cellphyst.Colspan = 2;
                cellphyst.Border = 0;
                cellphyst.PaddingTop = 8;
                cellphyst.PaddingLeft = -3;
                table3.AddCell(cellphyst);

                table3.AddCell(cellspace);



                PdfPCell cellHeightem = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHeightem.HorizontalAlignment = 0;
                cellHeightem.Colspan = 1;
                cellHeightem.Border = 0;
                cellHeightem.PaddingTop = 5;
                cellHeightem.PaddingLeft = 30;
                table3.AddCell(cellHeightem);


                PdfPCell cellHeightem1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHeightem1.HorizontalAlignment = 0;
                cellHeightem1.Colspan = 1;
                cellHeightem1.Border = 0;
                cellHeightem1.PaddingTop = 5;
                cellHeightem1.PaddingLeft = 30;
                table3.AddCell(cellHeightem1);


                PdfPCell cellHeight = new PdfPCell(new Phrase(" Height :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHeight.HorizontalAlignment = 0;
                cellHeight.Colspan = 0;
                cellHeight.Border = 0;
                cellHeight.PaddingTop = 5;
                cellHeight.PaddingLeft = 10;
                table3.AddCell(cellHeight);


                if (height != "0")
                {
                    PdfPCell cellHeight1 = new PdfPCell(new Phrase(height, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellHeight1.HorizontalAlignment = 0;
                    cellHeight1.Colspan = 0;
                    cellHeight1.Border = 0;
                    cellHeight1.PaddingTop = 5;
                    table3.AddCell(cellHeight1);
                }
                if (height == "0")
                {
                    PdfPCell cellHeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellHeight1.HorizontalAlignment = 0;
                    cellHeight1.Colspan = 0;
                    cellHeight1.Border = 0;
                    cellHeight1.PaddingTop = 5;
                    cellHeight1.PaddingLeft = -30;
                    table3.AddCell(cellHeight1);
                }


                PdfPCell cellWeight = new PdfPCell(new Phrase("Weight :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellWeight.HorizontalAlignment = 0;
                cellWeight.Colspan = 0;
                cellWeight.Border = 0;
                cellWeight.PaddingTop = 5;
                cellWeight.PaddingLeft = 30;
                table3.AddCell(cellWeight);

                if (weight != "0")
                {
                    PdfPCell cellWeight1 = new PdfPCell(new Phrase(weight, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellWeight1.HorizontalAlignment = 0;
                    cellWeight1.Colspan = 0;
                    cellWeight1.Border = 0;
                    cellWeight1.PaddingTop = 5;
                    table3.AddCell(cellWeight1);
                }
                if (weight == "0")
                {
                    PdfPCell cellWeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellWeight1.HorizontalAlignment = 0;
                    cellWeight1.Colspan = 0;
                    cellWeight1.Border = 0;
                    cellWeight1.PaddingTop = 5;
                    cellWeight1.PaddingLeft = -50;
                    table3.AddCell(cellWeight1);
                }
                //data1.AddCell(cellspace1);

                PdfPCell cellchest = new PdfPCell(new Phrase(" Chest :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellchest.HorizontalAlignment = 0;
                cellchest.Colspan = 0;
                cellchest.Border = 0;
                cellchest.PaddingTop = 5;
                table3.AddCell(cellchest);


                if (chest != "0")
                {
                    PdfPCell cellChest1 = new PdfPCell(new Phrase(chest, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellChest1.HorizontalAlignment = 0;
                    cellChest1.Colspan = 0;
                    cellChest1.Border = 0;
                    cellChest1.PaddingTop = 5;
                    cellChest1.PaddingLeft = -30;
                    table3.AddCell(cellChest1);
                }
                if (chest == "0")
                {
                    PdfPCell cellChest1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellChest1.HorizontalAlignment = 0;
                    cellChest1.Colspan = 0;
                    cellChest1.Border = 0;
                    cellChest1.PaddingTop = 5;
                    cellChest1.PaddingLeft = -30;
                    table3.AddCell(cellChest1);
                }

                table3.AddCell(cellspace);

                document.Add(table3);



                PdfPTable data1 = new PdfPTable(3);
                data1.TotalWidth = 580f;
                data1.LockedWidth = true;
                float[] widthdate = new float[] { 3f, 2f, 3f };
                data1.SetWidths(widthdate);

                PdfPCell celldata15 = new PdfPCell(new Phrase("16  Identification Marks ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldata15.HorizontalAlignment = 0;
                celldata15.Colspan = 0;
                celldata15.Border = 0;
                celldata15.PaddingTop = 8;
                celldata15.PaddingLeft = -3;
                data1.AddCell(celldata15);

                PdfPCell celldatacol = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldatacol.HorizontalAlignment = 0;
                celldatacol.Colspan = 2;
                celldatacol.Border = 0;
                celldatacol.PaddingTop = 8;
                celldatacol.PaddingLeft = -46;
                data1.AddCell(celldatacol);


                PdfPCell celldata16 = new PdfPCell(new Phrase("      (i) " + identificationmark1 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata16.HorizontalAlignment = 0;
                celldata16.Colspan = 3;
                celldata16.Border = 0;
                celldata16.PaddingTop = 5;
                data1.AddCell(celldata16);

                data1.AddCell(cellspace);

                PdfPCell celldata17 = new PdfPCell(new Phrase("      (ii) " + identificationmark2 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata17.HorizontalAlignment = 0;
                celldata17.Colspan = 3;
                celldata17.Border = 0;
                celldata17.PaddingTop = 5;
                // celldata17.PaddingLeft = -20;
                data1.AddCell(celldata17);

                data1.AddCell(cellspace);

                PdfPCell cellMarital = new PdfPCell(new Phrase("17  Marital Status / \n      Name of Spouse", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellMarital.HorizontalAlignment = 0;
                cellMarital.Colspan = 0;
                cellMarital.Border = 0;
                cellMarital.PaddingTop = 8;
                cellMarital.PaddingLeft = -3;
                data1.AddCell(cellMarital);

                PdfPCell cellMarital2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellMarital2.HorizontalAlignment = 0;
                cellMarital2.Colspan = 0;
                cellMarital2.Border = 0;
                cellMarital2.PaddingTop = 8;
                cellMarital2.PaddingLeft = -46;
                data1.AddCell(cellMarital2);

                if (maritalstatus.Length > 0)
                {
                    if (SpouseName.Length > 0)
                    {
                        MaritalStatusSpouseText = maritalstatus + " / " + SpouseName;

                    }
                    else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                    {
                        MaritalStatusSpouseText = maritalstatus + " / " + FSpouseName;
                    }
                    else
                    {

                        MaritalStatusSpouseText = maritalstatus;
                    }



                }
                else if (maritalstatus.Length == 0)
                {

                    if (SpouseName.Length > 0)
                    {
                        MaritalStatusSpouseText = SpouseName;

                    }

                    else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                    {

                        MaritalStatusSpouseText = FSpouseName;

                    }
                    else
                    {

                        MaritalStatusSpouseText = "";
                    }

                }
                else
                {
                    MaritalStatusSpouseText = "";
                }

                PdfPCell cellMarital1 = new PdfPCell(new Phrase(MaritalStatusSpouseText, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMarital1.HorizontalAlignment = 0;
                cellMarital1.Colspan = 0;
                cellMarital1.Border = 0;
                cellMarital1.PaddingTop = 8;
                cellMarital1.PaddingLeft = -100;
                data1.AddCell(cellMarital1);

                PdfPCell celldatablood = new PdfPCell(new Phrase("18  Blood Group ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldatablood.HorizontalAlignment = 0;
                celldatablood.Colspan = 1;
                celldatablood.Border = 0;
                celldatablood.PaddingTop = 8;
                celldatablood.PaddingLeft = -3;
                data1.AddCell(celldatablood);

                PdfPCell celldatabloodl = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldatabloodl.HorizontalAlignment = 0;
                celldatabloodl.Colspan = 1;
                celldatabloodl.Border = 0;
                celldatabloodl.PaddingTop = 8;
                celldatabloodl.PaddingLeft = -46;
                data1.AddCell(celldatabloodl);


                PdfPCell celldatabloodl16 = new PdfPCell(new Phrase(BloodGroupName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatabloodl16.HorizontalAlignment = 0;
                celldatabloodl16.Colspan = 1;
                celldatabloodl16.Border = 0;
                celldatabloodl16.PaddingTop = 5;
                celldatabloodl16.PaddingLeft = -100;
                data1.AddCell(celldatabloodl16);

                document.Add(data1);

                PdfPTable Family = new PdfPTable(4);
                Family.TotalWidth = 590f;
                Family.LockedWidth = true;
                float[] widthFamily = new float[] { 2f, 3f, 4f, 3f };
                Family.SetWidths(widthFamily);

                PdfPCell cellheading = new PdfPCell(new Phrase("19  Family Particulars                               :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellheading.Colspan = 4;
                cellheading.Border = 0;
                cellheading.HorizontalAlignment = 0;
                Family.AddCell(cellheading);

                PdfPCell cellsno = new PdfPCell(new Phrase("SL No.", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsno.Colspan = 1;
                cellsno.Border = 0;
                cellsno.HorizontalAlignment = 0;
                Family.AddCell(cellsno);

                PdfPCell cellfamname = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellfamname.Colspan = 1;
                cellfamname.Border = 0;
                cellfamname.HorizontalAlignment = 0;
                Family.AddCell(cellfamname);

                PdfPCell cellfamage = new PdfPCell(new Phrase("Date of Birth/ Age", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellfamage.Colspan = 1;
                cellfamage.Border = 0;
                cellfamage.HorizontalAlignment = 0;
                Family.AddCell(cellfamage);

                PdfPCell cellRemp = new PdfPCell(new Phrase("Relation with the Employee", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRemp.Colspan = 1;
                cellRemp.Border = 0;
                cellRemp.HorizontalAlignment = 0;
                Family.AddCell(cellRemp);

                string Relname = "";
                string Relage = "";
                string RelDOFBirth = "";
                string RType1 = "";
                string ROccupation = "";

                int k = 1;
                if (dtEmpdetails.Rows.Count > 0)
                {
                    for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                    {
                        Relname = dtEmpdetails.Rows[i]["RName"].ToString();
                        Relage = dtEmpdetails.Rows[i]["age"].ToString();
                        RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();
                        ROccupation = dtEmpdetails.Rows[i]["ROccupation"].ToString();
                        RType1 = dtEmpdetails.Rows[i]["RType"].ToString();
                        if (Relage == "0")
                        {
                            Relage = "";
                        }
                        else if (Relage.Length > 0 && Relage != "0")
                        {
                            Relage = dtEmpdetails.Rows[i]["age"].ToString();
                        }



                        if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                        {
                            RelDOFBirth = RelDOFBirth + " / " + Relage;
                        }
                        else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                        {
                            RelDOFBirth = Relage;
                        }
                        else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                        {
                            RelDOFBirth = RelDOFBirth;
                        }


                        if (Relname.Length > 0)
                        {
                            PdfPCell cellsno1 = new PdfPCell(new Phrase(k.ToString(), FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellsno1.Colspan = 1;
                            cellsno1.HorizontalAlignment = 0;
                            cellsno1.Border = 0;
                            Family.AddCell(cellsno1);
                        }
                        else
                        {
                            PdfPCell cellsno1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellsno1.Colspan = 1;
                            cellsno1.HorizontalAlignment = 0;
                            cellsno1.Border = 0;
                            Family.AddCell(cellsno1);
                        }
                        PdfPCell cellfamname1 = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellfamname1.Colspan = 1;
                        cellfamname1.Border = 0;
                        cellfamname1.HorizontalAlignment = 0;
                        Family.AddCell(cellfamname1);


                        if (RelDOFBirth.Length > 0)
                        {
                            PdfPCell cellfamage1 = new PdfPCell(new Phrase(RelDOFBirth, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellfamage1.Colspan = 1;
                            cellfamage1.HorizontalAlignment = 0;
                            cellfamage1.Border = 0;
                            Family.AddCell(cellfamage1);
                        }
                        else
                        {
                            PdfPCell cellfamage1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellfamage1.Colspan = 1;
                            cellfamage1.HorizontalAlignment = 0;
                            cellfamage1.Border = 0;
                            Family.AddCell(cellfamage1);
                        }
                        PdfPCell cellfamrelation1 = new PdfPCell(new Phrase(RType1, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellfamrelation1.Colspan = 1;
                        cellfamrelation1.Border = 0;
                        cellfamrelation1.HorizontalAlignment = 0;
                        Family.AddCell(cellfamrelation1);

                        k++;
                    }

                }
                document.Add(Family);


                PdfPTable data4 = new PdfPTable(2);
                data4.TotalWidth = 525f;
                data4.LockedWidth = true;
                float[] widthdate4 = new float[] { 2f, 1f };
                data4.SetWidths(widthdate4);

                PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty.HorizontalAlignment = 0;
                cellempty.Colspan = 2;
                cellempty.Border = 0;
                cellempty.PaddingTop = 5;

                document.Add(data4);

                #endregion for languages

                #region Employee Reference Details


                PdfPTable tblReferences = new PdfPTable(4);
                tblReferences.TotalWidth = 580f;
                tblReferences.LockedWidth = true;
                float[] widthRef = new float[] { 1f, 3f, 1f, 3f };
                tblReferences.SetWidths(widthRef);

                PdfPCell celldataref = new PdfPCell(new Phrase("20  Reference (2 Neighbours with name , occupation and address / father-in-law address)", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldataref.HorizontalAlignment = 0;
                celldataref.Colspan = 4;
                celldataref.Border = 0;
                celldataref.PaddingTop = 5;
                celldataref.PaddingLeft = -3;
                tblReferences.AddCell(celldataref);

                PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                Refspace.Colspan = 4;
                Refspace.Border = 0;

                PdfPCell celldata26 = new PdfPCell(new Phrase("    a) " + refaddress1 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata26.HorizontalAlignment = 0;
                celldata26.Colspan = 4;
                celldata26.Border = 0;
                celldata26.PaddingTop = 5;
                tblReferences.AddCell(celldata26);

                //tblReferences.AddCell(Refspace);

                PdfPCell celldata28 = new PdfPCell(new Phrase("    b) " + refaddress2 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldata28.HorizontalAlignment = 0;
                celldata28.Colspan = 4;
                celldata28.Border = 0;
                tblReferences.AddCell(celldata28);
                tblReferences.AddCell(Refspace);

                #region for photos

                iTextSharp.text.Image gif = null;

                PdfPCell cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSpacetemprt.HorizontalAlignment = 0;
                cellSpacetemprt.Colspan = 1;
                cellSpacetemprt.Border = 0;
                tblReferences.AddCell(cellSpacetemprt);

                if (LHThumb.Length > 0)
                {

                    Byte[] bytes = Convert.FromBase64String(LHThumb);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(100f, 100f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 50f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblReferences.AddCell(EmpImage);
                }
                else
                {
                    cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.FixedHeight = 50;
                    tblReferences.AddCell(cellSpacetemprt);
                }

                cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSpacetemprt.HorizontalAlignment = 0;
                cellSpacetemprt.Colspan = 1;
                cellSpacetemprt.Border = 0;
                tblReferences.AddCell(cellSpacetemprt);

                if (RHThumb.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(RHThumb);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(100f, 100f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 40f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblReferences.AddCell(EmpImage);
                }
                else
                {
                    cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.FixedHeight = 50;
                    tblReferences.AddCell(cellSpacetemprt);
                }

                cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSpacetemprt.HorizontalAlignment = 0;
                cellSpacetemprt.Colspan = 1;
                cellSpacetemprt.Border = 0;
                tblReferences.AddCell(cellSpacetemprt);
                cellSpacetemprt = new PdfPCell(new Phrase(" Left Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellSpacetemprt.HorizontalAlignment = 0;
                cellSpacetemprt.Colspan = 1;
                cellSpacetemprt.Border = 0;
                cellSpacetemprt.PaddingRight = 10;
                tblReferences.AddCell(cellSpacetemprt);
                cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSpacetemprt.HorizontalAlignment = 0;
                cellSpacetemprt.Colspan = 1;
                cellSpacetemprt.Border = 0;
                tblReferences.AddCell(cellSpacetemprt);
                cellSpacetemprt = new PdfPCell(new Phrase(" Right Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellSpacetemprt.HorizontalAlignment = 0;
                cellSpacetemprt.Colspan = 1;
                cellSpacetemprt.Border = 0;
                cellSpacetemprt.PaddingRight = 10;
                tblReferences.AddCell(cellSpacetemprt);


                #endregion for photos

                tblReferences.AddCell(Refspace);

                PdfPCell cellSpace16 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSpace16.HorizontalAlignment = 0;
                cellSpace16.Colspan = 6;
                cellSpace16.Border = 0;
                tblReferences.AddCell(cellSpace16);

                PdfPCell cellDesc = new PdfPCell(new Phrase("The above information is true to the best of my knowledge and belief.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                cellDesc.HorizontalAlignment = 0;
                cellDesc.Colspan = 4;
                cellDesc.Border = 0;
                cellDesc.PaddingTop = 5;
                cellDesc.PaddingLeft = -3;
                tblReferences.AddCell(cellDesc);

                tblReferences.AddCell(cellSpace16);
                tblReferences.AddCell(cellSpace16);
                tblReferences.AddCell(cellSpace16);
                tblReferences.AddCell(cellSpace16);
                tblReferences.AddCell(cellSpace16);
                tblReferences.AddCell(cellSpace16);

                if (File.Exists(imagepathArrow))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    // gif2.SpacingBefore = 50;
                    gif2.ScalePercent(80f);
                    gif2.SetAbsolutePosition(65f, 925f);
                    PdfPCell sealImg = new PdfPCell();
                    sealImg.AddElement(gif2);
                    sealImg.Border = 0;
                    sealImg.HorizontalAlignment = 0;
                    sealImg.Colspan = 4;
                    sealImg.PaddingLeft = -570f;
                    sealImg.PaddingBottom = -10f;
                    //sealImg.PaddingRight = -400f;
                    sealImg.PaddingTop = 0;
                    tblReferences.AddCell(sealImg);
                    //    document.Add(new Paragraph(" "));
                    //    document.Add(gif2);
                }

                PdfPCell cellsign = new PdfPCell(new Phrase("Signature of Applicant :  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsign.HorizontalAlignment = 0;
                cellsign.Colspan = 2;
                cellsign.Border = 0;
                cellsign.PaddingTop = 5;
                cellsign.PaddingLeft = 0;
                cellsign.PaddingLeft = -3;
                tblReferences.AddCell(cellsign);


                PdfPCell cellrecrutment = new PdfPCell(new Phrase("Recruitment Officer", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellrecrutment.HorizontalAlignment = 1;
                cellrecrutment.Colspan = 2;
                cellrecrutment.Border = 0;
                cellrecrutment.PaddingTop = 5;
                cellrecrutment.PaddingLeft = -3;
                tblReferences.AddCell(cellrecrutment);


                PdfPCell celldate3 = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldate3.HorizontalAlignment = 0;
                celldate3.Colspan = 2;
                celldate3.Border = 0;
                celldate3.PaddingLeft = -3;
                tblReferences.AddCell(celldate3);


                PdfPCell cellplace = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellplace.HorizontalAlignment = 1;
                cellplace.Border = 0;
                cellplace.Colspan = 2;
                cellplace.PaddingLeft = -75;
                tblReferences.AddCell(cellplace);

                document.Add(tblReferences);


                document.NewPage();

                #region For Finger Prints

                PdfPTable tblefingerprints = new PdfPTable(6);
                tblefingerprints.TotalWidth = 580f;
                tblefingerprints.LockedWidth = true;
                float[] widthFinger = new float[] { 2f, 3f, 1f, 2f, 3f, 0.5f };
                tblefingerprints.SetWidths(widthFinger);
                PdfPCell FingerPrints;

                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                FingerPrints.FixedHeight = 60;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("Left Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 1;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("Right Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 1;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (LHThumb.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(LHThumb);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (RHThumb.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(RHThumb);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);


                FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (LHIndex.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(LHIndex);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (RHIndex.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(RHIndex);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (LHMiddle.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(LHMiddle);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (RHMiddle.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(RHMiddle);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);


                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (LHRing.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(LHRing);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (RHRing.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(RHRing);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }

                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 6;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (LHLittle.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(LHLittle);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }

                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);
                FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                FingerPrints.PaddingTop = 30;
                tblefingerprints.AddCell(FingerPrints);
                if (RHLittle.Length > 0)
                {
                    Byte[] bytes = Convert.FromBase64String(RHLittle);
                    iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                    Empphoto.ScaleAbsolute(70f, 90f);
                    PdfPCell EmpImage = new PdfPCell();
                    Paragraph Emplogo = new Paragraph();
                    Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                    EmpImage.AddElement(Emplogo);
                    EmpImage.HorizontalAlignment = 0;
                    EmpImage.Colspan = 1;
                    EmpImage.PaddingLeft = 15;
                    tblefingerprints.AddCell(EmpImage);
                }
                else
                {
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    tblefingerprints.AddCell(FingerPrints);
                }
                FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                FingerPrints.HorizontalAlignment = 0;
                FingerPrints.Colspan = 1;
                FingerPrints.Border = 0;
                tblefingerprints.AddCell(FingerPrints);

                document.Add(tblefingerprints);
                document.NewPage();

                #endregion

                PdfPTable tblinstructions = new PdfPTable(4);
                tblinstructions.TotalWidth = 580f;
                tblinstructions.LockedWidth = true;
                float[] widthRefIns = new float[] { 0.5f, 2f, 2f, 2f };
                tblinstructions.SetWidths(widthRefIns);

                PdfPCell cellSpace161 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSpace161.HorizontalAlignment = 0;
                cellSpace161.Colspan = 6;
                cellSpace161.Border = 0;


                PdfPCell cellExperiencphrase = new PdfPCell(new Phrase("RULES AND REGULATIONS", FontFactory.GetFont(fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                cellExperiencphrase.HorizontalAlignment = 1;
                cellExperiencphrase.Colspan = 4;
                cellExperiencphrase.Border = 0;
                tblinstructions.AddCell(cellExperiencphrase);

                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase77 = new PdfPCell(new Phrase("I hereby agree that I will abide by all the rules and regulations of the company as given hereunder. Also I am aware that any  violation of these rules and regulations  I shall be liable to disciplinary action as per the company laws :-", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase77.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase77.Colspan = 4;
                cellExperiencphrase77.Border = 0;
                cellExperiencphrase77.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase77);

                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase66 = new PdfPCell(new Phrase("1.  After joining the duty, every security person has to work for one full month. He will not be absent from duty without obtaining prior permission from field officer.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase66.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase66.Colspan = 4;
                cellExperiencphrase66.Border = 0;
                cellExperiencphrase66.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase66);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase55 = new PdfPCell(new Phrase("2.  He may take a maximum of 3 days leave with prior permission from the field officer. field officer can grant  leave upto there days. Area manger can grant leave upto 6 days, managing Director’s prior permission, is necessary in case of the leave exceeding 6 days. Request shall be initiated one week in advance in such cases.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase55.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase55.Colspan = 4;
                cellExperiencphrase55.Border = 0;
                cellExperiencphrase55.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase55);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase44 = new PdfPCell(new Phrase("3.  Any security person will be removed from services if he is found having any bad habits or absenting from duty without prior permission or misbehaving with his superiors / colleagues.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase44.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase44.Colspan = 4;
                cellExperiencphrase44.Border = 0;
                cellExperiencphrase44.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase44);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase33 = new PdfPCell(new Phrase("4. If any security person is found involved in theft, cheating, dacoity, lending  or borrowing money from the employees of the unit/factory, he shall be handed over to police for suitable action.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase33.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase33.Colspan = 4;
                cellExperiencphrase33.Border = 0;
                cellExperiencphrase33.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase33);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase22 = new PdfPCell(new Phrase("5.  All security personnel should wear neat and clean uniform during duty hours. They have to have proper hair cut and daily shaving before reporting for duty. He is to ensure that no complaints on indiscipline are received from clients.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase22.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase22.Colspan = 4;
                cellExperiencphrase22.Border = 0;
                cellExperiencphrase22.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase22);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase11 = new PdfPCell(new Phrase("6.  If any security person wishes to resign from the company, he may be so provided; He has minimum services of 12 months in the company and has informed the organization, in writing at least one month in advance. Any violation of the rule shall result in non-payment of his salary for the month.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase11.Colspan = 4;
                cellExperiencphrase11.Border = 0;
                cellExperiencphrase11.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase11);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase10 = new PdfPCell(new Phrase("7.  Parades at unit level/mass parades in a particular area and various physical activities are conducted at regular intervals. it is mandatory to all security personnel to attend without any pre-condition. Necessary disciplinary action will be initiated against the defaulters as per the company’s Rule.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase10.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase10.Colspan = 4;
                cellExperiencphrase10.Border = 0;
                cellExperiencphrase10.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase10);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase9 = new PdfPCell(new Phrase("8.  He shall not leave the working place under any circumstances without properly handing over his duties to the reliever. in case of emergency he should make an alternative arrangement before leaving the duty post or continue performing the till he is relived.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase9.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase9.Colspan = 4;
                cellExperiencphrase9.Border = 0;
                cellExperiencphrase9.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase9);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase8 = new PdfPCell(new Phrase("9.  All security personnel should obey the orders issued by their superiors and should perform their duty in a disciplined manner.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase8.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase8.Colspan = 4;
                cellExperiencphrase8.Border = 0;
                cellExperiencphrase8.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase8);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase7 = new PdfPCell(new Phrase("10.  A full set of uniform will be issued at the time of joining the duty. The second set, viz. one pant in the fourth month and two pairs of socks in the sixth month will be issued on payment. uniform once issued will not be taken back under any circumstances.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase7.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase7.Colspan = 4;
                cellExperiencphrase7.Border = 0;
                cellExperiencphrase7.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase7);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase6 = new PdfPCell(new Phrase("11.  All security personnel should be punctual in reporting for they duty and ensure signing the attendances register before joining the duty. The late comers shall be liable for disciplinary action as per company law.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase6.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase6.Colspan = 4;
                cellExperiencphrase6.Border = 0;
                cellExperiencphrase6.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase6);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase5 = new PdfPCell(new Phrase("12.  All security personnel are required to perform overtime or additional duties as and when called upon to do so. Refusal to do such additional tasks or overtime duties shall attract disciplinary action.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase5.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellExperiencphrase5.Colspan = 4;
                cellExperiencphrase5.Border = 0;
                cellExperiencphrase5.SetLeading(0f, 1.2f);
                tblinstructions.AddCell(cellExperiencphrase5);

                tblinstructions.AddCell(cellSpace161);
                tblinstructions.AddCell(cellSpace161);
                tblinstructions.AddCell(cellSpace161);

                PdfPCell cellExperiencphrase4 = new PdfPCell(new Phrase("Left Hand Thumb                                                         Impression of the Applicant", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase4.HorizontalAlignment = 1;
                cellExperiencphrase4.Colspan = 2;
                cellExperiencphrase4.Border = 0;
                tblinstructions.AddCell(cellExperiencphrase4);


                PdfPCell cellExperiencphrase3 = new PdfPCell(new Phrase("Signature of the Applicant", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase3.HorizontalAlignment = 1;
                cellExperiencphrase3.Colspan = 2;
                cellExperiencphrase3.Border = 0;
                //cellExperiencphrase3.PaddingLe = -50;
                tblinstructions.AddCell(cellExperiencphrase3);

                PdfPCell cellExperiencphrase2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase2.HorizontalAlignment = 1;
                cellExperiencphrase2.Colspan = 2;
                cellExperiencphrase2.Border = 0;
                tblinstructions.AddCell(cellExperiencphrase2);

                PdfPCell cellExperiencphrase1 = new PdfPCell(new Phrase(" Date:", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellExperiencphrase1.HorizontalAlignment = 1;
                cellExperiencphrase1.Colspan = 2;
                cellExperiencphrase1.Border = 0;
                cellExperiencphrase1.PaddingLeft = -110;
                cellExperiencphrase1.PaddingBottom = -40;
                tblinstructions.AddCell(cellExperiencphrase1);

                // document.Add(tblinstructions);


                #endregion

                string filename = txtName.Text + " - " + txtEmpid.Text+ " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }

        }

        public void EnrolmentBulk()
        {
            int Fontsize = 11;


            #region Variable Declaration

            string CompanyName = "";
            string SpouseName = "";
            string NomineeName = "";
            string NomineeRelation = "";
            string NomineeText = "";
            string FSpouseName = "";
            string FatherName = "";
            string FatherOccupation = "";
            string MotherName = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string dateofbirth = "";
            string Gender = "";
            string Dateofjoining = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string BloodGroupName = "";
            string MaritalStatusSpouseText = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";
            string MobileNumber = "";

            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string PrevYrExp = "";
            string AadharCardNo = "";
            string PanCardNo = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";


            string Esino = "";
            string PfNo = "";
            string pephone = "";
            string RType = "";
            string RName = "";
            string EmpPresentAddress = "";
            string EmpPermanentAddress = "";
            string RHThumb = "";
            string RHIndex = "";
            string RHMiddle = "";
            string RHRing = "";
            string RHLittle = "";
            string LHThumb = "";
            string LHIndex = "";
            string LHMiddle = "";
            string LHRing = "";
            string LHLittle = "";

            #endregion


            if (txtfromempid.Text == "" || txttoempid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee Series');", true);
                return;
            }

            #region  Begin  New Code



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string fromempid = "";
            string toempid = "";

            DataTable dtEmpdetails = null;
            string EmpDtofBirths = "";
            #endregion end Variable Declaration

            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;
            }

            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataBulk";
            HTEmpBiodata.Add("@FromEmpid", fromempid);
            HTEmpBiodata.Add("@ToEmpid", toempid);
            #endregion End Assign values To the Variables



            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            if (dtEmpdetails.Rows.Count > 0)
            {
                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                string imagepath2 = Server.MapPath("assets/Images");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");
                for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                {

                    #region Assining data to Variables

                    Idno = dtEmpdetails.Rows[m]["EmpId"].ToString();
                    name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                    Gender = dtEmpdetails.Rows[m]["EmpSex"].ToString();
                    Dateofjoining = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    maritalstatus = dtEmpdetails.Rows[m]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    FatherName = dtEmpdetails.Rows[m]["EmpFatherName"].ToString();
                    FatherOccupation = dtEmpdetails.Rows[m]["EmpFatherOccupation"].ToString();
                    MobileNumber = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    SpouseName = dtEmpdetails.Rows[m]["EmpSpouseName"].ToString();
                    MotherName = dtEmpdetails.Rows[m]["EmpMotherName"].ToString();
                    PrevYrExp = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    contactno = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    RType = dtEmpdetails.Rows[m]["RType"].ToString();
                    RName = dtEmpdetails.Rows[m]["RName"].ToString();
                    dateofbirth = dtEmpdetails.Rows[m]["EmpDtofBirth"].ToString();
                    EmpDtofBirths = dtEmpdetails.Rows[m]["EmpDtofBirths"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    educationqualification = dtEmpdetails.Rows[m]["EmpQualification"].ToString();

                    height = dtEmpdetails.Rows[m]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[m]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[m]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[m]["EmpLanguagesKnown"].ToString();
                    string lgknwn = "";

                    if (Languagesknown.Length > 0)
                    {
                        string qry = "select language from languages where languageid in (" + Languagesknown + ")";
                        DataTable dtqry = Config.ExecuteReaderWithQueryAsync(qry).Result;

                        string lang = "";

                        var list = new List<string>();

                        if (dtqry.Rows.Count > 0)
                        {
                            for (int u = 0; u < dtqry.Rows.Count; u++)
                            {
                                lang = dtqry.Rows[u]["language"].ToString();

                                list.Add(lang);
                            }

                        }

                        lgknwn = string.Join(",", list.ToArray());
                    }
                    identificationmark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[m]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[m]["EmpBloodGroup"].ToString();
                    BloodGroupName = dtEmpdetails.Rows[m]["BloodGroupName"].ToString();
                    EmpPresentAddress = dtEmpdetails.Rows[m]["EmpPresentAddress"].ToString();
                    AadharCardNo = dtEmpdetails.Rows[m]["AadharCardNo"].ToString();
                    PanCardNo = dtEmpdetails.Rows[m]["PanCardNo"].ToString();

                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[m]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[m]["EmpRefAddr2"].ToString();

                    date = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();



                    EmergencyPhone = dtEmpdetails.Rows[m]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[m]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[m]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[m]["EmpComplexion"].ToString();
                    EmpPermanentAddress = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();


                    prLmark = dtEmpdetails.Rows[m]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[m]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[m]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[m]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[m]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[m]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[m]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[m]["prPincode"].ToString();

                    pelmark = dtEmpdetails.Rows[m]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[m]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[m]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[m]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[m]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[m]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[m]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[m]["pePincode"].ToString();
                    // pephone = dtEmpdetails.Rows[m]["pephone"].ToString();

                    clientname = dtEmpdetails.Rows[m]["clientname"].ToString();
                    RHThumb = dtEmpdetails.Rows[m]["RHThumb"].ToString();
                    RHIndex = dtEmpdetails.Rows[m]["RHIndex"].ToString();
                    RHMiddle = dtEmpdetails.Rows[m]["RHMiddle"].ToString();
                    RHRing = dtEmpdetails.Rows[m]["RHRing"].ToString();
                    RHLittle = dtEmpdetails.Rows[m]["RHLittle"].ToString();
                    LHThumb = dtEmpdetails.Rows[m]["LHThumb"].ToString();
                    LHIndex = dtEmpdetails.Rows[m]["LHIndex"].ToString();
                    LHMiddle = dtEmpdetails.Rows[m]["LHMiddle"].ToString();
                    LHRing = dtEmpdetails.Rows[m]["LHRing"].ToString();
                    LHLittle = dtEmpdetails.Rows[m]["LHLittle"].ToString();

                    string Image1 = "";

                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[m]["Image"].ToString();
                    }
                    else
                    {

                    }



                    CompanyName = dtEmpdetails.Rows[m]["CompanyName"].ToString();

                    FSpouseName = dtEmpdetails.Rows[m]["SpouseName"].ToString();


                    #endregion


                    string QueryNominee = "select top 1 RName as NomineeName ,Rtype as NomineeRelation from emprelationships where empid='" + Idno + "' and PFNominee='Y' order by id";
                    DataTable DtNominee = Config.ExecuteReaderWithQueryAsync(QueryNominee).Result;
                    if (DtNominee.Rows.Count > 0)
                    {
                        NomineeRelation = DtNominee.Rows[0]["NomineeRelation"].ToString();
                        NomineeName = DtNominee.Rows[0]["NomineeName"].ToString();

                    }




                    #region Headings of the Pdf

                    PdfPTable table = new PdfPTable(6);
                    table.TotalWidth = 570f;
                    table.LockedWidth = true;
                    float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                    table.SetWidths(width);

                    string fontstyle = "calibri";
                    PdfPCell cellspace1 = new PdfPCell(new Phrase("Employee: " + Idno + "   Enrolment Form", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellspace1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace1.Colspan = 6;
                    cellspace1.Border = 0;
                    cellspace1.PaddingTop = -50;
                    table.AddCell(cellspace1);

                    PdfPCell cellspace = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 6;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;
                    table.AddCell(cellspace);


                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50);
                        gif2.SetAbsolutePosition(16f, 910f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    PdfPCell cellHead = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 1;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.SetLeading(0f, 1.3f);
                    table.AddCell(cellHead);

                    BaseColor color = new BaseColor(255, 0, 0);
                    PdfPCell cellHeadISO = new PdfPCell(new Phrase("ISO 9001-2008", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.NORMAL, color)));
                    cellHeadISO.HorizontalAlignment = 0;
                    cellHeadISO.Colspan = 6;
                    cellHeadISO.Border = 0;
                    cellHeadISO.PaddingTop = -5;
                    cellHeadISO.PaddingLeft = 70;
                    // table.AddCell(cellHeadISO);

                    PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead2.HorizontalAlignment = 1;
                    cellHead2.Colspan = 6;
                    cellHead2.Border = 0;


                    PdfPCell cellHead4 = new PdfPCell();
                    var celldescription = new Phrase();
                    celldescription.Add(new Chunk("                                                      ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription.Add(new Chunk("ENROLMENT FORM", FontFactory.GetFont(fontstyle, Fontsize + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    // celldescription.Add(new Chunk("                                              NO.", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead4.AddElement(celldescription);
                    cellHead4.HorizontalAlignment = 1;
                    cellHead4.PaddingLeft = 60f;
                    cellHead4.Colspan = 6;
                    cellHead4.Border = 0;
                    table.AddCell(cellHead4);

                    PdfPCell cellNo1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellNo1.HorizontalAlignment = 0;
                    cellNo1.Colspan = 3;
                    cellNo1.Border = 0;
                    cellNo1.PaddingLeft = -3;
                    table.AddCell(cellNo1);

                    if (Dateofjoining != "")
                    {
                        PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : " + Dateofjoining, FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                        celldate1.HorizontalAlignment = 1;
                        celldate1.Colspan = 3;
                        celldate1.Border = 0;
                        celldate1.PaddingLeft = 135;
                        table.AddCell(celldate1);
                    }
                    else
                    {
                        PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                        celldate1.HorizontalAlignment = 1;
                        celldate1.Colspan = 3;
                        celldate1.Border = 0;
                        celldate1.PaddingLeft = 78;
                        table.AddCell(celldate1);
                    }


                    table.AddCell(cellspace);

                    PdfPCell cellpost1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpost1.HorizontalAlignment = 0;
                    cellpost1.Colspan = 0;
                    cellpost1.Border = 0;
                    cellpost1.PaddingLeft = 10;
                    table.AddCell(cellpost1);



                    document.Add(table);

                    #endregion

                    #region Basic Information of the Employee

                    PdfPTable table2 = new PdfPTable(6);
                    table2.TotalWidth = 570f;
                    table2.LockedWidth = true;
                    float[] width1 = new float[] { 5f, 2f, 5f, 2f, 1.5f, 2f };
                    table2.SetWidths(width1);


                    PdfPTable temptable1 = new PdfPTable(3);
                    temptable1.TotalWidth = 400f;
                    temptable1.LockedWidth = true;
                    float[] tempwidth1 = new float[] { 5f, 2f, 5f };
                    temptable1.SetWidths(tempwidth1);

                    PdfPCell Contactno = new PdfPCell(new Phrase("1  Personal No. ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    Contactno.HorizontalAlignment = 0;
                    Contactno.Border = 0;
                    Contactno.PaddingTop = 5;
                    temptable1.AddCell(Contactno);

                    PdfPCell Contactno2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    Contactno2.HorizontalAlignment = 0;
                    Contactno2.Border = 0;
                    Contactno2.PaddingTop = 5;
                    temptable1.AddCell(Contactno2);

                    PdfPCell Contactno1 = new PdfPCell(new Phrase(Idno, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Contactno1.HorizontalAlignment = 0;
                    Contactno1.Border = 0;
                    Contactno1.PaddingTop = 5;
                    temptable1.AddCell(Contactno1);

                    PdfPCell Rank = new PdfPCell(new Phrase("2  Rank", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    Rank.HorizontalAlignment = 0;
                    Rank.Border = 0;
                    Rank.PaddingTop = 5;
                    temptable1.AddCell(Rank);

                    PdfPCell Rank2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    Rank2.HorizontalAlignment = 0;
                    Rank2.Border = 0;
                    Rank2.PaddingTop = 5;
                    temptable1.AddCell(Rank2);

                    PdfPCell Rank1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Rank1.HorizontalAlignment = 0;
                    Rank1.Border = 0;
                    Rank1.PaddingTop = 5;
                    temptable1.AddCell(Rank1);




                    PdfPCell cellName2 = new PdfPCell(new Phrase("3  Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellName2.HorizontalAlignment = 0;
                    cellName2.Border = 0;
                    cellName2.PaddingTop = 5;
                    temptable1.AddCell(cellName2);

                    PdfPCell cellName4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellName4.HorizontalAlignment = 0;
                    cellName4.Border = 0;
                    cellName4.PaddingTop = 5;
                    temptable1.AddCell(cellName4);

                    PdfPCell cellName3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellName3.HorizontalAlignment = 0;
                    cellName3.Border = 0;
                    cellName3.PaddingTop = 5;
                    temptable1.AddCell(cellName3);

                    PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Age ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDateofbirth.HorizontalAlignment = 0;
                    cellDateofbirth.Border = 0;
                    cellDateofbirth.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth);

                    PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDateofbirth2.HorizontalAlignment = 0;
                    cellDateofbirth2.Border = 0;
                    cellDateofbirth2.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth2);

                    PdfPCell cellDateofbirth1;

                    if (int.Parse(dateofbirth) == 0)
                    {
                        cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellDateofbirth1.HorizontalAlignment = 0;
                        cellDateofbirth1.Border = 0;
                        cellDateofbirth1.PaddingTop = 5;
                        temptable1.AddCell(cellDateofbirth1);
                    }
                    else
                    {
                        cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths + " & " + dateofbirth, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellDateofbirth1.HorizontalAlignment = 0;
                        cellDateofbirth1.Border = 0;
                        cellDateofbirth1.PaddingTop = 5;
                        temptable1.AddCell(cellDateofbirth1);
                    }

                    PdfPCell cellEdq = new PdfPCell(new Phrase("5  Qualification ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellEdq.HorizontalAlignment = 0;
                    cellEdq.Border = 0;
                    cellEdq.PaddingTop = 5;
                    temptable1.AddCell(cellEdq);

                    PdfPCell cellEdq2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellEdq2.HorizontalAlignment = 0;
                    cellEdq2.Border = 0;
                    cellEdq2.PaddingTop = 5;
                    temptable1.AddCell(cellEdq2);

                    PdfPCell cellEdq1 = new PdfPCell(new Phrase(educationqualification, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellEdq1.HorizontalAlignment = 0;
                    cellEdq1.Border = 0;
                    cellEdq1.PaddingTop = 5;
                    temptable1.AddCell(cellEdq1);

                    PdfPCell cellExperienc = new PdfPCell(new Phrase("6  Experience", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellExperienc.HorizontalAlignment = 0;
                    cellExperienc.Border = 0;
                    cellExperienc.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc);

                    PdfPCell cellExperienc2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellExperienc2.HorizontalAlignment = 0;
                    cellExperienc2.Border = 0;
                    cellExperienc2.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc2);


                    PdfPCell cellExperienc1 = new PdfPCell(new Phrase(PrevYrExp, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellExperienc1.HorizontalAlignment = 0;
                    cellExperienc1.Border = 0;
                    cellExperienc1.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc1);

                    PdfPCell cellFather21 = new PdfPCell(new Phrase("7  Father’s Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellFather21.HorizontalAlignment = 0;
                    cellFather21.Border = 0;
                    cellFather21.PaddingTop = 5;
                    temptable1.AddCell(cellFather21);

                    PdfPCell cellFather41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellFather41.HorizontalAlignment = 0;
                    cellFather41.Border = 0;
                    cellFather41.PaddingTop = 5;
                    temptable1.AddCell(cellFather41);

                    PdfPCell cellFather31 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellFather31.HorizontalAlignment = 0;
                    cellFather31.Border = 0;
                    cellFather31.PaddingTop = 5;
                    temptable1.AddCell(cellFather31);

                    PdfPCell cellMother21 = new PdfPCell(new Phrase("8  Mother’s Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellMother21.HorizontalAlignment = 0;
                    cellMother21.Border = 0;
                    cellMother21.PaddingTop = 5;
                    temptable1.AddCell(cellMother21);

                    PdfPCell cellMother41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellMother41.HorizontalAlignment = 0;
                    cellMother41.Border = 0;
                    cellMother41.PaddingTop = 5;
                    temptable1.AddCell(cellMother41);

                    PdfPCell cellMother31 = new PdfPCell(new Phrase(MotherName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellMother31.HorizontalAlignment = 0;
                    cellMother31.Border = 0;
                    cellMother31.PaddingTop = 5;
                    temptable1.AddCell(cellMother31);






                    PdfPCell cellDesign = new PdfPCell(new Phrase("9  Occupation  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDesign.HorizontalAlignment = 0;
                    cellDesign.Border = 0;
                    cellDesign.PaddingTop = 5;
                    temptable1.AddCell(cellDesign);

                    PdfPCell cellDesign1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDesign1.HorizontalAlignment = 0;
                    cellDesign1.Border = 0;
                    cellDesign1.PaddingTop = 5;
                    temptable1.AddCell(cellDesign1);

                    PdfPCell cellDesign3 = new PdfPCell(new Phrase(FatherOccupation, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDesign3.HorizontalAlignment = 0;
                    cellDesign3.Border = 0;
                    cellDesign3.PaddingTop = 5;
                    temptable1.AddCell(cellDesign3);

                    PdfPCell cellMobile1 = new PdfPCell(new Phrase("10  Mobile No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellMobile1.HorizontalAlignment = 0;
                    cellMobile1.Border = 0;
                    cellMobile1.PaddingTop = 5;
                    temptable1.AddCell(cellMobile1);

                    PdfPCell cellMobile12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellMobile12.HorizontalAlignment = 0;
                    cellMobile12.Border = 0;
                    cellMobile12.PaddingTop = 5;
                    temptable1.AddCell(cellMobile12);

                    PdfPCell cellMobile11 = new PdfPCell(new Phrase(MobileNumber, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellMobile11.HorizontalAlignment = 0;
                    cellMobile11.Border = 0;
                    cellMobile11.PaddingTop = 5;
                    temptable1.AddCell(cellMobile11);

                    PdfPCell childTable1 = new PdfPCell(temptable1);
                    childTable1.Border = 0;
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 3;
                    table2.AddCell(childTable1);

                    PdfPCell cellAadhaar1 = new PdfPCell(new Phrase("11  Aadhaar No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellAadhaar1.HorizontalAlignment = 0;
                    cellAadhaar1.Border = 0;
                    cellAadhaar1.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar1);

                    PdfPCell cellAadhaar12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellAadhaar12.HorizontalAlignment = 0;
                    cellAadhaar12.Border = 0;
                    cellAadhaar12.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar12);

                    PdfPCell cellAadhaar11 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAadhaar11.HorizontalAlignment = 0;
                    cellAadhaar11.Border = 0;
                    cellAadhaar11.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar11);

                    PdfPCell cellpan1 = new PdfPCell(new Phrase("12  PAN No", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpan1.HorizontalAlignment = 0;
                    cellpan1.Border = 0;
                    cellpan1.PaddingTop = 5;
                    temptable1.AddCell(cellpan1);

                    PdfPCell cellepan12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellepan12.HorizontalAlignment = 0;
                    cellepan12.Border = 0;
                    cellepan12.PaddingTop = 5;
                    temptable1.AddCell(cellepan12);

                    PdfPCell cellpanno11 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpanno11.HorizontalAlignment = 0;
                    cellpanno11.Border = 0;
                    cellpanno11.PaddingTop = 5;
                    temptable1.AddCell(cellpanno11);


                    PdfPTable temptable2 = new PdfPTable(3);
                    temptable2.TotalWidth = 70f;
                    temptable2.LockedWidth = true;
                    float[] tempwidth2 = new float[] { 2f, 3f, 2f };
                    temptable2.SetWidths(tempwidth2);


                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[m]["Image"].ToString());
                        //empphoto.ScalePercent(23f);
                        empphoto.ScaleAbsolute(110.7f, 140.5f);
                        PdfPCell employeephoto = new PdfPCell();
                        Paragraph logo = new Paragraph();
                        logo.Add(new Chunk(empphoto, 0, 0));
                        employeephoto.AddElement(logo);
                        employeephoto.HorizontalAlignment = 2;
                        employeephoto.Border = 0;
                        employeephoto.Colspan = 3;

                        temptable2.AddCell(employeephoto);

                    }


                    PdfPCell childTable2 = new PdfPCell(temptable2);
                    childTable2.Border = 0;
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 3;
                    table2.AddCell(childTable2);

                    document.Add(table2);

                    #endregion Basic Information of the Employee

                    #region Employee Addresses



                    PdfPTable tbldatas2 = new PdfPTable(6);
                    tbldatas2.TotalWidth = 580f;
                    tbldatas2.LockedWidth = true;
                    float[] widthdata2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };

                    PdfPTable tbldata2 = new PdfPTable(3);
                    tbldata2.TotalWidth = 290f;
                    tbldata2.LockedWidth = true;
                    float[] widths1 = new float[] { 2f, 1.5f, 3f };
                    tbldata2.SetWidths(widths1);


                    PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    data2space.Colspan = 6;
                    data2space.Border = 0;


                    PdfPCell cellPresentaddr = new PdfPCell(new Phrase("13  Present Address ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 3;
                    cellPresentaddr.Border = 0;
                    cellPresentaddr.PaddingTop = 8;
                    tbldata2.AddCell(cellPresentaddr);


                    PdfPCell cellPresentaddrval = new PdfPCell(new Phrase(EmpPresentAddress, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddrval.HorizontalAlignment = 0;
                    cellPresentaddrval.Colspan = 3;
                    cellPresentaddrval.Border = 0;
                    cellPresentaddrval.PaddingTop = 8;
                    tbldata2.AddCell(cellPresentaddrval);







                    PdfPCell childTables1 = new PdfPCell(tbldata2);
                    childTables1.HorizontalAlignment = 0;
                    childTables1.Colspan = 3;
                    childTables1.Border = 0;
                    tbldatas2.AddCell(childTables1);



                    PdfPTable tbldata3 = new PdfPTable(3);
                    tbldata3.TotalWidth = 290f;
                    tbldata3.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 1.5f, 3f };
                    tbldata3.SetWidths(width2);

                    PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("Permanent Address", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 3;
                    cellPerminentaddr.Border = 0;
                    cellPerminentaddr.PaddingTop = 8;
                    cellPerminentaddr.PaddingLeft = 15;
                    tbldata3.AddCell(cellPerminentaddr);


                    PdfPCell cellPerminentaddrval = new PdfPCell(new Phrase(EmpPermanentAddress, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddrval.HorizontalAlignment = 0;
                    cellPerminentaddrval.Colspan = 3;
                    cellPerminentaddrval.Border = 0;
                    cellPerminentaddrval.PaddingTop = 8;
                    cellPerminentaddrval.PaddingLeft = 15;
                    tbldata3.AddCell(cellPerminentaddrval);




                    PdfPCell childTables12 = new PdfPCell(tbldata3);
                    childTables12.HorizontalAlignment = 0;
                    childTables12.Colspan = 3;
                    childTables12.Border = 0;
                    tbldatas2.AddCell(childTables12);

                    document.Add(tbldatas2);




                    #endregion Employee Addresses

                    #region for languages

                    PdfPTable table3 = new PdfPTable(8);
                    table3.TotalWidth = 580f;
                    table3.LockedWidth = true;
                    float[] widtha2 = new float[] { 1f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    table3.SetWidths(widtha2);

                    PdfPCell celllanguage = new PdfPCell(new Phrase("14  Languages Known                   :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celllanguage.HorizontalAlignment = 0;
                    celllanguage.Colspan = 4;
                    celllanguage.Border = 0;
                    celllanguage.PaddingTop = 8;
                    celllanguage.PaddingLeft = -3;
                    table3.AddCell(celllanguage);


                    PdfPCell celllanguage1 = new PdfPCell(new Phrase(lgknwn, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celllanguage1.HorizontalAlignment = 0;
                    celllanguage1.Colspan = 4;
                    celllanguage1.Border = 0;
                    celllanguage1.PaddingTop = 8;
                    celllanguage1.PaddingLeft = -50;
                    table3.AddCell(celllanguage1);

                    PdfPCell cellphyst = new PdfPCell(new Phrase("15  Physical GDX ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellphyst.HorizontalAlignment = 0;
                    cellphyst.Colspan = 2;
                    cellphyst.Border = 0;
                    cellphyst.PaddingTop = 8;
                    cellphyst.PaddingLeft = -3;
                    table3.AddCell(cellphyst);

                    table3.AddCell(cellspace);



                    PdfPCell cellHeightem = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHeightem.HorizontalAlignment = 0;
                    cellHeightem.Colspan = 1;
                    cellHeightem.Border = 0;
                    cellHeightem.PaddingTop = 5;
                    cellHeightem.PaddingLeft = 30;
                    table3.AddCell(cellHeightem);


                    PdfPCell cellHeightem1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHeightem1.HorizontalAlignment = 0;
                    cellHeightem1.Colspan = 1;
                    cellHeightem1.Border = 0;
                    cellHeightem1.PaddingTop = 5;
                    cellHeightem1.PaddingLeft = 30;
                    table3.AddCell(cellHeightem1);


                    PdfPCell cellHeight = new PdfPCell(new Phrase(" Height :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHeight.HorizontalAlignment = 0;
                    cellHeight.Colspan = 0;
                    cellHeight.Border = 0;
                    cellHeight.PaddingTop = 5;
                    cellHeight.PaddingLeft = 10;
                    table3.AddCell(cellHeight);


                    if (height != "0")
                    {
                        PdfPCell cellHeight1 = new PdfPCell(new Phrase(height, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellHeight1.HorizontalAlignment = 0;
                        cellHeight1.Colspan = 0;
                        cellHeight1.Border = 0;
                        cellHeight1.PaddingTop = 5;
                        table3.AddCell(cellHeight1);
                    }
                    if (height == "0")
                    {
                        PdfPCell cellHeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellHeight1.HorizontalAlignment = 0;
                        cellHeight1.Colspan = 0;
                        cellHeight1.Border = 0;
                        cellHeight1.PaddingTop = 5;
                        cellHeight1.PaddingLeft = -30;
                        table3.AddCell(cellHeight1);
                    }


                    PdfPCell cellWeight = new PdfPCell(new Phrase("Weight :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellWeight.HorizontalAlignment = 0;
                    cellWeight.Colspan = 0;
                    cellWeight.Border = 0;
                    cellWeight.PaddingTop = 5;
                    cellWeight.PaddingLeft = 30;
                    table3.AddCell(cellWeight);

                    if (weight != "0")
                    {
                        PdfPCell cellWeight1 = new PdfPCell(new Phrase(weight, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellWeight1.HorizontalAlignment = 0;
                        cellWeight1.Colspan = 0;
                        cellWeight1.Border = 0;
                        cellWeight1.PaddingTop = 5;
                        table3.AddCell(cellWeight1);
                    }
                    if (weight == "0")
                    {
                        PdfPCell cellWeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellWeight1.HorizontalAlignment = 0;
                        cellWeight1.Colspan = 0;
                        cellWeight1.Border = 0;
                        cellWeight1.PaddingTop = 5;
                        cellWeight1.PaddingLeft = -50;
                        table3.AddCell(cellWeight1);
                    }
                    //data1.AddCell(cellspace1);

                    PdfPCell cellchest = new PdfPCell(new Phrase(" Chest :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellchest.HorizontalAlignment = 0;
                    cellchest.Colspan = 0;
                    cellchest.Border = 0;
                    cellchest.PaddingTop = 5;
                    table3.AddCell(cellchest);


                    if (chest != "0")
                    {
                        PdfPCell cellChest1 = new PdfPCell(new Phrase(chest, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellChest1.HorizontalAlignment = 0;
                        cellChest1.Colspan = 0;
                        cellChest1.Border = 0;
                        cellChest1.PaddingTop = 5;
                        cellChest1.PaddingLeft = -30;
                        table3.AddCell(cellChest1);
                    }
                    if (chest == "0")
                    {
                        PdfPCell cellChest1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellChest1.HorizontalAlignment = 0;
                        cellChest1.Colspan = 0;
                        cellChest1.Border = 0;
                        cellChest1.PaddingTop = 5;
                        cellChest1.PaddingLeft = -30;
                        table3.AddCell(cellChest1);
                    }

                    table3.AddCell(cellspace);

                    document.Add(table3);



                    PdfPTable data1 = new PdfPTable(3);
                    data1.TotalWidth = 580f;
                    data1.LockedWidth = true;
                    float[] widthdate = new float[] { 3f, 2f, 3f };
                    data1.SetWidths(widthdate);

                    PdfPCell celldata15 = new PdfPCell(new Phrase("16  Identification Marks ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldata15.HorizontalAlignment = 0;
                    celldata15.Colspan = 0;
                    celldata15.Border = 0;
                    celldata15.PaddingTop = 8;
                    celldata15.PaddingLeft = -3;
                    data1.AddCell(celldata15);

                    PdfPCell celldatacol = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldatacol.HorizontalAlignment = 0;
                    celldatacol.Colspan = 2;
                    celldatacol.Border = 0;
                    celldatacol.PaddingTop = 8;
                    celldatacol.PaddingLeft = -46;
                    data1.AddCell(celldatacol);


                    PdfPCell celldata16 = new PdfPCell(new Phrase("      (i) " + identificationmark1 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata16.HorizontalAlignment = 0;
                    celldata16.Colspan = 3;
                    celldata16.Border = 0;
                    celldata16.PaddingTop = 5;
                    data1.AddCell(celldata16);

                    data1.AddCell(cellspace);

                    PdfPCell celldata17 = new PdfPCell(new Phrase("      (ii) " + identificationmark2 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata17.HorizontalAlignment = 0;
                    celldata17.Colspan = 3;
                    celldata17.Border = 0;
                    celldata17.PaddingTop = 5;
                    // celldata17.PaddingLeft = -20;
                    data1.AddCell(celldata17);

                    data1.AddCell(cellspace);

                    PdfPCell cellMarital = new PdfPCell(new Phrase("17  Marital Status / \n      Name of Spouse", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellMarital.HorizontalAlignment = 0;
                    cellMarital.Colspan = 0;
                    cellMarital.Border = 0;
                    cellMarital.PaddingTop = 8;
                    cellMarital.PaddingLeft = -3;
                    data1.AddCell(cellMarital);

                    PdfPCell cellMarital2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellMarital2.HorizontalAlignment = 0;
                    cellMarital2.Colspan = 0;
                    cellMarital2.Border = 0;
                    cellMarital2.PaddingTop = 8;
                    cellMarital2.PaddingLeft = -46;
                    data1.AddCell(cellMarital2);

                    if (maritalstatus.Length > 0)
                    {
                        if (SpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = maritalstatus + " / " + SpouseName;

                        }
                        else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = maritalstatus + " / " + FSpouseName;
                        }
                        else
                        {

                            MaritalStatusSpouseText = maritalstatus;
                        }



                    }
                    else if (maritalstatus.Length == 0)
                    {

                        if (SpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = SpouseName;

                        }

                        else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                        {

                            MaritalStatusSpouseText = FSpouseName;

                        }
                        else
                        {

                            MaritalStatusSpouseText = "";
                        }

                    }
                    else
                    {
                        MaritalStatusSpouseText = "";
                    }

                    PdfPCell cellMarital1 = new PdfPCell(new Phrase(MaritalStatusSpouseText, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellMarital1.HorizontalAlignment = 0;
                    cellMarital1.Colspan = 0;
                    cellMarital1.Border = 0;
                    cellMarital1.PaddingTop = 8;
                    cellMarital1.PaddingLeft = -100;
                    data1.AddCell(cellMarital1);

                    PdfPCell celldatablood = new PdfPCell(new Phrase("18  Blood Group ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldatablood.HorizontalAlignment = 0;
                    celldatablood.Colspan = 1;
                    celldatablood.Border = 0;
                    celldatablood.PaddingTop = 8;
                    celldatablood.PaddingLeft = -3;
                    data1.AddCell(celldatablood);

                    PdfPCell celldatabloodl = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldatabloodl.HorizontalAlignment = 0;
                    celldatabloodl.Colspan = 1;
                    celldatabloodl.Border = 0;
                    celldatabloodl.PaddingTop = 8;
                    celldatabloodl.PaddingLeft = -46;
                    data1.AddCell(celldatabloodl);


                    PdfPCell celldatabloodl16 = new PdfPCell(new Phrase(BloodGroupName, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldatabloodl16.HorizontalAlignment = 0;
                    celldatabloodl16.Colspan = 1;
                    celldatabloodl16.Border = 0;
                    celldatabloodl16.PaddingTop = 5;
                    celldatabloodl16.PaddingLeft = -100;
                    data1.AddCell(celldatabloodl16);

                    document.Add(data1);

                    PdfPTable Family = new PdfPTable(4);
                    Family.TotalWidth = 590f;
                    Family.LockedWidth = true;
                    float[] widthFamily = new float[] { 2f, 3f, 4f, 3f };
                    Family.SetWidths(widthFamily);

                    PdfPCell cellheading = new PdfPCell(new Phrase("19  Family Particulars                               :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellheading.Colspan = 4;
                    cellheading.Border = 0;
                    cellheading.HorizontalAlignment = 0;
                    Family.AddCell(cellheading);

                    PdfPCell cellsno = new PdfPCell(new Phrase("SL No.", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellsno.Colspan = 1;
                    cellsno.Border = 0;
                    cellsno.HorizontalAlignment = 0;
                    Family.AddCell(cellsno);

                    PdfPCell cellfamname = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellfamname.Colspan = 1;
                    cellfamname.Border = 0;
                    cellfamname.HorizontalAlignment = 0;
                    Family.AddCell(cellfamname);

                    PdfPCell cellfamage = new PdfPCell(new Phrase("Date of Birth/ Age", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellfamage.Colspan = 1;
                    cellfamage.Border = 0;
                    cellfamage.HorizontalAlignment = 0;
                    Family.AddCell(cellfamage);

                    PdfPCell cellRemp = new PdfPCell(new Phrase("Relation with the Employee", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellRemp.Colspan = 1;
                    cellRemp.Border = 0;
                    cellRemp.HorizontalAlignment = 0;
                    Family.AddCell(cellRemp);

                    string Relname = "";
                    string Relage = "";
                    string RelDOFBirth = "";
                    string RType1 = "";
                    string ROccupation = "";

                    int k = 1;
                    string familydetails = "select *,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(varchar(10),DOfBirth,103) end as dbirth from emprelationships where EmpId='" + Idno + "'";
                    DataTable dtfamilydetails = Config.ExecuteReaderWithQueryAsync(familydetails).Result;
                    if (dtfamilydetails.Rows.Count > 0)
                    {


                        for (int i = 0; i < dtfamilydetails.Rows.Count; i++)
                        {
                            Relname = dtfamilydetails.Rows[i]["RName"].ToString();
                            Relage = dtfamilydetails.Rows[i]["age"].ToString();
                            RelDOFBirth = dtfamilydetails.Rows[i]["dbirth"].ToString();
                            ROccupation = dtfamilydetails.Rows[i]["ROccupation"].ToString();
                            RType1 = dtfamilydetails.Rows[i]["RType"].ToString();
                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtfamilydetails.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + " / " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }

                            if (Relname.Length > 0)
                            {
                                PdfPCell cellsno1 = new PdfPCell(new Phrase(k.ToString(), FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsno1.Colspan = 1;
                                cellsno1.HorizontalAlignment = 0;
                                cellsno1.Border = 0;
                                Family.AddCell(cellsno1);
                            }
                            else
                            {
                                PdfPCell cellsno1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellsno1.Colspan = 1;
                                cellsno1.HorizontalAlignment = 0;
                                cellsno1.Border = 0;
                                Family.AddCell(cellsno1);
                            }
                            PdfPCell cellfamname1 = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellfamname1.Colspan = 1;
                            cellfamname1.Border = 0;
                            cellfamname1.HorizontalAlignment = 0;
                            Family.AddCell(cellfamname1);



                            PdfPCell cellfamage1 = new PdfPCell(new Phrase(RelDOFBirth, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellfamage1.Colspan = 1;
                            cellfamage1.HorizontalAlignment = 0;
                            cellfamage1.Border = 0;
                            Family.AddCell(cellfamage1);

                            PdfPCell cellfamrelation1 = new PdfPCell(new Phrase(RType1, FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellfamrelation1.Colspan = 1;
                            cellfamrelation1.Border = 0;
                            cellfamrelation1.HorizontalAlignment = 0;
                            Family.AddCell(cellfamrelation1);

                            k++;
                        }

                    }
                    document.Add(Family);


                    PdfPTable data4 = new PdfPTable(2);
                    data4.TotalWidth = 525f;
                    data4.LockedWidth = true;
                    float[] widthdate4 = new float[] { 2f, 1f };
                    data4.SetWidths(widthdate4);

                    PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempty.HorizontalAlignment = 0;
                    cellempty.Colspan = 2;
                    cellempty.Border = 0;
                    cellempty.PaddingTop = 5;

                    document.Add(data4);

                    #endregion for languages

                    #region Employee Reference Details


                    PdfPTable tblReferences = new PdfPTable(4);
                    tblReferences.TotalWidth = 580f;
                    tblReferences.LockedWidth = true;
                    float[] widthRef = new float[] { 1f, 3f, 1f, 3f };
                    tblReferences.SetWidths(widthRef);

                    PdfPCell celldataref = new PdfPCell(new Phrase("20  Reference (2 Neighbours with name , occupation and address / father-in-law address)", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldataref.HorizontalAlignment = 0;
                    celldataref.Colspan = 4;
                    celldataref.Border = 0;
                    celldataref.PaddingTop = 5;
                    celldataref.PaddingLeft = -3;
                    tblReferences.AddCell(celldataref);

                    PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Refspace.Colspan = 4;
                    Refspace.Border = 0;

                    PdfPCell celldata26 = new PdfPCell(new Phrase("    a) " + refaddress1 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata26.HorizontalAlignment = 0;
                    celldata26.Colspan = 4;
                    celldata26.Border = 0;
                    celldata26.PaddingTop = 5;
                    tblReferences.AddCell(celldata26);

                    //tblReferences.AddCell(Refspace);

                    PdfPCell celldata28 = new PdfPCell(new Phrase("    b) " + refaddress2 + "", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata28.HorizontalAlignment = 0;
                    celldata28.Colspan = 4;
                    celldata28.Border = 0;
                    tblReferences.AddCell(celldata28);
                    tblReferences.AddCell(Refspace);

                    #region for photos

                    iTextSharp.text.Image gif = null;

                    PdfPCell cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);

                    if (LHThumb.Length > 0)
                    {

                        Byte[] bytes = Convert.FromBase64String(LHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(100f, 100f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 50f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblReferences.AddCell(EmpImage);
                    }
                    else
                    {
                        cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellSpacetemprt.HorizontalAlignment = 0;
                        cellSpacetemprt.Colspan = 1;
                        cellSpacetemprt.FixedHeight = 50;
                        tblReferences.AddCell(cellSpacetemprt);
                    }

                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);

                    if (RHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(100f, 100f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 40f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblReferences.AddCell(EmpImage);
                    }
                    else
                    {
                        cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellSpacetemprt.HorizontalAlignment = 0;
                        cellSpacetemprt.Colspan = 1;
                        cellSpacetemprt.FixedHeight = 50;
                        tblReferences.AddCell(cellSpacetemprt);
                    }

                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" Left Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    cellSpacetemprt.PaddingRight = 10;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" Right Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    cellSpacetemprt.PaddingRight = 10;
                    tblReferences.AddCell(cellSpacetemprt);


                    #endregion for photos

                    tblReferences.AddCell(Refspace);

                    PdfPCell cellSpace16 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpace16.HorizontalAlignment = 0;
                    cellSpace16.Colspan = 6;
                    cellSpace16.Border = 0;
                    tblReferences.AddCell(cellSpace16);

                    PdfPCell cellDesc = new PdfPCell(new Phrase("The above information is true to the best of my knowledge and belief.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    cellDesc.HorizontalAlignment = 0;
                    cellDesc.Colspan = 4;
                    cellDesc.Border = 0;
                    cellDesc.PaddingTop = 5;
                    cellDesc.PaddingLeft = -3;
                    tblReferences.AddCell(cellDesc);

                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 4;
                        sealImg.PaddingLeft = -570f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblReferences.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellsign = new PdfPCell(new Phrase("Signature of Applicant :  ", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellsign.HorizontalAlignment = 0;
                    cellsign.Colspan = 2;
                    cellsign.Border = 0;
                    cellsign.PaddingTop = 5;
                    cellsign.PaddingLeft = 0;
                    cellsign.PaddingLeft = -3;
                    tblReferences.AddCell(cellsign);


                    PdfPCell cellrecrutment = new PdfPCell(new Phrase("Recruitment Officer", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellrecrutment.HorizontalAlignment = 1;
                    cellrecrutment.Colspan = 2;
                    cellrecrutment.Border = 0;
                    cellrecrutment.PaddingTop = 5;
                    cellrecrutment.PaddingLeft = -3;
                    tblReferences.AddCell(cellrecrutment);


                    PdfPCell celldate3 = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldate3.HorizontalAlignment = 0;
                    celldate3.Colspan = 2;
                    celldate3.Border = 0;
                    celldate3.PaddingLeft = -3;
                    tblReferences.AddCell(celldate3);


                    PdfPCell cellplace = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellplace.HorizontalAlignment = 1;
                    cellplace.Border = 0;
                    cellplace.Colspan = 2;
                    cellplace.PaddingLeft = -75;
                    tblReferences.AddCell(cellplace);

                    document.Add(tblReferences);


                    document.NewPage();

                    #region For Finger Prints

                    PdfPTable tblefingerprints = new PdfPTable(6);
                    tblefingerprints.TotalWidth = 580f;
                    tblefingerprints.LockedWidth = true;
                    float[] widthFinger = new float[] { 2f, 3f, 1f, 2f, 3f, 0.5f };
                    tblefingerprints.SetWidths(widthFinger);
                    PdfPCell FingerPrints;

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    FingerPrints.FixedHeight = 60;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Left Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 1;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Right Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 1;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);


                    FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHIndex.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHIndex);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHIndex.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHIndex);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHMiddle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHMiddle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHMiddle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHMiddle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);


                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHRing.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHRing);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHRing.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHRing);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHLittle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHLittle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }

                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHLittle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHLittle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    document.Add(tblefingerprints);

                    document.NewPage();
                    #endregion

                    PdfPTable tblinstructions = new PdfPTable(4);
                    tblinstructions.TotalWidth = 580f;
                    tblinstructions.LockedWidth = true;
                    float[] widthRefIns = new float[] { 0.5f, 2f, 2f, 2f };
                    tblinstructions.SetWidths(widthRefIns);

                    PdfPCell cellSpace161 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpace161.HorizontalAlignment = 0;
                    cellSpace161.Colspan = 6;
                    cellSpace161.Border = 0;


                    PdfPCell cellExperiencphrase = new PdfPCell(new Phrase("RULES AND REGULATIONS", FontFactory.GetFont(fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellExperiencphrase.HorizontalAlignment = 1;
                    cellExperiencphrase.Colspan = 4;
                    cellExperiencphrase.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase);

                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase77 = new PdfPCell(new Phrase("I hereby agree that I will abide by all the rules and regulations of the company as given hereunder. Also I am aware that any  violation of these rules and regulations  I shall be liable to disciplinary action as per the company laws :-", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase77.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase77.Colspan = 4;
                    cellExperiencphrase77.Border = 0;
                    cellExperiencphrase77.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase77);

                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase66 = new PdfPCell(new Phrase("1.  After joining the duty, every security person has to work for one full month. He will not be absent from duty without obtaining prior permission from field officer.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase66.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase66.Colspan = 4;
                    cellExperiencphrase66.Border = 0;
                    cellExperiencphrase66.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase66);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase55 = new PdfPCell(new Phrase("2.  He may take a maximum of 3 days leave with prior permission from the field officer. field officer can grant  leave upto there days. Area manger can grant leave upto 6 days, managing Director’s prior permission, is necessary in case of the leave exceeding 6 days. Request shall be initiated one week in advance in such cases.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase55.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase55.Colspan = 4;
                    cellExperiencphrase55.Border = 0;
                    cellExperiencphrase55.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase55);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase44 = new PdfPCell(new Phrase("3.  Any security person will be removed from services if he is found having any bad habits or absenting from duty without prior permission or misbehaving with his superiors / colleagues.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase44.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase44.Colspan = 4;
                    cellExperiencphrase44.Border = 0;
                    cellExperiencphrase44.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase44);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase33 = new PdfPCell(new Phrase("4. If any security person is found involved in theft, cheating, dacoity, lending  or borrowing money from the employees of the unit/factory, he shall be handed over to police for suitable action.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase33.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase33.Colspan = 4;
                    cellExperiencphrase33.Border = 0;
                    cellExperiencphrase33.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase33);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase22 = new PdfPCell(new Phrase("5.  All security personnel should wear neat and clean uniform during duty hours. They have to have proper hair cut and daily shaving before reporting for duty. He is to ensure that no complaints on indiscipline are received from clients.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase22.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase22.Colspan = 4;
                    cellExperiencphrase22.Border = 0;
                    cellExperiencphrase22.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase22);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase11 = new PdfPCell(new Phrase("6.  If any security person wishes to resign from the company, he may be so provided; He has minimum services of 12 months in the company and has informed the organization, in writing at least one month in advance. Any violation of the rule shall result in non-payment of his salary for the month.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase11.Colspan = 4;
                    cellExperiencphrase11.Border = 0;
                    cellExperiencphrase11.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase11);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase10 = new PdfPCell(new Phrase("7.  Parades at unit level/mass parades in a particular area and various physical activities are conducted at regular intervals. it is mandatory to all security personnel to attend without any pre-condition. Necessary disciplinary action will be initiated against the defaulters as per the company’s Rule.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase10.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase10.Colspan = 4;
                    cellExperiencphrase10.Border = 0;
                    cellExperiencphrase10.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase10);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase9 = new PdfPCell(new Phrase("8.  He shall not leave the working place under any circumstances without properly handing over his duties to the reliever. in case of emergency he should make an alternative arrangement before leaving the duty post or continue performing the till he is relived.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase9.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase9.Colspan = 4;
                    cellExperiencphrase9.Border = 0;
                    cellExperiencphrase9.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase9);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase8 = new PdfPCell(new Phrase("9.  All security personnel should obey the orders issued by their superiors and should perform their duty in a disciplined manner.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase8.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase8.Colspan = 4;
                    cellExperiencphrase8.Border = 0;
                    cellExperiencphrase8.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase8);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase7 = new PdfPCell(new Phrase("10.  A full set of uniform will be issued at the time of joining the duty. The second set, viz. one pant in the fourth month and two pairs of socks in the sixth month will be issued on payment. uniform once issued will not be taken back under any circumstances.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase7.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase7.Colspan = 4;
                    cellExperiencphrase7.Border = 0;
                    cellExperiencphrase7.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase7);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase6 = new PdfPCell(new Phrase("11.  All security personnel should be punctual in reporting for they duty and ensure signing the attendances register before joining the duty. The late comers shall be liable for disciplinary action as per company law.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase6.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase6.Colspan = 4;
                    cellExperiencphrase6.Border = 0;
                    cellExperiencphrase6.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase6);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase5 = new PdfPCell(new Phrase("12.  All security personnel are required to perform overtime or additional duties as and when called upon to do so. Refusal to do such additional tasks or overtime duties shall attract disciplinary action.", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase5.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase5.Colspan = 4;
                    cellExperiencphrase5.Border = 0;
                    cellExperiencphrase5.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase5);

                    tblinstructions.AddCell(cellSpace161);
                    tblinstructions.AddCell(cellSpace161);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase4 = new PdfPCell(new Phrase("Left Hand Thumb                                                         Impression of the Applicant", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase4.HorizontalAlignment = 1;
                    cellExperiencphrase4.Colspan = 2;
                    cellExperiencphrase4.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase4);


                    PdfPCell cellExperiencphrase3 = new PdfPCell(new Phrase("Signature of the Applicant", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase3.HorizontalAlignment = 1;
                    cellExperiencphrase3.Colspan = 2;
                    cellExperiencphrase3.Border = 0;
                    //cellExperiencphrase3.PaddingLe = -50;
                    tblinstructions.AddCell(cellExperiencphrase3);

                    PdfPCell cellExperiencphrase2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase2.HorizontalAlignment = 1;
                    cellExperiencphrase2.Colspan = 2;
                    cellExperiencphrase2.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase2);

                    PdfPCell cellExperiencphrase1 = new PdfPCell(new Phrase(" Date:", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase1.HorizontalAlignment = 1;
                    cellExperiencphrase1.Colspan = 2;
                    cellExperiencphrase1.Border = 0;
                    cellExperiencphrase1.PaddingLeft = -110;
                    cellExperiencphrase1.PaddingBottom = -40;
                    tblinstructions.AddCell(cellExperiencphrase1);

                    // document.Add(tblinstructions);


                    #endregion


                }


                string filename = "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }

        }

        protected void btnEnrolmentForm_Click(object sender, EventArgs e)
        {
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                EnrolmentmentIndividual();
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                EnrolmentBulk();
            }
        }

        #endregion for EnrolmentForm

        #region for PFForm11

        public void PFForm11Individual()
        {
            try
            {

                int Fontsize = 8;
                string Fontstyle = "Tahoma";

                #region Variable Declaration

                string FatherName = "";
                string SpouseName = "";
                string FSpouseName = "";
                string EstablishmentID = "";
                string Qualification = "";
                string email = "";
                string UANNumber = "";
                string contactno = "";
                string Idno = "";
                string date = "";
                string postappliedfor = "";
                string name = "";
                string dateofbirth = "";
                string educationqualification = "";
                string TechnicalQualification = "";
                string previouspost = "";
                string nationality = "";
                string community = "";
                string maritalstatus = "";
                string height = "";
                string weight = "";
                string chest = "";
                string bloodgroup = "";
                string identificationmark1 = "";
                string identificationmark2 = "";
                string SpeciallyAbled = "";
                string Category = "";
                string prTown = "";
                string prPostOffice = "";
                string prTaluka = "";
                string prPoliceStation = "";
                string prcity = "";
                string prLmark = "";
                string prPincode = "";
                string prState = "";


                string peTown = "";
                string pePostOffice = "";
                string peTaluka = "";
                string pePoliceStation = "";
                string pecity = "";
                string pelmark = "";
                string pePincode = "";
                string peState = "";

                string refaddress1 = "";
                string refaddress2 = "";


                string clientname = "";


                string relationName = "";
                string relationAge = "";
                string relationType = "";
                string PlaceofBirth = "";
                string Haircolour = "";
                string eyecolour = "";
                string Complexion = "";
                string Languagesknown = "";
                string EmergencyPhone = "";
                string Fname = "";
                string Fage = "";
                string Mname = "";
                string Mage = "";

                string Esino = "";
                string PFno = "";
                string prphone = "";
                string pephone = "";
                string Gender = "";
                string Title = "";
                string PrevRegionCode = "";
                string PrevEmployerCode = "";
                string PrevExtension = "";
                string PrevPFNo = "";
                string PrevDtofLeave = "";
                string PrevYrExp = "";
                string FatherSpouseName = "";


                string AadharCardNo = "";
                string AadharCardName = "";
                string drivingLicenseName = ""; string DrivingLicenseNo = "";
                string VoterIDNo = "";
                string VoterIDName = "";
                string RationCardNo = "";
                string RationCardName = "";
                string PanCardNo = "";
                string PanCardName = "";
                string PassBookNo = ""; string BankPassbookName = ""; string ElectricityBillNo = "";
                string ElectricityBillName = ""; string OtherType = "";
                string Othertextname = ""; string ESICCardNo = ""; string ESICName = "";
                string EmpBankAcNo = "";
                string IFSCCOde = "";

                #endregion


                if (txtEmpid.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                    return;
                }

                #region  Begin  New Code


                #region Begin Variable Declaration

                string SPName = "";
                Hashtable HTEmpBiodata = new Hashtable();
                string Empid = "";
                DataTable dtEmpdetails = null;

                #endregion end Variable Declaration

                BaseColor color = new BaseColor(221, 226, 222);
                #region Begin Assign Values to The Variables
                SPName = "EmpBiodataPDF";
                Empid = txtEmpid.Text;
                #endregion End Assign values To the Variables

                #region Begin Pass values to the Hash table
                HTEmpBiodata.Add("@empid", Empid);
                #endregion  end Pass values to the Hash table

                #region Begin  Call Stored Procedure
                dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

                #endregion  End  Call Stored Procedure

                #endregion End New Code As on [31-05-2014]

                string CompanyName = "";



                if (dtEmpdetails.Rows.Count > 0)
                {

                    #region Assining data to Variables
                    Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                    // Title = dtEmpdetails.Rows[0]["Title"].ToString();
                    if (dtEmpdetails.Rows[0]["Title"].ToString() != "--Select--")
                    {
                        Title = dtEmpdetails.Rows[0]["Title"].ToString();
                    }
                    CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();

                    EmpBankAcNo = dtEmpdetails.Rows[0]["EmpBankAcNo"].ToString();
                    IFSCCOde = dtEmpdetails.Rows[0]["IFSCCOde"].ToString();
                    name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                    FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                    SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                    FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();
                    Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                    maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                    contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                    dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirths"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                    height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                    identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                    date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                    EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();

                    prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[0]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                    pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[0]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                    // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                    email = dtEmpdetails.Rows[0]["email"].ToString();
                    clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                    UANNumber = dtEmpdetails.Rows[0]["EmpUANNumber"].ToString();
                    SpeciallyAbled = dtEmpdetails.Rows[0]["SpeciallyAbled"].ToString();
                    Category = dtEmpdetails.Rows[0]["Category"].ToString();
                    string Image1 = "";

                    if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                    }
                    else
                    {

                    }

                    Qualification = dtEmpdetails.Rows[0]["Qualification"].ToString();
                    PFno = dtEmpdetails.Rows[0]["PFNo"].ToString();

                    PrevRegionCode = dtEmpdetails.Rows[0]["PrevRegionCode"].ToString();
                    PrevEmployerCode = dtEmpdetails.Rows[0]["PrevEmployerCode"].ToString();
                    PrevExtension = dtEmpdetails.Rows[0]["PrevExtension"].ToString();
                    PrevPFNo = dtEmpdetails.Rows[0]["PrevPFNo"].ToString();
                    PrevDtofLeave = dtEmpdetails.Rows[0]["PrevDateofLeave"].ToString();
                    if (PrevDtofLeave == "01/01/1900")
                    {
                        PrevDtofLeave = "";
                    }
                    else
                    {
                        PrevDtofLeave = dtEmpdetails.Rows[0]["PrevDateofLeave"].ToString();

                    }
                    PrevYrExp = dtEmpdetails.Rows[0]["PrevYrExp"].ToString();
                    AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                    AadharCardName = dtEmpdetails.Rows[0]["AadharCardName"].ToString();
                    drivingLicenseName = dtEmpdetails.Rows[0]["drivingLicenseName"].ToString();
                    DrivingLicenseNo = dtEmpdetails.Rows[0]["DrivingLicenseNo"].ToString();
                    VoterIDNo = dtEmpdetails.Rows[0]["VoterIDNo"].ToString();
                    VoterIDName = dtEmpdetails.Rows[0]["VoterIDName"].ToString();
                    RationCardNo = dtEmpdetails.Rows[0]["RationCardNo"].ToString();
                    RationCardName = dtEmpdetails.Rows[0]["RationCardName"].ToString();
                    PanCardNo = dtEmpdetails.Rows[0]["PanCardNo"].ToString();
                    PanCardName = dtEmpdetails.Rows[0]["PanCardName"].ToString();
                    // PassBookNo = dtEmpdetails.Rows[0]["PassBookNo"].ToString(); 
                    BankPassbookName = dtEmpdetails.Rows[0]["BankPassbookName"].ToString();
                    PassBookNo = dtEmpdetails.Rows[0]["EmpBankAcNo"].ToString();
                    ElectricityBillNo = dtEmpdetails.Rows[0]["ElectricityBillNo"].ToString();
                    ElectricityBillName = dtEmpdetails.Rows[0]["ElectricityBillName"].ToString();
                    OtherType = dtEmpdetails.Rows[0]["OtherType"].ToString();
                    Othertextname = dtEmpdetails.Rows[0]["Othertextname"].ToString();
                    ESICCardNo = dtEmpdetails.Rows[0]["ESICCardNo"].ToString();
                    ESICName = dtEmpdetails.Rows[0]["ESICName"].ToString();


                    #endregion


                    MemoryStream ms = new MemoryStream();
                    Document document = new Document(PageSize.LEGAL);
                    var writer = PdfWriter.GetInstance(document, ms);
                    document.Open();


                    string imagepath1 = Server.MapPath("images");
                    string imagepathArrow = Server.MapPath("assets/Arrow.png");
                    string image = "";

                    #region
                    PdfPTable tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    float[] width = new float[] { 1f, 5f, 2f, 2f };
                    tablespf.SetWidths(width);

                    PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 4;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell cellpfform11 = new PdfPCell(new Phrase("New Form No.11- Declaration Form ", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    cellpfform11.HorizontalAlignment = 2;
                    cellpfform11.Colspan = 4;
                    cellpfform11.Border = 0;
                    tablespf.AddCell(cellpfform11);

                    PdfPCell cellpfdeclaration = new PdfPCell(new Phrase("(To be retained by the employer for future reference)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfdeclaration.HorizontalAlignment = 2;
                    cellpfdeclaration.Colspan = 4;
                    cellpfdeclaration.Border = 0;
                    tablespf.AddCell(cellpfdeclaration);

                    tablespf.AddCell(cellspace);


                    string imagepathpf1 = Server.MapPath("images/");

                    string imagepathpf = Server.MapPath("images/");
                    if (File.Exists(imagepathpf))
                    {
                        iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepathpf + "/EPFLogo.PNG");
                        headtext.ScalePercent(50f);
                        PdfPCell esiclogo = new PdfPCell();
                        Paragraph p9 = new Paragraph();
                        p9.Add(new Chunk(headtext, 0, 0));
                        esiclogo.AddElement(p9);
                        esiclogo.HorizontalAlignment = 0;
                        esiclogo.Colspan = 1;
                        esiclogo.Border = 0;
                        esiclogo.PaddingBottom = -10;
                        tablespf.AddCell(esiclogo);
                    }
                    else
                    {
                        PdfPCell esiclogo = new PdfPCell();
                        Paragraph p9 = new Paragraph();
                        p9.Add(new Chunk("", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        esiclogo.AddElement(p9);
                        esiclogo.HorizontalAlignment = 0;
                        esiclogo.Colspan = 1;
                        esiclogo.Border = 0;
                        esiclogo.PaddingBottom = -10;
                        tablespf.AddCell(esiclogo);
                    }
                    var celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Employees’ Provident Fund Organization \n", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("Employees provident funds scheme, 1952 (paragraph 34 & 57) & \nEmployees pension scheme 1995 (paragraph 24) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PdfPCell cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 1;
                    cellpfMandatory1s.Border = 0;
                    tablespf.AddCell(cellpfMandatory1s);

                    celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Emp Code: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(Empid, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("\nCompany: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(CompanyName, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));

                    cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 2;
                    cellpfMandatory1s.SetLeading(0f, -1.2f);
                    tablespf.AddCell(cellpfMandatory1s);

                    PdfPCell PFCell;

                    PFCell = new PdfPCell(new Phrase("(Declaration by a person taking up employment in any establishment on which EPF Scheme, 1952 end /of EPS1995 is applicable)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 4;
                    PFCell.Border = 0;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    document.Add(tablespf);
                    tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    width = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tablespf.SetWidths(width);


                    PFCell = new PdfPCell(new Phrase("1", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Name of  the member", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Title + ". " + name, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    string Relationname = "";

                    string imagepathSeal = Server.MapPath("assets/seal.jpg");
                    string imagepath2 = Server.MapPath("assets/Images/Rightlogo.png");

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(220f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }

                    PFCell = new PdfPCell(new Phrase("2", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Father’s Name (      ) Spouse’s Name(       )\n(Please Tick Whichever Is Applicable) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("MR. " + FatherSpouseName, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("3", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Date of Birth (DD/MM/YYYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("4", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Gender: ( male / Female /Transgender ) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("5", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Marital Status (married /Unmarried /widow/divorce)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("6", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("(a)Email ID:\n\n(b)Mobile No: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(email + "\n\n" + contactno, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("7*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘provident Fund Scheme 1952", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    if (UANNumber.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase("        Yes          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("        No          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("8*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘Pension Scheme ,1995", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("        Yes          No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0.5f;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("If response to any or both of (7) & (8) above is yes. MANDATORY FILL UP THE (COLUMN 9) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Universal Account Number(UAN)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(UANNumber, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) Previous PF a/c No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("9", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Date of exit from previous employment  (DD/MM/YYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Scheme  Certificate No (if Issued )", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("e) Pension Payment Order (PPO)No (if Issued)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) International Worker:", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("10", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) If Yes , State Country Of Origin (India /Name  of Other Country)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Passport No ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Validity Of Passport (DD/MM/YYY) to(DD/MM/YYY) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("KYC Details: (attach Self attested copies of following KYCs) ** ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Bank Account No .& IFS code", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);

                    if (EmpBankAcNo.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase(EmpBankAcNo + " & " + IFSCCOde, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("11", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) AADHAR Number (12 Digit) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Permanent Account Number (PAN),If available ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    document.Add(tablespf);

                    PdfPTable tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    float[] widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);



                    PdfPCell cellpfUNDERTAKING = new PdfPCell(new Phrase("UNDERTAKING:", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfUNDERTAKING.HorizontalAlignment = 1;
                    cellpfUNDERTAKING.Colspan = 4;
                    cellpfUNDERTAKING.Border = 0;
                    tbliepf.AddCell(cellpfUNDERTAKING);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("1) Certified that  the Particulars  are true to the best of my Knowledge ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("2) I authorize  EPFO to use my Aadhar for verification / e KYC purpose for service delivery ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("3) Kindly transfer the funds  and service details, if applicable if applicable, from the previous PF account as declared above to the present P.F Account(The Transfer Would be possible only if the identified KYC details approved by previous employer has been verified by present employer ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("4) In case of changes In above details the same Will be intimate to employer at the earliest ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDATE1 = new PdfPCell(new Phrase("DATE: " + date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE1.HorizontalAlignment = 0;
                    cellpfDATE1.Colspan = 2;
                    cellpfDATE1.Border = 0;
                    tbliepf.AddCell(cellpfDATE1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 2;
                        //sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -245f;
                        //sealImg.PaddingTop = 40f;
                        tbliepf.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    PdfPCell cellpfPLACE = new PdfPCell(new Phrase("PLACE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfPLACE.HorizontalAlignment = 0;
                    cellpfPLACE.Colspan = 2;
                    cellpfPLACE.Border = 0;
                    tbliepf.AddCell(cellpfPLACE);
                    PdfPCell cellpfSIGNATURE1 = new PdfPCell(new Phrase("SIGNATURE OF MEMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE1.HorizontalAlignment = 2;
                    cellpfSIGNATURE1.Colspan = 2;
                    cellpfSIGNATURE1.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE1);

                    tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDECLARATION = new PdfPCell(new Phrase("DECLARATION BY PRESENT EMPLOYER ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfDECLARATION.HorizontalAlignment = 1;
                    cellpfDECLARATION.Colspan = 4;
                    cellpfDECLARATION.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    var celldescription1 = new Phrase();
                    celldescription1.Add(new Chunk("A.The member Mr./Ms./Mrs ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(name, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" .has  joined  on  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" and has been allotted PF Number ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(PFno, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    PdfPCell cellpfCERTIFY11a = new PdfPCell();
                    cellpfCERTIFY11a.HorizontalAlignment = 0;
                    cellpfCERTIFY11a.AddElement(celldescription1);
                    cellpfCERTIFY11a.Colspan = 3;
                    cellpfCERTIFY11a.Border = 0;
                    cellpfCERTIFY11a.PaddingTop = -5;
                    tbliepf.AddCell(cellpfCERTIFY11a);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfCERTIFY11 = new PdfPCell(new Phrase("B) In case person was earlier not a member of EPF Scheme ,1952 and EPS,1995 ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfCERTIFY11.Colspan = 3;
                    cellpfCERTIFY11.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY11);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfEARLIER = new PdfPCell(new Phrase("•  (Post allotment of UAN ) The UAN Allotted for the member is………….. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfEARLIER.HorizontalAlignment = 0;
                    cellpfEARLIER.Colspan = 3;
                    cellpfEARLIER.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfENSURED = new PdfPCell(new Phrase("•  Please tick the Appropriate Option: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED.HorizontalAlignment = 0;
                    cellpfENSURED.Colspan = 3;
                    cellpfENSURED.Border = 0;
                    tbliepf.AddCell(cellpfENSURED);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfIIDETAILS = new PdfPCell(new Phrase("The KYC  details of the above member in the UAN database ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS.HorizontalAlignment = 0;
                    cellpfIIDETAILS.Colspan = 3;
                    cellpfIIDETAILS.Border = 0;
                    tbliepf.AddCell(cellpfIIDETAILS);

                    document.Add(tbliepf);
                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop11 = new PdfPCell(sqpng);
                    tickop11.HorizontalAlignment = 2;
                    tickop11.Colspan = 1;
                    tickop11.Border = 0;
                    tbliepf.AddCell(tickop11);

                    PdfPCell cellpfHAVE = new PdfPCell(new Phrase("Have not been uploaded", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE.HorizontalAlignment = 0;
                    cellpfHAVE.Colspan = 4;
                    cellpfHAVE.Border = 0;
                    tbliepf.AddCell(cellpfHAVE);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng4 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop12 = new PdfPCell(sqpng4);
                    tickop12.HorizontalAlignment = 2;
                    tickop12.Colspan = 1;
                    tickop12.Border = 0;
                    tbliepf.AddCell(tickop12);

                    PdfPCell cellpfIII1 = new PdfPCell(new Phrase("Have been uploaded but not approved", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIII1.HorizontalAlignment = 0;
                    cellpfIII1.Colspan = 4;
                    cellpfIII1.Border = 0;
                    tbliepf.AddCell(cellpfIII1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop13 = new PdfPCell(sqpng1);
                    tickop13.HorizontalAlignment = 2;
                    tickop13.Colspan = 1;
                    tickop13.Border = 0;
                    tbliepf.AddCell(tickop13);

                    PdfPCell cellpfDECLARATION1 = new PdfPCell(new Phrase("Have been uploaded and approved with DSC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfDECLARATION1.HorizontalAlignment = 0;
                    cellpfDECLARATION1.Colspan = 4;
                    cellpfDECLARATION1.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION1);

                    tbliepf.AddCell(cellspace);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    PdfPCell cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfCERTIFY1 = new PdfPCell(new Phrase("C) In case the person was earlier a member of EPF Scheme ,1952 and EPS, 1995: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY1.HorizontalAlignment = 0;
                    cellpfCERTIFY1.Colspan = 3;
                    cellpfCERTIFY1.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfEARLIER1 = new PdfPCell(new Phrase("•  The above PF account number /UAN  of the member as mentioned in (a) above has been tagged with his /her UAN/previous member ID as declared by member ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfEARLIER1.HorizontalAlignment = 0;
                    cellpfEARLIER1.Colspan = 3;
                    cellpfEARLIER1.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfENSURED1 = new PdfPCell(new Phrase("•  Please Tick the Appropriate Option ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED1.HorizontalAlignment = 0;
                    cellpfENSURED1.Colspan = 3;
                    cellpfENSURED1.Border = 0;
                    tbliepf.AddCell(cellpfENSURED1);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop14 = new PdfPCell(sqpng2);
                    tickop14.HorizontalAlignment = 2;
                    tickop14.Colspan = 1;
                    tickop14.Border = 0;
                    tickop14.PaddingTop = 5;
                    tbliepf.AddCell(tickop14);

                    PdfPCell cellpfIIDETAILS1 = new PdfPCell(new Phrase("The KYC details of the above member in the UAN database have been approved with digital signature Certificate and transfer request has been generated on portal. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS1.HorizontalAlignment = 0;
                    cellpfIIDETAILS1.Colspan = 4;
                    cellpfIIDETAILS1.Border = 0;
                    cellpfIIDETAILS1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfIIDETAILS1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop15 = new PdfPCell(sqpng3);
                    tickop15.HorizontalAlignment = 2;
                    tickop15.Colspan = 1;
                    tickop15.Border = 0;
                    tickop15.PaddingTop = 5;
                    tbliepf.AddCell(tickop15);

                    PdfPCell cellpfHAVE1 = new PdfPCell(new Phrase(" As the DSC of establishment are not registered With EPFO the member has been informed to file physical claim (Form13) for transfer of funds from his previous establishment. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE1.HorizontalAlignment = 0;
                    cellpfHAVE1.Colspan = 4;
                    cellpfHAVE1.Border = 0;
                    cellpfHAVE1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfHAVE1);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);


                    PdfPCell cellpfDATE = new PdfPCell(new Phrase("DATE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE.HorizontalAlignment = 0;
                    cellpfDATE.Colspan = 2;
                    cellpfDATE.Border = 0;
                    tbliepf.AddCell(cellpfDATE);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(70f);
                        gif2.SetAbsolutePosition(400f, 85f);
                        //document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    PdfPCell cellpfSIGNATURE = new PdfPCell(new Phrase("SIGNATURE OF EMPLOYER WITH SEAL OF ESTABLISHMENT", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE.HorizontalAlignment = 2;
                    cellpfSIGNATURE.Colspan = 2;
                    cellpfSIGNATURE.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE);

                    document.Add(tbliepf);

                    #endregion

                    string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";
                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }




                else
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                    return;


                }
            }
            catch (Exception ex)
            {

            }
        }

        public void PFForm11Bulk()
        {
            int Fontsize = 8;
            string Fontstyle = "Tahoma";

            #region Variable Declaration

            string FatherName = "";
            string SpouseName = "";
            string FSpouseName = "";
            string EstablishmentID = "";
            string Qualification = "";
            string email = "";
            string UANNumber = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string SpeciallyAbled = "";
            string Category = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";


            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";

            string Esino = "";
            string PFno = "";
            string prphone = "";
            string pephone = "";
            string Gender = "";
            string Title = "";
            string PrevRegionCode = "";
            string PrevEmployerCode = "";
            string PrevExtension = "";
            string PrevPFNo = "";
            string PrevDtofLeave = "";
            string PrevYrExp = "";
            string FatherSpouseName = "";


            string AadharCardNo = "";
            string AadharCardName = "";
            string drivingLicenseName = ""; string DrivingLicenseNo = "";
            string VoterIDNo = "";
            string VoterIDName = "";
            string RationCardNo = "";
            string RationCardName = "";
            string PanCardNo = "";
            string PanCardName = "";
            string PassBookNo = ""; string BankPassbookName = ""; string ElectricityBillNo = "";
            string ElectricityBillName = ""; string OtherType = "";
            string Othertextname = ""; string ESICCardNo = ""; string ESICName = "";


            #endregion


            if (txtfromempid.Text == "" || txttoempid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee Series');", true);
                return;
            }

            #region  Begin  New Code

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string fromempid = "";
            string toempid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            BaseColor color = new BaseColor(221, 226, 222);

            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;
            }

            #region Begin Pass values to the Hash table
            SPName = "EmpBiodataBulk";
            HTEmpBiodata.Add("@FromEmpid", fromempid);
            HTEmpBiodata.Add("@ToEmpid", toempid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]

            string EmpBankAcNo = "";
            string IFSCCOde = "";

            string CompanyName = "";
            string imagepathArrow = Server.MapPath("assets/Arrow.png");

            if (dtEmpdetails.Rows.Count > 0)
            {
                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();

                for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                {

                    #region Assining data to Variables
                    Idno = dtEmpdetails.Rows[m]["EmpId"].ToString();
                    if (dtEmpdetails.Rows[m]["Title"].ToString() != "--Select--")
                    {
                        Title = dtEmpdetails.Rows[m]["Title"].ToString();
                    }
                    CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();
                    EmpBankAcNo = dtEmpdetails.Rows[0]["EmpBankAcNo"].ToString();
                    IFSCCOde = dtEmpdetails.Rows[0]["IFSCCOde"].ToString();
                    // Title = dtEmpdetails.Rows[m]["Title"].ToString();
                    name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                    FatherName = dtEmpdetails.Rows[m]["EmpFatherName"].ToString();
                    SpouseName = dtEmpdetails.Rows[m]["EmpSpouseName"].ToString();
                    FSpouseName = dtEmpdetails.Rows[m]["SpouseName"].ToString();
                    Gender = dtEmpdetails.Rows[m]["EmpSex"].ToString();
                    maritalstatus = dtEmpdetails.Rows[m]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    contactno = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    dateofbirth = dtEmpdetails.Rows[m]["EmpDtofBirths"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    educationqualification = dtEmpdetails.Rows[m]["EmpQualification"].ToString();
                    height = dtEmpdetails.Rows[m]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[m]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[m]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[m]["EmpLanguagesKnown"].ToString();
                    identificationmark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[m]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[m]["EmpBloodGroup"].ToString();

                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[m]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[m]["EmpRefAddr2"].ToString();

                    date = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();



                    EmergencyPhone = dtEmpdetails.Rows[m]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[m]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[m]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[m]["EmpComplexion"].ToString();

                    prLmark = dtEmpdetails.Rows[m]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[m]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[m]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[m]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[m]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[m]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[m]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[m]["prPincode"].ToString();

                    pelmark = dtEmpdetails.Rows[m]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[m]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[m]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[m]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[m]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[m]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[m]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[m]["pePincode"].ToString();
                    // pephone = dtEmpdetails.Rows[m]["pephone"].ToString();

                    email = dtEmpdetails.Rows[m]["email"].ToString();
                    clientname = dtEmpdetails.Rows[m]["clientname"].ToString();

                    UANNumber = dtEmpdetails.Rows[m]["EmpUANNumber"].ToString();
                    SpeciallyAbled = dtEmpdetails.Rows[m]["SpeciallyAbled"].ToString();
                    Category = dtEmpdetails.Rows[m]["Category"].ToString();
                    string Image1 = "";

                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[m]["Image"].ToString();
                    }
                    else
                    {

                    }

                    Qualification = dtEmpdetails.Rows[m]["Qualification"].ToString();
                    PFno = dtEmpdetails.Rows[m]["PFNo"].ToString();

                    PrevRegionCode = dtEmpdetails.Rows[m]["PrevRegionCode"].ToString();
                    PrevEmployerCode = dtEmpdetails.Rows[m]["PrevEmployerCode"].ToString();
                    PrevExtension = dtEmpdetails.Rows[m]["PrevExtension"].ToString();
                    PrevPFNo = dtEmpdetails.Rows[m]["PrevPFNo"].ToString();
                    PrevDtofLeave = dtEmpdetails.Rows[m]["PrevDateofLeave"].ToString();
                    if (PrevDtofLeave == "01/01/1900")
                    {
                        PrevDtofLeave = "";
                    }
                    else
                    {
                        PrevDtofLeave = dtEmpdetails.Rows[m]["PrevDateofLeave"].ToString();

                    }
                    PrevYrExp = dtEmpdetails.Rows[m]["PrevYrExp"].ToString();
                    AadharCardNo = dtEmpdetails.Rows[m]["AadharCardNo"].ToString();
                    AadharCardName = dtEmpdetails.Rows[m]["AadharCardName"].ToString();
                    drivingLicenseName = dtEmpdetails.Rows[m]["drivingLicenseName"].ToString();
                    DrivingLicenseNo = dtEmpdetails.Rows[m]["DrivingLicenseNo"].ToString();
                    VoterIDNo = dtEmpdetails.Rows[m]["VoterIDNo"].ToString();
                    VoterIDName = dtEmpdetails.Rows[m]["VoterIDName"].ToString();
                    RationCardNo = dtEmpdetails.Rows[m]["RationCardNo"].ToString();
                    RationCardName = dtEmpdetails.Rows[m]["RationCardName"].ToString();
                    PanCardNo = dtEmpdetails.Rows[m]["PanCardNo"].ToString();
                    PanCardName = dtEmpdetails.Rows[m]["PanCardName"].ToString();
                    // PassBookNo = dtEmpdetails.Rows[m]["PassBookNo"].ToString();
                    PassBookNo = dtEmpdetails.Rows[m]["EmpBankAcNo"].ToString();
                    BankPassbookName = dtEmpdetails.Rows[m]["BankPassbookName"].ToString();
                    ElectricityBillNo = dtEmpdetails.Rows[m]["ElectricityBillNo"].ToString();
                    ElectricityBillName = dtEmpdetails.Rows[m]["ElectricityBillName"].ToString();
                    OtherType = dtEmpdetails.Rows[m]["OtherType"].ToString();
                    Othertextname = dtEmpdetails.Rows[m]["Othertextname"].ToString();
                    ESICCardNo = dtEmpdetails.Rows[m]["ESICCardNo"].ToString();
                    ESICName = dtEmpdetails.Rows[m]["ESICName"].ToString();


                    #endregion

                    document.NewPage();

                    string imagepath1 = Server.MapPath("images");

                    string image = "";
                    #region
                    PdfPTable tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    float[] width = new float[] { 1f, 5f, 2f, 2f };
                    tablespf.SetWidths(width);

                    PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 4;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell cellpfform1 = new PdfPCell(new Phrase("New Form No.11- Declaration Form ", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    cellpfform1.HorizontalAlignment = 2;
                    cellpfform1.Colspan = 4;
                    cellpfform1.Border = 0;
                    tablespf.AddCell(cellpfform1);

                    PdfPCell cellpfdeclaration = new PdfPCell(new Phrase("(To be retained by the employer for future reference)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfdeclaration.HorizontalAlignment = 2;
                    cellpfdeclaration.Colspan = 4;
                    cellpfdeclaration.Border = 0;
                    tablespf.AddCell(cellpfdeclaration);

                    tablespf.AddCell(cellspace);


                    string imagepathpf1 = Server.MapPath("images/");
                    string imagepathSeal = Server.MapPath("assets/seal.jpg");

                    string imagepathpf = Server.MapPath("images/");
                    if (File.Exists(imagepathpf))
                    {
                        iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepathpf + "/EPFLogo.PNG");
                        headtext.ScalePercent(50f);
                        PdfPCell esiclogo = new PdfPCell();
                        Paragraph p9 = new Paragraph();
                        p9.Add(new Chunk(headtext, 0, 0));
                        esiclogo.AddElement(p9);
                        esiclogo.HorizontalAlignment = 0;
                        esiclogo.Colspan = 1;
                        esiclogo.Border = 0;
                        esiclogo.PaddingBottom = -10;
                        tablespf.AddCell(esiclogo);
                    }
                    var celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Employees’ Provident Fund Organization \n", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("Employees provident funds scheme, 1952 (paragraph 34 & 57) & \nEmployees pension scheme 1995 (paragraph 24) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PdfPCell cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 1;
                    cellpfMandatory1s.Border = 0;
                    tablespf.AddCell(cellpfMandatory1s);

                    celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Emp Code: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(Idno, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("\nCompany: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(CompanyName, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));

                    cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 2;
                    cellpfMandatory1s.SetLeading(0f, -1.2f);
                    tablespf.AddCell(cellpfMandatory1s);


                    PdfPCell PFCell;


                    PFCell = new PdfPCell(new Phrase("(Declaration by a person taking up employment in any establishment on which EPF Scheme, 1952 end /of EPS1995 is applicable)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 4;
                    PFCell.Border = 0;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    document.Add(tablespf);
                    tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    width = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tablespf.SetWidths(width);


                    PFCell = new PdfPCell(new Phrase("1", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Name of  the member", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Title + ". " + name, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    string Relationname = "";


                    string imagepath2 = Server.MapPath("assets/Images/Rightlogo.png");

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(220f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }


                    PFCell = new PdfPCell(new Phrase("2", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Father’s Name (      ) Spouse’s Name(       )\n(Please Tick Whichever Is Applicable) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("MR. " + FatherSpouseName, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("3", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Date of Birth (DD/MM/YYYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("4", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Gender: ( male / Female /Transgender ) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("5", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Marital Status (married /Unmarried /widow/divorce)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("6", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("(a)Email ID:\n\n(b)Mobile No: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(email + "\n\n" + contactno, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("7*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘provident Fund Scheme 1952", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    if (UANNumber.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase("        Yes          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("        No          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("8*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘Pension Scheme ,1995", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("        Yes          No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0.5f;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("If response to any or both of (7) & (8) above is yes. MANDATORY FILL UP THE (COLUMN 9) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Universal Account Number(UAN)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(UANNumber, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) Previous PF a/c No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("9", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Date of exit from previous employment  (DD/MM/YYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Scheme  Certificate No (if Issued )", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("e) Pension Payment Order (PPO)No (if Issued)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) International Worker:", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("10", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) If Yes , State Country Of Origin (India /Name  of Other Country)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Passport No ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Validity Of Passport (DD/MM/YYY) to(DD/MM/YYY) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("KYC Details: (attach Self attested copies of following KYCs) ** ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Bank Account No .& IFS code", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);

                    if (EmpBankAcNo.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase(EmpBankAcNo + " & " + IFSCCOde, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("11", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) AADHAR Number (12 Digit) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Permanent Account Number (PAN),If available ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    document.Add(tablespf);

                    PdfPTable tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    float[] widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);



                    PdfPCell cellpfUNDERTAKING = new PdfPCell(new Phrase("UNDERTAKING:", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfUNDERTAKING.HorizontalAlignment = 1;
                    cellpfUNDERTAKING.Colspan = 4;
                    cellpfUNDERTAKING.Border = 0;
                    tbliepf.AddCell(cellpfUNDERTAKING);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("1) Certified that  the Particulars  are true to the best of my Knowledge ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("2) I authorize  EPFO to use my Aadhar for verification / e KYC purpose for service delivery ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("3) Kindly transfer the funds  and service details, if applicable if applicable, from the previous PF account as declared above to the present P.F Account(The Transfer Would be possible only if the identified KYC details approved by previous employer has been verified by present employer ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("4) In case of changes In above details the same Will be intimate to employer at the earliest ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDATE1 = new PdfPCell(new Phrase("DATE: " + date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE1.HorizontalAlignment = 0;
                    cellpfDATE1.Colspan = 2;
                    cellpfDATE1.Border = 0;
                    tbliepf.AddCell(cellpfDATE1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 2;
                        //sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -245f;
                        //sealImg.PaddingTop = 40f;
                        tbliepf.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    PdfPCell cellpfPLACE = new PdfPCell(new Phrase("PLACE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfPLACE.HorizontalAlignment = 0;
                    cellpfPLACE.Colspan = 2;
                    cellpfPLACE.Border = 0;
                    tbliepf.AddCell(cellpfPLACE);
                    PdfPCell cellpfSIGNATURE1 = new PdfPCell(new Phrase("SIGNATURE OF MEMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE1.HorizontalAlignment = 2;
                    cellpfSIGNATURE1.Colspan = 2;
                    cellpfSIGNATURE1.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE1);

                    tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDECLARATION = new PdfPCell(new Phrase("DECLARATION BY PRESENT EMPLOYER ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfDECLARATION.HorizontalAlignment = 1;
                    cellpfDECLARATION.Colspan = 4;
                    cellpfDECLARATION.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    var celldescription1 = new Phrase();
                    celldescription1.Add(new Chunk("A.The member Mr./Ms./Mrs ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(name, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" .has  joined  on  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" and has been allotted PF Number ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(PFno, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    PdfPCell cellpfCERTIFY11a = new PdfPCell();
                    cellpfCERTIFY11a.HorizontalAlignment = 0;
                    cellpfCERTIFY11a.AddElement(celldescription1);
                    cellpfCERTIFY11a.Colspan = 3;
                    cellpfCERTIFY11a.Border = 0;
                    cellpfCERTIFY11a.PaddingTop = -5;
                    tbliepf.AddCell(cellpfCERTIFY11a);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfCERTIFY11 = new PdfPCell(new Phrase("B) In case person was earlier not a member of EPF Scheme ,1952 and EPS,1995 ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfCERTIFY11.Colspan = 3;
                    cellpfCERTIFY11.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY11);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfEARLIER = new PdfPCell(new Phrase("•  (Post allotment of UAN ) The UAN Allotted for the member is………….. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfEARLIER.HorizontalAlignment = 0;
                    cellpfEARLIER.Colspan = 3;
                    cellpfEARLIER.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfENSURED = new PdfPCell(new Phrase("•  Please tick the Appropriate Option: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED.HorizontalAlignment = 0;
                    cellpfENSURED.Colspan = 3;
                    cellpfENSURED.Border = 0;
                    tbliepf.AddCell(cellpfENSURED);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfIIDETAILS = new PdfPCell(new Phrase("The KYC  details of the above member in the UAN database ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS.HorizontalAlignment = 0;
                    cellpfIIDETAILS.Colspan = 3;
                    cellpfIIDETAILS.Border = 0;
                    tbliepf.AddCell(cellpfIIDETAILS);

                    document.Add(tbliepf);
                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop11 = new PdfPCell(sqpng);
                    tickop11.HorizontalAlignment = 2;
                    tickop11.Colspan = 1;
                    tickop11.Border = 0;
                    tbliepf.AddCell(tickop11);

                    PdfPCell cellpfHAVE = new PdfPCell(new Phrase("Have not been uploaded", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE.HorizontalAlignment = 0;
                    cellpfHAVE.Colspan = 4;
                    cellpfHAVE.Border = 0;
                    tbliepf.AddCell(cellpfHAVE);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng4 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop12 = new PdfPCell(sqpng4);
                    tickop12.HorizontalAlignment = 2;
                    tickop12.Colspan = 1;
                    tickop12.Border = 0;
                    tbliepf.AddCell(tickop12);

                    PdfPCell cellpfIII1 = new PdfPCell(new Phrase("Have been uploaded but not approved", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIII1.HorizontalAlignment = 0;
                    cellpfIII1.Colspan = 4;
                    cellpfIII1.Border = 0;
                    tbliepf.AddCell(cellpfIII1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop13 = new PdfPCell(sqpng1);
                    tickop13.HorizontalAlignment = 2;
                    tickop13.Colspan = 1;
                    tickop13.Border = 0;
                    tbliepf.AddCell(tickop13);

                    PdfPCell cellpfDECLARATION1 = new PdfPCell(new Phrase("Have been uploaded and approved with DSC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfDECLARATION1.HorizontalAlignment = 0;
                    cellpfDECLARATION1.Colspan = 4;
                    cellpfDECLARATION1.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION1);

                    tbliepf.AddCell(cellspace);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    PdfPCell cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfCERTIFY1 = new PdfPCell(new Phrase("C) In case the person was earlier a member of EPF Scheme ,1952 and EPS, 1995: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY1.HorizontalAlignment = 0;
                    cellpfCERTIFY1.Colspan = 3;
                    cellpfCERTIFY1.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfEARLIER1 = new PdfPCell(new Phrase("•  The above PF account number /UAN  of the member as mentioned in (a) above has been tagged with his /her UAN/previous member ID as declared by member ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfEARLIER1.HorizontalAlignment = 0;
                    cellpfEARLIER1.Colspan = 3;
                    cellpfEARLIER1.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfENSURED1 = new PdfPCell(new Phrase("•  Please Tick the Appropriate Option ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED1.HorizontalAlignment = 0;
                    cellpfENSURED1.Colspan = 3;
                    cellpfENSURED1.Border = 0;
                    tbliepf.AddCell(cellpfENSURED1);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop14 = new PdfPCell(sqpng2);
                    tickop14.HorizontalAlignment = 2;
                    tickop14.Colspan = 1;
                    tickop14.Border = 0;
                    tickop14.PaddingTop = 5;
                    tbliepf.AddCell(tickop14);

                    PdfPCell cellpfIIDETAILS1 = new PdfPCell(new Phrase("The KYC details of the above member in the UAN database have been approved with digital signature Certificate and transfer request has been generated on portal. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS1.HorizontalAlignment = 0;
                    cellpfIIDETAILS1.Colspan = 4;
                    cellpfIIDETAILS1.Border = 0;
                    cellpfIIDETAILS1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfIIDETAILS1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop15 = new PdfPCell(sqpng3);
                    tickop15.HorizontalAlignment = 2;
                    tickop15.Colspan = 1;
                    tickop15.Border = 0;
                    tickop15.PaddingTop = 5;
                    tbliepf.AddCell(tickop15);

                    PdfPCell cellpfHAVE1 = new PdfPCell(new Phrase(" As the DSC of establishment are not registered With EPFO the member has been informed to file physical claim (Form13) for transfer of funds from his previous establishment. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE1.HorizontalAlignment = 0;
                    cellpfHAVE1.Colspan = 4;
                    cellpfHAVE1.Border = 0;
                    cellpfHAVE1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfHAVE1);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);


                    PdfPCell cellpfDATE = new PdfPCell(new Phrase("DATE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE.HorizontalAlignment = 0;
                    cellpfDATE.Colspan = 2;
                    cellpfDATE.Border = 0;
                    tbliepf.AddCell(cellpfDATE);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(70f);
                        gif2.SetAbsolutePosition(400f, 85f);
                        //document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    PdfPCell cellpfSIGNATURE = new PdfPCell(new Phrase("SIGNATURE OF EMPLOYER WITH SEAL OF ESTABLISHMENT", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE.HorizontalAlignment = 2;
                    cellpfSIGNATURE.Colspan = 2;
                    cellpfSIGNATURE.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE);

                    document.Add(tbliepf);

                    #endregion


                }
                string filename = "PFForm11.pdf";
                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }


            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;


            }
        }

        protected void btnPFForm11_Click(object sender, EventArgs e)
        {
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                PFForm11Individual();
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                PFForm11Bulk();
            }
        }

        #endregion for PFForm11

        protected void btnICICIForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/Images");


                #region for ICICI Form

                PdfPTable tblicici = new PdfPTable(3);
                tblicici.TotalWidth = 550f;
                tblicici.LockedWidth = true;
                float[] widthbx = new float[] { 4f, 4f, 4f };
                tblicici.SetWidths(widthbx);
                BaseColor color = new BaseColor(128, 0, 0);
                int Font_size = 8;
                int head_font_size = 10;

                iTextSharp.text.Image icici = iTextSharp.text.Image.GetInstance(imagepath1 + "/icicin.png");
                PdfPCell icicilogo = new PdfPCell();
                Paragraph logo = new Paragraph();
                logo.Add(new Chunk(icici, 0, 0));
                icicilogo.AddElement(logo);
                icicilogo.HorizontalAlignment = 0;
                icicilogo.Colspan = 0;
                icicilogo.Border = 0;
                tblicici.AddCell(icicilogo);

                PdfPCell Nosregion = new PdfPCell(new Phrase("Ref No :              \n\nCard No :              \n\nBranch Sol Id :                 \n\nDMA/DST Code :               ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color)));
                Nosregion.HorizontalAlignment = 0;
                Nosregion.Colspan = 0;
                Nosregion.Border = 0;
                tblicici.AddCell(Nosregion);

                PdfPCell AppNo = new PdfPCell(new Phrase("Application No.:", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color)));
                AppNo.HorizontalAlignment = 1;
                AppNo.Colspan = 0;
                //AppNo.MinimumHeight = 40;
                tblicici.AddCell(AppNo);

                PdfPCell emcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 10, Font.BOLD, BaseColor.BLACK)));
                emcell.HorizontalAlignment = 1;
                emcell.Colspan = 3;
                emcell.Border = 0;
                tblicici.AddCell(emcell);
                tblicici.AddCell(emcell);

                PdfPCell formHeading = new PdfPCell(new Phrase("Pay Direct Card / Meal Card Application Form (Application)", FontFactory.GetFont(fontsyle, 10, Font.BOLD, color)));
                formHeading.HorizontalAlignment = 1;
                formHeading.Colspan = 3;
                formHeading.MinimumHeight = 15;
                formHeading.BorderColor = new BaseColor(128, 0, 0);
                tblicici.AddCell(formHeading);

                tblicici.AddCell(emcell);

                PdfPCell headingdetails = new PdfPCell(new Phrase("Please fill in the form in BLOCK LETTERS and attach all relevant documents as specified on this form. Please complete all sections. Tick boxes as applicable. \n\n FIELDS WITH * ARE MANDATORY ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                headingdetails.HorizontalAlignment = 0;
                headingdetails.Colspan = 3;
                //headingdetails.PaddingLeft = 5;
                headingdetails.Border = 0;
                tblicici.AddCell(headingdetails);

                tblicici.AddCell(emcell);

                PdfPCell headingdeclrn = new PdfPCell(new Phrase("Branch : _________________________ \n\n I / We hereby apply for Pay Direct Card / Meal Card with your bank", FontFactory.GetFont(fontsyle, 9, Font.BOLD, BaseColor.BLACK)));
                headingdeclrn.HorizontalAlignment = 0;
                headingdeclrn.Colspan = 2;
                headingdeclrn.Border = 0;
                tblicici.AddCell(headingdeclrn);

                PdfPCell headingdate = new PdfPCell(new Phrase("Date : ", FontFactory.GetFont(fontsyle, 9, Font.BOLD, BaseColor.BLACK)));
                headingdate.HorizontalAlignment = 0;
                headingdate.Colspan = 1;
                headingdate.Border = 0;
                tblicici.AddCell(headingdate);

                //tblicici.AddCell(emcell);
                //tblicici.AddCell(emcell);

                document.Add(tblicici);

                PdfPTable tblicicipd = new PdfPTable(6);
                tblicicipd.TotalWidth = 550f;
                tblicicipd.LockedWidth = true;
                float[] widthbx1 = new float[] { 3f, 1f, 2.5f, 2f, 1f, 2.5f };
                tblicicipd.SetWidths(widthbx1);

                PdfPCell pdemcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 10, Font.BOLD, BaseColor.BLACK)));
                pdemcell.HorizontalAlignment = 1;
                pdemcell.Colspan = 6;
                pdemcell.Border = 0;
                // pdemcell.MinimumHeight = 10;
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                //iTextSharp.text.Image perdet = iTextSharp.text.Image.GetInstance(imagepath1 + "/personaldetails.png");
                //PdfPCell personaldetails = new PdfPCell();
                //Paragraph perdetlogo = new Paragraph();
                //perdetlogo.Add(new Chunk(perdet, 0, 0));
                //personaldetails.AddElement(perdetlogo);
                //personaldetails.HorizontalAlignment = 0;
                //personaldetails.Colspan = 6;
                //// personaldetails.PaddingTop = 20;
                //personaldetails.Border = 0;
                //tblicicipd.AddCell(personaldetails);

                PdfPCell personaldetails = new PdfPCell(new Phrase("PERSONAL DETAILS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                personaldetails.HorizontalAlignment = 1;
                personaldetails.Colspan = 6;
                // personaldetails.PaddingTop = 20;
                personaldetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(personaldetails);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell applnamehead = new PdfPCell(new Phrase("* New Applicant", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applnamehead.HorizontalAlignment = 0;
                applnamehead.Colspan = 0;
                applnamehead.Border = 0;
                tblicicipd.AddCell(applnamehead);

                PdfPCell applnamecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applnamecol.HorizontalAlignment = 0;
                applnamecol.Colspan = 0;
                applnamecol.Border = 0;
                tblicicipd.AddCell(applnamecol);

                PdfPCell applname = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applname.HorizontalAlignment = 0;
                applname.Colspan = 4;
                applname.Border = 0;
                tblicicipd.AddCell(applname);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applgenderhead = new PdfPCell(new Phrase("* Gender", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgenderhead.HorizontalAlignment = 0;
                applgenderhead.Colspan = 0;
                applgenderhead.Border = 0;
                tblicicipd.AddCell(applgenderhead);

                PdfPCell applgendercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgendercol.HorizontalAlignment = 0;
                applgendercol.Colspan = 0;
                applgendercol.Border = 0;
                tblicicipd.AddCell(applgendercol);

                PdfPCell applgender = new PdfPCell(new Phrase(EmpGender, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applgender.HorizontalAlignment = 0;
                applgender.Colspan = 0;
                applgender.Border = 0;
                tblicicipd.AddCell(applgender);

                PdfPCell appldobhead = new PdfPCell(new Phrase("* Date of Birth ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                appldobhead.HorizontalAlignment = 0;
                appldobhead.Colspan = 0;
                appldobhead.Border = 0;
                tblicicipd.AddCell(appldobhead);

                PdfPCell appldobcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                appldobcol.HorizontalAlignment = 0;
                appldobcol.Colspan = 0;
                appldobcol.Border = 0;
                tblicicipd.AddCell(appldobcol);

                PdfPCell appldob = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                appldob.HorizontalAlignment = 0;
                appldob.Colspan = 0;
                appldob.Border = 0;
                tblicicipd.AddCell(appldob);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applmotherhead = new PdfPCell(new Phrase("* Mother's Maiden Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmotherhead.HorizontalAlignment = 0;
                applmotherhead.Colspan = 0;
                applmotherhead.Border = 0;
                tblicicipd.AddCell(applmotherhead);

                PdfPCell applmothercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applmothercol.HorizontalAlignment = 0;
                applmothercol.Colspan = 0;
                applmothercol.Border = 0;
                tblicicipd.AddCell(applmothercol);

                PdfPCell applmother = new PdfPCell(new Phrase(Mname, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmother.HorizontalAlignment = 0;
                applmother.Colspan = 0;
                applmother.Border = 0;
                tblicicipd.AddCell(applmother);

                PdfPCell applfatherhead = new PdfPCell(new Phrase("* Father's Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfatherhead.HorizontalAlignment = 0;
                applfatherhead.Colspan = 0;
                applfatherhead.Border = 0;
                tblicicipd.AddCell(applfatherhead);

                PdfPCell applfathercol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applfathercol.HorizontalAlignment = 0;
                applfathercol.Colspan = 0;
                applfathercol.Border = 0;
                tblicicipd.AddCell(applfathercol);

                PdfPCell applfather = new PdfPCell(new Phrase(Fname, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applfather.HorizontalAlignment = 0;
                applfather.Colspan = 0;
                applfather.Border = 0;
                tblicicipd.AddCell(applfather);

                tblicicipd.AddCell(pdemcell);

                PdfPCell martialstathead = new PdfPCell(new Phrase("* Martial Status / Name of Spouse", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                martialstathead.HorizontalAlignment = 0;
                martialstathead.Colspan = 0;
                martialstathead.Border = 0;
                tblicicipd.AddCell(martialstathead);

                PdfPCell martialcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                martialcol.HorizontalAlignment = 0;
                martialcol.Colspan = 0;
                martialcol.Border = 0;
                tblicicipd.AddCell(martialcol);

                PdfPCell martialstatus = new PdfPCell(new Phrase(Marital, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                martialstatus.HorizontalAlignment = 0;
                martialstatus.Colspan = 0;
                martialstatus.Border = 0;
                tblicicipd.AddCell(martialstatus);



                PdfPCell applNationalityhead = new PdfPCell(new Phrase("* Nationality", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applNationalityhead.HorizontalAlignment = 0;
                applNationalityhead.Colspan = 0;
                applNationalityhead.Border = 0;
                tblicicipd.AddCell(applNationalityhead);

                PdfPCell applNationalitycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applNationalitycol.HorizontalAlignment = 0;
                applNationalitycol.Colspan = 0;
                applNationalitycol.Border = 0;
                tblicicipd.AddCell(applNationalitycol);

                PdfPCell applNationality = new PdfPCell(new Phrase(nationality, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applNationality.HorizontalAlignment = 0;
                applNationality.Colspan = 0;
                applNationality.Border = 0;
                tblicicipd.AddCell(applNationality);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applEducationhead = new PdfPCell(new Phrase("* Education", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applEducationhead.HorizontalAlignment = 0;
                applEducationhead.Colspan = 0;
                applEducationhead.Border = 0;
                tblicicipd.AddCell(applEducationhead);

                PdfPCell applEducationcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applEducationcol.HorizontalAlignment = 0;
                applEducationcol.Colspan = 0;
                applEducationcol.Border = 0;
                tblicicipd.AddCell(applEducationcol);

                PdfPCell applEducation = new PdfPCell(new Phrase(educationqualification, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applEducation.HorizontalAlignment = 0;
                applEducation.Colspan = 4;
                applEducation.Border = 0;
                tblicicipd.AddCell(applEducation);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applgrosshead = new PdfPCell(new Phrase("* Gross Annual Income", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgrosshead.HorizontalAlignment = 0;
                applgrosshead.Colspan = 0;
                applgrosshead.Border = 0;
                tblicicipd.AddCell(applgrosshead);

                PdfPCell applgrosscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applgrosscol.HorizontalAlignment = 0;
                applgrosscol.Colspan = 0;
                applgrosscol.Border = 0;
                tblicicipd.AddCell(applgrosscol);

                PdfPCell applgross = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applgross.HorizontalAlignment = 0;
                applgross.Colspan = 4;
                applgross.Border = 0;
                tblicicipd.AddCell(applgross);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                //iTextSharp.text.Image commadd = iTextSharp.text.Image.GetInstance(imagepath1 + "/commaddress.png");
                //PdfPCell addressdetails = new PdfPCell();
                //Paragraph commaddlogo = new Paragraph();
                //commaddlogo.Add(new Chunk(commadd, 0, 0));
                //addressdetails.AddElement(commaddlogo);
                //addressdetails.HorizontalAlignment = 0;
                //addressdetails.Colspan = 6;
                //// addressdetails.PaddingTop = 20;
                //addressdetails.Border = 0;
                //tblicicipd.AddCell(addressdetails);

                PdfPCell addressdetails = new PdfPCell(new Phrase("COMMUNICATION ADDRESS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                addressdetails.HorizontalAlignment = 1;
                addressdetails.Colspan = 6;
                // addressdetails.PaddingTop = 20;
                addressdetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(addressdetails);

                PdfPCell ademcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                ademcell.HorizontalAlignment = 1;
                ademcell.Colspan = 6;
                ademcell.Border = 0;
                ademcell.MinimumHeight = 10;
                tblicicipd.AddCell(ademcell);

                PdfPCell applflatnohead = new PdfPCell(new Phrase("* Flat No./Society Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnohead.HorizontalAlignment = 0;
                applflatnohead.Colspan = 0;
                applflatnohead.Border = 0;
                tblicicipd.AddCell(applflatnohead);

                PdfPCell applflatnocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnocol.HorizontalAlignment = 0;
                applflatnocol.Colspan = 0;
                applflatnocol.Border = 0;
                tblicicipd.AddCell(applflatnocol);

                PdfPCell applflatno = new PdfPCell(new Phrase(prdoorno, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applflatno.HorizontalAlignment = 0;
                applflatno.Colspan = 4;
                applflatno.Border = 0;
                tblicicipd.AddCell(applflatno);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applroadnohead = new PdfPCell(new Phrase("* Road No./Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnohead.HorizontalAlignment = 0;
                applroadnohead.Colspan = 0;
                applroadnohead.Border = 0;
                tblicicipd.AddCell(applroadnohead);

                PdfPCell applroadnocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnocol.HorizontalAlignment = 0;
                applroadnocol.Colspan = 0;
                applroadnocol.Border = 0;
                tblicicipd.AddCell(applroadnocol);

                PdfPCell applroadno = new PdfPCell(new Phrase(prstreet, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applroadno.HorizontalAlignment = 0;
                applroadno.Colspan = 4;
                applroadno.Border = 0;
                tblicicipd.AddCell(applroadno);

                tblicicipd.AddCell(pdemcell);

                PdfPCell landmarkhead = new PdfPCell(new Phrase("* Nearest Landmark", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkhead.HorizontalAlignment = 0;
                landmarkhead.Colspan = 0;
                landmarkhead.Border = 0;
                tblicicipd.AddCell(landmarkhead);

                PdfPCell landmarkcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkcol.HorizontalAlignment = 0;
                landmarkcol.Colspan = 0;
                landmarkcol.Border = 0;
                tblicicipd.AddCell(landmarkcol);

                PdfPCell landmark = new PdfPCell(new Phrase(prarea, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                landmark.HorizontalAlignment = 0;
                landmark.Colspan = 4;
                landmark.Border = 0;
                tblicicipd.AddCell(landmark);

                tblicicipd.AddCell(pdemcell);

                PdfPCell cityhead = new PdfPCell(new Phrase("* City", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cityhead.HorizontalAlignment = 0;
                cityhead.Colspan = 0;
                cityhead.Border = 0;
                tblicicipd.AddCell(cityhead);

                PdfPCell citycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                citycol.HorizontalAlignment = 0;
                citycol.Colspan = 0;
                citycol.Border = 0;
                tblicicipd.AddCell(citycol);

                PdfPCell applcity = new PdfPCell(new Phrase(prcity, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applcity.HorizontalAlignment = 0;
                applcity.Colspan = 4;
                applcity.Border = 0;
                tblicicipd.AddCell(applcity);

                tblicicipd.AddCell(pdemcell);

                PdfPCell Statehead = new PdfPCell(new Phrase("* State", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Statehead.HorizontalAlignment = 0;
                Statehead.Colspan = 0;
                Statehead.Border = 0;
                tblicicipd.AddCell(Statehead);

                PdfPCell Statecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Statecol.HorizontalAlignment = 0;
                Statecol.Colspan = 0;
                Statecol.Border = 0;
                tblicicipd.AddCell(Statecol);

                PdfPCell applState = new PdfPCell(new Phrase(prState, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applState.HorizontalAlignment = 0;
                applState.Colspan = 0;
                applState.Border = 0;
                tblicicipd.AddCell(applState);


                PdfPCell pinhead = new PdfPCell(new Phrase("*PIN", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                pinhead.HorizontalAlignment = 0;
                pinhead.Colspan = 0;
                pinhead.Border = 0;
                tblicicipd.AddCell(pinhead);

                PdfPCell pincol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                pincol.HorizontalAlignment = 0;
                pincol.Colspan = 0;
                pincol.Border = 0;
                tblicicipd.AddCell(pincol);

                PdfPCell pin = new PdfPCell(new Phrase(prPincode, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                pin.HorizontalAlignment = 0;
                pin.Colspan = 0;
                pin.Border = 0;
                tblicicipd.AddCell(pin);

                tblicicipd.AddCell(pdemcell);

                PdfPCell countryhead = new PdfPCell(new Phrase("* Country", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                countryhead.HorizontalAlignment = 0;
                countryhead.Colspan = 0;
                countryhead.Border = 0;
                tblicicipd.AddCell(countryhead);

                PdfPCell countrycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                countrycol.HorizontalAlignment = 0;
                countrycol.Colspan = 0;
                countrycol.Border = 0;
                tblicicipd.AddCell(countrycol);

                PdfPCell country = new PdfPCell(new Phrase("India", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                country.HorizontalAlignment = 0;
                country.Colspan = 4;
                country.Border = 0;
                tblicicipd.AddCell(country);

                tblicicipd.AddCell(pdemcell);

                PdfPCell telnohead = new PdfPCell(new Phrase("  Tel.No", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telnohead.HorizontalAlignment = 0;
                telnohead.Colspan = 0;
                telnohead.Border = 0;
                tblicicipd.AddCell(telnohead);

                PdfPCell telnocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telnocol.HorizontalAlignment = 0;
                telnocol.Colspan = 0;
                telnocol.Border = 0;
                tblicicipd.AddCell(telnocol);

                PdfPCell telno = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telno.HorizontalAlignment = 0;
                telno.Colspan = 0;
                telno.Border = 0;
                tblicicipd.AddCell(telno);


                PdfPCell mobilehead = new PdfPCell(new Phrase("* Mobile", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead.HorizontalAlignment = 0;
                mobilehead.Colspan = 0;
                mobilehead.Border = 0;
                tblicicipd.AddCell(mobilehead);

                PdfPCell mobilecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol.HorizontalAlignment = 0;
                mobilecol.Colspan = 0;
                mobilecol.Border = 0;
                tblicicipd.AddCell(mobilecol);

                PdfPCell applmobile = new PdfPCell(new Phrase(prphone, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile.HorizontalAlignment = 0;
                applmobile.Colspan = 0;
                applmobile.Border = 0;
                tblicicipd.AddCell(applmobile);

                tblicicipd.AddCell(pdemcell);

                PdfPCell emailhead = new PdfPCell(new Phrase("  E-mail ID", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailhead.HorizontalAlignment = 0;
                emailhead.Colspan = 0;
                emailhead.Border = 0;
                tblicicipd.AddCell(emailhead);

                PdfPCell emailcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailcol.HorizontalAlignment = 0;
                emailcol.Colspan = 0;
                emailcol.Border = 0;
                tblicicipd.AddCell(emailcol);

                PdfPCell email = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                email.HorizontalAlignment = 0;
                email.Colspan = 4;
                email.Border = 0;
                tblicicipd.AddCell(email);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                //iTextSharp.text.Image peradd = iTextSharp.text.Image.GetInstance(imagepath1 + "/peraddress.png");
                //PdfPCell addressdetails1 = new PdfPCell();
                //Paragraph peraddlogo = new Paragraph();
                //peraddlogo.Add(new Chunk(peradd, 0, 0));
                //addressdetails1.AddElement(peraddlogo);
                //addressdetails1.HorizontalAlignment = 0;
                //addressdetails1.Colspan = 6;
                //// addressdetails1.PaddingTop = 20;
                //addressdetails1.Border = 0;
                //tblicicipd.AddCell(addressdetails1);

                PdfPCell addressdetails1 = new PdfPCell(new Phrase("PERMANENT ADDRESS", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                addressdetails1.HorizontalAlignment = 1;
                addressdetails1.Colspan = 6;
                // addressdetails1.PaddingTop = 20;
                addressdetails1.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(addressdetails1);

                PdfPCell ademcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                ademcell1.HorizontalAlignment = 1;
                ademcell1.Colspan = 6;
                ademcell1.Border = 0;
                ademcell1.MinimumHeight = 10;
                tblicicipd.AddCell(ademcell1);

                PdfPCell applflatnohead1 = new PdfPCell(new Phrase("* Flat No./Society Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnohead1.HorizontalAlignment = 0;
                applflatnohead1.Colspan = 0;
                applflatnohead1.Border = 0;
                tblicicipd.AddCell(applflatnohead1);

                PdfPCell applflatnocol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applflatnocol1.HorizontalAlignment = 0;
                applflatnocol1.Colspan = 0;
                applflatnocol1.Border = 0;
                tblicicipd.AddCell(applflatnocol1);

                PdfPCell applflatno1 = new PdfPCell(new Phrase(pedoor, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applflatno1.HorizontalAlignment = 0;
                applflatno1.Colspan = 4;
                applflatno1.Border = 0;
                tblicicipd.AddCell(applflatno1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell applroadnohead1 = new PdfPCell(new Phrase("* Road No./Name", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnohead1.HorizontalAlignment = 0;
                applroadnohead1.Colspan = 0;
                applroadnohead1.Border = 0;
                tblicicipd.AddCell(applroadnohead1);

                PdfPCell applroadnocol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                applroadnocol1.HorizontalAlignment = 0;
                applroadnocol1.Colspan = 0;
                applroadnocol1.Border = 0;
                tblicicipd.AddCell(applroadnocol1);

                PdfPCell applroadno1 = new PdfPCell(new Phrase(pestreet, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applroadno1.HorizontalAlignment = 0;
                applroadno1.Colspan = 4;
                applroadno1.Border = 0;
                tblicicipd.AddCell(applroadno1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell landmarkhead1 = new PdfPCell(new Phrase("* Nearest Landmark", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkhead1.HorizontalAlignment = 0;
                landmarkhead1.Colspan = 0;
                landmarkhead1.Border = 0;
                tblicicipd.AddCell(landmarkhead1);

                PdfPCell landmarkcol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                landmarkcol1.HorizontalAlignment = 0;
                landmarkcol1.Colspan = 0;
                landmarkcol1.Border = 0;
                tblicicipd.AddCell(landmarkcol1);

                PdfPCell landmark1 = new PdfPCell(new Phrase(pearea, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                landmark1.HorizontalAlignment = 0;
                landmark1.Colspan = 4;
                landmark1.Border = 0;
                tblicicipd.AddCell(landmark1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell cityhead1 = new PdfPCell(new Phrase("* City", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cityhead1.HorizontalAlignment = 0;
                cityhead1.Colspan = 0;
                cityhead1.Border = 0;
                tblicicipd.AddCell(cityhead1);

                PdfPCell citycol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                citycol1.HorizontalAlignment = 0;
                citycol1.Colspan = 0;
                citycol1.Border = 0;
                tblicicipd.AddCell(citycol1);

                PdfPCell applcity1 = new PdfPCell(new Phrase(pecity, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applcity1.HorizontalAlignment = 0;
                applcity1.Colspan = 4;
                applcity1.Border = 0;
                tblicicipd.AddCell(applcity1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell Statehead1 = new PdfPCell(new Phrase("* State", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Statehead1.HorizontalAlignment = 0;
                Statehead1.Colspan = 0;
                Statehead1.Border = 0;
                tblicicipd.AddCell(Statehead1);

                PdfPCell Statecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Statecol1.HorizontalAlignment = 0;
                Statecol1.Colspan = 0;
                Statecol1.Border = 0;
                tblicicipd.AddCell(Statecol1);

                PdfPCell applState1 = new PdfPCell(new Phrase(peState, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applState1.HorizontalAlignment = 0;
                applState1.Colspan = 0;
                applState1.Border = 0;
                tblicicipd.AddCell(applState1);


                PdfPCell pinhead1 = new PdfPCell(new Phrase("*PIN", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                pinhead1.HorizontalAlignment = 0;
                pinhead1.Colspan = 0;
                pinhead1.Border = 0;
                tblicicipd.AddCell(pinhead1);

                PdfPCell pincol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                pincol1.HorizontalAlignment = 0;
                pincol1.Colspan = 0;
                pincol1.Border = 0;
                tblicicipd.AddCell(pincol1);

                PdfPCell pin1 = new PdfPCell(new Phrase(pePincode, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                pin1.HorizontalAlignment = 0;
                pin1.Colspan = 0;
                pin1.Border = 0;
                tblicicipd.AddCell(pin1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell countryhead1 = new PdfPCell(new Phrase("* Country", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                countryhead1.HorizontalAlignment = 0;
                countryhead1.Colspan = 0;
                countryhead1.Border = 0;
                tblicicipd.AddCell(countryhead1);

                PdfPCell countrycol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                countrycol1.HorizontalAlignment = 0;
                countrycol1.Colspan = 0;
                countrycol1.Border = 0;
                tblicicipd.AddCell(countrycol1);

                PdfPCell country1 = new PdfPCell(new Phrase("India", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                country1.HorizontalAlignment = 0;
                country1.Colspan = 4;
                country1.Border = 0;
                tblicicipd.AddCell(country1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell telnohead1 = new PdfPCell(new Phrase("  Tel.No", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telnohead1.HorizontalAlignment = 0;
                telnohead1.Colspan = 0;
                telnohead1.Border = 0;
                tblicicipd.AddCell(telnohead1);

                PdfPCell telnocol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telnocol1.HorizontalAlignment = 0;
                telnocol1.Colspan = 0;
                telnocol1.Border = 0;
                tblicicipd.AddCell(telnocol1);

                PdfPCell telno1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                telno1.HorizontalAlignment = 0;
                telno1.Colspan = 0;
                telno1.Border = 0;
                tblicicipd.AddCell(telno1);


                PdfPCell mobilehead1 = new PdfPCell(new Phrase("* Mobile", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilehead1.HorizontalAlignment = 0;
                mobilehead1.Colspan = 0;
                mobilehead1.Border = 0;
                tblicicipd.AddCell(mobilehead1);

                PdfPCell mobilecol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                mobilecol1.HorizontalAlignment = 0;
                mobilecol1.Colspan = 0;
                mobilecol1.Border = 0;
                tblicicipd.AddCell(mobilecol1);

                PdfPCell applmobile1 = new PdfPCell(new Phrase(pephone, FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                applmobile1.HorizontalAlignment = 0;
                applmobile1.Colspan = 0;
                applmobile1.Border = 0;
                tblicicipd.AddCell(applmobile1);

                tblicicipd.AddCell(pdemcell);

                PdfPCell emailhead1 = new PdfPCell(new Phrase("  E-mail ID", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailhead1.HorizontalAlignment = 0;
                emailhead1.Colspan = 0;
                emailhead1.Border = 0;
                tblicicipd.AddCell(emailhead1);

                PdfPCell emailcol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                emailcol1.HorizontalAlignment = 0;
                emailcol1.Colspan = 0;
                emailcol1.Border = 0;
                tblicicipd.AddCell(emailcol1);

                PdfPCell email1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                email1.HorizontalAlignment = 0;
                email1.Colspan = 4;
                email1.Border = 0;
                tblicicipd.AddCell(email1);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                //iTextSharp.text.Image addressproof = iTextSharp.text.Image.GetInstance(imagepath1 + "/addressproof.png");
                //PdfPCell identitydetails = new PdfPCell();
                //Paragraph addressprooflogo = new Paragraph();
                //addressprooflogo.Add(new Chunk(addressproof, 0, 0));
                //identitydetails.AddElement(addressprooflogo);
                //identitydetails.HorizontalAlignment = 0;
                //identitydetails.Colspan = 6;
                //identitydetails.Border = 0;
                //tblicicipd.AddCell(identitydetails);

                PdfPCell identitydetails = new PdfPCell(new Phrase("IDENTITY AND ADDRESS PROOF", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                identitydetails.HorizontalAlignment = 1;
                identitydetails.Colspan = 6;
                //addressdetails1.Border = 0;
                identitydetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(identitydetails);

                tblicicipd.AddCell(pdemcell);

                BaseColor color1 = new BaseColor(18, 97, 128);
                PdfPCell identitydesc = new PdfPCell(new Phrase("(Verified true copy of any of the following valid documents,to serve as Address and Identity Proof, duly verified with the originals by a bank official):", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, color1)));
                identitydesc.HorizontalAlignment = 0;
                identitydesc.Colspan = 6;
                //addressdetails1.Border = 0;
                identitydesc.Border = 0;
                tblicicipd.AddCell(identitydesc);

                tblicicipd.AddCell(pdemcell);

                PdfPCell checklist = new PdfPCell(new Phrase("Document Check List", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                checklist.HorizontalAlignment = 1;
                checklist.Colspan = 6;
                checklist.BorderColor = new BaseColor(204, 204, 204);
                //checklist.Border = 0;
                tblicicipd.AddCell(checklist);

                PdfPCell checklistheading = new PdfPCell(new Phrase("Tick Options", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                checklistheading.HorizontalAlignment = 1;
                checklistheading.Colspan = 1;
                checklistheading.BorderColor = new BaseColor(204, 204, 204);
                // checklistheading.Border = 0;
                tblicicipd.AddCell(checklistheading);

                PdfPCell checklistheading2 = new PdfPCell(new Phrase("Document", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                checklistheading2.HorizontalAlignment = 0;
                checklistheading2.Colspan = 3;
                checklistheading2.BorderColor = new BaseColor(204, 204, 204);
                // checklistheading2.Border = 0;
                tblicicipd.AddCell(checklistheading2);


                PdfPCell checklistheading3 = new PdfPCell(new Phrase("ID Proof", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                checklistheading3.HorizontalAlignment = 1;
                checklistheading3.Colspan = 1;
                checklistheading3.BorderColor = new BaseColor(204, 204, 204);
                // checklistheading3.Border = 0;
                tblicicipd.AddCell(checklistheading3);

                PdfPCell checklistheading4 = new PdfPCell(new Phrase("Address Proof", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                checklistheading4.HorizontalAlignment = 1;
                checklistheading4.Colspan = 1;
                checklistheading4.BorderColor = new BaseColor(204, 204, 204);
                // checklistheading4.Border = 0;
                tblicicipd.AddCell(checklistheading4);


                iTextSharp.text.Image chkpng = iTextSharp.text.Image.GetInstance(imagepath1 + "/black-check.png");
                iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepath1 + "/checkbox1.png");

                PdfPCell tickop11 = new PdfPCell(sqpng);
                tickop11.HorizontalAlignment = 1;
                tickop11.Colspan = 1;
                tickop11.PaddingTop = 4;
                tickop11.PaddingBottom = 4;
                tickop11.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop11);

                PdfPCell tickop12 = new PdfPCell(new Phrase("Letter from company(Buyer) verifying Identity and Address", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop12.HorizontalAlignment = 0;
                tickop12.Colspan = 3;
                tickop12.MinimumHeight = 12;
                tickop12.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop12);


                PdfPCell tickop13 = new PdfPCell(chkpng);
                tickop13.HorizontalAlignment = 1;
                tickop13.Colspan = 1;
                // tickop13.Border = 0;
                tickop13.BorderColor = new BaseColor(204, 204, 204);
                tblicicipd.AddCell(tickop13);

                PdfPCell tickop14 = new PdfPCell(chkpng);
                tickop14.HorizontalAlignment = 1;
                tickop14.Colspan = 1;
                //tickop14.Border = 0;
                tickop14.BorderColor = new BaseColor(204, 204, 204);
                tblicicipd.AddCell(tickop14);

                PdfPCell tickop21 = new PdfPCell(sqpng);
                tickop21.HorizontalAlignment = 1;
                tickop21.Colspan = 1;
                tickop21.PaddingTop = 4;
                tickop21.PaddingBottom = 4;
                tickop21.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop21);

                PdfPCell tickop22 = new PdfPCell(new Phrase("Company Identity Card", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop22.HorizontalAlignment = 0;
                tickop22.Colspan = 3;
                tickop22.MinimumHeight = 12;
                tickop22.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop22);


                PdfPCell tickop23 = new PdfPCell(chkpng);
                tickop23.HorizontalAlignment = 1;
                tickop23.Colspan = 1;
                tickop23.BorderColor = new BaseColor(204, 204, 204);
                // tickop13.Border = 0;
                tblicicipd.AddCell(tickop23);

                PdfPCell tickop24 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop24.HorizontalAlignment = 0;
                tickop24.Colspan = 1;
                tickop24.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop24);



                PdfPCell tickop31 = new PdfPCell(sqpng);
                tickop31.HorizontalAlignment = 1;
                tickop31.Colspan = 1;
                tickop31.PaddingTop = 4;
                tickop31.PaddingBottom = 4;
                tickop31.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop31);

                PdfPCell tickop32 = new PdfPCell(new Phrase("Valid Passport with photo and Signature", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop32.HorizontalAlignment = 0;
                tickop32.Colspan = 3;
                tickop32.MinimumHeight = 12;
                tickop32.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop32);


                PdfPCell tickop33 = new PdfPCell(chkpng);
                tickop33.HorizontalAlignment = 1;
                tickop33.Colspan = 1;
                // tickop13.Border = 0;
                tickop33.BorderColor = new BaseColor(204, 204, 204);
                tblicicipd.AddCell(tickop33);

                PdfPCell tickop34 = new PdfPCell(chkpng);
                tickop34.HorizontalAlignment = 1;
                tickop34.Colspan = 1;
                tickop34.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop34);


                PdfPCell tickop41 = new PdfPCell(sqpng);
                tickop41.HorizontalAlignment = 1;
                tickop41.Colspan = 1;
                tickop41.PaddingTop = 4;
                tickop41.PaddingBottom = 4;
                tickop41.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop41);

                PdfPCell tickop42 = new PdfPCell(new Phrase("Printed Ration Card with Photo/ Household Card", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop42.HorizontalAlignment = 0;
                tickop42.Colspan = 3;
                tickop42.MinimumHeight = 12;
                tickop42.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop42);


                PdfPCell tickop43 = new PdfPCell(chkpng);
                tickop43.HorizontalAlignment = 1;
                tickop43.Colspan = 1;
                tickop43.BorderColor = new BaseColor(204, 204, 204);
                // tickop13.Border = 0;
                tblicicipd.AddCell(tickop43);

                PdfPCell tickop44 = new PdfPCell(chkpng);
                tickop44.HorizontalAlignment = 1;
                tickop44.Colspan = 1;
                tickop44.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop44);


                PdfPCell tickop51 = new PdfPCell(sqpng);
                tickop51.HorizontalAlignment = 1;
                tickop51.Colspan = 1;
                tickop51.PaddingTop = 4;
                tickop51.PaddingBottom = 4;
                tickop51.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop51);

                PdfPCell tickop52 = new PdfPCell(new Phrase("Senior Citizen Card issued by state/ Central Govt.", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop52.HorizontalAlignment = 0;
                tickop52.Colspan = 3;
                tickop52.MinimumHeight = 12;
                tickop52.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop52);


                PdfPCell tickop53 = new PdfPCell(chkpng);
                tickop53.HorizontalAlignment = 1;
                tickop53.Colspan = 1;
                // tickop13.Border = 0;
                tickop53.BorderColor = new BaseColor(204, 204, 204);
                tblicicipd.AddCell(tickop53);

                PdfPCell tickop54 = new PdfPCell(chkpng);
                tickop54.HorizontalAlignment = 1;
                tickop54.Colspan = 1;
                tickop54.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop54);



                PdfPCell tickop71 = new PdfPCell(sqpng);
                tickop71.HorizontalAlignment = 1;
                tickop71.Colspan = 1;
                tickop71.PaddingTop = 4;
                tickop71.PaddingBottom = 4;
                tickop71.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop71);

                PdfPCell tickop72 = new PdfPCell(new Phrase("Voter ID Card", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop72.HorizontalAlignment = 0;
                tickop72.Colspan = 3;
                tickop72.MinimumHeight = 12;
                tickop72.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop72);


                PdfPCell tickop73 = new PdfPCell(chkpng);
                tickop73.HorizontalAlignment = 1;
                tickop73.Colspan = 1;
                tickop73.BorderColor = new BaseColor(204, 204, 204);
                // tickop13.Border = 0;
                tblicicipd.AddCell(tickop73);

                PdfPCell tickop74 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop74.HorizontalAlignment = 0;
                tickop74.Colspan = 1;
                tickop74.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop74);

                PdfPCell tickop81 = new PdfPCell(sqpng);
                tickop81.HorizontalAlignment = 1;
                tickop81.Colspan = 1;
                tickop81.PaddingTop = 4;
                tickop81.PaddingBottom = 4;
                tickop81.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop81);

                PdfPCell tickop82 = new PdfPCell(new Phrase("PAN Card issued by income Tax dept/Unit Trust of India Technology Services Ltd./National Securities Depository Ltd.", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop82.HorizontalAlignment = 0;
                tickop82.Colspan = 3;
                tickop82.MinimumHeight = 12;
                tickop82.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop82);


                PdfPCell tickop83 = new PdfPCell(chkpng);
                tickop83.HorizontalAlignment = 1;
                tickop83.Colspan = 1;
                // tickop13.Border = 0;
                tickop83.BorderColor = new BaseColor(204, 204, 204);
                tblicicipd.AddCell(tickop83);

                PdfPCell tickop84 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop84.HorizontalAlignment = 0;
                tickop84.Colspan = 1;
                tickop84.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop84);

                PdfPCell tickop91 = new PdfPCell(sqpng);
                tickop91.HorizontalAlignment = 1;
                tickop91.Colspan = 1;
                tickop91.PaddingTop = 4;
                tickop91.PaddingBottom = 4;
                tickop91.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop91);

                PdfPCell tickop92 = new PdfPCell(new Phrase("Driving Licence (Handwritten or laminated) issued by regional transport authority", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop92.HorizontalAlignment = 0;
                tickop92.Colspan = 3;
                tickop92.MinimumHeight = 12;
                tickop92.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop92);


                PdfPCell tickop93 = new PdfPCell(chkpng);
                tickop93.HorizontalAlignment = 1;
                tickop93.Colspan = 1;
                tickop93.BorderColor = new BaseColor(204, 204, 204);
                // tickop13.Border = 0;
                tblicicipd.AddCell(tickop93);

                PdfPCell tickop94 = new PdfPCell(chkpng);
                tickop94.HorizontalAlignment = 1;
                tickop94.Colspan = 1;
                tickop94.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop94);

                PdfPCell tickop101 = new PdfPCell(sqpng);
                tickop101.HorizontalAlignment = 1;
                tickop101.Colspan = 1;
                tickop101.PaddingTop = 4;
                tickop101.PaddingBottom = 4;
                tickop101.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop101);

                PdfPCell tickop102 = new PdfPCell(new Phrase("Utility Bills (Electricity bill, Telephone bill) not older than 3 months", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop102.HorizontalAlignment = 0;
                tickop102.Colspan = 3;
                tickop102.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop102);


                PdfPCell tickop103 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop103.HorizontalAlignment = 0;
                tickop103.Colspan = 1;
                tickop103.BorderColor = new BaseColor(204, 204, 204);
                // tickop13.Border = 0;
                tblicicipd.AddCell(tickop103);

                PdfPCell tickop104 = new PdfPCell(chkpng);
                tickop104.HorizontalAlignment = 1;
                tickop104.Colspan = 1;
                tickop104.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop104);


                PdfPCell tickop111 = new PdfPCell(sqpng);
                tickop111.HorizontalAlignment = 1;
                tickop111.Colspan = 1;
                tickop111.PaddingTop = 4;
                tickop111.PaddingBottom = 4;
                tickop111.BorderColor = new BaseColor(204, 204, 204);
                // tickop11.Border = 0;
                tblicicipd.AddCell(tickop111);

                PdfPCell tickop112 = new PdfPCell(new Phrase("Statement of account with account opening cheque for pass book with Account opening cheque of a scheduled commercial bank which account has been opened atleast 3 months earlier and Account opening cheque from the same Bank", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop112.HorizontalAlignment = 0;
                tickop112.Colspan = 3;
                tickop112.BorderColor = new BaseColor(204, 204, 204);
                // tickop12.Border = 0;
                tblicicipd.AddCell(tickop112);


                PdfPCell tickop113 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                tickop113.HorizontalAlignment = 0;
                tickop113.Colspan = 1;
                // tickop13.Border = 0;
                tickop113.BorderColor = new BaseColor(204, 204, 204);
                tblicicipd.AddCell(tickop113);

                PdfPCell tickop114 = new PdfPCell(chkpng);
                tickop114.HorizontalAlignment = 1;
                tickop114.Colspan = 1;
                tickop114.BorderColor = new BaseColor(204, 204, 204);
                //tickop14.Border = 0;
                tblicicipd.AddCell(tickop114);

                tblicicipd.AddCell(pdemcell);

                PdfPCell formarriedwm = new PdfPCell(new Phrase("For married women, proof of identity with her maiden name, if supported with a verified true copy of marriage certificate are acceptable as valid identity proof", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                formarriedwm.HorizontalAlignment = 0;
                formarriedwm.Colspan = 6;
                formarriedwm.Border = 0;
                tblicicipd.AddCell(formarriedwm);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell form60 = new PdfPCell(new Phrase("FORM 60 / 61 (TO BE FILLED BY THOSE WHO DO NOT HAVE EITHER PAN OR GIR)", FontFactory.GetFont(fontsyle, 9, Font.BOLD, BaseColor.BLACK)));
                form60.HorizontalAlignment = 1;
                form60.Colspan = 6;
                // form60.Border = 0;
                tblicicipd.AddCell(form60);

                tblicicipd.AddCell(pdemcell);

                PdfPCell form60desc = new PdfPCell(new Phrase("Are you a Tax Assessee ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60desc.HorizontalAlignment = 0;
                form60desc.Colspan = 1;
                form60desc.Border = 0;
                tblicicipd.AddCell(form60desc);

                PdfPCell form60desc1 = new PdfPCell();
                Paragraph p6 = new Paragraph();
                p6.Add(new Chunk(sqpng, 0, 0));
                p6.Add(new Phrase("  Yes ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60desc1.AddElement(p6);
                form60desc1.HorizontalAlignment = 0;
                form60desc1.Colspan = 2;
                form60desc1.Border = 0;
                tblicicipd.AddCell(form60desc1);



                PdfPCell form60desc3 = new PdfPCell();
                Paragraph p7 = new Paragraph();
                p7.Add(new Chunk(sqpng, 0, 0));
                p7.Add(new Phrase("  No ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60desc3.AddElement(p7);
                form60desc3.HorizontalAlignment = 0;
                form60desc3.Colspan = 2;
                form60desc3.Border = 0;
                tblicicipd.AddCell(form60desc3);



                tblicicipd.AddCell(pdemcell);

                PdfPCell form60descyes = new PdfPCell(new Phrase("If yes,   (a) Details of ward / circle / Range ware the last return of income was filled ______________________________________", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60descyes.HorizontalAlignment = 0;
                form60descyes.Colspan = 6;
                form60descyes.Border = 0;
                tblicicipd.AddCell(form60descyes);

                tblicicipd.AddCell(pdemcell);

                PdfPCell form60dreason = new PdfPCell(new Phrase("(b) Reason for not having PAN/GIR No. : _____________________________ I _____________________________", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60dreason.HorizontalAlignment = 0;
                form60dreason.Colspan = 6;
                form60dreason.Border = 0;
                tblicicipd.AddCell(form60dreason);

                tblicicipd.AddCell(pdemcell);

                PdfPCell form60declrn = new PdfPCell(new Phrase("do hereby declare that what is stated is true to the best of my knowledge and belief. Verified at __________ this the _________________ day of _________________ 20", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                form60declrn.HorizontalAlignment = 0;
                form60declrn.Colspan = 6;
                form60declrn.Border = 0;
                tblicicipd.AddCell(form60declrn);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                //iTextSharp.text.Image yourwork = iTextSharp.text.Image.GetInstance(imagepath1 + "/yourwork.png");
                //PdfPCell Workdetails = new PdfPCell();
                //Paragraph yourworklogo = new Paragraph();
                //yourworklogo.Add(new Chunk(yourwork, 0, 0));
                //Workdetails.AddElement(yourworklogo);
                //Workdetails.HorizontalAlignment = 0;
                //Workdetails.Colspan = 6;
                //Workdetails.Border = 0;
                //tblicicipd.AddCell(Workdetails);
                PdfPCell Workdetails = new PdfPCell(new Phrase("ABOUT YOUR WORK", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                Workdetails.HorizontalAlignment = 1;
                Workdetails.Colspan = 6;
                Workdetails.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(Workdetails);

                tblicicipd.AddCell(pdemcell);

                PdfPCell cmpnamehead = new PdfPCell(new Phrase("* Name of the Company", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cmpnamehead.HorizontalAlignment = 0;
                cmpnamehead.Colspan = 0;
                cmpnamehead.Border = 0;
                tblicicipd.AddCell(cmpnamehead);

                PdfPCell cmpnamecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                cmpnamecol.HorizontalAlignment = 0;
                cmpnamecol.Colspan = 0;
                cmpnamecol.Border = 0;
                tblicicipd.AddCell(cmpnamecol);

                PdfPCell cmpname = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                cmpname.HorizontalAlignment = 0;
                cmpname.Colspan = 4;
                cmpname.Border = 0;
                tblicicipd.AddCell(cmpname);

                tblicicipd.AddCell(pdemcell);

                PdfPCell depthead = new PdfPCell(new Phrase("* Department", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                depthead.HorizontalAlignment = 0;
                depthead.Colspan = 0;
                depthead.Border = 0;
                tblicicipd.AddCell(depthead);

                PdfPCell deptcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                deptcol.HorizontalAlignment = 0;
                deptcol.Colspan = 0;
                deptcol.Border = 0;
                tblicicipd.AddCell(deptcol);

                PdfPCell dept = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                dept.HorizontalAlignment = 0;
                dept.Colspan = 4;
                dept.Border = 0;
                tblicicipd.AddCell(dept);

                tblicicipd.AddCell(pdemcell);

                PdfPCell offaddhead = new PdfPCell(new Phrase("* Office Address", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                offaddhead.HorizontalAlignment = 0;
                offaddhead.Colspan = 0;
                offaddhead.Border = 0;
                tblicicipd.AddCell(offaddhead);

                PdfPCell offaddcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                offaddcol.HorizontalAlignment = 0;
                offaddcol.Colspan = 0;
                offaddcol.Border = 0;
                tblicicipd.AddCell(offaddcol);

                PdfPCell offadd = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                offadd.HorizontalAlignment = 0;
                offadd.Colspan = 4;
                offadd.Border = 0;
                tblicicipd.AddCell(offadd);

                tblicicipd.AddCell(pdemcell);

                PdfPCell Wcityhead = new PdfPCell(new Phrase("* City", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcityhead.HorizontalAlignment = 0;
                Wcityhead.Colspan = 0;
                Wcityhead.Border = 0;
                tblicicipd.AddCell(Wcityhead);

                PdfPCell Wcitycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcitycol.HorizontalAlignment = 0;
                Wcitycol.Colspan = 0;
                Wcitycol.Border = 0;
                tblicicipd.AddCell(Wcitycol);

                PdfPCell Wcity = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                Wcity.HorizontalAlignment = 0;
                Wcity.Colspan = 4;
                Wcity.Border = 0;
                tblicicipd.AddCell(Wcity);

                tblicicipd.AddCell(pdemcell);

                PdfPCell WStatehead = new PdfPCell(new Phrase("* State", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                WStatehead.HorizontalAlignment = 0;
                WStatehead.Colspan = 0;
                WStatehead.Border = 0;
                tblicicipd.AddCell(WStatehead);

                PdfPCell WStatecol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                WStatecol.HorizontalAlignment = 0;
                WStatecol.Colspan = 0;
                WStatecol.Border = 0;
                tblicicipd.AddCell(WStatecol);

                PdfPCell WState = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                WState.HorizontalAlignment = 0;
                WState.Colspan = 0;
                WState.Border = 0;
                tblicicipd.AddCell(WState);


                PdfPCell Wpinhead = new PdfPCell(new Phrase("*PIN", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wpinhead.HorizontalAlignment = 0;
                Wpinhead.Colspan = 0;
                Wpinhead.Border = 0;
                tblicicipd.AddCell(Wpinhead);

                PdfPCell Wpincol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wpincol.HorizontalAlignment = 0;
                Wpincol.Colspan = 0;
                Wpincol.Border = 0;
                tblicicipd.AddCell(Wpincol);

                PdfPCell Wpin = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wpin.HorizontalAlignment = 0;
                Wpin.Colspan = 0;
                Wpin.Border = 0;
                tblicicipd.AddCell(Wpin);

                tblicicipd.AddCell(pdemcell);

                PdfPCell Wcountryhead = new PdfPCell(new Phrase("* Country", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcountryhead.HorizontalAlignment = 0;
                Wcountryhead.Colspan = 0;
                Wcountryhead.Border = 0;
                tblicicipd.AddCell(Wcountryhead);

                PdfPCell Wcountrycol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcountrycol.HorizontalAlignment = 0;
                Wcountrycol.Colspan = 0;
                Wcountrycol.Border = 0;
                tblicicipd.AddCell(Wcountrycol);

                PdfPCell Wcountry = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wcountry.HorizontalAlignment = 0;
                Wcountry.Colspan = 4;
                Wcountry.Border = 0;
                tblicicipd.AddCell(Wcountry);

                tblicicipd.AddCell(pdemcell);

                PdfPCell Wtelnohead = new PdfPCell(new Phrase("Tel.No", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wtelnohead.HorizontalAlignment = 0;
                Wtelnohead.Colspan = 0;
                Wtelnohead.Border = 0;
                tblicicipd.AddCell(Wtelnohead);

                PdfPCell Wtelnocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                Wtelnocol.HorizontalAlignment = 0;
                Wtelnocol.Colspan = 0;
                Wtelnocol.Border = 0;
                tblicicipd.AddCell(Wtelnocol);

                PdfPCell Wtelno = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                Wtelno.HorizontalAlignment = 0;
                Wtelno.Colspan = 0;
                Wtelno.Border = 0;
                tblicicipd.AddCell(Wtelno);


                PdfPCell ExtnNohead = new PdfPCell(new Phrase("* Extn.No ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                ExtnNohead.HorizontalAlignment = 0;
                ExtnNohead.Colspan = 0;
                ExtnNohead.Border = 0;
                tblicicipd.AddCell(ExtnNohead);

                PdfPCell ExtnNocol = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                ExtnNocol.HorizontalAlignment = 0;
                ExtnNocol.Colspan = 0;
                ExtnNocol.Border = 0;
                tblicicipd.AddCell(ExtnNocol);

                PdfPCell ExtnNo = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                ExtnNo.HorizontalAlignment = 0;
                ExtnNo.Colspan = 0;
                ExtnNo.Border = 0;
                tblicicipd.AddCell(ExtnNo);

                tblicicipd.AddCell(pdemcell);

                PdfPCell note = new PdfPCell(new Phrase("Address & signature verified as per the company records", FontFactory.GetFont(fontsyle, 8, Font.BOLD, color)));
                note.HorizontalAlignment = 0;
                note.Colspan = 6;
                note.Border = 0;
                tblicicipd.AddCell(note);

                tblicicipd.AddCell(pdemcell);


                PdfPCell occuphead1 = new PdfPCell(new Phrase("Occupation", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                occuphead1.HorizontalAlignment = 0;
                occuphead1.Colspan = 0;
                occuphead1.Border = 0;
                tblicicipd.AddCell(occuphead1);

                PdfPCell occupcol1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                occupcol1.HorizontalAlignment = 0;
                occupcol1.Colspan = 0;
                occupcol1.Border = 0;
                tblicicipd.AddCell(occupcol1);

                PdfPCell occup1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                occup1.HorizontalAlignment = 0;
                occup1.Colspan = 4;
                occup1.Border = 0;
                tblicicipd.AddCell(occup1);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell signWseal = new PdfPCell(new Phrase("Signature with Seal ____________", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                signWseal.HorizontalAlignment = 0;
                signWseal.Colspan = 2;
                signWseal.Border = 0;
                tblicicipd.AddCell(signWseal);

                PdfPCell CmpSign = new PdfPCell(new Phrase(" Company official's \n signature verified \n by the bank Officer \n (AM & Above/SE/BDE) ____________________", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                CmpSign.HorizontalAlignment = 0;
                CmpSign.Colspan = 2;
                CmpSign.Border = 0;
                tblicicipd.AddCell(CmpSign);

                PdfPCell WDate = new PdfPCell(new Phrase("     Date : ", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                WDate.HorizontalAlignment = 0;
                WDate.Colspan = 2;
                WDate.Border = 0;
                tblicicipd.AddCell(WDate);

                tblicicipd.AddCell(pdemcell);

                //iTextSharp.text.Image foricici = iTextSharp.text.Image.GetInstance(imagepath1 + "/ForICICI.png");
                //PdfPCell customers = new PdfPCell();
                //Paragraph foricicilogo = new Paragraph();
                //foricicilogo.Add(new Chunk(foricici, 0, 0));
                //customers.AddElement(foricicilogo);
                //customers.HorizontalAlignment = 0;
                //customers.Colspan = 6;
                //customers.Border = 0;
                //tblicicipd.AddCell(customers);

                PdfPCell customers = new PdfPCell(new Phrase("FOR ICICI BANK CUSTOMERS", FontFactory.GetFont(fontsyle, 9, Font.BOLD, color)));
                customers.HorizontalAlignment = 1;
                customers.Colspan = 6;
                //addressdetails1.Border = 0;
                customers.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(customers);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                PdfPCell custDet1 = new PdfPCell(new Phrase("Are you an existing ICICI Bank Customer : ", FontFactory.GetFont(fontsyle, 9, Font.NORMAL, BaseColor.BLACK)));
                custDet1.HorizontalAlignment = 0;
                custDet1.Colspan = 2;
                custDet1.Border = 0;
                tblicicipd.AddCell(custDet1);

                PdfPCell custDet2 = new PdfPCell();
                Paragraph p5 = new Paragraph();
                p5.Add(new Chunk(sqpng, 0, 0));
                p5.Add(new Phrase("  Y ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                custDet2.AddElement(p5);
                custDet2.HorizontalAlignment = 0;
                custDet2.Colspan = 2;
                custDet2.Border = 0;
                tblicicipd.AddCell(custDet2);


                PdfPCell custDet5 = new PdfPCell();
                Paragraph p4 = new Paragraph();
                p4.Add(new Chunk(sqpng, 0, 0));
                p4.Add(new Phrase("  N ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                custDet5.AddElement(p4);
                custDet5.HorizontalAlignment = 0;
                custDet5.Colspan = 2;
                custDet5.Border = 0;
                tblicicipd.AddCell(custDet5);


                tblicicipd.AddCell(pdemcell);

                PdfPCell custDetyes = new PdfPCell(new Phrase("If yes, please specify the current \n relationship with ICICI Bank :", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                custDetyes.HorizontalAlignment = 0;
                custDetyes.Colspan = 2;
                custDetyes.Border = 0;
                tblicicipd.AddCell(custDetyes);

                PdfPCell BAchk = new PdfPCell();
                Paragraph p3 = new Paragraph();
                p3.Add(new Chunk(sqpng, 0, 0));
                p3.Add(new Phrase("  Bank Account", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                BAchk.AddElement(p3);
                BAchk.HorizontalAlignment = 0;
                BAchk.Colspan = 2;
                BAchk.Border = 0;
                tblicicipd.AddCell(BAchk);


                PdfPCell loanchk = new PdfPCell();
                Paragraph p2 = new Paragraph();
                p2.Add(new Chunk(sqpng, 0, 0));
                p2.Add(new Phrase("  Loan Account", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                loanchk.AddElement(p2);
                loanchk.HorizontalAlignment = 0;
                loanchk.Colspan = 2;
                loanchk.Border = 0;
                tblicicipd.AddCell(loanchk);


                PdfPCell custDetemp = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, color)));
                custDetemp.HorizontalAlignment = 0;
                custDetemp.Colspan = 2;
                custDetemp.Border = 0;
                tblicicipd.AddCell(custDetemp);

                PdfPCell CDchk = new PdfPCell();
                Paragraph p1 = new Paragraph();
                p1.Add(new Chunk(sqpng, 0, 0));
                p1.Add(new Phrase("  Credit / Debit / Prepaid card", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                CDchk.AddElement(p1);
                CDchk.HorizontalAlignment = 0;
                CDchk.Colspan = 2;
                CDchk.Border = 0;
                tblicicipd.AddCell(CDchk);


                PdfPCell otherschk = new PdfPCell();
                Paragraph p = new Paragraph();
                p.Add(new Chunk(sqpng, 0, 0));
                p.Add(new Phrase("  Others,Please specify ________ ", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                otherschk.AddElement(p);
                otherschk.HorizontalAlignment = 0;
                otherschk.Colspan = 2;
                otherschk.Border = 0;
                tblicicipd.AddCell(otherschk);



                PdfPCell note1 = new PdfPCell(new Phrase("Please provide details of the current relationship _______________________________________________________", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                note1.HorizontalAlignment = 0;
                note1.Colspan = 6;
                note1.Border = 0;
                tblicicipd.AddCell(note1);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);

                //iTextSharp.text.Image cardchrgs = iTextSharp.text.Image.GetInstance(imagepath1 + "/cardcharges.png");
                //PdfPCell cardcharges = new PdfPCell();
                //Paragraph cclogo = new Paragraph();
                //cclogo.Add(new Chunk(cardchrgs, 0, 0));
                //cardcharges.AddElement(cclogo);
                //cardcharges.HorizontalAlignment = 0;
                //cardcharges.Colspan = 6;
                //cardcharges.Border = 0;
                //tblicicipd.AddCell(cardcharges);

                PdfPCell cardcharges = new PdfPCell(new Phrase("CARD CHARGES", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                cardcharges.HorizontalAlignment = 1;
                cardcharges.Colspan = 6;
                cardcharges.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(cardcharges);

                tblicicipd.AddCell(pdemcell);


                PdfPCell cardchargesdesc = new PdfPCell(new Phrase("Joining Fee and Annual Fee of Rs.250 + ST each or as may be agreed between ICICI Bank and the Enterprise, shall be debited from the amount uploaded on the card towards inssuance of the Card and maintenance of Card Account respectively. (For details please refer Terms and Conditions on our website www.icicibank.com)", FontFactory.GetFont(fontsyle, Font_size, Font.NORMAL, BaseColor.BLACK)));
                cardchargesdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cardchargesdesc.Colspan = 6;
                cardchargesdesc.Border = 0;
                tblicicipd.AddCell(cardchargesdesc);

                tblicicipd.AddCell(pdemcell);
                tblicicipd.AddCell(pdemcell);


                //iTextSharp.text.Image declrn = iTextSharp.text.Image.GetInstance(imagepath1 + "/Declaration.png");
                //PdfPCell Declaration = new PdfPCell();
                //Paragraph dlnlogo = new Paragraph();
                //dlnlogo.Add(new Chunk(declrn, 0, 0));
                //Declaration.AddElement(dlnlogo);
                //Declaration.HorizontalAlignment = 0;
                //Declaration.Colspan = 6;
                //Declaration.Border = 0;
                //tblicicipd.AddCell(Declaration);


                PdfPCell Declaration = new PdfPCell(new Phrase("DECLARATION", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                Declaration.HorizontalAlignment = 1;
                Declaration.Colspan = 6;
                Declaration.BorderColor = new BaseColor(128, 0, 0);
                tblicicipd.AddCell(Declaration);

                tblicicipd.AddCell(pdemcell);

                document.Add(tblicicipd);

                PdfPTable tblicici2 = new PdfPTable(5);
                tblicici2.TotalWidth = 550f;
                tblicici2.LockedWidth = true;
                float[] widthbx3 = new float[] { 0.2f, 4.1f, 0.1f, 0.2f, 4.1f };
                tblicici2.SetWidths(widthbx3);


                PdfPCell point = new PdfPCell(new Phrase("I have understood and hereby agree to the Terms and conditions as applicable to my Card set forth on the website www.icici.com.I understood that access to any changes/update in Terms and conditions applicable to this relationship would be available on the website only. I do hereby declare that information furnished in this form is true to the best of my knowledge and belief \n\n I declare, confirm, agree : ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point.Colspan = 2;
                point.Border = 0;
                tblicici2.AddCell(point);

                PdfPCell pointem = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                pointem.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                pointem.Colspan = 0;
                pointem.Border = 0;
                tblicici2.AddCell(pointem);

                PdfPCell poinnum = new PdfPCell(new Phrase("8.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum.Colspan = 0;
                poinnum.Border = 0;
                tblicici2.AddCell(poinnum);

                PdfPCell point10 = new PdfPCell(new Phrase("I hereby authorize ICICI Bank Ltd./ its group companies to exchange share or part with all the information date or documents relating to my Application to other ICICI group companies/ Bank/ Financial instruction/ credit bureaus / Agencies statutory Bodies such other persons as ICICI Bank Ltd./ its group companies may deem necessary or appropiated as amy be required for use or processing of said information/data by such person or furnishing of the processed information/data thereof to other bank/financial institutions/credit provider/users registered with such persons and shall not hold ICICI Bank Ltd. ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point10.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point10.Colspan = 0;
                point10.Border = 0;
                tblicici2.AddCell(point10);
                //2nd row
                PdfPCell point1no = new PdfPCell(new Phrase("1.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point1no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point1no.Colspan = 0;
                point1no.Border = 0;
                tblicici2.AddCell(point1no);

                PdfPCell point1 = new PdfPCell(new Phrase("That all the particulars and information given in the Application form (and all documents referred or provided therewith) are true, correct, complete and up-to-date in all respects and I have not withheld any information. I understand that certain particulars given by me are required by operational guidelines governing banking companies. I agree and undertake to provide and further information that ICICI Bank Ltd. may require ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point1.Colspan = 0;
                point1.Border = 0;
                tblicici2.AddCell(point1);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum11 = new PdfPCell(new Phrase("9.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum11.Colspan = 0;
                poinnum11.Border = 0;
                tblicici2.AddCell(poinnum11);

                PdfPCell point11 = new PdfPCell(new Phrase("I agree and understand that I have to complete further Application Forms fror specific liability products services from ICICI bank Ltd./ its group companies as prescribed from time to time and that such further application shall be regarded as an integral part of this application and vice versa and that unless otherwise disclosed in such further forms are prescribed the particulars and information set forth herein as well as the documents referred or provide  herewith are true and uptodate in all aspect.I agree and understand that such further application will require  incoperation of the application from number,to facilitate data management  ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point11.Colspan = 0;
                point11.Border = 0;
                tblicici2.AddCell(point11);

                //3rd row
                PdfPCell point2no = new PdfPCell(new Phrase("2.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point2no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point2no.Colspan = 0;
                point2no.Border = 0;
                tblicici2.AddCell(point2no);

                PdfPCell point2 = new PdfPCell(new Phrase("That I have no inslvency proceedings initiated against me nor have I ever been adjudicated insolvent. I authorize ICICI Bank and/or its associates to verify, make enquires with respect to any information or otherwise at my office/ residence or to contact me or any other source to obtain or provide any information that ICICI Bank may consider necessary in respect of or in relation to information in this Application/ Further Application Form including but not limited to confirming membership requirements or maintaining my account in good standing ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point2.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point2.Colspan = 0;
                point2.Border = 0;
                tblicici2.AddCell(point2);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum12 = new PdfPCell(new Phrase("10.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum12.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum12.Colspan = 0;
                poinnum12.Border = 0;
                tblicici2.AddCell(poinnum12);

                PdfPCell point12 = new PdfPCell(new Phrase("I authorise ICICI Bank Ltd., to issue an ICICI Bank Pay Direct card/ Meal card to me. I acknowledge that the issue and usage of the pay Direct Card/Meal Card is governed by the terms and conditions as in force from time to time and agree to be bound by the same. I accept that the Terms and condition of Pay Direct Card are liable to be ammended by ICICI Bank Ltd. from time to time.I futher unconditionally and irrevocably authorise ICICI Bank ltd. to debit my Card Account annually with an amount equivalent to fee.  ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point12.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point12.Colspan = 0;
                point12.Border = 0;
                tblicici2.AddCell(point12);

                //4th row
                PdfPCell point3no = new PdfPCell(new Phrase("3.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point3no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point3no.Colspan = 0;
                point3no.Border = 0;
                tblicici2.AddCell(point3no);

                PdfPCell point3 = new PdfPCell(new Phrase("That I have read the Application Form and Brochures and  am/are aware of all the terms and conditions of availing finance or service or products from ICICI Bankand its group companies. ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point3.Colspan = 0;
                point3.Border = 0;
                tblicici2.AddCell(point3);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum13 = new PdfPCell(new Phrase("11.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum13.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum13.Colspan = 0;
                poinnum13.Border = 0;
                tblicici2.AddCell(poinnum13);

                PdfPCell point13 = new PdfPCell(new Phrase("I Shall at all times comply with applicable laws and regulations while using this card.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point13.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point13.Colspan = 0;
                point13.Border = 0;
                tblicici2.AddCell(point13);

                //5th row
                PdfPCell point4no = new PdfPCell(new Phrase("4.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point4no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point4no.Colspan = 0;
                point4no.Border = 0;
                tblicici2.AddCell(point4no);

                PdfPCell point4 = new PdfPCell(new Phrase("I agree and understand that ICICI Bank Ltd./ group companies reserve the right to reject any application form without providing any reason.I agree and understand that ICICI Bank Ltd reserve the right to retain the application forms and the documents provide there with, including photographs and will not return the same to me", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point4.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point4.Colspan = 0;
                point4.Border = 0;
                tblicici2.AddCell(point4);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum14 = new PdfPCell(new Phrase("12.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum14.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum14.Colspan = 0;
                poinnum14.Border = 0;
                tblicici2.AddCell(poinnum14);

                PdfPCell point14 = new PdfPCell(new Phrase("I understand that it shall be my responsibility to keep the card , its PIN and password/s protected and concealed at all times. I shall not hold ICICI Bank liable for any loss/damage/harm resulting from failure to do so", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point14.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point14.Colspan = 0;
                point14.Border = 0;
                tblicici2.AddCell(point14);

                //6th row
                PdfPCell point5no = new PdfPCell(new Phrase("5.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point5no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point5no.Colspan = 0;
                point5no.Border = 0;
                tblicici2.AddCell(point5no);

                PdfPCell point5 = new PdfPCell(new Phrase("I have also read and understand Terms and Conditions under which the scheme is offered to my organisation and its employees.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point5.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point5.Colspan = 0;
                point5.Border = 0;
                tblicici2.AddCell(point5);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum15 = new PdfPCell(new Phrase("13.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum15.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum15.Colspan = 0;
                poinnum15.Border = 0;
                tblicici2.AddCell(poinnum15);

                PdfPCell point15 = new PdfPCell(new Phrase("I hereby agree to keep ICICI Bank fully indemnifiedagainst any loss / damage / harm that may be caused to ICICI Bank as a result of breach of any declarations , breach of any terms and conditions or any unauthorized / unlawful use of the card.  ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point15.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point15.Colspan = 0;
                point15.Border = 0;
                tblicici2.AddCell(point15);

                //7th row
                PdfPCell point6no = new PdfPCell(new Phrase("6.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point6no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point6no.Colspan = 0;
                point6no.Border = 0;
                tblicici2.AddCell(point6no);

                PdfPCell point6 = new PdfPCell(new Phrase("I agree that my employer has full right to reverse an instruction given by them for any amount within a period of three working days and I will not dispute or hold the bank responsible for any such debits on the card. ", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point6.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point6.Colspan = 0;
                point6.Border = 0;
                tblicici2.AddCell(point6);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum16 = new PdfPCell(new Phrase("14.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum16.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum16.Colspan = 0;
                poinnum16.Border = 0;
                tblicici2.AddCell(poinnum16);

                PdfPCell point16 = new PdfPCell(new Phrase("The Applicant has/have no objection to ICICI Bank Limited, its group companies, agents/ representatives to provide me/us information on various products, offers and services provided by ICICI Bank Ltd through any mode and authorise ICICI Bank Ltd", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point16.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point16.Colspan = 0;
                point16.Border = 0;
                tblicici2.AddCell(point16);

                //8th row
                PdfPCell point7no = new PdfPCell(new Phrase("7.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                point7no.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point7no.Colspan = 0;
                point7no.Border = 0;
                tblicici2.AddCell(point7no);

                PdfPCell point7 = new PdfPCell(new Phrase("I understand that is my responsibility to inform ICICI Bank immediately on termination of my employment with my current employer where upon I will cease to enjoyany or all benefits under this scheme and to inform ICICI Bank & its group companies regarding change in my residence / employment and to provide any further information that ICICI Bank & its group companies may require time to time.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point7.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point7.Colspan = 0;
                point7.Border = 0;
                tblicici2.AddCell(point7);


                tblicici2.AddCell(pointem);

                PdfPCell poinnum17 = new PdfPCell(new Phrase("15.", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                poinnum17.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                poinnum17.Colspan = 0;
                poinnum17.Border = 0;
                tblicici2.AddCell(poinnum17);

                PdfPCell point17 = new PdfPCell(new Phrase("In the event of change in address due to relocation or any other reason, card holder should intimate the new address to the Bank within 2 weeks of such a change through corporate.", FontFactory.GetFont(fontsyle, 6, Font.NORMAL, BaseColor.BLACK)));
                point17.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                point17.Colspan = 0;
                point17.Border = 0;
                tblicici2.AddCell(point17);

                document.Add(tblicici2);


                PdfPTable tblicici3 = new PdfPTable(3);
                tblicici3.TotalWidth = 550f;
                tblicici3.LockedWidth = true;
                float[] widthbx4 = new float[] { 3f, 1.5f, 3f };
                tblicici3.SetWidths(widthbx4);

                PdfPCell emptycell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, 6, Font.BOLD, BaseColor.BLACK)));
                emptycell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                emptycell.Colspan = 3;
                emptycell.Border = 0;
                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                PdfPCell banksign = new PdfPCell(new Phrase("________________________________ \n\n     Signature of Bank official in \n       whose presence signed", FontFactory.GetFont(fontsyle, 7, Font.BOLD, BaseColor.BLACK)));
                banksign.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                banksign.Colspan = 0;
                banksign.Border = 0;
                banksign.PaddingTop = 50;
                banksign.MinimumHeight = 60;
                tblicici3.AddCell(banksign);

                PdfPCell photo = new PdfPCell(new Phrase("   Applicant's Photo \n\n Please affix a recent       Photograph. \n\n Please Sign in black ink within the box", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                photo.HorizontalAlignment = 1;
                photo.Colspan = 0;
                photo.MinimumHeight = 100;
                photo.PaddingTop = 15;

                tblicici3.AddCell(photo);

                PdfPCell ApplSign = new PdfPCell(new Phrase("                          ___________________________ \n \n   Signature of Applicant", FontFactory.GetFont(fontsyle, 7, Font.BOLD, BaseColor.BLACK)));
                ApplSign.HorizontalAlignment = 2;
                ApplSign.Colspan = 0;
                ApplSign.MinimumHeight = 60;
                ApplSign.PaddingTop = 50;
                ApplSign.Border = 0;
                tblicici3.AddCell(ApplSign);

                tblicici3.AddCell(emptycell);

                PdfPCell certificationdate = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontsyle, Font_size, Font.BOLD, BaseColor.BLACK)));
                certificationdate.HorizontalAlignment = 0;
                certificationdate.Colspan = 3;
                certificationdate.Border = 0;
                tblicici3.AddCell(certificationdate);

                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                //iTextSharp.text.Image kyc = iTextSharp.text.Image.GetInstance(imagepath1 + "/KYC.png");
                //PdfPCell certification = new PdfPCell();
                //Paragraph kyclogo = new Paragraph();
                //kyclogo.Add(new Chunk(kyc, 0, 0));
                //certification.AddElement(kyclogo);
                //certification.HorizontalAlignment = 0;
                //certification.Colspan = 6;
                //certification.Border = 0;
                //tblicici3.AddCell(certification);

                PdfPCell certification = new PdfPCell(new Phrase("KYC CERTIFICATION (To be filled by the bank official)", FontFactory.GetFont(fontsyle, head_font_size, Font.BOLD, color)));
                certification.HorizontalAlignment = 1;
                certification.Colspan = 6;
                certification.BorderColor = new BaseColor(126, 0, 0);
                tblicici3.AddCell(certification);

                tblicici3.AddCell(emptycell);
                tblicici3.AddCell(emptycell);

                PdfPCell certificationdes = new PdfPCell(new Phrase("I have met Mr./Ms._________________ in person at his/ her residence/ office/ others (please specify) ______________ and confirm that I have verified the copies of the identity and address documents(as applicable) against originals as produced by the applicant. I also confirm that the form has been signed by the applicant in my presence.", FontFactory.GetFont(fontsyle, 9, Font.NORMAL, BaseColor.BLACK)));
                certificationdes.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                certificationdes.SetLeading(0.0f, 1.5f);
                certificationdes.Colspan = 3;
                certificationdes.Border = 0;
                tblicici3.AddCell(certificationdes);

                document.Add(tblicici3);

                #endregion for ICICI Form

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "ICICI.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }
        }

        public class PageEventHelper : PdfPageEventHelper
        {
            PdfContentByte cb;
            PdfTemplate template;
            BaseFont bf = BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

            public override void OnOpenDocument(PdfWriter writer, Document document)
            {
                cb = writer.DirectContent;
                template = cb.CreateTemplate(50, 50);
            }
            public override void OnEndPage(PdfWriter writer, Document document)
            {
                base.OnEndPage(writer, document);

                int pageN = writer.PageNumber;
                String text = "Page " + pageN.ToString() + " of ";
                float len = bf.GetWidthPoint(text, 8);


                iTextSharp.text.Rectangle pageSize = document.PageSize;

                cb.SetRGBColorFill(100, 100, 100);
                cb.BeginText();
                cb.SetFontAndSize(bf, 8);
                cb.SetTextMatrix(document.RightMargin, pageSize.GetBottom(document.BottomMargin));
                cb.ShowText(text);
                cb.EndText();
                cb.AddTemplate(template, document.RightMargin + len, pageSize.GetBottom(document.BottomMargin));
            }

            int totalpgcount = 0;
            public override void OnCloseDocument(PdfWriter writer, Document document)
            {

                base.OnCloseDocument(writer, document);

                template.BeginText();
                template.SetFontAndSize(bf, 8);
                template.SetTextMatrix(0, 0);
                template.SetGrayStroke(11);
                totalpgcount = writer.PageNumber - 1;
                template.ShowText("" + totalpgcount);
                template.EndText();

            }
        }


        protected void btnESIForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;
            string fontsyle = "verdana";

            string branchesi = "select ed.empid,ed.Branch,B.BranchEsiNo from EmpDetails ed Inner join Branch B on Branchid=ed.branch where ed.EmpId='" + txtEmpid.Text + "'";
            DataTable dtbranchesi = Config.ExecuteReaderWithQueryAsync(branchesi).Result;

            string branchesino = "";
            if (dtbranchesi.Rows.Count > 0)
            {
                branchesino = dtbranchesi.Rows[0]["BranchEsiNo"].ToString();
            }

            #region Variable Declaration


            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";
            string SpouseName = "";
            string FatherName = "";
            string FSpouseName = "";
            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";
            string Emppresentaddress = "";
            string Emppermanentaddress = "";



            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string RPlace = "";
            string PrevCompAddress = "";
            string PrevYrExp = "";

            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string Hname = "";
            string Hage = "";
            string email = "";
            string Esino = "";
            string EmpESIDispName = "";
            string prphone = "";
            string pephone = "";

            string CompanyName = "";
            string Address = "";
            string phno = "";
            string compMail = "";
            string BranchOffice = "";
            string ESICNoForms = "";
            string FatherSpouseName = "";
            string Relplace = "";
            string Relresidence = "";
            string RelrelationType = "";
            string Relname = "";
            string Relage = "";
            string RelDOFBirth = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            #region Begin Assign Values to The Variables
            SPName = "EmpBiodataPDF";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure


            string queryEsi = " select * from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and ESINominee='Y' ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(queryEsi).Result;

            string residence = ""; string place = "";





            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Husband' ";
            DataTable dthusband = Config.ExecuteReaderWithQueryAsync(query2).Result;


            if (dthusband.Rows.Count > 0)
            {
                Hname = dthusband.Rows[0]["RName"].ToString();
                Hage = dthusband.Rows[0]["age"].ToString();
                if (Hage == "0")
                {
                    Hage = "";
                }
                else
                {
                    Hage = dthusband.Rows[0]["age"].ToString();
                }
            }



            string Gender = "";

            string RelationName = "";
            if (Fname.Length > 0)
            {
                RelationName = Fname;
            }
            else if (Hname.Length > 0)
            {
                RelationName = Hname;
            }
            else
            {
                RelationName = "";
            }

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();

                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();

                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();



                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();

                email = dtEmpdetails.Rows[0]["Email"].ToString();


                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();

                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();


                CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();
                Address = dtEmpdetails.Rows[0]["CompanyAddress"].ToString();
                phno = dtEmpdetails.Rows[0]["CompanyPhone"].ToString();
                compMail = dtEmpdetails.Rows[0]["CompanyEmail"].ToString();
                Esino = dtEmpdetails.Rows[0]["ESINo"].ToString();
                EmpESIDispName = dtEmpdetails.Rows[0]["EmpESIDispName"].ToString();

                string Image1 = "";

                if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                {
                    Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                }
                else
                {

                }

                BranchOffice = dtEmpdetails.Rows[0]["BranchOffice"].ToString();
                ESICNoForms = dtEmpdetails.Rows[0]["ESICNoForms"].ToString();
                PrevCompAddress = dtEmpdetails.Rows[0]["PrevCompAddress"].ToString();
                PrevYrExp = dtEmpdetails.Rows[0]["PrevYrExp"].ToString();

                Emppresentaddress = dtEmpdetails.Rows[0]["Emppresentaddress"].ToString();
                Emppermanentaddress = dtEmpdetails.Rows[0]["Emppermanentaddress"].ToString();


                #endregion
            }

            MemoryStream ms = new MemoryStream();
            Document document = new Document(PageSize.LEGAL);
            var writer = PdfWriter.GetInstance(document, ms);
            PageEventHelper pageEventHelper = new PageEventHelper();
            writer.PageEvent = pageEventHelper;

            document.Open();
            string imagepath1 = Server.MapPath("assets/Images");


            #region  for ESI form

            PdfPTable table5 = new PdfPTable(6);
            table5.TotalWidth = 550f;
            table5.LockedWidth = true;
            float[] width3 = new float[] { 3f, 2f, 2f, 2f, 3f, 2f };
            table5.SetWidths(width3);

            PdfPCell cellspace111 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellspace111.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace111.Colspan = 6;
            cellspace111.Border = 0;
            cellspace111.MinimumHeight = 40;
            table5.AddCell(cellspace111);

            PdfPCell cellHeadId = new PdfPCell(new Phrase("ID No:", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
            cellHeadId.HorizontalAlignment = 2;
            cellHeadId.Colspan = 5;
            cellHeadId.Border = 0;
            table5.AddCell(cellHeadId);

            PdfPCell cellHeadId1 = new PdfPCell(new Phrase(Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
            cellHeadId1.HorizontalAlignment = 0;
            cellHeadId1.Colspan = 1;
            cellHeadId1.Border = 0;
            table5.AddCell(cellHeadId1);


            iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepath1 + "/Text.png");
            iTextSharp.text.Image esi = iTextSharp.text.Image.GetInstance(imagepath1 + "/ESIC-LOGO102.png");

            PdfPCell esiclogo = new PdfPCell();
            Paragraph p9 = new Paragraph();
            p9.Add(new Chunk(esi, 0, 0));
            p9.Add(new Chunk(headtext, 60, 10));
            esiclogo.AddElement(p9);
            esiclogo.HorizontalAlignment = 0;
            esiclogo.Colspan = 6;
            esiclogo.Border = 0;
            table5.AddCell(esiclogo);



            PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace.Colspan = 6;
            cellspace.Border = 0;
            table5.AddCell(cellspace);
            // cellspace111.MinimumHeight = 60;



            PdfPCell cellHead411 = new PdfPCell(new Phrase(" (A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellHead411.HorizontalAlignment = 0;
            cellHead411.Colspan = 2;
            cellHead411.MinimumHeight = 30;
            table5.AddCell(cellHead411);

            PdfPCell cellHead6 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellHead6.HorizontalAlignment = 0;
            cellHead6.Colspan = 2;
            table5.AddCell(cellHead6);

            PdfPCell cellHead511 = new PdfPCell(new Phrase(" (B) EMPLOYER'S PARTICULARS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            cellHead511.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellHead511.Colspan = 3;
            cellHead511.MinimumHeight = 20;
            table5.AddCell(cellHead511);
            // table.AddCell(cellspace);
            // table.AddCell(cellspace);


            PdfPCell cellDesign1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellDesign1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellDesign1.Colspan = 2;
            // cellDesign.Border = 0;
            table5.AddCell(cellDesign1);


            PdfPCell cellDesign11 = new PdfPCell(new Phrase("Employer's Code Number", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellDesign11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellDesign11.Colspan = 2;
            cellDesign11.MinimumHeight = 30;
            table5.AddCell(cellDesign11);

            PdfPCell cellpost11 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellpost11.HorizontalAlignment = 0;
            cellpost11.Colspan = 2;
            // cellpost1.Border = 0;
            //cellpost1.PaddingLeft = 10;
            table5.AddCell(cellpost11);


            PdfPCell cellTop33 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellTop33.HorizontalAlignment = 0;
            cellTop33.Colspan = 2;
            table5.AddCell(cellTop33);

            PdfPCell cellTop44 = new PdfPCell(new Phrase(branchesino, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellTop44.HorizontalAlignment = 1;
            cellTop44.Colspan = 2;
            cellTop44.MinimumHeight = 30;
            table5.AddCell(cellTop44);

            PdfPCell cellTop5 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellTop5.HorizontalAlignment = 0;
            cellTop5.Colspan = 2;
            table5.AddCell(cellTop5);

            PdfPCell cellInsurance = new PdfPCell(new Phrase(" 1. Insurance Number ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellInsurance.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellInsurance.Colspan = 3;
            cellInsurance.MinimumHeight = 30;
            table5.AddCell(cellInsurance);

            PdfPCell celldateofapp = new PdfPCell(new Phrase(" 6. Date of Appointment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celldateofapp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldateofapp.Colspan = 3;
            celldateofapp.MinimumHeight = 30;
            table5.AddCell(celldateofapp);

            PdfPCell cellInsurance1 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellInsurance1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellInsurance1.Colspan = 3;
            cellInsurance1.MinimumHeight = 30;
            table5.AddCell(cellInsurance1);

            PdfPCell celldateofapp1 = new PdfPCell(new Phrase(date, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celldateofapp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celldateofapp1.Colspan = 3;
            celldateofapp.MinimumHeight = 30;
            table5.AddCell(celldateofapp1);


            PdfPCell cellname = new PdfPCell(new Phrase(" 2. Name (in block letters)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellname.Colspan = 3;
            cellname.MinimumHeight = 30;
            table5.AddCell(cellname);

            PdfPCell celladdress = new PdfPCell(new Phrase(" 7. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celladdress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celladdress.Colspan = 3;
            celladdress.MinimumHeight = 30;
            table5.AddCell(celladdress);

            PdfPCell cellname1 = new PdfPCell(new Phrase(name, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellname1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellname1.Colspan = 3;
            cellname1.MinimumHeight = 30;
            table5.AddCell(cellname1);

            PdfPCell celladdress1 = new PdfPCell(new Phrase(dateofbirth, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celladdress1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celladdress1.Colspan = 3;
            celladdress1.MinimumHeight = 30;
            table5.AddCell(celladdress1);

            PdfPCell cellfather = new PdfPCell(new Phrase(" 3. Father's/Husband's Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellfather.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellfather.Colspan = 3;
            cellfather.MinimumHeight = 30;
            table5.AddCell(cellfather);

            PdfPCell celldtofbirth = new PdfPCell(new Phrase(" 8. Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celldtofbirth.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldtofbirth.Colspan = 0;
            celldtofbirth.MinimumHeight = 30;
            table5.AddCell(celldtofbirth);

            PdfPCell cellmarital = new PdfPCell(new Phrase(" 9. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellmarital.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellmarital.Colspan = 2;
            cellmarital.MinimumHeight = 30;
            table5.AddCell(cellmarital);


            if (FatherName.Length > 0)
            {
                RelationName = FatherName;
            }
            else if (SpouseName.Length > 0)
            {
                RelationName = SpouseName;
            }
            else if (FSpouseName.Length > 0)
            {
                RelationName = FSpouseName;
            }
            else
            {
                RelationName = "";
            }

            PdfPCell cellfather1 = new PdfPCell(new Phrase(RelationName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellfather1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellfather1.Colspan = 3;
            cellfather1.MinimumHeight = 30;
            table5.AddCell(cellfather1);

            PdfPCell celldtofbirth1 = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celldtofbirth1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celldtofbirth1.Colspan = 0;
            celldtofbirth1.MinimumHeight = 30;
            table5.AddCell(celldtofbirth1);


            PdfPCell cellmarried = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellmarried.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellmarried.Colspan = 2;
            cellmarried.MinimumHeight = 30;
            table5.AddCell(cellmarried);



            PdfPCell cellpresent = new PdfPCell(new Phrase(" 4. Present Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellpresent.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpresent.Colspan = 3;
            cellpresent.MinimumHeight = 30;
            table5.AddCell(cellpresent);

            PdfPCell cellpermanent = new PdfPCell(new Phrase(" 10. Address of the Employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellpermanent.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpermanent.Colspan = 3;
            cellpermanent.MinimumHeight = 30;
            table5.AddCell(cellpermanent);

            #region Present address String array

            string[] PrAdress = new string[8];
            if (prLmark.Length > 0)
            {
                PrAdress[0] = "Landmark: " + prLmark + ", ";
            }
            else
            {
                PrAdress[0] = "";
            }
            if (prTown.Length > 0)
            {
                PrAdress[1] = "Vill: " + prTown + ", ";
            }
            else
            {
                PrAdress[1] = "";
            }

            if (prPostOffice.Length > 0)
            {
                PrAdress[2] = "Postoffice: " + prPostOffice + ", ";
            }
            else
            {
                PrAdress[2] = "";
            }
            if (prTaluka.Length > 0)
            {
                PrAdress[3] = "Taluka: " + prTaluka + ", ";
            }
            else
            {
                PrAdress[3] = "";
            }
            if (prPoliceStation.Length > 0)
            {
                PrAdress[4] = "Policestation: " + prPoliceStation + ", ";
            }
            else
            {
                PrAdress[4] = "";
            }
            if (prcity.Length > 0)
            {
                PrAdress[5] = "City: " + prcity + ", ";
            }
            else
            {
                PrAdress[5] = "";
            }

            if (prState.Length > 0)
            {
                PrAdress[6] = "State: " + prState + " ";
            }
            else
            {
                PrAdress[6] = ".";
            }


            if (prPincode.Length > 0)
            {
                PrAdress[7] = "Pincode:" + prPincode + ".";
            }
            else
            {
                PrAdress[7] = "";
            }

            string Address1 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address1 += PrAdress[i];
            }


            #endregion

            PdfPCell cellpresent1 = new PdfPCell(new Phrase(Emppresentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellpresent1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpresent1.Colspan = 3;
            cellpresent1.MinimumHeight = 70;
            table5.AddCell(cellpresent1);

            PdfPCell cellpermanent1 = new PdfPCell(new Phrase(CompanyName + " " + Address, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellpermanent1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellpermanent1.Colspan = 3;
            cellpermanent1.MinimumHeight = 70;
            table5.AddCell(cellpermanent1);


            PdfPCell celltel = new PdfPCell(new Phrase("Telephone", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celltel.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celltel.Colspan = 3;
            celltel.MinimumHeight = 30;
            table5.AddCell(celltel);

            PdfPCell celltel3 = new PdfPCell(new Phrase("Telephone  " + phno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celltel3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celltel3.Colspan = 3;
            celltel3.MinimumHeight = 30;
            table5.AddCell(celltel3);


            PdfPCell mobile1 = new PdfPCell(new Phrase("Mobile  " + contactno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            mobile1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            mobile1.Colspan = 3;
            mobile1.MinimumHeight = 30;
            table5.AddCell(mobile1);

            PdfPCell mobile3 = new PdfPCell(new Phrase("Mobile ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            mobile3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            mobile3.Colspan = 3;
            mobile3.MinimumHeight = 30;
            table5.AddCell(mobile3);


            PdfPCell cellemail = new PdfPCell(new Phrase("Email Address  " + email, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellemail.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellemail.Colspan = 3;
            cellemail.MinimumHeight = 30;
            table5.AddCell(cellemail);

            PdfPCell cellemail3 = new PdfPCell(new Phrase("Email Address  " + compMail, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellemail3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellemail3.Colspan = 3;
            cellemail3.MinimumHeight = 30;
            table5.AddCell(cellemail3);


            PdfPCell cellperm2 = new PdfPCell(new Phrase(" 5. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellperm2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellperm2.Colspan = 3;
            cellperm2.MinimumHeight = 30;
            table5.AddCell(cellperm2);


            PdfPCell cellprevemp = new PdfPCell(new Phrase(" 11. Previous Employment, if any", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellprevemp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellprevemp.Colspan = 3;
            cellprevemp.MinimumHeight = 30;
            table5.AddCell(cellprevemp);

            #region Permanent address String array

            string[] PeAdress = new string[8];

            if (pelmark.Length > 0)
            {
                PeAdress[0] = pelmark + ", ";
            }
            else
            {
                PeAdress[0] = "";
            }
            if (peTown.Length > 0)
            {
                PeAdress[1] = "Vill:" + peTown + ", ";
            }
            else
            {
                PeAdress[1] = "";
            }

            if (pePostOffice.Length > 0)
            {
                PeAdress[2] = "Postoffice:" + pePostOffice + ", ";
            }
            else
            {
                PeAdress[2] = "";
            }
            if (peTaluka.Length > 0)
            {
                PeAdress[3] = "Taluka:" + peTaluka + ", ";
            }
            else
            {
                PeAdress[3] = " ";
            }
            if (pePoliceStation.Length > 0)
            {
                PeAdress[4] = "Policestation:" + pePoliceStation + ", ";
            }
            else
            {
                PeAdress[4] = " ";
            }
            if (pecity.Length > 0)
            {
                PeAdress[5] = "City:" + pecity + ", ";
            }
            else
            {
                PeAdress[5] = " ";
            }

            if (peState.Length > 0)
            {
                PeAdress[6] = "State:" + peState + " ";
            }
            else
            {
                PeAdress[6] = ".";
            }


            if (pePincode.Length > 0)
            {
                PeAdress[7] = "Pincode:" + pePincode + ".";
            }
            else
            {
                PeAdress[7] = "";
            }

            string Address2 = string.Empty;

            for (int i = 0; i < 8; i++)
            {
                Address2 += PeAdress[i];
            }


            #endregion

            PdfPCell cellperm4 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellperm4.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellperm4.Colspan = 3;
            cellperm4.MinimumHeight = 40;
            table5.AddCell(cellperm4);


            PdfPCell cellprevemp1 = new PdfPCell(new Phrase(PrevYrExp, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellprevemp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellprevemp1.Colspan = 3;
            cellprevemp1.MinimumHeight = 40;
            table5.AddCell(cellprevemp1);


            PdfPCell cellbranchoff = new PdfPCell(new Phrase(" BRANCH OFFICE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
            cellbranchoff.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellbranchoff.Colspan = 1;
            cellbranchoff.MinimumHeight = 30;
            table5.AddCell(cellbranchoff);

            PdfPCell cellbranchoff1 = new PdfPCell(new Phrase(BranchOffice, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            cellbranchoff1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            cellbranchoff1.Colspan = 2;
            cellbranchoff1.MinimumHeight = 30;
            table5.AddCell(cellbranchoff1);

            PdfPCell celldispensary = new PdfPCell(new Phrase(" DISPENSARY", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
            celldispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldispensary.Colspan = 1;
            celldispensary.MinimumHeight = 30;
            table5.AddCell(celldispensary);

            PdfPCell celldispensary1 = new PdfPCell(new Phrase(EmpESIDispName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
            celldispensary1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldispensary1.Colspan = 2;
            celldispensary1.MinimumHeight = 30;
            table5.AddCell(celldispensary1);

            PdfPCell celldesc = new PdfPCell(new Phrase("(C) DETAILS OF NOMINEE U/S 71 OF ESI ACT 1948/RULE 56(2) OF ESI (CENTRAL) RULES, 1950 FOR PAYMENT OF CASH BENEFIT IN THE EVENT OF DEATH.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            celldesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldesc.Colspan = 6;
            celldesc.MinimumHeight = 30;
            table5.AddCell(celldesc);

            PdfPCell cellname3 = new PdfPCell(new Phrase(" Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellname3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellname3.Colspan = 2;
            cellname3.MinimumHeight = 30;
            table5.AddCell(cellname3);

            PdfPCell cellrelp = new PdfPCell(new Phrase(" Relationship", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellrelp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellrelp.Colspan = 0;
            cellrelp.MinimumHeight = 30;
            table5.AddCell(cellrelp);

            PdfPCell celladdr = new PdfPCell(new Phrase(" Address, Mobile & Email", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            celladdr.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            celladdr.Colspan = 3;
            celladdr.MinimumHeight = 30;
            table5.AddCell(celladdr);




            if (dtesi.Rows.Count > 0)
            {
                for (int i = 0; i < dtesi.Rows.Count; i++)
                {
                    relationName = dtesi.Rows[i]["RName"].ToString();

                    PdfPCell cellname4 = new PdfPCell(new Phrase(relationName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellname4.Colspan = 2;
                    cellname4.MinimumHeight = 30;
                    table5.AddCell(cellname4);

                    relationType = dtesi.Rows[i]["RType"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellrelp1 = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellrelp1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellrelp1.Colspan = 0;
                        cellrelp1.MinimumHeight = 30;
                        table5.AddCell(cellrelp1);


                    }
                    else
                    {
                        PdfPCell cellRType1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType1.HorizontalAlignment = 1;
                        cellRType1.Colspan = 0;
                        table5.AddCell(cellRType1);


                    }


                    RPlace = dtEmpdetails.Rows[i]["RPlace"].ToString();


                    PdfPCell celladdr1 = new PdfPCell(new Phrase(RPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celladdr1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    celladdr1.Colspan = 3;
                    celladdr1.MinimumHeight = 30;
                    table5.AddCell(celladdr1);
                }
            }

            document.Add(table5);

            document.NewPage();

            PdfPTable table6 = new PdfPTable(6);
            table6.TotalWidth = 550f;
            table6.LockedWidth = true;
            float[] width4 = new float[] { 3f, 2f, 2f, 2f, 3f, 2f };
            table6.SetWidths(width4);

            PdfPCell celldescemp = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            celldescemp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldescemp.Colspan = 6;
            celldescemp.Border = 0;
            celldescemp.MinimumHeight = 60;
            table6.AddCell(celldescemp);


            PdfPCell celldesc2 = new PdfPCell(new Phrase("(D) FAMILY * PARTICULARS OF INSURED PERSON", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
            celldesc2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
            celldesc2.Colspan = 6;
            celldesc2.MinimumHeight = 30;
            table6.AddCell(celldesc2);

            PdfPCell cellrelname = new PdfPCell(new Phrase("Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellrelname.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellrelname.Colspan = 2;
            cellrelname.MinimumHeight = 30;
            table6.AddCell(cellrelname);

            PdfPCell cellreldob = new PdfPCell(new Phrase("Age", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellreldob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellreldob.Colspan = 0;
            cellreldob.MinimumHeight = 30;
            table6.AddCell(cellreldob);

            PdfPCell cellreltype = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellreltype.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellreltype.Colspan = 0;
            cellreltype.MinimumHeight = 30;
            table6.AddCell(cellreltype);

            PdfPCell cellres = new PdfPCell(new Phrase("Whether residing with him/her ?", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellres.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellres.Colspan = 0;
            cellres.MinimumHeight = 30;
            table6.AddCell(cellres);

            PdfPCell cellrelplace = new PdfPCell(new Phrase("If 'No', Place of Residence", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellrelplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellrelplace.Colspan = 0;
            cellrelplace.MinimumHeight = 30;
            table6.AddCell(cellrelplace);


            if (dtEmpdetails.Rows.Count > 0)
            {
                for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                {
                    Relname = dtEmpdetails.Rows[i]["RName"].ToString();
                    Relage = dtEmpdetails.Rows[i]["age"].ToString();
                    RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();
                    if (Relage == "0")
                    {
                        if (RelDOFBirth == "01/01/1900")
                        {
                            Relage = "";
                        }
                        else
                        {
                            Relage = RelDOFBirth;
                        }
                    }
                    else if (Relage.Length > 0 && Relage != "0")
                    {
                        Relage = dtEmpdetails.Rows[i]["age"].ToString();
                    }
                    else
                    {
                        Relage = "";
                    }

                    PdfPCell cellRName = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellRName.HorizontalAlignment = 1;
                    cellRName.Colspan = 2;
                    table6.AddCell(cellRName);


                    PdfPCell cellreldob1 = new PdfPCell(new Phrase(Relage, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellreldob1.Colspan = 0;
                    cellreldob1.MinimumHeight = 30;
                    table6.AddCell(cellreldob1);



                    RelrelationType = dtEmpdetails.Rows[i]["RType"].ToString();
                    if (relationType != "--Select--")
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase(RelrelationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 0;
                        table6.AddCell(cellRType);
                    }
                    else
                    {
                        PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRType.HorizontalAlignment = 1;
                        cellRType.Colspan = 0;
                        table6.AddCell(cellRType);


                    }
                    Relresidence = dtEmpdetails.Rows[i]["RResidence"].ToString();
                    if (Relresidence != "--Select--")
                    {
                        PdfPCell cellres1 = new PdfPCell(new Phrase(Relresidence, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellres1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellres1.Colspan = 0;
                        cellres1.MinimumHeight = 30;
                        table6.AddCell(cellres1);
                    }
                    else
                    {
                        PdfPCell cellres1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellres1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                        cellres1.Colspan = 0;
                        cellres1.MinimumHeight = 30;
                        table6.AddCell(cellres1);

                    }
                    Relplace = dtEmpdetails.Rows[i]["RPlace"].ToString();

                    PdfPCell cellrelplace1 = new PdfPCell(new Phrase(Relplace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellrelplace1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellrelplace1.Colspan = 0;
                    cellrelplace1.MinimumHeight = 30;
                    table6.AddCell(cellrelplace1);
                }
            }





            document.Add(table6);




            PdfPTable table22 = new PdfPTable(2);
            table22.TotalWidth = 500f;
            table22.LockedWidth = true;
            float[] width22 = new float[] { 5f, 2f };
            table22.SetWidths(width22);

            PdfPCell cellspace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellspace3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace3.Colspan = 2;
            cellspace3.Border = 0;
            table22.AddCell(cellspace3);

            PdfPCell cellName22 = new PdfPCell(new Phrase("                      I hereby declare that the particulars given by me are correct to the best of my knowledge and belief.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
            cellName22.HorizontalAlignment = 0;
            cellName22.Colspan = 2;
            cellName22.Border = 0;
            cellName22.PaddingTop = 40;
            table22.AddCell(cellName22);


            PdfPCell cellName42 = new PdfPCell(new Phrase("                      I undertake to intimate the Corporation any changes in the membership of my family within 15 days of such change. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
            cellName42.HorizontalAlignment = 0;
            cellName42.Colspan = 2;
            cellName42.Border = 0;
            cellName42.PaddingTop = 5;
            table22.AddCell(cellName42);

            PdfPCell cellsp4 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellsp4.HorizontalAlignment = 0;
            cellsp4.Colspan = 2;
            cellsp4.Border = 0;
            cellsp4.PaddingTop = 5;
            table22.AddCell(cellsp4);

            PdfContentByte cb = writer.DirectContent;
            cb.SetLineWidth(2.0f);   // Make a bit thicker than 1.0 default
            cb.SetGrayStroke(0.95f); // 1 = black, 0 = white
            cb.MoveTo(20, 30);
            cb.LineTo(400, 30);
            cb.Stroke();

            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);

            PdfPCell cellName31 = new PdfPCell(new Phrase("Counter Signature by the Employer with seal \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLDITALIC, BaseColor.BLACK)));
            cellName31.HorizontalAlignment = 0;
            cellName31.Colspan = 0;
            cellName31.Border = 0;
            cellName31.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellName31.BorderWidthBottom = 1f;
            cellName31.PaddingTop = 60;
            table22.AddCell(cellName31);

            PdfPCell cellspace41 = new PdfPCell(new Phrase("Signature / T.I.of IP \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLDITALIC, BaseColor.BLACK)));
            cellspace41.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
            cellspace41.Colspan = 0;
            cellspace41.Border = 0;
            cellspace41.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellspace41.BorderWidthBottom = 1f;
            cellspace41.PaddingTop = 60;
            cellspace41.PaddingLeft = 10;
            table22.AddCell(cellspace41);


            PdfPCell celloff = new PdfPCell(new Phrase("For Office use :-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
            celloff.HorizontalAlignment = 0;
            celloff.Colspan = 2;
            celloff.Border = 0;
            celloff.PaddingTop = 5;
            table22.AddCell(celloff);

            PdfPCell cellauth = new PdfPCell(new Phrase("Authentication by ESIC Branch Manager", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
            cellauth.HorizontalAlignment = 0;
            cellauth.Colspan = 2;
            cellauth.Border = 0;
            cellauth.PaddingTop = 5;
            table22.AddCell(cellauth);

            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);
            table22.AddCell(cellspace);


            PdfPCell cellseal = new PdfPCell(new Phrase("Seal \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK)));
            cellseal.HorizontalAlignment = 0;
            cellseal.Colspan = 0;
            cellseal.Border = 0;
            cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellseal.BorderWidthBottom = 1f;
            cellseal.PaddingTop = 70;
            table22.AddCell(cellseal);



            PdfPCell cellseal2 = new PdfPCell(new Phrase("Signature \n\n", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK)));
            cellseal2.HorizontalAlignment = 1;
            cellseal2.Colspan = 0;
            cellseal2.Border = 0;
            cellseal2.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
            cellseal2.BorderWidthBottom = 1f;
            cellseal2.PaddingTop = 70;
            table22.AddCell(cellseal2);

            table22.AddCell(cellspace);


            PdfPCell cellfamilytc = new PdfPCell(new Phrase("* Family, as defined under section 2(11) of the ESI Act, 1948, includes the following persons :-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
            cellfamilytc.HorizontalAlignment = 0;
            cellfamilytc.Colspan = 2;
            cellfamilytc.Border = 0;
            cellfamilytc.PaddingTop = 5;
            cellfamilytc.PaddingLeft = 20;
            table22.AddCell(cellfamilytc);

            Font fstyle = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);

            PdfPCell cellfamilytc1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK)));
            Paragraph pt1 = new Paragraph("1)     Spouse of the insured person (Wife or Husband) \n2)     Minor dependant son (legitimate or adopted) \n3)     Minor dependant daughter (legitimate or adopted) \n4)     Son or daughter till he or she attains 21 years of age, if wholly dependant and receiving education \n5)     Daughter,if wholly dependant and unmarried \n6)     Infirm child, if wholly dependant \n7)     Dependant parents", fstyle);
            cellfamilytc1.AddElement(pt1);
            cellfamilytc1.HorizontalAlignment = 0;
            cellfamilytc1.Colspan = 2;
            cellfamilytc1.Border = 0;
            cellfamilytc1.PaddingTop = 5;
            cellfamilytc1.PaddingLeft = 20;
            table22.AddCell(cellfamilytc1);

            document.Add(table22);

            #endregion for ESI Form

            string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "ESI.pdf";

            document.Close();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment;filename=" + filename);
            Response.Buffer = true;
            Response.Clear();
            Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
            Response.OutputStream.Flush();
            Response.End();
        }

        protected void btnApplForm_Click(object sender, EventArgs e)
        {
            int Fontsize = 11;

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";



            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Gender = "";


            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code As on [31-05-2014]




            #region Begin Variable Declaration
            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                string EmpGender = "";

                if (Gender == "True")
                {
                    EmpGender = "Male";
                }
                if (Gender == "False")
                {
                    EmpGender = "Female";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                PdfWriter writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

                #region Headings of the Pdf



                PdfPTable table = new PdfPTable(2);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                float[] width = new float[] { 3f, 3f };
                table.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 2;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;
                table.AddCell(cellspace);


                PdfPCell cellHead = new PdfPCell(new Phrase("LETTER OF APPOINTMENT", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 2;
                cellHead.Border = 0;
                cellHead.PaddingTop = 40;
                table.AddCell(cellHead);

                table.AddCell(cellspace);


                PdfPCell cellHead4 = new PdfPCell(new Phrase("Date : _____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 2;
                cellHead4.Border = 0;
                cellHead4.PaddingTop = 20;
                cellHead4.Colspan = 2;
                table.AddCell(cellHead4);

                table.AddCell(cellspace);


                PdfPCell cellHead6 = new PdfPCell(new Phrase("To ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead6.HorizontalAlignment = 0;
                cellHead6.Border = 0;
                cellHead6.Colspan = 2;
                table.AddCell(cellHead6);

                table.AddCell(cellspace);


                PdfPCell cellHead5 = new PdfPCell(new Phrase("Mr  ____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead5.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellHead5.Colspan = 2;
                cellHead5.Border = 0;
                table.AddCell(cellHead5);

                table.AddCell(cellspace);


                PdfPCell cellDesign1 = new PdfPCell(new Phrase("S/o  ____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellDesign1.Colspan = 2;
                cellDesign1.Border = 0;
                table.AddCell(cellDesign1);

                table.AddCell(cellspace);

                PdfPCell cellDesign = new PdfPCell(new Phrase("R/o  ____________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellDesign.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellDesign.Colspan = 2;
                cellDesign.Border = 0;
                table.AddCell(cellDesign);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellpost1 = new PdfPCell(new Phrase("Ref : Your Application dated .......... with Biodata for the post Contract Labour/Security Officer on contract  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellpost1.HorizontalAlignment = 0;
                cellpost1.Colspan = 2;
                cellpost1.Border = 0;
                //cellpost1.PaddingLeft = 10;
                table.AddCell(cellpost1);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);

                PdfPCell cellTop3 = new PdfPCell(new Phrase("With reference to your application along with Bio data cited above seeking employment in our Organization / establishment and in consequence to your interview in person with us held on ____________  at ___________ A.M / P.M in our office and on accepting the Terms and Conditions of employment / appointment by you. We are pleased to inform you that your appointed to the post Security Lady Searcher as Contract Labour with effect from _____________ in our organization.    ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellTop3.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                cellTop3.SetLeading(0.0f, 1.5f);
                cellTop3.Colspan = 2;
                cellTop3.Border = 0;
                table.AddCell(cellTop3);


                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellTop4 = new PdfPCell(new Phrase("You will be posted to any factory/ establishment on reporting to duty in the state of Telangana. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellTop4.HorizontalAlignment = 0;
                cellTop4.Colspan = 2;
                cellTop4.Border = 0;
                table.AddCell(cellTop4);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellTop5 = new PdfPCell(new Phrase("Your monthly Salary at the consolidated raye is fixed @ Rs__________ /- per month inclusive all.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellTop5.HorizontalAlignment = 0;
                cellTop5.Colspan = 2;
                cellTop5.Border = 0;
                table.AddCell(cellTop5);

                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);
                table.AddCell(cellspace);


                PdfPCell cellInsurance = new PdfPCell(new Phrase("Basing on your satisfactory performance,annual grade increment will be granted @ Rs_________ /- in future. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                cellInsurance.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                cellInsurance.Colspan = 2;
                cellInsurance.Border = 0;
                table.AddCell(cellInsurance);

                table.AddCell(cellspace);
                table.AddCell(cellspace);



                PdfPCell celldateofapp = new PdfPCell(new Phrase("Signature of the Candidate", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldateofapp.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                celldateofapp.Colspan = 0;
                celldateofapp.PaddingTop = 50;
                celldateofapp.Border = 0;
                table.AddCell(celldateofapp);

                PdfPCell cellInsurance1 = new PdfPCell(new Phrase("Authorised Signatory with Seal ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellInsurance1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                cellInsurance1.Colspan = 0;
                cellInsurance1.PaddingTop = 50;
                cellInsurance1.Border = 0;
                table.AddCell(cellInsurance1);

                table.AddCell(cellspace);


                PdfPCell celldateofapp1 = new PdfPCell(new Phrase("Signature : _______________ ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                celldateofapp1.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                celldateofapp1.Colspan = 2;
                celldateofapp1.PaddingTop = 40;
                celldateofapp1.Border = 0;
                table.AddCell(celldateofapp1);



                document.Add(table);

                #endregion Headings of the Pdf

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "AppointmentLetter.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



        }

        protected void Buttonform_Click(object sender, EventArgs e)
        {

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");

                PdfPTable table = new PdfPTable(6);
                table.TotalWidth = 500f;
                table.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                table.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                celllogoHead.HorizontalAlignment = 2;
                celllogoHead.Colspan = 3;
                celllogoHead.Border = 0;
                table.AddCell(celllogoHead);

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XIV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 0;
                cellHead.Colspan = 3;
                cellHead.Border = 0;
                cellHead.PaddingLeft = -50;
                table.AddCell(cellHead);

                PdfPCell cellrule = new PdfPCell(new Phrase("(see rule 76) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellrule.HorizontalAlignment = 0;
                cellrule.Colspan = 6;
                cellrule.Border = 0;
                cellrule.PaddingLeft = 210;
                table.AddCell(cellrule);

                PdfPCell cellHead4 = new PdfPCell(new Phrase("EMPLOYMENT CARD", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellHead4.HorizontalAlignment = 1;
                cellHead4.Colspan = 6;
                cellHead4.Border = 0;
                table.AddCell(cellHead4);


                document.Add(table);




                PdfPTable table2 = new PdfPTable(2);
                table2.TotalWidth = 500f;
                table2.LockedWidth = true;
                float[] width1 = new float[] { 2f, 2f };
                table2.SetWidths(width1);

                PdfPCell cellspace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace3.Colspan = 2;
                cellspace3.Border = 0;
                table2.AddCell(cellspace3);
                //table2.AddCell(cellspace3);


                PdfPCell cellName2 = new PdfPCell(new Phrase("Name and address of constractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName2.HorizontalAlignment = 0;
                cellName2.Colspan = 0;
                cellName2.Border = 0;
                cellName2.PaddingTop = 40;
                cellName2.PaddingBottom = 40;
                cellName2.BorderWidthLeft = 0.5f;
                cellName2.BorderWidthRight = 0.2f;
                cellName2.BorderWidthTop = 0.5f;
                cellName2.BorderWidthBottom = 0.5f;
                cellName2.PaddingLeft = 10;
                table2.AddCell(cellName2);


                PdfPCell cellName3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName3.HorizontalAlignment = 0;
                cellName3.Colspan = 0;
                cellName3.Border = 0;
                cellName3.PaddingTop = 40;
                cellName3.PaddingBottom = 40;
                cellName3.BorderWidthLeft = 0;
                cellName3.BorderWidthRight = 0.9f;
                cellName3.BorderWidthTop = 0.5f;
                cellName3.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName3);

                PdfPCell cellName11 = new PdfPCell(new Phrase("Name and address of principal Employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName11.HorizontalAlignment = 0;
                cellName11.Colspan = 0;
                cellName11.Border = 0;
                cellName11.PaddingTop = 30;
                cellName11.PaddingBottom = 30;
                cellName11.BorderWidthLeft = 0.5f;
                cellName11.BorderWidthRight = 0.2f;
                cellName11.BorderWidthTop = 0;
                cellName11.BorderWidthBottom = 0.5f;
                cellName11.PaddingLeft = 10;
                table2.AddCell(cellName11);


                PdfPCell cellName10 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName10.HorizontalAlignment = 0;
                cellName10.Colspan = 0;
                cellName10.Border = 0;
                cellName10.PaddingTop = 30;
                cellName10.PaddingBottom = 30;
                cellName10.BorderWidthLeft = 0;
                cellName10.BorderWidthRight = 0.9f;
                cellName10.BorderWidthTop = 0;
                cellName10.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName10);


                PdfPCell cellName13 = new PdfPCell(new Phrase("Name and address of Establishment    where work carried on", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName13.HorizontalAlignment = 0;
                cellName13.Colspan = 0;
                cellName13.Border = 0;
                cellName13.PaddingTop = 30;
                cellName13.PaddingBottom = 30;
                cellName13.BorderWidthLeft = 0.5f;
                cellName13.BorderWidthRight = 0.2f;
                cellName13.BorderWidthTop = 0;
                cellName13.BorderWidthBottom = 0.5f;
                cellName13.PaddingLeft = 10;
                table2.AddCell(cellName13);


                PdfPCell cellName12 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName12.HorizontalAlignment = 0;
                cellName12.Colspan = 0;
                cellName12.Border = 0;
                cellName12.PaddingTop = 30;
                cellName12.PaddingBottom = 30;
                cellName12.BorderWidthLeft = 0;
                cellName12.BorderWidthRight = 0.9f;
                cellName12.BorderWidthTop = 0;
                cellName12.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName12);


                PdfPCell cellName14 = new PdfPCell(new Phrase("Nature of work and location of work/Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName14.HorizontalAlignment = 0;
                cellName14.Colspan = 0;
                cellName14.Border = 0;
                cellName14.PaddingTop = 30;
                cellName14.PaddingBottom = 30;
                cellName14.BorderWidthLeft = 0.5f;
                cellName14.BorderWidthRight = 0.2f;
                cellName14.BorderWidthTop = 0;
                cellName14.BorderWidthBottom = 0.5f;
                cellName14.PaddingLeft = 10;
                table2.AddCell(cellName14);


                PdfPCell cellName15 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName15.HorizontalAlignment = 0;
                cellName15.Colspan = 0;
                cellName15.Border = 0;
                cellName15.PaddingTop = 30;
                cellName15.PaddingBottom = 30;
                cellName15.BorderWidthLeft = 0;
                cellName15.BorderWidthRight = 0.9f;
                cellName15.BorderWidthTop = 0;
                cellName15.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName15);


                PdfPCell cellName16 = new PdfPCell(new Phrase("1.   Name of the Workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName16.HorizontalAlignment = 0;
                cellName16.Colspan = 0;
                cellName16.Border = 0;
                cellName16.PaddingTop = 20;
                cellName16.PaddingBottom = 20;
                cellName16.BorderWidthLeft = 0.5f;
                cellName16.BorderWidthRight = 0.2f;
                cellName16.BorderWidthTop = 0;
                cellName16.BorderWidthBottom = 0.5f;
                cellName16.PaddingLeft = 10;
                table2.AddCell(cellName16);

                PdfPCell cellName17 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName17.HorizontalAlignment = 0;
                cellName17.Colspan = 0;
                cellName17.Border = 0;
                cellName17.PaddingTop = 20;
                cellName17.PaddingBottom = 20;
                cellName17.BorderWidthLeft = 0;
                cellName17.BorderWidthRight = 0.9f;
                cellName17.BorderWidthTop = 0;
                cellName17.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName17);


                PdfPCell cellName19 = new PdfPCell(new Phrase("2.   SL.No in the register of Workmen employed", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName19.HorizontalAlignment = 0;
                cellName19.Colspan = 0;
                cellName19.Border = 0;
                cellName19.PaddingTop = 20;
                cellName19.PaddingBottom = 20;
                cellName19.BorderWidthLeft = 0.5f;
                cellName19.BorderWidthRight = 0.2f;
                cellName19.BorderWidthTop = 0;
                cellName19.BorderWidthBottom = 0.5f;
                cellName19.PaddingLeft = 10;
                table2.AddCell(cellName19);


                PdfPCell cellName18 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName18.HorizontalAlignment = 0;
                cellName18.Colspan = 0;
                cellName18.Border = 0;
                cellName18.PaddingTop = 20;
                cellName18.PaddingBottom = 20;
                cellName18.BorderWidthLeft = 0;
                cellName18.BorderWidthRight = 0.9f;
                cellName18.BorderWidthTop = 0;
                cellName18.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName18);


                PdfPCell cellName21 = new PdfPCell(new Phrase("3.   Nature of Employment/Designation", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName21.HorizontalAlignment = 0;
                cellName21.Colspan = 0;
                cellName21.Border = 0;
                cellName21.PaddingTop = 20;
                cellName21.PaddingBottom = 20;
                cellName21.BorderWidthLeft = 0.5f;
                cellName21.BorderWidthRight = 0.2f;
                cellName21.BorderWidthTop = 0;
                cellName21.BorderWidthBottom = 0.5f;
                cellName21.PaddingLeft = 10;
                table2.AddCell(cellName21);


                PdfPCell cellName20 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName20.HorizontalAlignment = 0;
                cellName20.Colspan = 0;
                cellName20.Border = 0;
                cellName20.PaddingTop = 20;
                cellName20.PaddingBottom = 20;
                cellName20.BorderWidthLeft = 0;
                cellName20.BorderWidthRight = 0.9f;
                cellName20.BorderWidthTop = 0;
                cellName20.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName20);


                PdfPCell cellName22 = new PdfPCell(new Phrase("4.  Wage Rate (With Particulars of unit in case of piece work)   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName22.HorizontalAlignment = 0;
                cellName22.Colspan = 0;
                cellName22.Border = 0;
                cellName22.PaddingTop = 20;
                cellName22.PaddingBottom = 20;
                cellName22.BorderWidthLeft = 0.5f;
                cellName22.BorderWidthRight = 0.2f;
                cellName22.BorderWidthTop = 0;
                cellName22.BorderWidthBottom = 0.5f;
                cellName22.PaddingLeft = 10;
                table2.AddCell(cellName22);


                PdfPCell cellName29 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName29.HorizontalAlignment = 0;
                cellName29.Colspan = 0;
                cellName29.Border = 0;
                cellName29.PaddingTop = 20;
                cellName29.PaddingBottom = 20;
                cellName29.BorderWidthLeft = 0;
                cellName29.BorderWidthRight = 0.9f;
                cellName29.BorderWidthTop = 0;
                cellName29.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName29);


                PdfPCell cellName24 = new PdfPCell(new Phrase("5.  Wage period   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName24.HorizontalAlignment = 0;
                cellName24.Colspan = 0;
                cellName24.Border = 0;
                cellName24.PaddingTop = 20;
                cellName24.PaddingBottom = 20;
                cellName24.BorderWidthLeft = 0.5f;
                cellName24.BorderWidthRight = 0.2f;
                cellName24.BorderWidthTop = 0;
                cellName24.BorderWidthBottom = 0.5f;
                cellName24.PaddingLeft = 10;
                table2.AddCell(cellName24);


                PdfPCell cellName25 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName25.HorizontalAlignment = 0;
                cellName25.Colspan = 0;
                cellName25.Border = 0;
                cellName25.PaddingTop = 20;
                cellName25.PaddingBottom = 20;
                cellName25.BorderWidthLeft = 0;
                cellName25.BorderWidthRight = 0.9f;
                cellName25.BorderWidthTop = 0f;
                cellName25.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName25);


                PdfPCell cellName26 = new PdfPCell(new Phrase("6.  Tenure of Employment (DOJ)   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName26.HorizontalAlignment = 0;
                cellName26.Colspan = 0;
                cellName26.Border = 0;
                cellName26.PaddingTop = 20;
                cellName26.PaddingBottom = 20;
                cellName26.BorderWidthLeft = 0.5f;
                cellName26.BorderWidthRight = 0.2f;
                cellName26.BorderWidthTop = 0;
                cellName26.BorderWidthBottom = 0.5f;
                cellName26.PaddingLeft = 10;
                table2.AddCell(cellName26);


                PdfPCell cellName27 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName27.HorizontalAlignment = 0;
                cellName27.Colspan = 0;
                cellName27.Border = 0;
                cellName27.PaddingTop = 20;
                cellName27.PaddingBottom = 20;
                cellName27.BorderWidthLeft = 0;
                cellName27.BorderWidthRight = 0.9f;
                cellName27.BorderWidthTop = 0;
                cellName27.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName27);


                PdfPCell cellName28 = new PdfPCell(new Phrase("7.  Remarks   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellName28.HorizontalAlignment = 0;
                cellName28.Colspan = 0;
                cellName28.Border = 0;
                cellName28.PaddingTop = 20;
                cellName28.PaddingBottom = 20;
                cellName28.BorderWidthRight = 0.2f;
                cellName28.BorderWidthLeft = 0.5f;
                cellName28.BorderWidthTop = 0;
                cellName28.BorderWidthBottom = 0.5f;
                cellName28.PaddingLeft = 10;
                table2.AddCell(cellName28);


                PdfPCell cellName291 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName291.HorizontalAlignment = 0;
                cellName291.Colspan = 0;
                cellName291.Border = 0;
                cellName291.PaddingTop = 20;
                cellName291.PaddingBottom = 20;
                cellName291.BorderWidthRight = 0.9f;
                cellName291.BorderWidthTop = 0;
                cellName291.BorderWidthBottom = 0.5f;
                table2.AddCell(cellName291);


                PdfPCell cellNames28 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames28.HorizontalAlignment = 0;
                cellNames28.Colspan = 0;
                cellNames28.Border = 0;
                cellNames28.PaddingTop = 40;
                cellNames28.PaddingBottom = 40;
                cellNames28.BorderWidthRight = 0.2f;
                cellNames28.BorderWidthLeft = 0.5f;
                cellNames28.BorderWidthTop = 0;
                cellNames28.BorderWidthBottom = 0.5f;
                cellNames28.PaddingLeft = 10;
                table2.AddCell(cellNames28);


                PdfPCell cellNames291 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames291.HorizontalAlignment = 0;
                cellNames291.Colspan = 0;
                cellNames291.Border = 0;
                cellNames291.PaddingTop = 40;
                cellNames291.PaddingBottom = 40;
                cellNames291.BorderWidthRight = 0.9f;
                cellNames291.BorderWidthTop = 0;
                cellNames291.BorderWidthBottom = 0.5f;
                table2.AddCell(cellNames291);


                document.Add(table2);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void Btnform14_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tblnew = new PdfPTable(6);
                tblnew.TotalWidth = 500f;
                tblnew.LockedWidth = true;
                float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                tblnew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;


                PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                celllogoHead.HorizontalAlignment = 2;
                celllogoHead.Colspan = 3;
                celllogoHead.Border = 0;
                tblnew.AddCell(celllogoHead);



                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XXIV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 0;
                cellHead.Colspan = 3;
                cellHead.Border = 0;
                cellHead.PaddingLeft = -50;
                tblnew.AddCell(cellHead);

                PdfPCell cellreturn12 = new PdfPCell(new Phrase("RETURN TO BE SENT BY THE CONTRACTOR TO THE LICENSING OFFICER", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 0;
                cellreturn12.Colspan = 6;
                cellreturn12.Border = 0;
                cellreturn12.PaddingLeft = 30;
                tblnew.AddCell(cellreturn12);

                PdfPCell cellreturn123 = new PdfPCell(new Phrase(" Rule 82(1)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturn123.HorizontalAlignment = 1;
                cellreturn123.Colspan = 6;
                cellreturn123.Border = 0;
                tblnew.AddCell(cellreturn123);
                cellreturn12.PaddingLeft = -10;
                tblnew.AddCell(cellspace);

                document.Add(tblnew);

                #endregion

                #region Basic Information of the Employee

                PdfPTable tblform12 = new PdfPTable(2);
                tblform12.TotalWidth = 500f;
                tblform12.LockedWidth = true;
                float[] width1 = new float[] { 2f, 2f };
                tblform12.SetWidths(width1);

                PdfPCell cellspace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace3.Colspan = 2;
                cellspace3.Border = 0;


                PdfPCell cellName40 = new PdfPCell(new Phrase("1.   Name and address of constractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName40.HorizontalAlignment = 0;
                cellName40.Colspan = 0;
                cellName40.Border = 0;
                cellName40.PaddingTop = 20;
                cellName40.PaddingBottom = 20;
                cellName40.BorderWidthLeft = 0.5f;
                cellName40.BorderWidthRight = 0.2f;
                cellName40.BorderWidthTop = 0.5f;
                cellName40.BorderWidthBottom = 0.5f;
                cellName40.PaddingLeft = 10;
                tblform12.AddCell(cellName40);





                PdfPCell cellName41 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName41.HorizontalAlignment = 0;
                cellName41.Colspan = 0;
                cellName41.Border = 0;
                cellName41.PaddingTop = 20;
                cellName41.PaddingBottom = 20;
                cellName41.BorderWidthLeft = 0;
                cellName41.BorderWidthRight = 0.9f;
                cellName41.BorderWidthTop = 0.5f;
                cellName41.BorderWidthBottom = 0.5f;

                tblform12.AddCell(cellName41);







                PdfPCell cellName42 = new PdfPCell(new Phrase("2.   Name and address of Establishment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName42.HorizontalAlignment = 0;
                cellName42.Colspan = 0;
                cellName42.Border = 0;
                cellName42.PaddingTop = 20;
                cellName42.PaddingBottom = 20;
                cellName42.BorderWidthLeft = 0.5f;
                cellName42.BorderWidthRight = 0.2f;
                cellName42.BorderWidthTop = 0;
                cellName42.BorderWidthBottom = 0.5f;
                cellName42.PaddingLeft = 10;
                tblform12.AddCell(cellName42);




                PdfPCell cellName43 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName43.HorizontalAlignment = 0;
                cellName43.Colspan = 0;
                cellName43.Border = 0;
                cellName43.PaddingTop = 20;
                cellName43.PaddingBottom = 20;
                cellName43.BorderWidthLeft = 0;
                cellName43.BorderWidthRight = 0.9f;
                cellName43.BorderWidthTop = 0;
                cellName43.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName43);








                PdfPCell cellName44 = new PdfPCell(new Phrase("3.   Name and address of the principal Employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName44.HorizontalAlignment = 0;
                cellName44.Colspan = 0;
                cellName44.Border = 0;
                cellName44.PaddingTop = 20;
                cellName44.PaddingBottom = 20;
                cellName44.BorderWidthLeft = 0.5f;
                cellName44.BorderWidthRight = 0.2f;
                cellName44.BorderWidthTop = 0;
                cellName44.BorderWidthBottom = 0.5f;
                cellName44.PaddingLeft = 10;
                tblform12.AddCell(cellName44);




                PdfPCell cellName45 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName45.HorizontalAlignment = 0;
                cellName45.Colspan = 0;
                cellName45.Border = 0;
                cellName45.PaddingTop = 20;
                cellName45.PaddingBottom = 20;
                cellName45.BorderWidthLeft = 0;
                cellName45.BorderWidthRight = 0.9f;
                cellName45.BorderWidthTop = 0;
                cellName45.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName45);








                PdfPCell cellName46 = new PdfPCell(new Phrase("4.   Duration of contract: From ………… to", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName46.HorizontalAlignment = 0;
                cellName46.Colspan = 0;
                cellName46.Border = 0;
                cellName46.PaddingTop = 20;
                cellName46.PaddingBottom = 20;
                cellName46.BorderWidthLeft = 0.5f;
                cellName46.BorderWidthRight = 0.2f;
                cellName46.BorderWidthTop = 0;
                cellName46.BorderWidthBottom = 0.5f;
                cellName46.PaddingLeft = 10;
                tblform12.AddCell(cellName46);




                PdfPCell cellName47 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName47.HorizontalAlignment = 0;
                cellName47.Colspan = 0;
                cellName47.Border = 0;
                cellName47.PaddingTop = 20;
                cellName47.PaddingBottom = 20;
                cellName47.BorderWidthLeft = 0;
                cellName47.BorderWidthRight = 0.9f;
                cellName47.BorderWidthTop = 0;
                cellName47.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName47);








                PdfPCell cellName48 = new PdfPCell(new Phrase("5.   No. of days during the half-year on	which-(a) the establishment of the principal employer  had worked;(b) the contractors establishment had worked;", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName48.HorizontalAlignment = 0;
                cellName48.Colspan = 0;
                cellName48.Border = 0;
                cellName48.PaddingTop = 25;
                cellName48.PaddingBottom = 25;
                cellName48.BorderWidthLeft = 0.5f;
                cellName48.BorderWidthRight = 0.2f;
                cellName48.BorderWidthTop = 0;
                cellName48.BorderWidthBottom = 0.5f;
                cellName48.PaddingLeft = 10;
                tblform12.AddCell(cellName48);




                PdfPCell cellName49 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName49.HorizontalAlignment = 0;
                cellName49.Colspan = 0;
                cellName49.Border = 0;
                cellName49.PaddingTop = 25;
                cellName49.PaddingBottom = 25;
                cellName49.BorderWidthLeft = 0;
                cellName49.BorderWidthRight = 0.9f;
                cellName49.BorderWidthTop = 0;
                cellName49.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName49);






                PdfPCell cellName50 = new PdfPCell(new Phrase("6.   Maximum  number  of  contract  labour employed on any day during the half year:	Men	Women Children Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName50.HorizontalAlignment = 0;
                cellName50.Colspan = 0;
                cellName50.Border = 0;
                cellName50.PaddingTop = 20;
                cellName50.PaddingBottom = 20;
                cellName50.BorderWidthLeft = 0.5f;
                cellName50.BorderWidthRight = 0.2f;
                cellName50.BorderWidthTop = 0;
                cellName50.BorderWidthBottom = 0.5f;
                cellName50.PaddingLeft = 10;
                tblform12.AddCell(cellName50);




                PdfPCell cellName51 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName51.HorizontalAlignment = 0;
                cellName51.Colspan = 0;
                cellName51.Border = 0;
                cellName51.PaddingTop = 20;
                cellName51.PaddingBottom = 20;
                cellName51.BorderWidthLeft = 0;
                cellName51.BorderWidthRight = 0.9f;
                cellName51.BorderWidthTop = 0;
                cellName51.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName51);




                PdfPCell cellName52 = new PdfPCell(new Phrase("7.  (i) Daily hours of work and spreadover-(ii) (a) Whether weekly holiday observed and on what day-(b) if so, whether it was paid for-(iii) No. of man-hours of overtime worked-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName52.HorizontalAlignment = 0;
                cellName52.Colspan = 0;
                cellName52.Border = 0;
                cellName52.PaddingTop = 20;
                cellName52.PaddingBottom = 20;
                cellName52.BorderWidthLeft = 0.5f;
                cellName52.BorderWidthRight = 0.2f;
                cellName52.BorderWidthTop = 0;
                cellName52.BorderWidthBottom = 0.5f;
                cellName52.PaddingLeft = 10;
                tblform12.AddCell(cellName52);




                PdfPCell cellName53 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName53.HorizontalAlignment = 0;
                cellName53.Colspan = 0;
                cellName53.Border = 0;
                cellName53.PaddingTop = 20;
                cellName53.PaddingBottom = 20;
                cellName53.BorderWidthLeft = 0;
                cellName53.BorderWidthRight = 0.9f;
                cellName53.BorderWidthTop = 0;
                cellName53.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName53);





                PdfPCell cellName54 = new PdfPCell(new Phrase("8.  Number of man-days worked by-Men	Women Children Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName54.HorizontalAlignment = 0;
                cellName54.Colspan = 0;
                cellName54.Border = 0;
                cellName54.PaddingTop = 15;
                cellName54.PaddingBottom = 15;
                cellName54.BorderWidthLeft = 0.5f;
                cellName54.BorderWidthRight = 0.2f;
                cellName54.BorderWidthTop = 0;
                cellName54.BorderWidthBottom = 0.5f;
                cellName54.PaddingLeft = 10;
                tblform12.AddCell(cellName54);




                PdfPCell cellName55 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName55.HorizontalAlignment = 0;
                cellName55.Colspan = 0;
                cellName55.Border = 0;
                cellName55.PaddingTop = 15;
                cellName55.PaddingBottom = 15;
                cellName55.BorderWidthLeft = 0;
                cellName55.BorderWidthRight = 0.9f;
                cellName55.BorderWidthTop = 0;
                cellName55.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName55);



                PdfPCell cellName56 = new PdfPCell(new Phrase("9.  Amount of  wages paid Men Women Children	Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName56.HorizontalAlignment = 0;
                cellName56.Colspan = 0;
                cellName56.Border = 0;
                cellName56.PaddingTop = 15;
                cellName56.PaddingBottom = 15;
                cellName56.BorderWidthLeft = 0.5f;
                cellName56.BorderWidthRight = 0.2f;
                cellName56.BorderWidthTop = 0;
                cellName56.BorderWidthBottom = 0.5f;
                cellName56.PaddingLeft = 10;
                tblform12.AddCell(cellName56);




                PdfPCell cellName57 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName57.HorizontalAlignment = 0;
                cellName57.Colspan = 0;
                cellName57.Border = 0;
                cellName57.PaddingTop = 15;
                cellName57.PaddingBottom = 15;
                cellName57.BorderWidthLeft = 0;
                cellName57.BorderWidthRight = 0.9f;
                cellName57.BorderWidthTop = 0f;
                cellName57.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName57);



                PdfPCell cellName58 = new PdfPCell(new Phrase("10. Amount of deductions from wages Men Women Children Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName58.HorizontalAlignment = 0;
                cellName58.Colspan = 0;
                cellName58.Border = 0;
                cellName58.PaddingTop = 15;
                cellName58.PaddingBottom = 15;
                cellName58.BorderWidthLeft = 0.5f;
                cellName58.BorderWidthRight = 0.2f;
                cellName58.BorderWidthTop = 0;
                cellName58.BorderWidthBottom = 0.5f;
                cellName58.PaddingLeft = 10;
                tblform12.AddCell(cellName58);




                PdfPCell cellName59 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName59.HorizontalAlignment = 0;
                cellName59.Colspan = 0;
                cellName59.Border = 0;
                cellName59.PaddingTop = 15;
                cellName59.PaddingBottom = 15;
                cellName59.BorderWidthLeft = 0;
                cellName59.BorderWidthRight = 0.9f;
                cellName59.BorderWidthTop = 0;
                cellName59.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName59);



                PdfPCell cellName60 = new PdfPCell(new Phrase("11. whether the following have been provided-(i) Canteen	(ii) Rest-rooms	(iii) Drinking -water(iv) Creches(v) First-aid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName60.HorizontalAlignment = 0;
                cellName60.Colspan = 0;
                cellName60.Border = 0;
                cellName60.PaddingTop = 20;
                cellName60.PaddingBottom = 20;
                cellName60.BorderWidthRight = 0.2f;
                cellName60.BorderWidthLeft = 0.5f;
                cellName60.BorderWidthTop = 0;
                cellName60.BorderWidthBottom = 0.5f;
                cellName60.PaddingLeft = 10;
                tblform12.AddCell(cellName60);




                PdfPCell cellName61 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellName61.HorizontalAlignment = 0;
                cellName61.Colspan = 0;
                cellName61.Border = 0;
                cellName61.PaddingTop = 20;
                cellName61.PaddingBottom = 20;
                cellName61.BorderWidthRight = 0.9f;
                cellName61.BorderWidthTop = 0;
                cellName61.BorderWidthBottom = 0.5f;
                tblform12.AddCell(cellName61);




                PdfPCell cellNames62 = new PdfPCell(new Phrase(" (if the Answer 'yes state briefly GDXs provided) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames62.HorizontalAlignment = 0;
                cellNames62.Colspan = 2;
                cellNames62.Border = 0;

                tblform12.AddCell(cellNames62);

                tblform12.AddCell(cellspace3);

                PdfPCell cellNames63 = new PdfPCell(new Phrase(" place................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames63.HorizontalAlignment = 0;
                cellNames63.Colspan = 1;
                cellNames63.Border = 0;

                tblform12.AddCell(cellNames63);




                PdfPCell cellNames64 = new PdfPCell(new Phrase("signature of constactor.................  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames64.HorizontalAlignment = 0;
                cellNames64.Colspan = 1;
                cellNames64.Border = 0;

                tblform12.AddCell(cellNames64);




                PdfPCell cellNames65 = new PdfPCell(new Phrase(" date.................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames65.HorizontalAlignment = 0;
                cellNames65.Colspan = 0;
                cellNames65.Border = 0;

                tblform12.AddCell(cellNames65);







                document.Add(tblform12);




                #endregion Basic Information of the Employee


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void Btnform014_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew = new PdfPTable(12);
                tablenew.TotalWidth = 900f;
                tablenew.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;




                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XXIII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew.AddCell(cellHead);






                PdfPCell cellreturn12 = new PdfPCell(new Phrase("REGISTER OF OVERTIME", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 1;
                cellreturn12.Colspan = 12;
                cellreturn12.Border = 0;

                tablenew.AddCell(cellreturn12);



                PdfPCell cellreturns123 = new PdfPCell(new Phrase("[Rule 78(1)(a)(iii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturns123.HorizontalAlignment = 1;
                cellreturns123.Colspan = 12;
                cellreturns123.Border = 0;
                tablenew.AddCell(cellreturns123);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);


                PdfPCell cellNames40 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames40.HorizontalAlignment = 0;
                cellNames40.Colspan = 5;
                cellNames40.Border = 0;
                cellNames40.PaddingLeft = 0;
                tablenew.AddCell(cellNames40);



                PdfPCell cellNames43 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames43.HorizontalAlignment = 0;
                cellNames43.Colspan = 2;
                cellNames43.Border = 0;
                cellNames43.PaddingLeft = 0;
                tablenew.AddCell(cellNames43);




                PdfPCell cellNames41 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames41.HorizontalAlignment = 0;
                cellNames41.Colspan = 5;
                cellNames41.Border = 0;
                cellNames41.PaddingLeft = 0;
                tablenew.AddCell(cellNames41);

                tablenew.AddCell(cellspace);



                PdfPCell cellNames42 = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames42.HorizontalAlignment = 0;
                cellNames42.Colspan = 5;
                cellNames42.Border = 0;
                cellNames42.PaddingLeft = 0;
                tablenew.AddCell(cellNames42);



                PdfPCell cellNames44 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames44.HorizontalAlignment = 0;
                cellNames44.Colspan = 2;
                cellNames44.Border = 0;
                cellNames44.PaddingLeft = 0;
                tablenew.AddCell(cellNames44);

                PdfPCell cellNames45 = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames45.HorizontalAlignment = 0;
                cellNames45.Colspan = 5;
                cellNames45.Border = 0;
                cellNames45.PaddingLeft = 0;
                tablenew.AddCell(cellNames45);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);

                PdfPCell cellNames46 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames46.HorizontalAlignment = 1;
                cellNames46.Colspan = 0;
                cellNames46.Border = 0;
                cellNames46.PaddingLeft = 0;
                cellNames46.PaddingTop = 20;
                cellNames46.PaddingBottom = 20;
                cellNames46.BorderWidthLeft = 0.5f;
                cellNames46.BorderWidthRight = 0.9f;
                cellNames46.BorderWidthTop = 0.5f;
                cellNames46.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames46);

                PdfPCell cellNames47 = new PdfPCell(new Phrase("Name of work man", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames47.HorizontalAlignment = 1;
                cellNames47.Colspan = 0;
                cellNames47.Border = 0;
                cellNames47.PaddingLeft = 0;
                cellNames47.PaddingLeft = 0;
                cellNames47.PaddingTop = 20;
                cellNames47.PaddingBottom = 20;
                cellNames47.BorderWidthLeft = 0;
                cellNames47.BorderWidthRight = 0.9f;
                cellNames47.BorderWidthTop = 0.5f;

                cellNames47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames47);


                PdfPCell cellNames48 = new PdfPCell(new Phrase("Father/husband name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames48.HorizontalAlignment = 1;
                cellNames48.Colspan = 0;
                cellNames48.Border = 0;
                cellNames48.PaddingLeft = 0;
                cellNames48.PaddingLeft = 0;
                cellNames48.PaddingLeft = 0;
                cellNames48.PaddingTop = 20;
                cellNames48.PaddingBottom = 20;
                cellNames48.BorderWidthLeft = 0;
                cellNames48.BorderWidthRight = 0.9f;
                cellNames48.BorderWidthTop = 0.5f;
                cellNames48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames48);

                PdfPCell cellNames49 = new PdfPCell(new Phrase("Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames49.HorizontalAlignment = 1;
                cellNames49.Colspan = 0;
                cellNames49.Border = 0;
                cellNames49.PaddingLeft = 0;
                cellNames49.PaddingLeft = 0;
                cellNames49.PaddingLeft = 0;
                cellNames49.PaddingTop = 20;
                cellNames49.PaddingBottom = 20;
                cellNames49.BorderWidthLeft = 0;
                cellNames49.BorderWidthRight = 0.9f;
                cellNames49.BorderWidthTop = 0.5f;
                cellNames49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames49);

                PdfPCell cellNames50 = new PdfPCell(new Phrase("Designation of nature of employment ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames50.HorizontalAlignment = 1;
                cellNames50.Colspan = 0;
                cellNames50.Border = 0;
                cellNames50.PaddingLeft = 0;
                cellNames50.PaddingLeft = 0;
                cellNames50.PaddingLeft = 0;
                cellNames50.PaddingTop = 20;
                cellNames50.PaddingBottom = 20;
                cellNames50.BorderWidthLeft = 0;
                cellNames50.BorderWidthRight = 0.9f;
                cellNames50.BorderWidthTop = 0.5f;
                cellNames50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames50);

                PdfPCell cellNames51 = new PdfPCell(new Phrase("Date on which overtime worked", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames51.HorizontalAlignment = 1;
                cellNames51.Colspan = 0;
                cellNames51.Border = 0;
                cellNames51.PaddingLeft = 0;
                cellNames51.PaddingLeft = 0;
                cellNames51.PaddingLeft = 0;
                cellNames51.PaddingTop = 20;
                cellNames51.PaddingBottom = 20;
                cellNames51.BorderWidthLeft = 0;
                cellNames51.BorderWidthRight = 0.9f;
                cellNames51.BorderWidthTop = 0.5f;
                cellNames51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames51);

                PdfPCell cellNames52 = new PdfPCell(new Phrase("Total over time worked or production in case of piece of rated ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames52.HorizontalAlignment = 1;
                cellNames52.Colspan = 0;
                cellNames52.Border = 0;
                cellNames52.PaddingLeft = 0;
                cellNames52.PaddingLeft = 0;
                cellNames52.PaddingLeft = 0;
                cellNames52.PaddingTop = 20;
                cellNames52.PaddingBottom = 20;
                cellNames52.BorderWidthLeft = 0;
                cellNames52.BorderWidthRight = 0.9f;
                cellNames52.BorderWidthTop = 0.5f;
                cellNames52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames52);

                PdfPCell cellNames53 = new PdfPCell(new Phrase("Normal rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames53.HorizontalAlignment = 1;
                cellNames53.Colspan = 0;
                cellNames53.Border = 0;
                cellNames53.PaddingLeft = 0;
                cellNames53.PaddingLeft = 0;
                cellNames53.PaddingLeft = 0;
                cellNames53.PaddingTop = 20;
                cellNames53.PaddingBottom = 20;
                cellNames53.BorderWidthLeft = 0;
                cellNames53.BorderWidthRight = 0.9f;
                cellNames53.BorderWidthTop = 0.5f;
                cellNames53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames53);

                PdfPCell cellNames54 = new PdfPCell(new Phrase("Over time rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames54.HorizontalAlignment = 1;
                cellNames54.Colspan = 0;
                cellNames54.Border = 0;
                cellNames54.PaddingLeft = 0;
                cellNames54.PaddingLeft = 0;
                cellNames54.PaddingLeft = 0;
                cellNames54.PaddingTop = 20;
                cellNames54.PaddingBottom = 20;
                cellNames54.BorderWidthLeft = 0;
                cellNames54.BorderWidthRight = 0.9f;
                cellNames54.BorderWidthTop = 0.5f;
                cellNames54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames54);

                PdfPCell cellNames55 = new PdfPCell(new Phrase("Over time earnings ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames55.HorizontalAlignment = 1;
                cellNames55.Colspan = 0;
                cellNames55.Border = 0;
                cellNames55.PaddingLeft = 0;
                cellNames55.PaddingTop = 20;
                cellNames55.PaddingBottom = 20;
                cellNames55.BorderWidthLeft = 0;
                cellNames55.BorderWidthRight = 0.9f;
                cellNames55.BorderWidthTop = 0.5f;
                cellNames55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames55);

                PdfPCell cellNames56 = new PdfPCell(new Phrase("Date on which overtime wagespaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames56.HorizontalAlignment = 1;
                cellNames56.Colspan = 0;
                cellNames56.Border = 0;
                cellNames56.PaddingLeft = 0;
                cellNames56.PaddingTop = 20;
                cellNames56.PaddingBottom = 20;
                cellNames56.BorderWidthLeft = 0;
                cellNames56.BorderWidthRight = 0.9f;
                cellNames56.BorderWidthTop = 0.5f;
                cellNames56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames56);


                PdfPCell cellNames57 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames57.HorizontalAlignment = 1;
                cellNames57.Colspan = 0;
                cellNames57.Border = 0;
                cellNames57.PaddingLeft = 0;
                cellNames57.PaddingLeft = 0;
                cellNames57.PaddingLeft = 0;
                cellNames57.PaddingTop = 20;
                cellNames57.PaddingBottom = 20;
                cellNames57.BorderWidthLeft = 0;
                cellNames57.BorderWidthRight = 0.9f;
                cellNames57.BorderWidthTop = 0.5f;
                cellNames57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNames57);

                PdfPCell cellsNames47 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames47.HorizontalAlignment = 1;
                cellsNames47.Colspan = 0;
                cellsNames47.Border = 0;
                cellsNames47.PaddingLeft = 0;
                cellsNames47.PaddingLeft = 0;
                cellsNames47.PaddingLeft = 0;
                cellsNames47.PaddingTop = 10;
                cellsNames47.PaddingBottom = 10;
                cellsNames47.BorderWidthLeft = 0.9f;
                cellsNames47.BorderWidthRight = 0.9f;
                cellsNames47.BorderWidthTop = 0;
                cellsNames47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames47);

                PdfPCell cellsNamess47 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess47.HorizontalAlignment = 1;
                cellsNamess47.Colspan = 0;
                cellsNamess47.Border = 0;
                cellsNamess47.PaddingLeft = 0;
                cellsNamess47.PaddingTop = 10;
                cellsNamess47.PaddingBottom = 10;
                cellsNamess47.BorderWidthLeft = 0;
                cellsNamess47.BorderWidthRight = 0.9f;
                cellsNamess47.BorderWidthTop = 0;
                cellsNamess47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess47);

                PdfPCell cellsNames48 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames48.HorizontalAlignment = 1;
                cellsNames48.Colspan = 0;
                cellsNames48.Border = 0;
                cellsNames48.PaddingLeft = 0;
                cellsNames48.PaddingTop = 10;
                cellsNames48.PaddingBottom = 10;
                cellsNames48.BorderWidthLeft = 0;
                cellsNames48.BorderWidthRight = 0.9f;
                cellsNames48.BorderWidthTop = 0;
                cellsNames48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames48);

                PdfPCell cellsNames49 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames49.HorizontalAlignment = 1;
                cellsNames49.Colspan = 0;
                cellsNames49.Border = 0;
                cellsNames49.PaddingLeft = 0;
                cellsNames49.PaddingTop = 10;
                cellsNames49.PaddingBottom = 10;
                cellsNames49.BorderWidthLeft = 0;
                cellsNames49.BorderWidthRight = 0.9f;
                cellsNames49.BorderWidthTop = 0;
                cellsNames49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames49);


                PdfPCell cellsNames50 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames50.HorizontalAlignment = 1;
                cellsNames50.Colspan = 0;
                cellsNames50.Border = 0;
                cellsNames50.PaddingLeft = 0;
                cellsNames50.PaddingTop = 10;
                cellsNames50.PaddingBottom = 10;
                cellsNames50.BorderWidthLeft = 0;
                cellsNames50.BorderWidthRight = 0.9f;
                cellsNames50.BorderWidthTop = 0;
                cellsNames50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames50);

                PdfPCell cellsNames51 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames51.HorizontalAlignment = 1;
                cellsNames51.Colspan = 0;
                cellsNames51.Border = 0;
                cellsNames51.PaddingLeft = 0;
                cellsNames51.PaddingTop = 10;
                cellsNames51.PaddingBottom = 10;
                cellsNames51.BorderWidthLeft = 0;
                cellsNames51.BorderWidthRight = 0.9f;
                cellsNames51.BorderWidthTop = 0;
                cellsNames51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames51);



                PdfPCell cellsNames52 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames52.HorizontalAlignment = 1;
                cellsNames52.Colspan = 0;
                cellsNames52.Border = 0;
                cellsNames52.PaddingLeft = 0;
                cellsNames52.PaddingTop = 10;
                cellsNames52.PaddingBottom = 10;
                cellsNames52.BorderWidthLeft = 0;
                cellsNames52.BorderWidthRight = 0.9f;
                cellsNames52.BorderWidthTop = 0;
                cellsNames52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames52);

                PdfPCell cellsNames53 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames53.HorizontalAlignment = 1;
                cellsNames53.Colspan = 0;
                cellsNames53.Border = 0;
                cellsNames53.PaddingLeft = 0;
                cellsNames53.PaddingTop = 10;
                cellsNames53.PaddingBottom = 10;
                cellsNames53.BorderWidthLeft = 0;
                cellsNames53.BorderWidthRight = 0.9f;
                cellsNames53.BorderWidthTop = 0;
                cellsNames53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames53);



                PdfPCell cellsNames54 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames54.HorizontalAlignment = 1;
                cellsNames54.Colspan = 0;
                cellsNames54.Border = 0;
                cellsNames54.PaddingLeft = 0;
                cellsNames54.PaddingTop = 10;
                cellsNames54.PaddingBottom = 10;
                cellsNames54.BorderWidthLeft = 0;
                cellsNames54.BorderWidthRight = 0.9f;
                cellsNames54.BorderWidthTop = 0;
                cellsNames54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames54);



                PdfPCell cellsNames55 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames55.HorizontalAlignment = 1;
                cellsNames55.Colspan = 0;
                cellsNames55.Border = 0;
                cellsNames55.PaddingLeft = 0;
                cellsNames55.PaddingTop = 10;
                cellsNames55.PaddingBottom = 10;
                cellsNames55.BorderWidthLeft = 0;
                cellsNames55.BorderWidthRight = 0.9f;
                cellsNames55.BorderWidthTop = 0;
                cellsNames55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames55);

                PdfPCell cellsNames56 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames56.HorizontalAlignment = 1;
                cellsNames56.Colspan = 0;
                cellsNames56.Border = 0;
                cellsNames56.PaddingLeft = 0;
                cellsNames56.PaddingTop = 10;
                cellsNames56.PaddingBottom = 10;
                cellsNames56.BorderWidthLeft = 0;
                cellsNames56.BorderWidthRight = 0.9f;
                cellsNames56.BorderWidthTop = 0;
                cellsNames56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames56);



                PdfPCell cellsNames57 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames57.HorizontalAlignment = 1;
                cellsNames57.Colspan = 0;
                cellsNames57.Border = 0;
                cellsNames57.PaddingLeft = 0;
                cellsNames57.PaddingTop = 10;
                cellsNames57.PaddingBottom = 10;
                cellsNames57.BorderWidthLeft = 0;
                cellsNames57.BorderWidthRight = 0.9f;
                cellsNames57.BorderWidthTop = 0;
                cellsNames57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNames57);


                document.Add(tablenew);



                #endregion Basic Information of the Employee


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }
        //
        protected void BtnformVI_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewa = new PdfPTable(12);
                tablenewa.TotalWidth = 500f;
                tablenewa.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenewa.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase(" [FORM VI-A] ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenewa.AddCell(cellHead);

                PdfPCell cellNOTICE = new PdfPCell(new Phrase(" NOTICE OF COMMENCEMENT/COMPLETION OF CONTRACT WORK", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellNOTICE.HorizontalAlignment = 1;
                cellNOTICE.Colspan = 12;
                cellNOTICE.Border = 0;

                tablenewa.AddCell(cellNOTICE);

                PdfPCell cellRule = new PdfPCell(new Phrase(" [Rule 25(2)(viii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule.HorizontalAlignment = 1;
                cellRule.Colspan = 12;
                cellRule.Border = 0;
                tablenewa.AddCell(cellRule);

                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);

                PdfPCell cellShri = new PdfPCell(new Phrase("	I/We, Shri/M/s. (Name and address of contractor) hereby intimate that the contract work (Name of work)........................in estblishment of the........................(Name and address of principal employer)...........for which license No. ..................dated..................has been issued to me/us by the Licen-sing Officer (name of the headquarters), has been commenced/completed with effect from (date) on (date).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShri.HorizontalAlignment = 0;
                cellShri.Colspan = 12;
                cellShri.Border = 0;
                cellShri.PaddingLeft = 0;
                tablenewa.AddCell(cellShri);

                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);

                PdfPCell cellTO = new PdfPCell(new Phrase(" TO ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTO.HorizontalAlignment = 0;
                cellTO.Colspan = 6;
                cellTO.Border = 0;
                cellTO.PaddingLeft = 0;
                tablenewa.AddCell(cellTO);

                PdfPCell cellSignatur = new PdfPCell(new Phrase("Signature of Contractor (s)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignatur.HorizontalAlignment = 0;
                cellSignatur.Colspan = 6;
                cellSignatur.Border = 0;
                cellSignatur.PaddingLeft = 0;
                tablenewa.AddCell(cellSignatur);

                PdfPCell cellTHEINSPECTOR = new PdfPCell(new Phrase("  THE INSPECTOR", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTHEINSPECTOR.HorizontalAlignment = 0;
                cellTHEINSPECTOR.Colspan = 12;
                cellTHEINSPECTOR.Border = 0;
                cellTHEINSPECTOR.PaddingLeft = 0;
                tablenewa.AddCell(cellTHEINSPECTOR);

                PdfPCell cellINSPECTOR = new PdfPCell(new Phrase("   .......................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellINSPECTOR.HorizontalAlignment = 0;
                cellINSPECTOR.Colspan = 12;
                cellINSPECTOR.Border = 0;
                cellINSPECTOR.PaddingLeft = 0;
                tablenewa.AddCell(cellINSPECTOR);

                PdfPCell cellNamesINSPECTOR = new PdfPCell(new Phrase("   .......................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamesINSPECTOR.HorizontalAlignment = 0;
                cellNamesINSPECTOR.Colspan = 5;
                cellNamesINSPECTOR.Border = 0;
                cellNamesINSPECTOR.PaddingLeft = 0;
                tablenewa.AddCell(cellNamesINSPECTOR);

                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);
                tablenewa.AddCell(cellspace);

                document.Add(tablenewa);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void BtnformXVII1_Click(object sender, EventArgs e)
        {





            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecoloum = new PdfPTable(16);
                tablecoloum.TotalWidth = 950f;
                tablecoloum.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablecoloum.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 16;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XVII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 16;
                cellHead.Border = 0;

                tablecoloum.AddCell(cellHead);

                PdfPCell cellreturn12 = new PdfPCell(new Phrase("REGISTER OF WAGES", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 1;
                cellreturn12.Colspan = 16;
                cellreturn12.Border = 0;

                tablecoloum.AddCell(cellreturn12);

                PdfPCell cellreturns123 = new PdfPCell(new Phrase("[Rule 78(1)(a)(i)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturns123.HorizontalAlignment = 1;
                cellreturns123.Colspan = 16;
                cellreturns123.Border = 0;
                tablecoloum.AddCell(cellreturns123);

                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);






                PdfPCell celladdressof = new PdfPCell(new Phrase("Name and address of contractor..................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressof.HorizontalAlignment = 0;
                celladdressof.Colspan = 7;
                celladdressof.Border = 0;
                celladdressof.PaddingLeft = 0;
                tablecoloum.AddCell(celladdressof);

                PdfPCell cellNames43 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames43.HorizontalAlignment = 0;
                cellNames43.Colspan = 2;
                cellNames43.Border = 0;
                cellNames43.PaddingLeft = 0;
                tablecoloum.AddCell(cellNames43);

                PdfPCell celladdresso = new PdfPCell(new Phrase("Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdresso.HorizontalAlignment = 0;
                celladdresso.Colspan = 7;
                celladdresso.Border = 0;
                celladdresso.PaddingLeft = 0;
                tablecoloum.AddCell(celladdresso);

                tablecoloum.AddCell(cellspace);

                PdfPCell cellNatureand = new PdfPCell(new Phrase("Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNatureand.HorizontalAlignment = 0;
                cellNatureand.Colspan = 7;
                cellNatureand.Border = 0;
                cellNatureand.PaddingLeft = 0;
                tablecoloum.AddCell(cellNatureand);

                PdfPCell cellNaturean = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNaturean.HorizontalAlignment = 0;
                cellNaturean.Colspan = 2;
                cellNaturean.Border = 0;
                cellNaturean.PaddingLeft = 0;
                tablecoloum.AddCell(cellNaturean);

                PdfPCell cellprincipalem = new PdfPCell(new Phrase("Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellprincipalem.HorizontalAlignment = 0;
                cellprincipalem.Colspan = 7;
                cellprincipalem.Border = 0;
                cellprincipalem.PaddingLeft = 0;
                tablecoloum.AddCell(cellprincipalem);

                tablecoloum.AddCell(cellspace);

                PdfPCell cellNature = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNature.HorizontalAlignment = 0;
                cellNature.Colspan = 7;
                cellNature.Border = 0;
                cellNature.PaddingLeft = 0;
                tablecoloum.AddCell(cellNature);


                PdfPCell cellPeriod = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPeriod.HorizontalAlignment = 0;
                cellPeriod.Colspan = 2;
                cellPeriod.Border = 0;
                cellPeriod.PaddingLeft = 0;
                tablecoloum.AddCell(cellPeriod);


                PdfPCell cellMonthly = new PdfPCell(new Phrase("Wage Period: Monthly.................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMonthly.HorizontalAlignment = 0;
                cellMonthly.Colspan = 7;
                cellMonthly.Border = 0;
                cellMonthly.PaddingLeft = 0;
                tablecoloum.AddCell(cellMonthly);

                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);
                tablecoloum.AddCell(cellspace);



                PdfPCell cellempty1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty1.HorizontalAlignment = 0;
                cellempty1.Colspan = 7;

                tablecoloum.AddCell(cellempty1);



                PdfPCell cellempty2 = new PdfPCell(new Phrase("Amount of wages earned", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty2.HorizontalAlignment = 1;
                cellempty2.Colspan = 4;

                tablecoloum.AddCell(cellempty2);


                PdfPCell cellempty3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty3.HorizontalAlignment = 0;
                cellempty3.Colspan = 5;

                tablecoloum.AddCell(cellempty3);







                PdfPCell cellSlNo = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSlNo.HorizontalAlignment = 1;
                cellSlNo.Colspan = 0;
                tablecoloum.AddCell(cellSlNo);

                PdfPCell cellworkman = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkman.HorizontalAlignment = 1;
                cellworkman.Colspan = 0;

                tablecoloum.AddCell(cellworkman);

                PdfPCell cellSerial = new PdfPCell(new Phrase("Serial in the register of workman ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerial.HorizontalAlignment = 1;
                cellSerial.Colspan = 0;
                tablecoloum.AddCell(cellSerial);

                PdfPCell celldone = new PdfPCell(new Phrase("Designation/of nature of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldone.HorizontalAlignment = 1;
                celldone.Colspan = 0;
                tablecoloum.AddCell(celldone);

                PdfPCell celldays = new PdfPCell(new Phrase("No.of days worked ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldays.HorizontalAlignment = 1;
                celldays.Colspan = 0;

                tablecoloum.AddCell(celldays);

                PdfPCell cellunit = new PdfPCell(new Phrase("unit of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunit.HorizontalAlignment = 1;
                cellunit.Colspan = 0;

                tablecoloum.AddCell(cellunit);

                PdfPCell cellrate = new PdfPCell(new Phrase("daily rate of wages/piece rate ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellrate.HorizontalAlignment = 1;
                cellrate.Colspan = 0;

                tablecoloum.AddCell(cellrate);

                PdfPCell cellBasic = new PdfPCell(new Phrase(" Basic wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBasic.HorizontalAlignment = 1;
                cellBasic.Colspan = 0;

                tablecoloum.AddCell(cellBasic);

                PdfPCell cellDearness = new PdfPCell(new Phrase("Dearness allowancess", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDearness.HorizontalAlignment = 1;
                cellDearness.Colspan = 0;
                tablecoloum.AddCell(cellDearness);

                PdfPCell cellOvetime = new PdfPCell(new Phrase("Overtime ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOvetime.HorizontalAlignment = 1;
                cellOvetime.Colspan = 0;
                tablecoloum.AddCell(cellOvetime);

                PdfPCell cellOther = new PdfPCell(new Phrase("Other cash payment (Narture of payment to be indicated)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOther.HorizontalAlignment = 1;
                cellOther.Colspan = 0;

                tablecoloum.AddCell(cellOther);

                PdfPCell cellTotal = new PdfPCell(new Phrase("Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTotal.HorizontalAlignment = 1;
                cellTotal.Colspan = 0;

                tablecoloum.AddCell(cellTotal);


                PdfPCell cellDeactions = new PdfPCell(new Phrase("Deactions if any(indicate nature)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDeactions.HorizontalAlignment = 1;
                cellDeactions.Colspan = 0;

                //cellDeactions.BorderWidthBottom = 0.5f;
                tablecoloum.AddCell(cellDeactions);

                PdfPCell cellNet = new PdfPCell(new Phrase("Net amount paid ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNet.HorizontalAlignment = 1;
                cellNet.Colspan = 0;

                tablecoloum.AddCell(cellNet);

                PdfPCell cellthumb = new PdfPCell(new Phrase("Signature/thumb impression of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellthumb.HorizontalAlignment = 1;
                cellthumb.Colspan = 0;

                tablecoloum.AddCell(cellthumb);

                PdfPCell cellinitial = new PdfPCell(new Phrase("initial of contractors or his representative", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellinitial.HorizontalAlignment = 1;
                cellinitial.Colspan = 0;

                tablecoloum.AddCell(cellinitial);



                PdfPCell cellsName1 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName1.HorizontalAlignment = 1;
                cellsName1.Colspan = 0;
                cellsName1.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName1);

                PdfPCell cellsName2 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName2.HorizontalAlignment = 1;
                cellsName2.Colspan = 0;
                cellsName2.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName2);

                PdfPCell cellsName3 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName3.HorizontalAlignment = 1;
                cellsName3.Colspan = 0;
                cellsName3.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName3);

                PdfPCell cellsName4 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName4.HorizontalAlignment = 1;
                cellsName4.Colspan = 0;
                cellsName4.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName4);

                PdfPCell cellsName5 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName5.HorizontalAlignment = 1;
                cellsName5.Colspan = 0;
                cellsName5.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName5);

                PdfPCell cellsName6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName6.HorizontalAlignment = 1;
                cellsName6.Colspan = 0;
                cellsName6.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName6);

                PdfPCell cellsName7 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName7.HorizontalAlignment = 1;
                cellsName7.Colspan = 0;
                cellsName7.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName7);

                PdfPCell cellsName8 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName8.HorizontalAlignment = 1;
                cellsName8.Colspan = 0;
                cellsName8.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName8);

                PdfPCell cellsName9 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName9.HorizontalAlignment = 1;
                cellsName9.Colspan = 0;
                cellsName9.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName9);

                PdfPCell cellsName10 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName10.HorizontalAlignment = 1;
                cellsName10.Colspan = 0;
                cellsName10.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName10);

                PdfPCell cellsName11 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName11.HorizontalAlignment = 1;
                cellsName11.Colspan = 0;
                cellsName11.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName11);

                PdfPCell cellsName12 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName12.HorizontalAlignment = 1;
                cellsName12.Colspan = 0;
                cellsName12.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName12);


                PdfPCell cellsName13 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName13.HorizontalAlignment = 1;
                cellsName13.Colspan = 0;
                cellsName13.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName13);

                PdfPCell cellsName14 = new PdfPCell(new Phrase("  14", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName14.HorizontalAlignment = 1;
                cellsName14.Colspan = 0;
                cellsName14.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName14);

                PdfPCell cellsName15 = new PdfPCell(new Phrase("  15", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName15.HorizontalAlignment = 1;
                cellsName15.Colspan = 0;
                cellsName15.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName15);

                PdfPCell cellsName16 = new PdfPCell(new Phrase("  16", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName16.HorizontalAlignment = 1;
                cellsName16.Colspan = 0;
                cellsName16.PaddingBottom = 5f;
                tablecoloum.AddCell(cellsName16);

                document.Add(tablecoloum);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformXII_Click(object sender, EventArgs e)
        {




            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall1 = new PdfPTable(7);
                tablecall1.TotalWidth = 900f;
                tablecall1.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablecall1.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 7;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 7;
                cellHead.Border = 0;

                tablecall1.AddCell(cellHead);

                PdfPCell cellreturn12 = new PdfPCell(new Phrase("REGISTER OF CONTRACTORS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12.HorizontalAlignment = 1;
                cellreturn12.Colspan = 7;
                cellreturn12.Border = 0;

                tablecall1.AddCell(cellreturn12);

                PdfPCell cellRule74 = new PdfPCell(new Phrase("[Rule 74]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule74.HorizontalAlignment = 1;
                cellRule74.Colspan = 7;
                cellRule74.Border = 0;
                tablecall1.AddCell(cellRule74);

                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);

                PdfPCell celladdressofemp = new PdfPCell(new Phrase("1.Name and address of the Principal Employer..................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofemp.HorizontalAlignment = 0;
                celladdressofemp.Colspan = 7;
                celladdressofemp.Border = 0;
                celladdressofemp.PaddingLeft = 0;
                tablecall1.AddCell(celladdressofemp);

                PdfPCell cellestablishment = new PdfPCell(new Phrase("2.Name and address of the establishment............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishment.HorizontalAlignment = 0;
                cellestablishment.Colspan = 7;
                cellestablishment.Border = 0;
                cellestablishment.PaddingLeft = 0;
                tablecall1.AddCell(cellestablishment);

                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);
                tablecall1.AddCell(cellspace);

                PdfPCell cellempty4 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty4.HorizontalAlignment = 0;
                cellempty4.Colspan = 4;

                tablecall1.AddCell(cellempty4);

                PdfPCell cellempty5 = new PdfPCell(new Phrase("Period of Contract", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty5.HorizontalAlignment = 1;
                cellempty5.Colspan = 2;

                tablecall1.AddCell(cellempty5);


                PdfPCell cellempty6 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty6.HorizontalAlignment = 1;
                cellempty6.Colspan = 1;

                tablecall1.AddCell(cellempty6);



                PdfPCell cellSlNo1 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSlNo1.HorizontalAlignment = 1;
                cellSlNo1.Colspan = 0;
                tablecall1.AddCell(cellSlNo1);


                PdfPCell cellworkman1 = new PdfPCell(new Phrase("Name and address of Contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkman1.HorizontalAlignment = 1;
                cellworkman1.Colspan = 0;

                tablecall1.AddCell(cellworkman1);




                PdfPCell cellNature = new PdfPCell(new Phrase("Nature of work on contract", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNature.HorizontalAlignment = 1;
                cellNature.Colspan = 0;

                tablecall1.AddCell(cellNature);


                PdfPCell cellSerial1 = new PdfPCell(new Phrase("Location of contract work ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerial1.HorizontalAlignment = 1;
                cellSerial1.Colspan = 0;
                tablecall1.AddCell(cellSerial1);

                PdfPCell celldone1 = new PdfPCell(new Phrase("From", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldone1.HorizontalAlignment = 1;
                celldone1.Colspan = 0;
                tablecall1.AddCell(celldone1);

                PdfPCell celldays1 = new PdfPCell(new Phrase("To ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldays1.HorizontalAlignment = 1;
                celldays1.Colspan = 0;

                tablecall1.AddCell(celldays1);

                PdfPCell cellunit1 = new PdfPCell(new Phrase("Maximum No. of workmen employed by Contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunit1.HorizontalAlignment = 1;
                cellunit1.Colspan = 0;

                tablecall1.AddCell(cellunit1);

                PdfPCell cellsName11 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName11.HorizontalAlignment = 1;
                cellsName11.Colspan = 0;
                cellsName11.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName11);

                PdfPCell cellsName21 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName21.HorizontalAlignment = 1;
                cellsName21.Colspan = 0;
                cellsName21.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName21);

                PdfPCell cellsName31 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName31.HorizontalAlignment = 1;
                cellsName31.Colspan = 0;
                cellsName31.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName31);

                PdfPCell cellsName41 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName41.HorizontalAlignment = 1;
                cellsName41.Colspan = 0;
                cellsName41.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName41);


                PdfPCell cellsName51 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName51.HorizontalAlignment = 1;
                cellsName51.Colspan = 0;
                cellsName51.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName51);

                PdfPCell cellsName61 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName61.HorizontalAlignment = 1;
                cellsName61.Colspan = 0;
                cellsName61.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName61);


                PdfPCell cellsName71 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName71.HorizontalAlignment = 1;
                cellsName71.Colspan = 0;
                cellsName71.PaddingBottom = 10f;
                tablecall1.AddCell(cellsName71);



                tablecall1.AddCell(cellspace);

                PdfPCell cellsName151 = new PdfPCell(new Phrase("Place..............", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName151.HorizontalAlignment = 1;
                cellsName151.Colspan = 0;
                cellsName151.PaddingBottom = 5f;
                tablecall1.AddCell(cellsName151);

                PdfPCell cellsName161 = new PdfPCell(new Phrase("Date..............", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsName161.HorizontalAlignment = 1;
                cellsName161.Colspan = 0;
                cellsName161.PaddingBottom = 5f;
                tablecall1.AddCell(cellsName161);



                document.Add(tablecall1);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;




            }
        }

        protected void BtnformXV_Click(object sender, EventArgs e)
        {
            PdfPCell cellempty9 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.NORMAL, BaseColor.BLACK)));
            cellempty9.HorizontalAlignment = 0;
            cellempty9.Colspan = 1;

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall2 = new PdfPTable(6);
                tablecall2.TotalWidth = 900f;
                tablecall2.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall2.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;

                tablecall2.AddCell(cellHead);

                PdfPCell cellSERVICE = new PdfPCell(new Phrase("SERVICE CERTIFICATE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellSERVICE.HorizontalAlignment = 1;
                cellSERVICE.Colspan = 6;
                cellSERVICE.Border = 0;

                tablecall2.AddCell(cellSERVICE);

                PdfPCell cellRule77 = new PdfPCell(new Phrase("[Rule 77]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule77.HorizontalAlignment = 1;
                cellRule77.Colspan = 6;
                cellRule77.Border = 0;
                tablecall2.AddCell(cellRule77);

                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);

                PdfPCell celladdressofcon = new PdfPCell(new Phrase("Name and Address of contractor ........................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcon.HorizontalAlignment = 0;
                celladdressofcon.Colspan = 2;
                celladdressofcon.Border = 0;

                tablecall2.AddCell(celladdressofcon);

                PdfPCell cellRule741 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule741.HorizontalAlignment = 0;
                cellRule741.Colspan = 2;
                cellRule741.Border = 0;
                tablecall2.AddCell(cellRule741);

                PdfPCell cellestablishment = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishment.HorizontalAlignment = 0;
                cellestablishment.Colspan = 2;
                cellestablishment.Border = 0;
                tablecall2.AddCell(cellestablishment);

                tablecall2.AddCell(cellspace);


                PdfPCell cellRule1 = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule1.HorizontalAlignment = 0;
                cellRule1.Colspan = 2;
                cellRule1.Border = 0;
                tablecall2.AddCell(cellRule1);


                PdfPCell cellempty15 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellempty15.HorizontalAlignment = 0;
                cellempty15.Colspan = 2;
                cellempty15.Border = 0;
                tablecall2.AddCell(cellempty15);

                PdfPCell cellempty14 = new PdfPCell(new Phrase("Name and adress of principal employer.............................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty14.HorizontalAlignment = 0;
                cellempty14.Colspan = 2;
                cellempty14.Border = 0;
                tablecall2.AddCell(cellempty14);

                tablecall2.AddCell(cellspace);
                PdfPCell cellempty13 = new PdfPCell(new Phrase("Age or Date of Birth............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty13.HorizontalAlignment = 0;
                cellempty13.Colspan = 6;
                cellempty13.Border = 0;
                tablecall2.AddCell(cellempty13);

                tablecall2.AddCell(cellspace);

                PdfPCell cellempty12 = new PdfPCell(new Phrase("Identification Marks.............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty12.HorizontalAlignment = 0;
                cellempty12.Colspan = 6;
                cellempty12.Border = 0;
                tablecall2.AddCell(cellempty12);

                tablecall2.AddCell(cellspace);
                PdfPCell cellempty11 = new PdfPCell(new Phrase("Father's/Husband's name .........................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty11.HorizontalAlignment = 0;
                cellempty11.Colspan = 6;
                cellempty11.Border = 0;
                tablecall2.AddCell(cellempty11);

                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);

                tablecall2.AddCell(cellempty9);

                PdfPCell cellempty8 = new PdfPCell(new Phrase("Total period for work employed", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty8.HorizontalAlignment = 1;
                cellempty8.Colspan = 2;

                tablecall2.AddCell(cellempty8);

                PdfPCell cellempty7 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty7.HorizontalAlignment = 0;
                cellempty7.Colspan = 3;

                tablecall2.AddCell(cellempty7);

                PdfPCell cellformSlNo1 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformSlNo1.HorizontalAlignment = 1;
                cellformSlNo1.Colspan = 0;
                tablecall2.AddCell(cellformSlNo1);

                PdfPCell cellformfrom = new PdfPCell(new Phrase("From", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformfrom.HorizontalAlignment = 1;
                cellformfrom.Colspan = 0;
                tablecall2.AddCell(cellformfrom);

                PdfPCell cellformto = new PdfPCell(new Phrase("To ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformto.HorizontalAlignment = 1;
                cellformto.Colspan = 0;
                tablecall2.AddCell(cellformto);

                PdfPCell cellformnature = new PdfPCell(new Phrase("Nature of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformnature.HorizontalAlignment = 1;
                cellformnature.Colspan = 0;
                tablecall2.AddCell(cellformnature);

                PdfPCell cellformRate = new PdfPCell(new Phrase("Rate of wages(with particulars of unit in caseof piece-work)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformRate.HorizontalAlignment = 1;
                cellformRate.Colspan = 0;
                tablecall2.AddCell(cellformRate);

                PdfPCell cellSerial1 = new PdfPCell(new Phrase("Remark ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerial1.HorizontalAlignment = 1;
                cellSerial1.Colspan = 0;
                tablecall2.AddCell(cellSerial1);

                PdfPCell cellform1 = new PdfPCell(new Phrase("1", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellform1.HorizontalAlignment = 1;
                cellform1.Colspan = 0;
                cellform1.PaddingBottom = 10f;
                tablecall2.AddCell(cellform1);

                PdfPCell cellform2 = new PdfPCell(new Phrase("2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform2.HorizontalAlignment = 1;
                cellform2.Colspan = 0;
                cellform2.PaddingBottom = 10f;
                tablecall2.AddCell(cellform2);

                PdfPCell cellform3 = new PdfPCell(new Phrase("3", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform3.HorizontalAlignment = 1;
                cellform3.Colspan = 0;
                cellform3.PaddingBottom = 10f;
                tablecall2.AddCell(cellform3);

                PdfPCell cellform4 = new PdfPCell(new Phrase("4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform4.HorizontalAlignment = 1;
                cellform4.Colspan = 0;
                cellform4.PaddingBottom = 10f;
                tablecall2.AddCell(cellform4);


                PdfPCell cellform5 = new PdfPCell(new Phrase("5", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform5.HorizontalAlignment = 1;
                cellform5.Colspan = 0;
                cellform5.PaddingBottom = 10f;
                tablecall2.AddCell(cellform5);

                PdfPCell cellform6 = new PdfPCell(new Phrase("6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform6.HorizontalAlignment = 1;
                cellform6.Colspan = 0;
                cellform6.PaddingBottom = 10f;
                tablecall2.AddCell(cellform6);

                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);
                tablecall2.AddCell(cellspace);

                PdfPCell cellsingna = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsingna.HorizontalAlignment = 0;
                cellsingna.Colspan = 3;
                cellsingna.Border = 0;
                tablecall2.AddCell(cellsingna);

                PdfPCell cellsingn = new PdfPCell(new Phrase("singature of contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsingn.HorizontalAlignment = 0;
                cellsingn.Colspan = 3;
                cellsingn.Border = 0;
                cellsingn.PaddingLeft = 200;
                tablecall2.AddCell(cellsingn);



                document.Add(tablecall2);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;



            }
        }

        protected void Btnform2XIV_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL);

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall3 = new PdfPTable(6);
                tablecall3.TotalWidth = 500f;
                tablecall3.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall3.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XIV ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                tablecall3.AddCell(cellHead);

                PdfPCell cellEMPLOYMENTCARD = new PdfPCell(new Phrase("EMPLOYMENT CARD", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellEMPLOYMENTCARD.HorizontalAlignment = 1;
                cellEMPLOYMENTCARD.Colspan = 6;
                cellEMPLOYMENTCARD.Border = 0;
                tablecall3.AddCell(cellEMPLOYMENTCARD);

                PdfPCell cellRule76 = new PdfPCell(new Phrase("[Rule 76]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule76.HorizontalAlignment = 1;
                cellRule76.Colspan = 6;
                cellRule76.Border = 0;
                tablecall3.AddCell(cellRule76);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell celladdressofcontr = new PdfPCell(new Phrase("Name and Address of contractor ........................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcontr.HorizontalAlignment = 0;
                celladdressofcontr.Colspan = 2;
                celladdressofcontr.Border = 0;

                tablecall3.AddCell(celladdressofcontr);

                PdfPCell cellRule741 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule741.HorizontalAlignment = 0;
                cellRule741.Colspan = 2;
                cellRule741.Border = 0;
                tablecall3.AddCell(cellRule741);

                PdfPCell cellestablishments = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishments.HorizontalAlignment = 0;
                cellestablishments.Colspan = 2;
                cellestablishments.Border = 0;
                tablecall3.AddCell(cellestablishments);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell celllocation = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celllocation.HorizontalAlignment = 0;
                celllocation.Colspan = 2;
                celllocation.Border = 0;
                tablecall3.AddCell(celllocation);


                PdfPCell celleempty15 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celleempty15.HorizontalAlignment = 0;
                celleempty15.Colspan = 2;
                celleempty15.Border = 0;
                tablecall3.AddCell(celleempty15);

                PdfPCell cellempty09 = new PdfPCell(new Phrase("Name and adress of principal employer.............................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty09.HorizontalAlignment = 0;
                cellempty09.Colspan = 2;
                cellempty09.Border = 0;
                tablecall3.AddCell(cellempty09);


                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);




                tablecall3.AddCell(cellspace);
                PdfPCell cellempty08 = new PdfPCell(new Phrase("Name of the workman............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty08.HorizontalAlignment = 0;
                cellempty08.Colspan = 6;
                cellempty08.Border = 0;
                tablecall3.AddCell(cellempty08);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty07 = new PdfPCell(new Phrase("Sl.no in theregister ofworkmen employed.............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty07.HorizontalAlignment = 0;
                cellempty07.Colspan = 6;
                cellempty07.Border = 0;
                tablecall3.AddCell(cellempty07);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty06 = new PdfPCell(new Phrase("Nature of employment/designation .........................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty06.HorizontalAlignment = 0;
                cellempty06.Colspan = 6;
                cellempty06.Border = 0;
                tablecall3.AddCell(cellempty06);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty05 = new PdfPCell(new Phrase("Wage rate  (with particulars of unit,in case of piece-work....................................... )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty05.HorizontalAlignment = 0;
                cellempty05.Colspan = 6;
                cellempty05.Border = 0;
                tablecall3.AddCell(cellempty05);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);


                PdfPCell cellempty04 = new PdfPCell(new Phrase("Wage period................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty04.HorizontalAlignment = 0;
                cellempty04.Colspan = 6;
                cellempty04.Border = 0;
                tablecall3.AddCell(cellempty04);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);


                PdfPCell cellempty03 = new PdfPCell(new Phrase("enure of employment................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty03.HorizontalAlignment = 0;
                cellempty03.Colspan = 6;
                cellempty03.Border = 0;
                tablecall3.AddCell(cellempty03);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);


                PdfPCell cellempty02 = new PdfPCell(new Phrase("Remarks............................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty02.HorizontalAlignment = 0;
                cellempty02.Colspan = 6;
                cellempty02.Border = 0;
                tablecall3.AddCell(cellempty02);

                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);
                tablecall3.AddCell(cellspace);

                PdfPCell cellempty001 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty001.HorizontalAlignment = 0;
                cellempty001.Colspan = 3;
                cellempty001.Border = 0;
                tablecall3.AddCell(cellempty001);



                PdfPCell cellempty01 = new PdfPCell(new Phrase("Signature of Contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty01.HorizontalAlignment = 0;
                cellempty01.Colspan = 3;
                cellempty01.Border = 0;
                cellempty01.PaddingLeft = 100;
                tablecall3.AddCell(cellempty01);




                document.Add(tablecall3);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;





            }
        }

        protected void BtnformXVI_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;

            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall4 = new PdfPTable(6);
                tablecall4.TotalWidth = 900f;
                tablecall4.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall4.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XVI ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;
                tablecall4.AddCell(cellHead);

                PdfPCell cellMUSTER = new PdfPCell(new Phrase("MUSTER ROLL", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellMUSTER.HorizontalAlignment = 1;
                cellMUSTER.Colspan = 6;
                cellMUSTER.Border = 0;
                tablecall4.AddCell(cellMUSTER);

                PdfPCell cellRule77a = new PdfPCell(new Phrase("[Rule 78(1)(a)(i)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule77a.HorizontalAlignment = 1;
                cellRule77a.Colspan = 6;
                cellRule77a.Border = 0;
                tablecall4.AddCell(cellRule77a);

                tablecall4.AddCell(cellspace);
                tablecall4.AddCell(cellspace);
                tablecall4.AddCell(cellspace);

                PdfPCell celladdressofcontrac = new PdfPCell(new Phrase("Name and Address of contractor ........................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcontrac.HorizontalAlignment = 0;
                celladdressofcontrac.Colspan = 2;
                celladdressofcontrac.Border = 0;

                tablecall4.AddCell(celladdressofcontrac);

                PdfPCell cellRule7410 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule7410.HorizontalAlignment = 0;
                cellRule7410.Colspan = 2;
                cellRule7410.Border = 0;
                tablecall4.AddCell(cellRule7410);

                PdfPCell cellcarried = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on............................................................................................................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellcarried.HorizontalAlignment = 0;
                cellcarried.Colspan = 2;
                cellcarried.Border = 0;
                tablecall4.AddCell(cellcarried);

                tablecall4.AddCell(cellspace);


                PdfPCell cellRule10 = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRule10.HorizontalAlignment = 0;
                cellRule10.Colspan = 2;
                cellRule10.Border = 0;
                tablecall4.AddCell(cellRule10);


                PdfPCell cellempty006 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty006.HorizontalAlignment = 0;
                cellempty006.Colspan = 2;
                cellempty006.Border = 0;
                tablecall4.AddCell(cellempty006);

                PdfPCell cellempty005 = new PdfPCell(new Phrase("Name and adress of principal employer................................................................................................................................................................For month of.........................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty005.HorizontalAlignment = 0;
                cellempty005.Colspan = 2;
                cellempty005.Border = 0;
                tablecall4.AddCell(cellempty005);

                tablecall4.AddCell(cellspace);
                tablecall4.AddCell(cellspace);


                PdfPCell cellempty004 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty004.HorizontalAlignment = 0;
                cellempty004.Colspan = 4;

                tablecall4.AddCell(cellempty004);

                PdfPCell cellempty003 = new PdfPCell(new Phrase("Dates", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty003.HorizontalAlignment = 1;
                cellempty003.Colspan = 1;

                tablecall4.AddCell(cellempty003);

                PdfPCell cellempty002 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellempty002.HorizontalAlignment = 0;
                cellempty002.Colspan = 1;

                tablecall4.AddCell(cellempty002);

                PdfPCell cellformSlNo3 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformSlNo3.HorizontalAlignment = 1;
                cellformSlNo3.Colspan = 0;
                cellformSlNo3.PaddingBottom = 10;
                tablecall4.AddCell(cellformSlNo3);

                PdfPCell cellHusband = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellHusband.HorizontalAlignment = 1;
                cellHusband.Colspan = 0;
                cellHusband.PaddingBottom = 10;
                tablecall4.AddCell(cellHusband);

                PdfPCell cellFather = new PdfPCell(new Phrase("Father's/Husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellFather.HorizontalAlignment = 1;
                cellFather.Colspan = 0;
                cellFather.PaddingBottom = 10;
                tablecall4.AddCell(cellFather);

                PdfPCell cellSex = new PdfPCell(new Phrase("Sex", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSex.HorizontalAlignment = 1;
                cellSex.Colspan = 0;
                cellSex.PaddingBottom = 10;
                tablecall4.AddCell(cellSex);

                PdfPCell cellformRate1 = new PdfPCell(new Phrase("1 2 3 4 5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellformRate1.HorizontalAlignment = 1;
                cellformRate1.Colspan = 0;
                cellformRate1.PaddingBottom = 10;
                tablecall4.AddCell(cellformRate1);

                PdfPCell cellRemarks1 = new PdfPCell(new Phrase("Remarks ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRemarks1.HorizontalAlignment = 1;
                cellRemarks1.Colspan = 0;
                cellRemarks1.PaddingBottom = 10;
                tablecall4.AddCell(cellRemarks1);

                PdfPCell cellform06 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellform06.HorizontalAlignment = 1;
                cellform06.Colspan = 0;
                cellform06.PaddingBottom = 20f;
                tablecall4.AddCell(cellform06);

                PdfPCell cellform05 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform05.HorizontalAlignment = 1;
                cellform05.Colspan = 0;
                cellform05.PaddingBottom = 20f;
                tablecall4.AddCell(cellform05);

                PdfPCell cellform04 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellform04.HorizontalAlignment = 1;
                cellform04.Colspan = 0;
                cellform04.PaddingBottom = 20f;
                tablecall4.AddCell(cellform04);

                PdfPCell cellform03 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform03.HorizontalAlignment = 1;
                cellform03.Colspan = 0;
                cellform03.PaddingBottom = 20f;
                tablecall4.AddCell(cellform03);


                PdfPCell cellform02 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform02.HorizontalAlignment = 1;
                cellform02.Colspan = 0;
                cellform02.PaddingBottom = 20f;
                tablecall4.AddCell(cellform02);

                PdfPCell cellform01 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellform01.HorizontalAlignment = 1;
                cellform01.Colspan = 0;
                cellform01.PaddingBottom = 10f;
                tablecall4.AddCell(cellform01);




                document.Add(tablecall4);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;






            }
        }

        protected void BtnformXIX_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablecall5 = new PdfPTable(6);
                tablecall5.TotalWidth = 900f;
                tablecall5.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, };
                tablecall5.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 6;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XIX ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 6;
                cellHead.Border = 0;

                tablecall5.AddCell(cellHead);

                PdfPCell cellWAGESLIP = new PdfPCell(new Phrase("WAGE SLIP", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellWAGESLIP.HorizontalAlignment = 1;
                cellWAGESLIP.Colspan = 6;
                cellWAGESLIP.Border = 0;

                tablecall5.AddCell(cellWAGESLIP);

                PdfPCell cellRule78b = new PdfPCell(new Phrase("[Rule 78(1)(b)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule78b.HorizontalAlignment = 1;
                cellRule78b.Colspan = 6;
                cellRule78b.Border = 0;
                tablecall5.AddCell(cellRule78b);

                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);

                PdfPCell celladdressofcontractor = new PdfPCell(new Phrase("Name and Address of contractor .....................................................................................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofcontractor.HorizontalAlignment = 0;
                celladdressofcontractor.Colspan = 2;
                celladdressofcontractor.Border = 0;

                tablecall5.AddCell(celladdressofcontractor);

                PdfPCell cellRules741 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellRules741.HorizontalAlignment = 0;
                cellRules741.Colspan = 2;
                cellRules741.Border = 0;
                tablecall5.AddCell(cellRules741);

                PdfPCell cellestablishmentname = new PdfPCell(new Phrase("Name and Father's/Husband's Name of the workman......................................................................................................................................................................For the Week/fornight/month ending..................................................................................................................................................................................................................................................................................................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellestablishmentname.HorizontalAlignment = 0;
                cellestablishmentname.Colspan = 2;
                cellestablishmentname.Border = 0;
                tablecall5.AddCell(cellestablishmentname);

                tablecall5.AddCell(cellspace);

                PdfPCell cellNatureand = new PdfPCell(new Phrase("Nature and location of work.............................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNatureand.HorizontalAlignment = 0;
                cellNatureand.Colspan = 6;
                cellNatureand.Border = 0;
                tablecall5.AddCell(cellNatureand);

                tablecall5.AddCell(cellspace);

                PdfPCell cellnoofdays = new PdfPCell(new Phrase("1.  No.of days worked", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnoofdays.HorizontalAlignment = 0;
                cellnoofdays.Colspan = 6;
                cellnoofdays.Border = 0;
                tablecall5.AddCell(cellnoofdays);

                tablecall5.AddCell(cellspace);

                PdfPCell cellnoofunits = new PdfPCell(new Phrase("2.  No. of units worked in case of piece-rate workers", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnoofunits.HorizontalAlignment = 0;
                cellnoofunits.Colspan = 6;
                cellnoofunits.Border = 0;
                tablecall5.AddCell(cellnoofunits);

                tablecall5.AddCell(cellspace);
                PdfPCell cellrateofdaily = new PdfPCell(new Phrase("3.  Rate of daily wages/piece-rate", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellrateofdaily.HorizontalAlignment = 0;
                cellrateofdaily.Colspan = 6;
                cellrateofdaily.Border = 0;
                tablecall5.AddCell(cellrateofdaily);

                tablecall5.AddCell(cellspace);

                PdfPCell cellamountof = new PdfPCell(new Phrase("4.  Amount of overtime wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellamountof.HorizontalAlignment = 0;
                cellamountof.Colspan = 6;
                cellamountof.Border = 0;
                tablecall5.AddCell(cellamountof);

                tablecall5.AddCell(cellspace);

                PdfPCell cellgrosswages = new PdfPCell(new Phrase("5. Gross wages payable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellgrosswages.HorizontalAlignment = 0;
                cellgrosswages.Colspan = 6;
                cellgrosswages.Border = 0;
                tablecall5.AddCell(cellgrosswages);

                tablecall5.AddCell(cellspace);
                PdfPCell celldeductionsany = new PdfPCell(new Phrase("6.  Deductions,if any", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldeductionsany.HorizontalAlignment = 0;
                celldeductionsany.Colspan = 6;
                celldeductionsany.Border = 0;
                tablecall5.AddCell(celldeductionsany);

                tablecall5.AddCell(cellspace);
                PdfPCell cellnetamountof = new PdfPCell(new Phrase("7.  Net amount of wages paid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnetamountof.HorizontalAlignment = 0;
                cellnetamountof.Colspan = 6;
                cellnetamountof.Border = 0;
                tablecall5.AddCell(cellnetamountof);

                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);
                tablecall5.AddCell(cellspace);

                PdfPCell cellinsingnatures = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellinsingnatures.HorizontalAlignment = 0;
                cellinsingnatures.Colspan = 3;
                cellinsingnatures.Border = 0;
                tablecall5.AddCell(cellinsingnatures);

                PdfPCell cellInitials = new PdfPCell(new Phrase("Initials of the contractoror his  representative", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellInitials.HorizontalAlignment = 0;
                cellInitials.Colspan = 3;
                cellInitials.Border = 0;
                cellInitials.PaddingLeft = 200;
                tablecall5.AddCell(cellInitials);

                document.Add(tablecall5);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformXVIII_Click(object sender, EventArgs e)
        {
            string fontsyle = "verdana";
            int Fontsize = 13;
            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;
            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;
            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tableregister = new PdfPTable(16);
                tableregister.TotalWidth = 950f;
                tableregister.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tableregister.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 16;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XVIII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 16;
                cellHead.Border = 0;

                tableregister.AddCell(cellHead);

                PdfPCell cellMUSTER = new PdfPCell(new Phrase("FORM OF REGISTER OF WAGES-CUM-MUSTER ROLL", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellMUSTER.HorizontalAlignment = 1;
                cellMUSTER.Colspan = 16;
                cellMUSTER.Border = 0;
                tableregister.AddCell(cellMUSTER);

                PdfPCell cellreturns1234 = new PdfPCell(new Phrase("[Rule 78(1)(a)(i)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellreturns1234.HorizontalAlignment = 1;
                cellreturns1234.Colspan = 16;
                cellreturns1234.Border = 0;
                tableregister.AddCell(cellreturns1234);

                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);






                PdfPCell celladdressofc = new PdfPCell(new Phrase("Name and address of contractor..................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofc.HorizontalAlignment = 0;
                celladdressofc.Colspan = 7;
                celladdressofc.Border = 0;
                celladdressofc.PaddingLeft = 0;
                tableregister.AddCell(celladdressofc);

                PdfPCell cellNames043 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNames043.HorizontalAlignment = 0;
                cellNames043.Colspan = 2;
                cellNames043.Border = 0;
                cellNames043.PaddingLeft = 0;
                tableregister.AddCell(cellNames043);

                PdfPCell celladdressofhus = new PdfPCell(new Phrase("Name and address of establishment in/under which contract is carried on...........................................................................................................................Name and address of principal employer...................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celladdressofhus.HorizontalAlignment = 0;
                celladdressofhus.Colspan = 7;
                celladdressofhus.Border = 0;
                celladdressofhus.PaddingLeft = 0;
                tableregister.AddCell(celladdressofhus);

                tableregister.AddCell(cellspace);

                PdfPCell cellNatures = new PdfPCell(new Phrase("Nature and location of work................................................................................................................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNatures.HorizontalAlignment = 0;
                cellNatures.Colspan = 7;
                cellNatures.Border = 0;
                cellNatures.PaddingLeft = 0;
                tableregister.AddCell(cellNatures);

                PdfPCell cellPeriodtable = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPeriodtable.HorizontalAlignment = 0;
                cellPeriodtable.Colspan = 2;
                cellPeriodtable.Border = 0;
                cellPeriodtable.PaddingLeft = 0;
                tableregister.AddCell(cellPeriodtable);


                PdfPCell cellMonthlywage = new PdfPCell(new Phrase("Wage Period: Monthly................................................................................................................From...................................TO.................................. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellMonthlywage.HorizontalAlignment = 0;
                cellMonthlywage.Colspan = 7;
                cellMonthlywage.Border = 0;
                cellMonthlywage.PaddingLeft = 0;
                tableregister.AddCell(cellMonthlywage);

                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);
                tableregister.AddCell(cellspace);







                PdfPCell cellemptys1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptys1.HorizontalAlignment = 0;
                cellemptys1.Colspan = 7;

                tableregister.AddCell(cellemptys1);



                PdfPCell cellemptys2 = new PdfPCell(new Phrase("Amount of wages earned", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptys2.HorizontalAlignment = 1;
                cellemptys2.Colspan = 4;

                tableregister.AddCell(cellemptys2);

                PdfPCell cellemptys3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemptys3.HorizontalAlignment = 0;
                cellemptys3.Colspan = 5;

                tableregister.AddCell(cellemptys3);

                PdfPCell cellSlNo42 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSlNo42.HorizontalAlignment = 1;
                cellSlNo42.Colspan = 0;
                tableregister.AddCell(cellSlNo42);

                PdfPCell cellworkmans = new PdfPCell(new Phrase("SI. No in the Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkmans.HorizontalAlignment = 1;
                cellworkmans.Colspan = 0;

                tableregister.AddCell(cellworkmans);

                PdfPCell cellSerialthe = new PdfPCell(new Phrase("Name of the employee ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSerialthe.HorizontalAlignment = 1;
                cellSerialthe.Colspan = 0;
                tableregister.AddCell(cellSerialthe);

                PdfPCell cellworkdone = new PdfPCell(new Phrase("Designation/of nature of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellworkdone.HorizontalAlignment = 1;
                cellworkdone.Colspan = 0;
                tableregister.AddCell(cellworkdone);

                PdfPCell celldaysworked = new PdfPCell(new Phrase("Daily attenda units worked ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldaysworked.HorizontalAlignment = 1;
                celldaysworked.Colspan = 0;

                tableregister.AddCell(celldaysworked);

                PdfPCell cellunitwork = new PdfPCell(new Phrase("Total attendance unit of work done", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellunitwork.HorizontalAlignment = 1;
                cellunitwork.Colspan = 0;

                tableregister.AddCell(cellunitwork);

                PdfPCell cellratedaily = new PdfPCell(new Phrase("daily rate of wages/piece rate ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellratedaily.HorizontalAlignment = 1;
                cellratedaily.Colspan = 0;

                tableregister.AddCell(cellratedaily);

                PdfPCell cellBasicwages = new PdfPCell(new Phrase(" Basic wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBasicwages.HorizontalAlignment = 1;
                cellBasicwages.Colspan = 0;

                tableregister.AddCell(cellBasicwages);

                PdfPCell cellDearnessallo = new PdfPCell(new Phrase("Dearness allowancess", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDearnessallo.HorizontalAlignment = 1;
                cellDearnessallo.Colspan = 0;
                tableregister.AddCell(cellDearnessallo);

                PdfPCell cellOvetimework = new PdfPCell(new Phrase("Overtime ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOvetimework.HorizontalAlignment = 1;
                cellOvetimework.Colspan = 0;
                tableregister.AddCell(cellOvetimework);

                PdfPCell cellOthercash = new PdfPCell(new Phrase("Other cash payment (Narture of payment to be indicated)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellOthercash.HorizontalAlignment = 1;
                cellOthercash.Colspan = 0;

                tableregister.AddCell(cellOthercash);

                PdfPCell cellTotalpayment = new PdfPCell(new Phrase("Total", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTotalpayment.HorizontalAlignment = 1;
                cellTotalpayment.Colspan = 0;

                tableregister.AddCell(cellTotalpayment);


                PdfPCell cellDeactionsindicate = new PdfPCell(new Phrase("Deactions if any(indicate nature)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellDeactionsindicate.HorizontalAlignment = 1;
                cellDeactionsindicate.Colspan = 0;

                //cellDeactions.BorderWidthBottom = 0.5f;
                tableregister.AddCell(cellDeactionsindicate);

                PdfPCell cellNetpaid = new PdfPCell(new Phrase("Net amount paid ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNetpaid.HorizontalAlignment = 1;
                cellNetpaid.Colspan = 0;

                tableregister.AddCell(cellNetpaid);

                PdfPCell cellthumbimp = new PdfPCell(new Phrase("Signature/thumb impression of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellthumbimp.HorizontalAlignment = 1;
                cellthumbimp.Colspan = 0;

                tableregister.AddCell(cellthumbimp);

                PdfPCell cellinitialof = new PdfPCell(new Phrase("initial of contractors or his representative", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellinitialof.HorizontalAlignment = 1;
                cellinitialof.Colspan = 0;

                tableregister.AddCell(cellinitialof);





                PdfPCell cellemp3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemp3.HorizontalAlignment = 0;
                cellemp3.Colspan = 4;

                tableregister.AddCell(cellemp3);



                PdfPCell cellemp2 = new PdfPCell(new Phrase("12.35 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemp2.HorizontalAlignment = 1;
                cellemp2.Colspan = 1;

                tableregister.AddCell(cellemp2);




                PdfPCell cellemp1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellemp1.HorizontalAlignment = 0;
                cellemp1.Colspan = 11;

                tableregister.AddCell(cellemp1);




                PdfPCell cellsNames1 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames1.HorizontalAlignment = 1;
                cellsNames1.Colspan = 0;
                cellsNames1.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames1);

                PdfPCell cellsNames2 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames2.HorizontalAlignment = 1;
                cellsNames2.Colspan = 0;
                cellsNames2.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames2);

                PdfPCell cellsNames3 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames3.HorizontalAlignment = 1;
                cellsNames3.Colspan = 0;
                cellsNames3.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames3);

                PdfPCell cellsNames4 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames4.HorizontalAlignment = 1;
                cellsNames4.Colspan = 0;
                cellsNames4.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames4);

                PdfPCell cellsNames5 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames5.HorizontalAlignment = 1;
                cellsNames5.Colspan = 0;
                cellsNames5.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames5);

                PdfPCell cellsNames6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames6.HorizontalAlignment = 1;
                cellsNames6.Colspan = 0;
                cellsNames6.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames6);

                PdfPCell cellsNames7 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames7.HorizontalAlignment = 1;
                cellsNames7.Colspan = 0;
                cellsNames7.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames7);

                PdfPCell cellsNames8 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames8.HorizontalAlignment = 1;
                cellsNames8.Colspan = 0;
                cellsNames8.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames8);

                PdfPCell cellsNames9 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames9.HorizontalAlignment = 1;
                cellsNames9.Colspan = 0;
                cellsNames9.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames9);

                PdfPCell cellsNames10 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames10.HorizontalAlignment = 1;
                cellsNames10.Colspan = 0;
                cellsNames10.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames10);

                PdfPCell cellsNames11 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames11.HorizontalAlignment = 1;
                cellsNames11.Colspan = 0;
                cellsNames11.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames11);

                PdfPCell cellsNames12 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames12.HorizontalAlignment = 1;
                cellsNames12.Colspan = 0;
                cellsNames12.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames12);


                PdfPCell cellsNames13 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames13.HorizontalAlignment = 1;
                cellsNames13.Colspan = 0;
                cellsNames13.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames13);

                PdfPCell cellsNames14 = new PdfPCell(new Phrase("  14", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames14.HorizontalAlignment = 1;
                cellsNames14.Colspan = 0;
                cellsNames14.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames14);

                PdfPCell cellsNames15 = new PdfPCell(new Phrase("  15", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames15.HorizontalAlignment = 1;
                cellsNames15.Colspan = 0;
                cellsNames15.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames15);

                PdfPCell cellsNames16 = new PdfPCell(new Phrase("  16", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNames16.HorizontalAlignment = 1;
                cellsNames16.Colspan = 0;
                cellsNames16.PaddingBottom = 5f;
                tableregister.AddCell(cellsNames16);

                document.Add(tableregister);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;





            }
        }

        protected void BtnformVII_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;
            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;
            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewa1 = new PdfPTable(12);
                tablenewa1.TotalWidth = 500f;
                tablenewa1.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenewa1.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase(" [FORM VII] ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenewa1.AddCell(cellHead);

                PdfPCell cellNOTICEs = new PdfPCell(new Phrase(" APPLICATIONS FOR RENEWAL OF LICENCE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellNOTICEs.HorizontalAlignment = 1;
                cellNOTICEs.Colspan = 12;
                cellNOTICEs.Border = 0;

                tablenewa1.AddCell(cellNOTICEs);

                PdfPCell cellRule29 = new PdfPCell(new Phrase(" [Rule 29(2)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule29.HorizontalAlignment = 1;
                cellRule29.Colspan = 12;
                cellRule29.Border = 0;
                tablenewa1.AddCell(cellRule29);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellShris = new PdfPCell(new Phrase("1.  Name and address of the contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris.HorizontalAlignment = 0;
                cellShris.Colspan = 12;
                cellShris.Border = 0;
                cellShris.PaddingLeft = 0;
                tablenewa1.AddCell(cellShris);

                tablenewa1.AddCell(cellspace);


                PdfPCell cellTOli = new PdfPCell(new Phrase("2.  Number and date of the license. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli.HorizontalAlignment = 0;
                cellTOli.Colspan = 12;
                cellTOli.Border = 0;
                cellTOli.PaddingLeft = 0;
                tablenewa1.AddCell(cellTOli);

                tablenewa1.AddCell(cellspace);

                PdfPCell cellSignaturdate = new PdfPCell(new Phrase("3.  Date of expiry of the previous license", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate.HorizontalAlignment = 0;
                cellSignaturdate.Colspan = 12;
                cellSignaturdate.Border = 0;
                cellSignaturdate.PaddingLeft = 0;
                tablenewa1.AddCell(cellSignaturdate);

                tablenewa1.AddCell(cellspace);

                PdfPCell cellWhetherthe = new PdfPCell(new Phrase("4.  Whether the license of the contractor was suspended or revoked.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe.HorizontalAlignment = 0;
                cellWhetherthe.Colspan = 12;
                cellWhetherthe.Border = 0;
                cellWhetherthe.PaddingLeft = 0;
                tablenewa1.AddCell(cellWhetherthe);

                tablenewa1.AddCell(cellspace);

                PdfPCell cellBank = new PdfPCell(new Phrase("1[5. Name of the Bank, number and date of the demand draft enclosed.Date of receipt of the application with demand draft number and date.]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank.HorizontalAlignment = 0;
                cellBank.Colspan = 12;
                cellBank.Border = 0;
                cellBank.PaddingLeft = 0;
                tablenewa1.AddCell(cellBank);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellPlace = new PdfPCell(new Phrase("Place:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace.HorizontalAlignment = 0;
                cellPlace.Colspan = 12;
                cellPlace.Border = 0;
                cellPlace.PaddingLeft = 0;
                tablenewa1.AddCell(cellPlace);

                PdfPCell cellPlaces = new PdfPCell(new Phrase("Date:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlaces.HorizontalAlignment = 0;
                cellPlaces.Colspan = 6;
                cellPlaces.Border = 0;
                cellPlaces.PaddingLeft = 0;
                tablenewa1.AddCell(cellPlaces);

                PdfPCell celldatess = new PdfPCell(new Phrase("Signature of the Applicant ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatess.HorizontalAlignment = 0;
                celldatess.Colspan = 6;
                celldatess.Border = 0;
                celldatess.PaddingLeft = 0;
                tablenewa1.AddCell(celldatess);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellfilled = new PdfPCell(new Phrase("(To be filled in the Office of the Licensing Officer) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfilled.HorizontalAlignment = 0;
                cellfilled.Colspan = 12;
                cellfilled.Border = 0;
                cellfilled.PaddingLeft = 50;
                tablenewa1.AddCell(cellfilled);


                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                PdfPCell cellapplication = new PdfPCell(new Phrase("Date of receipt of the application with Treasury Receipt No. and date. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapplication.HorizontalAlignment = 0;
                cellapplication.Colspan = 6;
                cellapplication.Border = 0;

                tablenewa1.AddCell(cellapplication);

                PdfPCell cellreceipt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellreceipt.HorizontalAlignment = 0;
                cellreceipt.Colspan = 6;
                cellreceipt.Border = 0;
                cellreceipt.PaddingLeft = 50;
                tablenewa1.AddCell(cellreceipt);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);


                PdfPCell cellreceipts = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellreceipts.HorizontalAlignment = 0;
                cellreceipts.Colspan = 6;
                cellreceipts.Border = 0;
                cellreceipts.PaddingLeft = 50;
                tablenewa1.AddCell(cellreceipts);

                PdfPCell cellLicensing = new PdfPCell(new Phrase(" Signature of the Licensing officer ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellLicensing.HorizontalAlignment = 0;
                cellLicensing.Colspan = 6;
                cellLicensing.Border = 0;

                tablenewa1.AddCell(cellLicensing);

                tablenewa1.AddCell(cellspace);
                tablenewa1.AddCell(cellspace);

                document.Add(tablenewa1);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;





            }
        }

        protected void BtnformXXI_Click1(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew7 = new PdfPTable(12);
                tablenew7.TotalWidth = 900f;
                tablenew7.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenew7.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-XXI ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew7.AddCell(cellHead);

                PdfPCell cellreturn123 = new PdfPCell(new Phrase("REGISTER OF FINES", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn123.HorizontalAlignment = 1;
                cellreturn123.Colspan = 12;
                cellreturn123.Border = 0;

                tablenew7.AddCell(cellreturn123);

                PdfPCell cellreturns1234 = new PdfPCell(new Phrase("[Rule 78(1)(a)(ii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturns1234.HorizontalAlignment = 1;
                cellreturns1234.Colspan = 12;
                cellreturns1234.Border = 0;
                tablenew7.AddCell(cellreturns1234);

                tablenew7.AddCell(cellspace);
                tablenew7.AddCell(cellspace);

                PdfPCell cellNames40s = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames40s.HorizontalAlignment = 0;
                cellNames40s.Colspan = 5;
                cellNames40s.Border = 0;
                cellNames40s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames40s);

                PdfPCell cellNames43s = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames43s.HorizontalAlignment = 0;
                cellNames43s.Colspan = 2;
                cellNames43s.Border = 0;
                cellNames43s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames43s);

                PdfPCell cellNames41s = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames41s.HorizontalAlignment = 0;
                cellNames41s.Colspan = 5;
                cellNames41s.Border = 0;
                cellNames41s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames41s);

                tablenew7.AddCell(cellspace);

                PdfPCell cellNames42s = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames42s.HorizontalAlignment = 0;
                cellNames42s.Colspan = 5;
                cellNames42s.Border = 0;
                cellNames42s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames42s);

                PdfPCell cellNames44s = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames44s.HorizontalAlignment = 0;
                cellNames44s.Colspan = 2;
                cellNames44s.Border = 0;
                cellNames44s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames44s);

                PdfPCell cellNames45s = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames45s.HorizontalAlignment = 0;
                cellNames45s.Colspan = 5;
                cellNames45s.Border = 0;
                cellNames45s.PaddingLeft = 0;
                tablenew7.AddCell(cellNames45s);

                tablenew7.AddCell(cellspace);
                tablenew7.AddCell(cellspace);
                tablenew7.AddCell(cellspace);

                PdfPCell cellNames46s = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames46s.HorizontalAlignment = 1;
                cellNames46s.Colspan = 0;
                tablenew7.AddCell(cellNames46s);

                PdfPCell cellNames47s = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames47s.HorizontalAlignment = 1;
                cellNames47s.Colspan = 0;
                tablenew7.AddCell(cellNames47s);

                PdfPCell cellNames48s = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames48s.HorizontalAlignment = 1;
                cellNames48s.Colspan = 0;
                tablenew7.AddCell(cellNames48s);

                PdfPCell cellNames49s = new PdfPCell(new Phrase("Designation of nature of employment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames49s.HorizontalAlignment = 1;
                cellNames49s.Colspan = 0;
                tablenew7.AddCell(cellNames49s);

                PdfPCell cellNames50s = new PdfPCell(new Phrase("Act/Omission for which line imposed ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames50s.HorizontalAlignment = 1;
                cellNames50s.Colspan = 0;
                tablenew7.AddCell(cellNames50s);

                PdfPCell cellNames51s = new PdfPCell(new Phrase("Date of offence", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames51s.HorizontalAlignment = 1;
                cellNames51s.Colspan = 0;
                tablenew7.AddCell(cellNames51s);

                PdfPCell cellNames52s = new PdfPCell(new Phrase("Whether workman showned cause against fine ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames52s.HorizontalAlignment = 1;
                cellNames52s.Colspan = 0;
                tablenew7.AddCell(cellNames52s);

                PdfPCell cellNames53 = new PdfPCell(new Phrase("Name of person in whose presence employee's explaination has heard", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames53.HorizontalAlignment = 1;
                cellNames53.Colspan = 0;
                tablenew7.AddCell(cellNames53);

                PdfPCell cellNames54s = new PdfPCell(new Phrase("Wage periods and wages payable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames54s.HorizontalAlignment = 1;
                cellNames54s.Colspan = 0;
                tablenew7.AddCell(cellNames54s);

                PdfPCell cellNames55s = new PdfPCell(new Phrase("Amount of fine imposed ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames55s.HorizontalAlignment = 1;
                cellNames55s.Colspan = 0;
                tablenew7.AddCell(cellNames55s);

                PdfPCell cellNames56s = new PdfPCell(new Phrase("Date on which fine realised", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames56s.HorizontalAlignment = 1;
                cellNames56s.Colspan = 0;
                tablenew7.AddCell(cellNames56s);

                PdfPCell cellNames57s = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames57s.HorizontalAlignment = 1;
                cellNames57s.Colspan = 0;
                tablenew7.AddCell(cellNames57s);

                PdfPCell cellsNames47s = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames47s.HorizontalAlignment = 1;
                cellsNames47s.Colspan = 0;
                tablenew7.AddCell(cellsNames47s);

                PdfPCell cellsNamess47s = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess47s.HorizontalAlignment = 1;
                cellsNamess47s.Colspan = 0;
                tablenew7.AddCell(cellsNamess47s);

                PdfPCell cellsNames48s = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames48s.HorizontalAlignment = 1;
                cellsNames48s.Colspan = 0;
                cellsNames48s.Border = 0;
                cellsNames48s.PaddingLeft = 0;
                cellsNames48s.PaddingTop = 10;
                cellsNames48s.PaddingBottom = 10;
                cellsNames48s.BorderWidthLeft = 0;
                cellsNames48s.BorderWidthRight = 0.9f;
                cellsNames48s.BorderWidthTop = 0;
                cellsNames48s.BorderWidthBottom = 0.5f;
                tablenew7.AddCell(cellsNames48s);

                PdfPCell cellsNames49s = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames49s.HorizontalAlignment = 1;
                cellsNames49s.Colspan = 0;
                tablenew7.AddCell(cellsNames49s);

                PdfPCell cellsNames50s = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames50s.HorizontalAlignment = 1;
                cellsNames50s.Colspan = 0;
                tablenew7.AddCell(cellsNames50s);

                PdfPCell cellsNames51s = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames51s.HorizontalAlignment = 1;
                cellsNames51s.Colspan = 0;
                tablenew7.AddCell(cellsNames51s);

                PdfPCell cellsNames52s = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames52s.HorizontalAlignment = 1;
                cellsNames52s.Colspan = 0;
                tablenew7.AddCell(cellsNames52s);

                PdfPCell cellsNames53s = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames53s.HorizontalAlignment = 1;
                cellsNames53s.Colspan = 0;
                tablenew7.AddCell(cellsNames53s);

                PdfPCell cellsNames54s = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames54s.HorizontalAlignment = 1;
                cellsNames54s.Colspan = 0;
                tablenew7.AddCell(cellsNames54s);

                PdfPCell cellsNames55s = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames55s.HorizontalAlignment = 1;
                cellsNames55s.Colspan = 0;
                tablenew7.AddCell(cellsNames55s);

                PdfPCell cellsNames56s = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames56s.HorizontalAlignment = 1;
                cellsNames56s.Colspan = 0;
                tablenew7.AddCell(cellsNames56s);

                PdfPCell cellsNames57s = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames57s.HorizontalAlignment = 1;
                cellsNames57s.Colspan = 0;
                tablenew7.AddCell(cellsNames57s);

                document.Add(tablenew7);

                #endregion Basic Information of the Employee


                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);





                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;






            }
        }

        protected void BtnformXXII_Click(object sender, EventArgs e)
        {

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew8 = new PdfPTable(11);
                tablenew8.TotalWidth = 900f;
                tablenew8.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, };
                tablenew8.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;




                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-XXII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew8.AddCell(cellHead);






                PdfPCell cellreturn123s = new PdfPCell(new Phrase("REGISTER OF ADVANCES", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn123s.HorizontalAlignment = 1;
                cellreturn123s.Colspan = 12;
                cellreturn123s.Border = 0;

                tablenew8.AddCell(cellreturn123s);



                PdfPCell cellreturnrule = new PdfPCell(new Phrase("[Rule 78(1)(a)(iii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellreturnrule.HorizontalAlignment = 1;
                cellreturnrule.Colspan = 12;
                cellreturnrule.Border = 0;
                tablenew8.AddCell(cellreturnrule);

                tablenew8.AddCell(cellspace);
                tablenew8.AddCell(cellspace);


                PdfPCell cellNames4s2 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s2.HorizontalAlignment = 0;
                cellNames4s2.Colspan = 5;
                cellNames4s2.Border = 0;
                cellNames4s2.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s2);



                PdfPCell cellNames4s1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s1.HorizontalAlignment = 0;
                cellNames4s1.Colspan = 2;
                cellNames4s1.Border = 0;
                cellNames4s1.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s1);




                PdfPCell cellNames4s3 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s3.HorizontalAlignment = 0;
                cellNames4s3.Colspan = 5;
                cellNames4s3.Border = 0;
                cellNames4s3.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s3);

                tablenew8.AddCell(cellspace);



                PdfPCell cellNames4s4 = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s4.HorizontalAlignment = 0;
                cellNames4s4.Colspan = 5;
                cellNames4s4.Border = 0;
                cellNames4s4.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s4);



                PdfPCell cellNames4s5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s5.HorizontalAlignment = 0;
                cellNames4s5.Colspan = 2;
                cellNames4s5.Border = 0;
                cellNames4s5.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s5);

                PdfPCell cellNames4s6 = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s6.HorizontalAlignment = 0;
                cellNames4s6.Colspan = 5;
                cellNames4s6.Border = 0;
                cellNames4s6.PaddingLeft = 0;
                tablenew8.AddCell(cellNames4s6);


                tablenew8.AddCell(cellspace);
                tablenew8.AddCell(cellspace);
                tablenew8.AddCell(cellspace);

                PdfPCell cellNames4s7 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s7.HorizontalAlignment = 1;
                cellNames4s7.Colspan = 0;
                tablenew8.AddCell(cellNames4s7);

                PdfPCell cellNames4s8 = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s8.HorizontalAlignment = 1;
                cellNames4s8.Colspan = 0;
                tablenew8.AddCell(cellNames4s8);

                PdfPCell cellNames4s9 = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s9.HorizontalAlignment = 1;
                cellNames4s9.Colspan = 0;
                tablenew8.AddCell(cellNames4s9);

                PdfPCell cellNames4s0 = new PdfPCell(new Phrase("nature of employment/Designation", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames4s0.HorizontalAlignment = 1;
                cellNames4s0.Colspan = 0;
                tablenew8.AddCell(cellNames4s0);

                PdfPCell cellNames5s0 = new PdfPCell(new Phrase("Wage periods and wages payable ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s0.HorizontalAlignment = 1;
                cellNames5s0.Colspan = 0;
                tablenew8.AddCell(cellNames5s0);

                PdfPCell cellNames5s1 = new PdfPCell(new Phrase("Date and amount of advance given", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s1.HorizontalAlignment = 1;
                cellNames5s1.Colspan = 0;
                tablenew8.AddCell(cellNames5s1);

                PdfPCell cellNames5s2 = new PdfPCell(new Phrase("Purpose (S) for which advance made ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s2.HorizontalAlignment = 1;
                cellNames5s2.Colspan = 0;
                tablenew8.AddCell(cellNames5s2);

                PdfPCell cellNames5s3 = new PdfPCell(new Phrase("No.of instalments by which advance to be repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s3.HorizontalAlignment = 1;
                cellNames5s3.Colspan = 0;
                tablenew8.AddCell(cellNames5s3);

                PdfPCell cellNames5s4 = new PdfPCell(new Phrase("Date and amount of each instalment repaid ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s4.HorizontalAlignment = 1;
                cellNames5s4.Colspan = 0;
                tablenew8.AddCell(cellNames5s4);

                PdfPCell cellNames5s5 = new PdfPCell(new Phrase("Date on which last instalment was repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s5.HorizontalAlignment = 1;
                cellNames5s5.Colspan = 0;
                tablenew8.AddCell(cellNames5s5);

                PdfPCell cellNames5s6 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNames5s6.HorizontalAlignment = 1;
                cellNames5s6.Colspan = 0;
                tablenew8.AddCell(cellNames5s6);

                PdfPCell cellsNames4sa = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames4sa.HorizontalAlignment = 1;
                cellsNames4sa.Colspan = 0;
                tablenew8.AddCell(cellsNames4sa);

                PdfPCell cellsNamess4sb = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess4sb.HorizontalAlignment = 1;
                cellsNamess4sb.Colspan = 0;
                tablenew8.AddCell(cellsNamess4sb);

                PdfPCell cellsNames4sc = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames4sc.HorizontalAlignment = 1;
                cellsNames4sc.Colspan = 0;
                tablenew8.AddCell(cellsNames4sc);

                PdfPCell cellsNames4sd = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames4sd.HorizontalAlignment = 1;
                cellsNames4sd.Colspan = 0;
                tablenew8.AddCell(cellsNames4sd);

                PdfPCell cellsNames5se = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5se.HorizontalAlignment = 1;
                cellsNames5se.Colspan = 0;
                tablenew8.AddCell(cellsNames5se);

                PdfPCell cellsNames5sf = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sf.HorizontalAlignment = 1;
                cellsNames5sf.Colspan = 0;
                tablenew8.AddCell(cellsNames5sf);

                PdfPCell cellsNames5sg = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sg.HorizontalAlignment = 1;
                cellsNames5sg.Colspan = 0;
                tablenew8.AddCell(cellsNames5sg);

                PdfPCell cellsNames5sh = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sh.HorizontalAlignment = 1;
                cellsNames5sh.Colspan = 0;
                tablenew8.AddCell(cellsNames5sh);

                PdfPCell cellsNames5si = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5si.HorizontalAlignment = 1;
                cellsNames5si.Colspan = 0;
                tablenew8.AddCell(cellsNames5si);

                PdfPCell cellsNames5sj = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sj.HorizontalAlignment = 1;
                cellsNames5sj.Colspan = 0;
                tablenew8.AddCell(cellsNames5sj);

                PdfPCell cellsNames5sk = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNames5sk.HorizontalAlignment = 1;
                cellsNames5sk.Colspan = 0;
                tablenew8.AddCell(cellsNames5sk);


                document.Add(tablenew8);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformIV_Click(object sender, EventArgs e)
        {


            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewone = new PdfPTable(12);
                tablenewone.TotalWidth = 500f;
                tablenewone.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenewone.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-IV  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenewone.AddCell(cellHead);

                PdfPCell cellAPPLICATIONSFOR = new PdfPCell(new Phrase("APPLICATIONS FOR LICENCE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellAPPLICATIONSFOR.HorizontalAlignment = 1;
                cellAPPLICATIONSFOR.Colspan = 12;
                cellAPPLICATIONSFOR.Border = 0;

                tablenewone.AddCell(cellAPPLICATIONSFOR);

                PdfPCell cellRule21 = new PdfPCell(new Phrase("[Rule 21(1)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule21.HorizontalAlignment = 1;
                cellRule21.Colspan = 12;
                cellRule21.Border = 0;
                tablenewone.AddCell(cellRule21);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellShris7 = new PdfPCell(new Phrase("1.  Name and address of the contractor (including his father's name in case of individuals).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris7.HorizontalAlignment = 0;
                cellShris7.Colspan = 12;
                cellShris7.Border = 0;
                tablenewone.AddCell(cellShris7);

                tablenewone.AddCell(cellspace);

                PdfPCell cellTOli5 = new PdfPCell(new Phrase("2.  Date of birth and age (in case of individuals). ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli5.HorizontalAlignment = 0;
                cellTOli5.Colspan = 12;
                cellTOli5.Border = 0;
                tablenewone.AddCell(cellTOli5);

                tablenewone.AddCell(cellspace);

                PdfPCell cellSignaturdate6 = new PdfPCell(new Phrase("3.  Particulars of Establishment where contract labour is to be employed-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate6.HorizontalAlignment = 0;
                cellSignaturdate6.Colspan = 12;
                cellSignaturdate6.Border = 0;
                tablenewone.AddCell(cellSignaturdate6);

                tablenewone.AddCell(cellspace);

                PdfPCell cellShris5 = new PdfPCell(new Phrase("   (a) Name and address of the establishment..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris5.HorizontalAlignment = 0;
                cellShris5.Colspan = 12;
                cellShris5.Border = 0;
                tablenewone.AddCell(cellShris5);

                PdfPCell cellTOli2 = new PdfPCell(new Phrase("   (b) Type of business, trade, industry, manufacture or occupation, which is   carried on in the                   establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli2.HorizontalAlignment = 0;
                cellTOli2.Colspan = 12;
                cellTOli2.Border = 0;
                tablenewone.AddCell(cellTOli2);

                PdfPCell cellSignaturdate4 = new PdfPCell(new Phrase("   (c ) Number and date of certificate of registration of the establishment under the Act.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate4.HorizontalAlignment = 0;
                cellSignaturdate4.Colspan = 12;
                cellSignaturdate4.Border = 0;
                tablenewone.AddCell(cellSignaturdate4);

                PdfPCell cellShris4 = new PdfPCell(new Phrase("   (d) Name and address of the Principal Employer.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris4.HorizontalAlignment = 0;
                cellShris4.Colspan = 12;
                cellShris4.Border = 0;
                cellShris4.PaddingLeft = 0;
                tablenewone.AddCell(cellShris4);
                tablenewone.AddCell(cellspace);

                PdfPCell cellWhetherthe3 = new PdfPCell(new Phrase("4.  Whether the license of the contractor was suspended or revoked.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe3.HorizontalAlignment = 0;
                cellWhetherthe3.Colspan = 12;
                cellWhetherthe3.Border = 0;
                cellWhetherthe3.PaddingLeft = 0;
                tablenewone.AddCell(cellWhetherthe3);

                tablenewone.AddCell(cellspace);

                PdfPCell cellBank3 = new PdfPCell(new Phrase("   (a) Name and address of the establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank3.HorizontalAlignment = 0;
                cellBank3.Colspan = 12;
                cellBank3.Border = 0;
                cellBank3.PaddingLeft = 0;
                tablenewone.AddCell(cellBank3);

                PdfPCell cellShris2 = new PdfPCell(new Phrase("   (b) Duration of the proposed contract work (give particulars of proposed date  of    commencing and ending)..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris2.HorizontalAlignment = 0;
                cellShris2.Colspan = 12;
                cellShris2.Border = 0;
                cellShris2.PaddingLeft = 0;
                tablenewone.AddCell(cellShris2);

                PdfPCell cellTOli = new PdfPCell(new Phrase("   (c) Name and address of the Agent or Manager of Contractor at the work site. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli.HorizontalAlignment = 0;
                cellTOli.Colspan = 12;
                cellTOli.Border = 0;
                cellTOli.PaddingLeft = 0;
                tablenewone.AddCell(cellTOli);

                tablenewone.AddCell(cellspace);

                PdfPCell cellSignaturdate2 = new PdfPCell(new Phrase("   (d) Maximum number of contract labour proposed to be employed in the establishment on   any date.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate2.HorizontalAlignment = 0;
                cellSignaturdate2.Colspan = 12;
                cellSignaturdate2.Border = 0;
                cellSignaturdate2.PaddingLeft = 0;
                tablenewone.AddCell(cellSignaturdate2);

                tablenewone.AddCell(cellspace);

                PdfPCell cellWhetherthe11 = new PdfPCell(new Phrase("5.  Whether the contractor was convicted of any offence within the preceding five years.  If so, give details.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe11.HorizontalAlignment = 0;
                cellWhetherthe11.Colspan = 12;
                cellWhetherthe11.Border = 0;
                cellWhetherthe11.PaddingLeft = 0;
                tablenewone.AddCell(cellWhetherthe11);

                tablenewone.AddCell(cellspace);

                PdfPCell cellBank2 = new PdfPCell(new Phrase("6.  Whether there was any order against the contractor revoking or suspending license or forfeiting security deposits in respect of an earlier contract.  If so, the date of such order.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank2.HorizontalAlignment = 0;
                cellBank2.Colspan = 12;
                cellBank2.Border = 0;
                cellBank2.PaddingLeft = 0;
                tablenewone.AddCell(cellBank2);

                tablenewone.AddCell(cellspace);
                PdfPCell cellShris1 = new PdfPCell(new Phrase("7.  Whether contractor has worked in any other establishment within the past five years. If so, give details of the Principal Employer, establishments, and nature of work.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellShris1.HorizontalAlignment = 0;
                cellShris1.Colspan = 12;
                cellShris1.Border = 0;
                cellShris1.PaddingLeft = 0;
                tablenewone.AddCell(cellShris1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellTOli1 = new PdfPCell(new Phrase("8.  Whether a certificate by the Principal Employer in Form V is enclosed. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellTOli1.HorizontalAlignment = 0;
                cellTOli1.Colspan = 12;
                cellTOli1.Border = 0;
                cellTOli1.PaddingLeft = 0;
                tablenewone.AddCell(cellTOli1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellSignaturdate1 = new PdfPCell(new Phrase("1[9.  Amount of license fee-name of the Union Bank draft No. and date].", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellSignaturdate1.HorizontalAlignment = 0;
                cellSignaturdate1.Colspan = 12;
                cellSignaturdate1.Border = 0;
                cellSignaturdate1.PaddingLeft = 0;
                tablenewone.AddCell(cellSignaturdate1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellWhetherthe1 = new PdfPCell(new Phrase("10.  Amount of security deposit-name of the Union Bank, demand draft No. and date.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellWhetherthe1.HorizontalAlignment = 0;
                cellWhetherthe1.Colspan = 12;
                cellWhetherthe1.Border = 0;
                cellWhetherthe1.PaddingLeft = 0;
                tablenewone.AddCell(cellWhetherthe1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellBank1 = new PdfPCell(new Phrase("Note: The application shall be accompanied by demand draft and challan for the appropriate amount and a certificate in Form V from the principal employer……. …………………date of the receipt of the application with 'demand draft' and the  challan for fees/security deposit. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellBank1.HorizontalAlignment = 0;
                cellBank1.Colspan = 12;
                cellBank1.Border = 0;
                cellBank1.PaddingLeft = 0;
                tablenewone.AddCell(cellBank1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace7 = new PdfPCell(new Phrase(" DECLARATION ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellPlace7.HorizontalAlignment = 1;
                cellPlace7.Colspan = 12;
                cellPlace7.Border = 0;
                cellPlace7.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace7);

                PdfPCell cellPlace6 = new PdfPCell(new Phrase("  I hereby declare that the details given above are correct to the best of my knowledge and belief. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace6.HorizontalAlignment = 0;
                cellPlace6.Colspan = 12;
                cellPlace6.Border = 0;
                cellPlace6.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace6);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace5.HorizontalAlignment = 0;
                cellPlace5.Colspan = 6;
                cellPlace5.Border = 0;
                cellPlace5.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace5);

                PdfPCell celldatess1 = new PdfPCell(new Phrase("Signature of the Applicant(contractor) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldatess1.HorizontalAlignment = 0;
                celldatess1.Colspan = 6;
                celldatess1.Border = 0;
                celldatess1.PaddingLeft = 0;
                tablenewone.AddCell(celldatess1);

                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace3 = new PdfPCell(new Phrase("Place:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace3.HorizontalAlignment = 0;
                cellPlace3.Colspan = 12;
                cellPlace3.Border = 0;
                cellPlace3.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace3);

                PdfPCell cellPlaces1 = new PdfPCell(new Phrase("Date:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlaces1.HorizontalAlignment = 0;
                cellPlaces1.Colspan = 12;
                cellPlaces1.Border = 0;
                cellPlaces1.PaddingLeft = 0;
                tablenewone.AddCell(cellPlaces1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellfilled1 = new PdfPCell(new Phrase("Note: The application should be accompanied by a Treasury Receipt for the   appopriate amount and a certificate in Form V from the Principal Employer. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfilled1.HorizontalAlignment = 0;
                cellfilled1.Colspan = 12;
                cellfilled1.Border = 0;
                cellfilled1.PaddingLeft = 50;
                tablenewone.AddCell(cellfilled1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellapplication1 = new PdfPCell(new Phrase("  (To be filled in the office of the Licensing Officer) Date of receipt of the application with challan for fees/security deposit. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapplication1.HorizontalAlignment = 0;
                cellapplication1.Colspan = 12;
                cellapplication1.Border = 0;
                tablenewone.AddCell(cellapplication1);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                PdfPCell cellPlace1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPlace1.HorizontalAlignment = 0;
                cellPlace1.Colspan = 6;
                cellPlace1.Border = 0;
                cellPlace1.PaddingLeft = 0;
                tablenewone.AddCell(cellPlace1);

                PdfPCell celltheLicensing = new PdfPCell(new Phrase("   Signature of the Licensing officer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltheLicensing.HorizontalAlignment = 0;
                celltheLicensing.Colspan = 6;
                celltheLicensing.Border = 0;
                celltheLicensing.PaddingLeft = 50;
                tablenewone.AddCell(celltheLicensing);

                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);
                tablenewone.AddCell(cellspace);

                document.Add(tablenewone);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();
            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void BtnformXIII_Click(object sender, EventArgs e)
        {

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenew = new PdfPTable(12);
                tablenew.TotalWidth = 900f;
                tablenew.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablenew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XXIII ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablenew.AddCell(cellHead);

                PdfPCell cellreturn12a = new PdfPCell(new Phrase("  REGISTER OF WORKMEN EMPLOYED BY CONTRACTOR", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12a.HorizontalAlignment = 1;
                cellreturn12a.Colspan = 12;
                cellreturn12a.Border = 0;

                tablenew.AddCell(cellreturn12a);

                PdfPCell cellRule75 = new PdfPCell(new Phrase(" [Rule 75]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule75.HorizontalAlignment = 1;
                cellRule75.Colspan = 12;
                cellRule75.Border = 0;
                tablenew.AddCell(cellRule75);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);

                PdfPCell cellNamess40 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess40.HorizontalAlignment = 0;
                cellNamess40.Colspan = 5;
                cellNamess40.Border = 0;
                cellNamess40.PaddingLeft = 0;
                tablenew.AddCell(cellNamess40);

                PdfPCell cellNamess43 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess43.HorizontalAlignment = 0;
                cellNamess43.Colspan = 2;
                cellNamess43.Border = 0;
                cellNamess43.PaddingLeft = 0;
                tablenew.AddCell(cellNamess43);

                PdfPCell cellNamess41 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess41.HorizontalAlignment = 0;
                cellNamess41.Colspan = 5;
                cellNamess41.Border = 0;
                cellNamess41.PaddingLeft = 0;
                tablenew.AddCell(cellNamess41);

                tablenew.AddCell(cellspace);

                PdfPCell cellNamess42 = new PdfPCell(new Phrase("3.   Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess42.HorizontalAlignment = 0;
                cellNamess42.Colspan = 5;
                cellNamess42.Border = 0;
                cellNamess42.PaddingLeft = 0;
                tablenew.AddCell(cellNamess42);

                PdfPCell cellNamess44 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess44.HorizontalAlignment = 0;
                cellNamess44.Colspan = 2;
                cellNamess44.Border = 0;
                cellNamess44.PaddingLeft = 0;
                tablenew.AddCell(cellNamess44);

                PdfPCell cellNamess45 = new PdfPCell(new Phrase("4.   Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess45.HorizontalAlignment = 0;
                cellNamess45.Colspan = 5;
                cellNamess45.Border = 0;
                cellNamess45.PaddingLeft = 0;
                tablenew.AddCell(cellNamess45);

                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);
                tablenew.AddCell(cellspace);

                PdfPCell cellNamess46 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess46.HorizontalAlignment = 1;
                cellNamess46.Colspan = 0;
                cellNamess46.Border = 0;
                cellNamess46.PaddingLeft = 0;
                cellNamess46.PaddingTop = 20;
                cellNamess46.PaddingBottom = 20;
                cellNamess46.BorderWidthLeft = 0.5f;
                cellNamess46.BorderWidthRight = 0.9f;
                cellNamess46.BorderWidthTop = 0.5f;
                cellNamess46.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess46);

                PdfPCell cellNamess47 = new PdfPCell(new Phrase("Name and surname of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess47.HorizontalAlignment = 1;
                cellNamess47.Colspan = 0;
                cellNamess47.Border = 0;
                cellNamess47.PaddingLeft = 0;
                cellNamess47.PaddingLeft = 0;
                cellNamess47.PaddingTop = 20;
                cellNamess47.PaddingBottom = 20;
                cellNamess47.BorderWidthLeft = 0;
                cellNamess47.BorderWidthRight = 0.9f;
                cellNamess47.BorderWidthTop = 0.5f;
                cellNamess47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess47);

                PdfPCell cellNamess48 = new PdfPCell(new Phrase("Age and Sex ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess48.HorizontalAlignment = 1;
                cellNamess48.Colspan = 0;
                cellNamess48.Border = 0;
                cellNamess48.PaddingLeft = 0;
                cellNamess48.PaddingLeft = 0;
                cellNamess48.PaddingLeft = 0;
                cellNamess48.PaddingTop = 20;
                cellNamess48.PaddingBottom = 20;
                cellNamess48.BorderWidthLeft = 0;
                cellNamess48.BorderWidthRight = 0.9f;
                cellNamess48.BorderWidthTop = 0.5f;
                cellNamess48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess48);

                PdfPCell cellNamess49 = new PdfPCell(new Phrase("Father's/husband's name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess49.HorizontalAlignment = 1;
                cellNamess49.Colspan = 0;
                cellNamess49.Border = 0;
                cellNamess49.PaddingLeft = 0;
                cellNamess49.PaddingLeft = 0;
                cellNamess49.PaddingLeft = 0;
                cellNamess49.PaddingTop = 20;
                cellNamess49.PaddingBottom = 20;
                cellNamess49.BorderWidthLeft = 0;
                cellNamess49.BorderWidthRight = 0.9f;
                cellNamess49.BorderWidthTop = 0.5f;
                cellNamess49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess49);

                PdfPCell cellNamess50 = new PdfPCell(new Phrase("Nature of employment/ Designation ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess50.HorizontalAlignment = 1;
                cellNamess50.Colspan = 0;
                cellNamess50.Border = 0;
                cellNamess50.PaddingLeft = 0;
                cellNamess50.PaddingLeft = 0;
                cellNamess50.PaddingLeft = 0;
                cellNamess50.PaddingTop = 20;
                cellNamess50.PaddingBottom = 20;
                cellNamess50.BorderWidthLeft = 0;
                cellNamess50.BorderWidthRight = 0.9f;
                cellNamess50.BorderWidthTop = 0.5f;
                cellNamess50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess50);

                PdfPCell cellNamess51 = new PdfPCell(new Phrase("Permanent Home Address of workman (Village and Tahsil/Taluk and District", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess51.HorizontalAlignment = 1;
                cellNamess51.Colspan = 0;
                cellNamess51.Border = 0;
                cellNamess51.PaddingLeft = 0;
                cellNamess51.PaddingLeft = 0;
                cellNamess51.PaddingLeft = 0;
                cellNamess51.PaddingTop = 20;
                cellNamess51.PaddingBottom = 20;
                cellNamess51.BorderWidthLeft = 0;
                cellNamess51.BorderWidthRight = 0.9f;
                cellNamess51.BorderWidthTop = 0.5f;
                cellNamess51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess51);

                PdfPCell cellNamess52 = new PdfPCell(new Phrase("Local Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess52.HorizontalAlignment = 1;
                cellNamess52.Colspan = 0;
                cellNamess52.Border = 0;
                cellNamess52.PaddingLeft = 0;
                cellNamess52.PaddingLeft = 0;
                cellNamess52.PaddingLeft = 0;
                cellNamess52.PaddingTop = 20;
                cellNamess52.PaddingBottom = 20;
                cellNamess52.BorderWidthLeft = 0;
                cellNamess52.BorderWidthRight = 0.9f;
                cellNamess52.BorderWidthTop = 0.5f;
                cellNamess52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess52);

                PdfPCell cellNamess53 = new PdfPCell(new Phrase("Date of commencement of employment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess53.HorizontalAlignment = 1;
                cellNamess53.Colspan = 0;
                cellNamess53.Border = 0;
                cellNamess53.PaddingLeft = 0;
                cellNamess53.PaddingLeft = 0;
                cellNamess53.PaddingLeft = 0;
                cellNamess53.PaddingTop = 20;
                cellNamess53.PaddingBottom = 20;
                cellNamess53.BorderWidthLeft = 0;
                cellNamess53.BorderWidthRight = 0.9f;
                cellNamess53.BorderWidthTop = 0.5f;
                cellNamess53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess53);

                PdfPCell cellNamess54 = new PdfPCell(new Phrase("Signature or thumb impression of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess54.HorizontalAlignment = 1;
                cellNamess54.Colspan = 0;
                cellNamess54.Border = 0;
                cellNamess54.PaddingLeft = 0;
                cellNamess54.PaddingLeft = 0;
                cellNamess54.PaddingLeft = 0;
                cellNamess54.PaddingTop = 20;
                cellNamess54.PaddingBottom = 20;
                cellNamess54.BorderWidthLeft = 0;
                cellNamess54.BorderWidthRight = 0.9f;
                cellNamess54.BorderWidthTop = 0.5f;
                cellNamess54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess54);

                PdfPCell cellNamess55 = new PdfPCell(new Phrase("Date of termination of employment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess55.HorizontalAlignment = 1;
                cellNamess55.Colspan = 0;
                cellNamess55.Border = 0;
                cellNamess55.PaddingLeft = 0;
                cellNamess55.PaddingTop = 20;
                cellNamess55.PaddingBottom = 20;
                cellNamess55.BorderWidthLeft = 0;
                cellNamess55.BorderWidthRight = 0.9f;
                cellNamess55.BorderWidthTop = 0.5f;
                cellNamess55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess55);

                PdfPCell cellNamess56 = new PdfPCell(new Phrase("Reasons for termination", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess56.HorizontalAlignment = 1;
                cellNamess56.Colspan = 0;
                cellNamess56.Border = 0;
                cellNamess56.PaddingLeft = 0;
                cellNamess56.PaddingTop = 20;
                cellNamess56.PaddingBottom = 20;
                cellNamess56.BorderWidthLeft = 0;
                cellNamess56.BorderWidthRight = 0.9f;
                cellNamess56.BorderWidthTop = 0.5f;
                cellNamess56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess56);

                PdfPCell cellNamess57 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess57.HorizontalAlignment = 1;
                cellNamess57.Colspan = 0;
                cellNamess57.Border = 0;
                cellNamess57.PaddingLeft = 0;
                cellNamess57.PaddingLeft = 0;
                cellNamess57.PaddingLeft = 0;
                cellNamess57.PaddingTop = 20;
                cellNamess57.PaddingBottom = 20;
                cellNamess57.BorderWidthLeft = 0;
                cellNamess57.BorderWidthRight = 0.9f;
                cellNamess57.BorderWidthTop = 0.5f;
                cellNamess57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellNamess57);

                PdfPCell cellssNames47 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellssNames47.HorizontalAlignment = 1;
                cellssNames47.Colspan = 0;
                cellssNames47.Border = 0;
                cellssNames47.PaddingLeft = 0;
                cellssNames47.PaddingLeft = 0;
                cellssNames47.PaddingTop = 10;
                cellssNames47.PaddingBottom = 10;
                cellssNames47.BorderWidthLeft = 0.9f;
                cellssNames47.BorderWidthRight = 0.9f;
                cellssNames47.BorderWidthTop = 0;
                cellssNames47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellssNames47);

                PdfPCell cellsNamesss47 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamesss47.HorizontalAlignment = 1;
                cellsNamesss47.Colspan = 0;
                cellsNamesss47.Border = 0;
                cellsNamesss47.PaddingLeft = 0;
                cellsNamesss47.PaddingTop = 10;
                cellsNamesss47.PaddingBottom = 10;
                cellsNamesss47.BorderWidthLeft = 0;
                cellsNamesss47.BorderWidthRight = 0.9f;
                cellsNamesss47.BorderWidthTop = 0;
                cellsNamesss47.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamesss47);

                PdfPCell cellsNamess48 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess48.HorizontalAlignment = 1;
                cellsNamess48.Colspan = 0;
                cellsNamess48.Border = 0;
                cellsNamess48.PaddingLeft = 0;
                cellsNamess48.PaddingTop = 10;
                cellsNamess48.PaddingBottom = 10;
                cellsNamess48.BorderWidthLeft = 0;
                cellsNamess48.BorderWidthRight = 0.9f;
                cellsNamess48.BorderWidthTop = 0;
                cellsNamess48.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess48);

                PdfPCell cellsNamess49 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess49.HorizontalAlignment = 1;
                cellsNamess49.Colspan = 0;
                cellsNamess49.Border = 0;
                cellsNamess49.PaddingLeft = 0;
                cellsNamess49.PaddingTop = 10;
                cellsNamess49.PaddingBottom = 10;
                cellsNamess49.BorderWidthLeft = 0;
                cellsNamess49.BorderWidthRight = 0.9f;
                cellsNamess49.BorderWidthTop = 0;
                cellsNamess49.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess49);

                PdfPCell cellsNamess50 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess50.HorizontalAlignment = 1;
                cellsNamess50.Colspan = 0;
                cellsNamess50.Border = 0;
                cellsNamess50.PaddingLeft = 0;
                cellsNamess50.PaddingTop = 10;
                cellsNamess50.PaddingBottom = 10;
                cellsNamess50.BorderWidthLeft = 0;
                cellsNamess50.BorderWidthRight = 0.9f;
                cellsNamess50.BorderWidthTop = 0;
                cellsNamess50.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess50);

                PdfPCell cellsNamess51 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess51.HorizontalAlignment = 1;
                cellsNamess51.Colspan = 0;
                cellsNamess51.Border = 0;
                cellsNamess51.PaddingLeft = 0;
                cellsNamess51.PaddingTop = 10;
                cellsNamess51.PaddingBottom = 10;
                cellsNamess51.BorderWidthLeft = 0;
                cellsNamess51.BorderWidthRight = 0.9f;
                cellsNamess51.BorderWidthTop = 0;
                cellsNamess51.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess51);

                PdfPCell cellsNamess52 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess52.HorizontalAlignment = 1;
                cellsNamess52.Colspan = 0;
                cellsNamess52.Border = 0;
                cellsNamess52.PaddingLeft = 0;
                cellsNamess52.PaddingTop = 10;
                cellsNamess52.PaddingBottom = 10;
                cellsNamess52.BorderWidthLeft = 0;
                cellsNamess52.BorderWidthRight = 0.9f;
                cellsNamess52.BorderWidthTop = 0;
                cellsNamess52.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess52);

                PdfPCell cellsNamess53 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess53.HorizontalAlignment = 1;
                cellsNamess53.Colspan = 0;
                cellsNamess53.PaddingLeft = 0;
                cellsNamess53.PaddingTop = 10;
                cellsNamess53.BorderWidthLeft = 0;
                cellsNamess53.BorderWidthRight = 0.9f;
                cellsNamess53.BorderWidthTop = 0;
                cellsNamess53.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess53);

                PdfPCell cellsNamess54 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess54.HorizontalAlignment = 1;
                cellsNamess54.Colspan = 0;
                cellsNamess54.Border = 0;
                cellsNamess54.PaddingLeft = 0;
                cellsNamess54.PaddingTop = 10;
                cellsNamess54.PaddingBottom = 10;
                cellsNamess54.BorderWidthLeft = 0;
                cellsNamess54.BorderWidthRight = 0.9f;
                cellsNamess54.BorderWidthTop = 0;
                cellsNamess54.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess54);

                PdfPCell cellsNamess55 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess55.HorizontalAlignment = 1;
                cellsNamess55.Colspan = 0;
                cellsNamess55.Border = 0;
                cellsNamess55.PaddingLeft = 0;
                cellsNamess55.PaddingTop = 10;
                cellsNamess55.PaddingBottom = 10;
                cellsNamess55.BorderWidthLeft = 0;
                cellsNamess55.BorderWidthRight = 0.9f;
                cellsNamess55.BorderWidthTop = 0;
                cellsNamess55.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess55);

                PdfPCell cellsNamess56 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess56.HorizontalAlignment = 1;
                cellsNamess56.Colspan = 0;
                cellsNamess56.Border = 0;
                cellsNamess56.PaddingLeft = 0;
                cellsNamess56.PaddingTop = 10;
                cellsNamess56.PaddingBottom = 10;
                cellsNamess56.BorderWidthLeft = 0;
                cellsNamess56.BorderWidthRight = 0.9f;
                cellsNamess56.BorderWidthTop = 0;
                cellsNamess56.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess56);

                PdfPCell cellsNamess57 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsNamess57.HorizontalAlignment = 1;
                cellsNamess57.Colspan = 0;
                cellsNamess57.Border = 0;
                cellsNamess57.PaddingLeft = 0;
                cellsNamess57.PaddingTop = 10;
                cellsNamess57.PaddingBottom = 10;
                cellsNamess57.BorderWidthLeft = 0;
                cellsNamess57.BorderWidthRight = 0.9f;
                cellsNamess57.BorderWidthTop = 0;
                cellsNamess57.BorderWidthBottom = 0.5f;
                tablenew.AddCell(cellsNamess57);

                document.Add(tablenew);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void BtnformXX_Click(object sender, EventArgs e)
        {
            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tblenew = new PdfPTable(13);
                tblenew.TotalWidth = 900f;
                tblenew.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tblenew.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 13;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XX ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 13;
                cellHead.Border = 0;
                tblenew.AddCell(cellHead);

                PdfPCell cellreturn12a1 = new PdfPCell(new Phrase("  REGISTER OF DEDUCTIONS FOR DAMAGE OR LOSS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellreturn12a1.HorizontalAlignment = 1;
                cellreturn12a1.Colspan = 13;
                cellreturn12a1.Border = 0;
                tblenew.AddCell(cellreturn12a1);

                PdfPCell cellRule751 = new PdfPCell(new Phrase("  [Rule 78(1)(a)(ii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule751.HorizontalAlignment = 1;
                cellRule751.Colspan = 13;
                cellRule751.Border = 0;
                tblenew.AddCell(cellRule751);

                tblenew.AddCell(cellspace);
                tblenew.AddCell(cellspace);

                PdfPCell cellNamess401 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess401.HorizontalAlignment = 0;
                cellNamess401.Colspan = 5;
                cellNamess401.Border = 0;
                cellNamess401.PaddingLeft = 0;
                tblenew.AddCell(cellNamess401);

                PdfPCell cellNamess431 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess431.HorizontalAlignment = 0;
                cellNamess431.Colspan = 3;
                cellNamess431.Border = 0;
                cellNamess431.PaddingLeft = 0;
                tblenew.AddCell(cellNamess431);

                PdfPCell cellNamess411 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess411.HorizontalAlignment = 0;
                cellNamess411.Colspan = 5;
                cellNamess411.Border = 0;
                cellNamess411.PaddingLeft = 0;
                tblenew.AddCell(cellNamess411);

                tblenew.AddCell(cellspace);

                PdfPCell cellNamess421 = new PdfPCell(new Phrase("3.Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess421.HorizontalAlignment = 0;
                cellNamess421.Colspan = 5;
                cellNamess421.Border = 0;
                cellNamess421.PaddingLeft = 0;
                tblenew.AddCell(cellNamess421);

                PdfPCell cellNamess441 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess441.HorizontalAlignment = 0;
                cellNamess441.Colspan = 3;
                cellNamess441.Border = 0;
                cellNamess441.PaddingLeft = 0;
                tblenew.AddCell(cellNamess441);

                PdfPCell cellNamess451 = new PdfPCell(new Phrase("4.Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess451.HorizontalAlignment = 0;
                cellNamess451.Colspan = 5;
                cellNamess451.Border = 0;
                cellNamess451.PaddingLeft = 0;
                tblenew.AddCell(cellNamess451);

                tblenew.AddCell(cellspace);
                tblenew.AddCell(cellspace);
                tblenew.AddCell(cellspace);










                PdfPCell cellssNames471 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellssNames471.HorizontalAlignment = 0;
                cellssNames471.Colspan = 10;
                tblenew.AddCell(cellssNames471);

                PdfPCell cellsNamesss471 = new PdfPCell(new Phrase(" Date of recovery ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamesss471.HorizontalAlignment = 1;
                cellsNamesss471.Colspan = 2;
                tblenew.AddCell(cellsNamesss471);



                PdfPCell cellsssNames471 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsssNames471.HorizontalAlignment = 0;
                cellsssNames471.Colspan = 1;
                tblenew.AddCell(cellsssNames471);






                PdfPCell cellNamess461 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess461.HorizontalAlignment = 1;
                cellNamess461.Colspan = 0;
                tblenew.AddCell(cellNamess461);

                PdfPCell cellNamess471 = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess471.HorizontalAlignment = 1;
                cellNamess471.Colspan = 0;
                tblenew.AddCell(cellNamess471);

                PdfPCell cellNamess481 = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess481.HorizontalAlignment = 1;
                cellNamess481.Colspan = 0;
                tblenew.AddCell(cellNamess481);


                PdfPCell cellNamess501 = new PdfPCell(new Phrase("Designation/Nature of employment  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess501.HorizontalAlignment = 1;
                cellNamess501.Colspan = 0;
                tblenew.AddCell(cellNamess501);

                PdfPCell cellNamess51 = new PdfPCell(new Phrase("Particulars of damage or loss", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess51.HorizontalAlignment = 1;
                cellNamess51.Colspan = 0;
                tblenew.AddCell(cellNamess51);

                PdfPCell cellNamess521 = new PdfPCell(new Phrase("Date of damage or loss", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess521.HorizontalAlignment = 1;
                cellNamess521.Colspan = 0;
                tblenew.AddCell(cellNamess521);

                PdfPCell cellNamess531 = new PdfPCell(new Phrase("Date of damage  showned  cause  against deduction", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess531.HorizontalAlignment = 1;
                cellNamess531.Colspan = 0;
                tblenew.AddCell(cellNamess531);

                PdfPCell cellNamess541 = new PdfPCell(new Phrase("Name of person in whose presence employee's explaination was heard", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess541.HorizontalAlignment = 1;
                cellNamess541.Colspan = 0;
                tblenew.AddCell(cellNamess541);

                PdfPCell cellNamess551 = new PdfPCell(new Phrase("Amount of  deduction imposed", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess551.HorizontalAlignment = 1;
                cellNamess551.Colspan = 0;
                tblenew.AddCell(cellNamess551);

                PdfPCell cellNamess561 = new PdfPCell(new Phrase("No. of instalments", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess561.HorizontalAlignment = 1;
                cellNamess561.Colspan = 0;
                tblenew.AddCell(cellNamess561);


                PdfPCell cellNamess5510 = new PdfPCell(new Phrase("First instalments", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess5510.HorizontalAlignment = 1;
                cellNamess5510.Colspan = 0;
                tblenew.AddCell(cellNamess5510);

                PdfPCell cellNamess5610 = new PdfPCell(new Phrase("Second instalments", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess5610.HorizontalAlignment = 1;
                cellNamess5610.Colspan = 0;
                tblenew.AddCell(cellNamess5610);

                PdfPCell cellNamess571 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellNamess571.HorizontalAlignment = 1;
                cellNamess571.Colspan = 0;
                tblenew.AddCell(cellNamess571);







                PdfPCell cellssNames4710 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellssNames4710.HorizontalAlignment = 1;
                cellssNames4710.Colspan = 0;
                cellssNames4710.PaddingBottom = 10f;
                tblenew.AddCell(cellssNames4710);

                PdfPCell cellsNamesss4710 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamesss4710.HorizontalAlignment = 1;
                cellsNamesss4710.Colspan = 0;
                cellsNamesss4710.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamesss4710);

                PdfPCell cellsNamess4810 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess4810.HorizontalAlignment = 1;
                cellsNamess4810.Colspan = 0;
                cellsNamess4810.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess4810);

                PdfPCell cellsNamess491 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess491.HorizontalAlignment = 1;
                cellsNamess491.Colspan = 0;
                cellsNamess491.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess491);

                PdfPCell cellsNamess501 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess501.HorizontalAlignment = 1;
                cellsNamess501.Colspan = 0;
                cellsNamess501.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess501);

                PdfPCell cellsNamess511 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess511.HorizontalAlignment = 1;
                cellsNamess511.Colspan = 0;
                cellsNamess511.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess511);

                PdfPCell cellsNamess521 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess521.HorizontalAlignment = 1;
                cellsNamess521.Colspan = 0;
                cellsNamess521.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess521);

                PdfPCell cellsNamess531 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess531.HorizontalAlignment = 1;
                cellsNamess531.Colspan = 0;
                cellsNamess531.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess531);

                PdfPCell cellsNamess541 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess541.HorizontalAlignment = 1;
                cellsNamess541.Colspan = 0;
                cellsNamess541.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess541);

                PdfPCell cellsNamess551 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess551.HorizontalAlignment = 1;
                cellsNamess551.Colspan = 0;
                cellsNamess551.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess551);

                PdfPCell cellsNamess561 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess561.HorizontalAlignment = 1;
                cellsNamess561.Colspan = 0;
                cellsNamess561.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess561);

                PdfPCell cellsNamess571 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess571.HorizontalAlignment = 1;
                cellsNamess571.Colspan = 0;
                cellsNamess571.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess571);


                PdfPCell cellsNamess5711 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellsNamess5711.HorizontalAlignment = 1;
                cellsNamess5711.Colspan = 0;
                cellsNamess5711.PaddingBottom = 10f;
                tblenew.AddCell(cellsNamess5711);

                document.Add(tblenew);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;







            }
        }

        protected void BtnnformXXII_Click(object sender, EventArgs e)
        {
            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewc = new PdfPTable(11);
                tablenewc.TotalWidth = 900f;
                tablenewc.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, };
                tablenewc.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 11;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form-XX ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 11;
                cellHead.Border = 0;
                tablenewc.AddCell(cellHead);

                PdfPCell cellreturn12a1 = new PdfPCell(new Phrase("  REGISTER OF DEDUCTIONS FOR DAMAGE OR LOSS", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12a1.HorizontalAlignment = 1;
                cellreturn12a1.Colspan = 11;
                cellreturn12a1.Border = 0;
                tablenewc.AddCell(cellreturn12a1);

                PdfPCell cellRule751 = new PdfPCell(new Phrase("  [Rule 78(1)(a)(ii)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule751.HorizontalAlignment = 1;
                cellRule751.Colspan = 11;
                cellRule751.Border = 0;
                tablenewc.AddCell(cellRule751);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);

                PdfPCell cellNamess401 = new PdfPCell(new Phrase("1.Name and address of contractor...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess401.HorizontalAlignment = 0;
                cellNamess401.Colspan = 4;
                cellNamess401.Border = 0;
                cellNamess401.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess401);

                PdfPCell cellNamess431 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess431.HorizontalAlignment = 0;
                cellNamess431.Colspan = 2;
                cellNamess431.Border = 0;
                cellNamess431.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess431);

                PdfPCell cellNamess411 = new PdfPCell(new Phrase("2.Name and address of establishment in/under	which contract is carried on...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess411.HorizontalAlignment = 0;
                cellNamess411.Colspan = 5;
                cellNamess411.Border = 0;
                cellNamess411.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess411);

                tablenewc.AddCell(cellspace);

                PdfPCell cellNamess421 = new PdfPCell(new Phrase("3.Nature and location of work...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess421.HorizontalAlignment = 0;
                cellNamess421.Colspan = 4;
                cellNamess421.Border = 0;
                cellNamess421.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess421);

                PdfPCell cellNamess441 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess441.HorizontalAlignment = 0;
                cellNamess441.Colspan = 2;
                cellNamess441.Border = 0;
                cellNamess441.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess441);

                PdfPCell cellNamess451 = new PdfPCell(new Phrase("4.Name and address of principal employer...................................................................................................................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellNamess451.HorizontalAlignment = 0;
                cellNamess451.Colspan = 5;
                cellNamess451.Border = 0;
                cellNamess451.PaddingLeft = 0;
                tablenewc.AddCell(cellNamess451);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);

                PdfPCell celltable10 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable10.HorizontalAlignment = 1;
                celltable10.Colspan = 0;
                tablenewc.AddCell(celltable10);

                PdfPCell celltable09 = new PdfPCell(new Phrase("Name of workman", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable09.HorizontalAlignment = 1;
                celltable09.Colspan = 0;
                tablenewc.AddCell(celltable09);

                PdfPCell celltable08 = new PdfPCell(new Phrase("Father's/husband's name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable08.HorizontalAlignment = 1;
                celltable08.Colspan = 0;
                tablenewc.AddCell(celltable08);


                PdfPCell celltable07 = new PdfPCell(new Phrase("Nature of employment/ Designation  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable07.HorizontalAlignment = 1;
                celltable07.Colspan = 0;
                tablenewc.AddCell(celltable07);

                PdfPCell celltable06 = new PdfPCell(new Phrase("Wage period and wages payable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable06.HorizontalAlignment = 1;
                celltable06.Colspan = 0;
                tablenewc.AddCell(celltable06);

                PdfPCell celltable05 = new PdfPCell(new Phrase("Date and amount of advance given", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable05.HorizontalAlignment = 1;
                celltable05.Colspan = 0;
                tablenewc.AddCell(celltable05);


                PdfPCell celltable11 = new PdfPCell(new Phrase("purpose (s)  for which advance made", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable11.HorizontalAlignment = 1;
                celltable11.Colspan = 0;
                tablenewc.AddCell(celltable11);


                PdfPCell celltable04 = new PdfPCell(new Phrase("Paid by by which advance to be repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable04.HorizontalAlignment = 1;
                celltable04.Colspan = 0;
                tablenewc.AddCell(celltable04);

                PdfPCell celltable03 = new PdfPCell(new Phrase("Date and amount of each instalment repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable03.HorizontalAlignment = 1;
                celltable03.Colspan = 0;
                tablenewc.AddCell(celltable03);

                PdfPCell celltable02 = new PdfPCell(new Phrase("Date on which last  instalment was repaid", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable02.HorizontalAlignment = 1;
                celltable02.Colspan = 0;
                tablenewc.AddCell(celltable02);

                PdfPCell celltable01 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltable01.HorizontalAlignment = 1;
                celltable01.Colspan = 0;
                tablenewc.AddCell(celltable01);

                PdfPCell celltabl11 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl11.HorizontalAlignment = 1;
                celltabl11.Colspan = 0;
                celltabl11.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl11);

                PdfPCell celltabl10 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl10.HorizontalAlignment = 1;
                celltabl10.Colspan = 0;
                celltabl10.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl10);

                PdfPCell celltabl9 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl9.HorizontalAlignment = 1;
                celltabl9.Colspan = 0;
                celltabl9.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl9);

                PdfPCell celltabl8 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl8.HorizontalAlignment = 1;
                celltabl8.Colspan = 0;
                celltabl8.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl8);

                PdfPCell celltabl7 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl7.HorizontalAlignment = 1;
                celltabl7.Colspan = 0;
                celltabl7.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl7);

                PdfPCell celltabl6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl6.HorizontalAlignment = 1;
                celltabl6.Colspan = 0;
                celltabl6.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl6);

                PdfPCell celltabl5 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl5.HorizontalAlignment = 1;
                celltabl5.Colspan = 0;
                celltabl5.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl5);

                PdfPCell celltabl4 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl4.HorizontalAlignment = 1;
                celltabl4.Colspan = 0;
                celltabl4.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl4);

                PdfPCell celltabl3 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl3.HorizontalAlignment = 1;
                celltabl3.Colspan = 0;
                celltabl3.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl3);

                PdfPCell celltabl2 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl2.HorizontalAlignment = 1;
                celltabl2.Colspan = 0;
                celltabl2.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl2);

                PdfPCell celltabl1 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabl1.HorizontalAlignment = 1;
                celltabl1.Colspan = 0;
                celltabl1.PaddingBottom = 10f;
                tablenewc.AddCell(celltabl1);


                document.Add(tablenewc);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;









            }
        }

        protected void BtnformVA_Click(object sender, EventArgs e)
        {

            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text + "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablenewc = new PdfPTable(11);
                tablenewc.TotalWidth = 900f;
                tablenewc.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, };
                tablenewc.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 11;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("Form V-A", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 11;
                cellHead.Border = 0;
                tablenewc.AddCell(cellHead);

                PdfPCell cellreturn12a1 = new PdfPCell(new Phrase("    APPLICATION FOR ADJUSTMENT OF SECURITY DEPOSIT", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK)));
                cellreturn12a1.HorizontalAlignment = 1;
                cellreturn12a1.Colspan = 11;
                cellreturn12a1.Border = 0;
                tablenewc.AddCell(cellreturn12a1);

                PdfPCell cellRule751 = new PdfPCell(new Phrase("   [Rule 24 (1A)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule751.HorizontalAlignment = 1;
                cellRule751.Colspan = 11;
                cellRule751.Border = 0;
                tablenewc.AddCell(cellRule751);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);


                PdfPCell celltables09 = new PdfPCell(new Phrase("Name and address of the contractor", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables09.HorizontalAlignment = 1;
                celltables09.Colspan = 0;
                tablenewc.AddCell(celltables09);

                PdfPCell celltables08 = new PdfPCell(new Phrase("No. and date of license ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables08.HorizontalAlignment = 1;
                celltables08.Colspan = 0;
                tablenewc.AddCell(celltables08);


                PdfPCell celltables07 = new PdfPCell(new Phrase("Date of expiry of previous license  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables07.HorizontalAlignment = 1;
                celltables07.Colspan = 0;
                tablenewc.AddCell(celltables07);

                PdfPCell celltables06 = new PdfPCell(new Phrase("Whether the license of the contractor was suspended or revoked", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables06.HorizontalAlignment = 1;
                celltables06.Colspan = 0;
                tablenewc.AddCell(celltables06);

                PdfPCell celltables05 = new PdfPCell(new Phrase("1[No. and date of the demand draft of the security deposit in resoect of the previous license]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables05.HorizontalAlignment = 1;
                celltables05.Colspan = 0;
                tablenewc.AddCell(celltables05);


                PdfPCell celltables11 = new PdfPCell(new Phrase("Amount of previous security deposit", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables11.HorizontalAlignment = 1;
                celltables11.Colspan = 0;
                tablenewc.AddCell(celltables11);


                PdfPCell celltables04 = new PdfPCell(new Phrase("No. and date of the demand draft of the balance of security deposit, if any, required on the fresh contract]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables04.HorizontalAlignment = 1;
                celltables04.Colspan = 0;
                tablenewc.AddCell(celltables04);

                PdfPCell celltables03 = new PdfPCell(new Phrase("No. and date of certificate of registration of the establishment in relation to which the new license is applied for", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables03.HorizontalAlignment = 1;
                celltables03.Colspan = 0;
                tablenewc.AddCell(celltables03);

                PdfPCell celltables02 = new PdfPCell(new Phrase("Name and address of the principal employer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables02.HorizontalAlignment = 1;
                celltables02.Colspan = 0;
                tablenewc.AddCell(celltables02);



                PdfPCell celltables10 = new PdfPCell(new Phrase("Particulars of fresh contract ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables10.HorizontalAlignment = 1;
                celltables10.Colspan = 0;
                tablenewc.AddCell(celltables10);

                PdfPCell celltables01 = new PdfPCell(new Phrase("Remarks", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltables01.HorizontalAlignment = 1;
                celltables01.Colspan = 0;
                tablenewc.AddCell(celltables01);

                PdfPCell celltabls11 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls11.HorizontalAlignment = 1;
                celltabls11.Colspan = 0;
                celltabls11.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls11);

                PdfPCell celltabls10 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls10.HorizontalAlignment = 1;
                celltabls10.Colspan = 0;
                celltabls10.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls10);

                PdfPCell celltabls9 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls9.HorizontalAlignment = 1;
                celltabls9.Colspan = 0;
                celltabls9.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls9);

                PdfPCell celltabls8 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls8.HorizontalAlignment = 1;
                celltabls8.Colspan = 0;
                celltabls8.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls8);

                PdfPCell celltabls7 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls7.HorizontalAlignment = 1;
                celltabls7.Colspan = 0;
                celltabls7.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls7);

                PdfPCell celltabls6 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls6.HorizontalAlignment = 1;
                celltabls6.Colspan = 0;
                celltabls6.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls6);

                PdfPCell celltabls5 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls5.HorizontalAlignment = 1;
                celltabls5.Colspan = 0;
                celltabls5.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls5);

                PdfPCell celltabls4 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls4.HorizontalAlignment = 1;
                celltabls4.Colspan = 0;
                celltabls4.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls4);

                PdfPCell celltabls3 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls3.HorizontalAlignment = 1;
                celltabls3.Colspan = 0;
                celltabls3.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls3);

                PdfPCell celltabls2 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls2.HorizontalAlignment = 1;
                celltabls2.Colspan = 0;
                celltabls2.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls2);

                PdfPCell celltabls1 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls1.HorizontalAlignment = 1;
                celltabls1.Colspan = 0;
                celltabls1.PaddingBottom = 10f;
                tablenewc.AddCell(celltabls1);

                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);
                tablenewc.AddCell(cellspace);

                PdfPCell celltabls3s = new PdfPCell(new Phrase("Place:......................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls3s.HorizontalAlignment = 0;
                celltabls3s.Colspan = 11;
                celltabls3s.Border = 0;
                tablenewc.AddCell(celltabls3s);

                PdfPCell celltabls2s = new PdfPCell(new Phrase("Date:........................", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls2s.HorizontalAlignment = 0;
                celltabls2s.Colspan = 5;
                celltabls2s.Border = 0;
                tablenewc.AddCell(celltabls2s);

                PdfPCell celltabls1s = new PdfPCell(new Phrase(" Signature of the Applicant", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltabls1s.HorizontalAlignment = 1;
                celltabls1s.Colspan = 6;
                celltabls1s.Border = 0;
                tablenewc.AddCell(celltabls1s);



                document.Add(tablenewc);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;


            }
        }

        protected void BtnformX_Click(object sender, EventArgs e)
        {
            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;


            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;


            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;

            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]

            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";

                Document document = new Document(PageSize.LEGAL);
                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tablesnewone = new PdfPTable(12);
                tablesnewone.TotalWidth = 500f;
                tablesnewone.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tablesnewone.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 12;
                cellspace.Border = 0;
                cellspace.PaddingTop = -5;

                PdfPCell cellHead = new PdfPCell(new Phrase("FORM-X  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 12;
                cellHead.Border = 0;

                tablesnewone.AddCell(cellHead);

                PdfPCell cellTEMPORARY = new PdfPCell(new Phrase("APPLICATION FOR TEMPORARY LICENSE", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 13, Font.BOLD, BaseColor.BLACK)));
                cellTEMPORARY.HorizontalAlignment = 1;
                cellTEMPORARY.Colspan = 12;
                cellTEMPORARY.Border = 0;

                tablesnewone.AddCell(cellTEMPORARY);

                PdfPCell cellRule32 = new PdfPCell(new Phrase("[Rule 32 (2)]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellRule32.HorizontalAlignment = 1;
                cellRule32.Colspan = 12;
                cellRule32.Border = 0;
                tablesnewone.AddCell(cellRule32);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument16 = new PdfPCell(new Phrase("1.  Name and address of the contractor (including his father's name in case of individuals).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument16.HorizontalAlignment = 0;
                celldocument16.Colspan = 12;
                celldocument16.Border = 0;
                tablesnewone.AddCell(celldocument16);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument15 = new PdfPCell(new Phrase("2.  Date of birth and age (in case of individuals). ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument15.HorizontalAlignment = 0;
                celldocument15.Colspan = 12;
                celldocument15.Border = 0;
                tablesnewone.AddCell(celldocument15);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument14 = new PdfPCell(new Phrase("3.  Particulars of Establishment where contract labour is to be employed-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument14.HorizontalAlignment = 0;
                celldocument14.Colspan = 12;
                celldocument14.Border = 0;
                tablesnewone.AddCell(celldocument14);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument13 = new PdfPCell(new Phrase("    (a) Name and address of the establishment..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument13.HorizontalAlignment = 0;
                celldocument13.Colspan = 12;
                celldocument13.Border = 0;
                tablesnewone.AddCell(celldocument13);

                PdfPCell celldocument12 = new PdfPCell(new Phrase("    (b) Type of business, trade, industry, manufacture or occupation, which is   carried on in the establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument12.HorizontalAlignment = 0;
                celldocument12.Colspan = 12;
                celldocument12.Border = 0;
                tablesnewone.AddCell(celldocument12);



                PdfPCell celldocument11 = new PdfPCell(new Phrase("     (c) Name and address of the Principal Employer.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument11.HorizontalAlignment = 0;
                celldocument11.Colspan = 12;
                celldocument11.Border = 0;
                celldocument11.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument11);
                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument10 = new PdfPCell(new Phrase("4.  Particulars of contract labour-", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument10.HorizontalAlignment = 0;
                celldocument10.Colspan = 12;
                celldocument10.Border = 0;
                celldocument10.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument10);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument9 = new PdfPCell(new Phrase("     (a) Nature of work in which contract labour is employed or is to be employed in the establishment.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument9.HorizontalAlignment = 0;
                celldocument9.Colspan = 12;
                celldocument9.Border = 0;
                celldocument9.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument9);

                PdfPCell celldocument8 = new PdfPCell(new Phrase("     (b) Duration of the proposed contract work (give particulars of proposed date  of commencing and ending).", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument8.HorizontalAlignment = 0;
                celldocument8.Colspan = 12;
                celldocument8.Border = 0;
                celldocument8.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument8);

                PdfPCell celldocument7 = new PdfPCell(new Phrase("     (c) Name and address of the Agent or Manager of Contractor at the work site.  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument7.HorizontalAlignment = 0;
                celldocument7.Colspan = 12;
                celldocument7.Border = 0;
                celldocument7.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument7);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument6 = new PdfPCell(new Phrase("     (d) Maximum number of contract labour proposed to be employed in the establishment on any date.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument6.HorizontalAlignment = 0;
                celldocument6.Colspan = 12;
                celldocument6.Border = 0;
                celldocument6.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument6);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument5 = new PdfPCell(new Phrase("5.  Whether the contractor was convicted of any offence within the preceding five years.  If so, give details.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument5.HorizontalAlignment = 0;
                celldocument5.Colspan = 12;
                celldocument5.Border = 0;
                celldocument5.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument5);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument4 = new PdfPCell(new Phrase("6.  Whether there was any order against the contractor revoking or suspending license or forfeiting security deposits in respect of an earlier contract.  If so, the date of such order.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument4.HorizontalAlignment = 0;
                celldocument4.Colspan = 12;
                celldocument4.Border = 0;
                celldocument4.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument4);

                tablesnewone.AddCell(cellspace);
                PdfPCell celldocument3 = new PdfPCell(new Phrase("7.  Whether contractor has worked in any other establishment within the past five years. If so, give details of the Principal Employer, establishments, and nature of work.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument3.HorizontalAlignment = 0;
                celldocument3.Colspan = 12;
                celldocument3.Border = 0;
                celldocument3.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument3);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument2 = new PdfPCell(new Phrase("8.  1[Amount of license fee paid-name of the Union Bank demand draft No. and date].", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument2.HorizontalAlignment = 0;
                celldocument2.Colspan = 12;
                celldocument2.Border = 0;
                celldocument2.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument2);

                tablesnewone.AddCell(cellspace);

                PdfPCell celldocument1 = new PdfPCell(new Phrase("9.  2[Amount of security deposit-name of the Union Bank demand draft No. and date.  Date of the receipt of the application with demand draft for fees/security deposits.]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celldocument1.HorizontalAlignment = 0;
                celldocument1.Colspan = 12;
                celldocument1.Border = 0;
                celldocument1.PaddingLeft = 0;
                tablesnewone.AddCell(celldocument1);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell cellPl = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPl.HorizontalAlignment = 0;
                cellPl.Colspan = 6;
                cellPl.Border = 0;
                cellPl.PaddingLeft = 0;
                tablesnewone.AddCell(cellPl);

                PdfPCell cellapp = new PdfPCell(new Phrase("Signature of the Applicant(contractor) ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapp.HorizontalAlignment = 0;
                cellapp.Colspan = 6;
                cellapp.Border = 0;
                cellapp.PaddingLeft = 0;
                tablesnewone.AddCell(cellapp);

                tablesnewone.AddCell(cellspace);

                PdfPCell cellnewPlace = new PdfPCell(new Phrase("Place:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnewPlace.HorizontalAlignment = 0;
                cellnewPlace.Colspan = 12;
                cellnewPlace.Border = 0;
                cellnewPlace.PaddingLeft = 0;
                tablesnewone.AddCell(cellnewPlace);

                PdfPCell cellnewdate = new PdfPCell(new Phrase("Date:…………………….. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellnewdate.HorizontalAlignment = 0;
                cellnewdate.Colspan = 12;
                cellnewdate.Border = 0;
                cellnewdate.PaddingLeft = 0;
                tablesnewone.AddCell(cellnewdate);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell cellapplications1 = new PdfPCell(new Phrase("  (To be filled in the office of the Licensing Officer) Date of receipt of the application with challan for fees....................security deposit.................... ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellapplications1.HorizontalAlignment = 0;
                cellapplications1.Colspan = 12;
                cellapplications1.Border = 0;
                tablesnewone.AddCell(cellapplications1);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                PdfPCell cellPl1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellPl1.HorizontalAlignment = 0;
                cellPl1.Colspan = 6;
                cellPl1.Border = 0;
                cellPl1.PaddingLeft = 0;
                tablesnewone.AddCell(cellPl1);

                PdfPCell celltheLicensing1 = new PdfPCell(new Phrase("   Signature of the Licensing officer", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                celltheLicensing1.HorizontalAlignment = 0;
                celltheLicensing1.Colspan = 6;
                celltheLicensing1.Border = 0;
                celltheLicensing1.PaddingLeft = 0;
                tablesnewone.AddCell(celltheLicensing1);

                tablesnewone.AddCell(cellspace);
                tablesnewone.AddCell(cellspace);

                document.Add(tablesnewone);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);

                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();
            }

            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void Btnform9_Click(object sender, EventArgs e)
        {



            int Fontsize = 13;
            string fontsyle = "verdana";

            #region Variable Declaration

            string contactno = "";
            string Idno = "";
            string date = "";
            string postappliedfor = "";
            string name = "";
            string fathername = "";
            string dateofbirth = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string community = "";
            string maritalstatus = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prdoorno = "";
            string prstreet = "";
            string prarea = "";
            string prcity = "";
            string prLmark = "";
            string prDistrict = "";
            string prPincode = "";
            string prState = "";


            string pedoor = "";
            string pestreet = "";
            string pearea = "";
            string pecity = "";
            string pelmark = "";
            string peDistrict = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";

            string sscschool = "";
            string sscbduniversity = "";
            string sscstdyear = "";

            string imschool = "";
            string imbduniversity = "";
            string imstdyear = "";

            string dgschool = "";
            string dgbduniversity = "";
            string dgstdyear = "";

            string pgschool = "";
            string pgbduniversity = "";
            string pgstdyear = "";
            string EmpCertfDet1 = "";

            float EmpsecurityDeposit = 0;
            string Referedby = "";
            string clientname = "";


            string relationName = "";
            string relationAge = "";
            string relationType = "";


            string EmpCertfDet2 = "";
            string EmpCertfDet3 = "";
            string EmpCertfDet4 = "";

            string Original1 = "";
            string Original2 = "";
            string Original3 = "";
            string Original4 = "";

            string Xerox1 = "";
            string Xerox2 = "";
            string Xerox3 = "";
            string Xerox4 = "";

            string Ref1Phone1 = "";
            string Ref1Phone2 = "";
            string Ref2Phone1 = "";
            string Ref2Phone2 = "";

            string ReplacementFor = "";
            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string Fname = "";
            string Fage = "";
            string Mname = "";
            string Mage = "";
            string relationoccupation = "";
            string relationresidence = "";
            string relationplace = "";
            string Esino = "";
            string prphone = "";
            string pephone = "";

            #endregion


            if (txtEmpid.Text == "")
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                return;
            }

            #region  Begin  New Code


            string query = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text + "' and RType='Father' ";
            DataTable dtfather = Config.ExecuteReaderWithQueryAsync(query).Result;

            if (dtfather.Rows.Count > 0)
            {
                Fname = dtfather.Rows[0]["RName"].ToString();
                Fage = dtfather.Rows[0]["age"].ToString();
                if (Fage == "0")
                {
                    Fage = "";
                }
                else
                {
                    Fage = dtfather.Rows[0]["age"].ToString();
                }
            }
            string query1 = " select RName,age from EmpRelationships where EmpId='" + txtEmpid.Text+ "' and RType='Mother' ";
            DataTable dtmother = Config.ExecuteReaderWithQueryAsync(query1).Result;

            if (dtmother.Rows.Count > 0)
            {
                Mname = dtmother.Rows[0]["RName"].ToString();
                Mage = dtmother.Rows[0]["age"].ToString();
                if (Mage == "0")
                {
                    Mage = "";
                }
                else
                {
                    Mage = dtmother.Rows[0]["age"].ToString();
                }
            }

            string query2 = " select EmpESINo from EmpESICodes where Empid='" + txtEmpid.Text+ "'  ";
            DataTable dtesi = Config.ExecuteReaderWithQueryAsync(query2).Result;
            if (dtesi.Rows.Count > 0)
            {
                Esino = dtesi.Rows[0]["EmpESINo"].ToString();

            }


            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables
            SPName = "GetEmpBiodataForPrint";
            Empid = txtEmpid.Text;
            #endregion End Assign values To the Variables

            #region Begin Pass values to the Hash table
            HTEmpBiodata.Add("@empid", Empid);
            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #endregion End New Code As on [31-05-2014]


            string datejoin = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
            DateTime CurrentDate = DateTime.Now;
            TimeSpan diffDate = new TimeSpan();
            if (datejoin.Length > 0)
            {
                DateTime joinDate = DateTime.Parse(datejoin, CultureInfo.GetCultureInfo("en-GB"));
                diffDate = CurrentDate.Subtract(joinDate);
            }

            string Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
            string EmpGender = "";

            if (Gender == "True")
            {
                EmpGender = "Male";
            }
            if (Gender == "False")
            {
                EmpGender = "Female";
            }

            int diffdays = diffDate.Days;

            if (dtEmpdetails.Rows.Count > 0)
            {

                #region Assining data to Variables

                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                if (dateofbirth == "01/01/1900")
                {
                    dateofbirth = string.Empty;
                }

                PlaceofBirth = dtEmpdetails.Rows[0]["EmpPlaceofBirth"].ToString();
                Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                if (date == "01/01/1900")
                {
                    date = string.Empty;
                }
                previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                community = dtEmpdetails.Rows[0]["community"].ToString();
                if (community == "0")
                {
                    community = "Others";
                }
                if (community == "1")
                {
                    community = "SC";
                }
                if (community == "2")
                {
                    community = "ST";
                }
                if (community == "3")
                {
                    community = "OBC";
                }
                string Nationalorcommunity = string.Empty;

                if (nationality.Length > 0 && community.Length > 0)
                {
                    Nationalorcommunity = nationality + "/ " + community;
                }
                if (nationality.Length > 0 && community.Length == 0)
                {
                    Nationalorcommunity = nationality;
                }
                if (nationality.Length == 0 && community.Length > 0)
                {
                    Nationalorcommunity = community;
                }
                maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();

                if (bloodgroup == "0")
                {
                    bloodgroup = string.Empty;
                }

                identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();

                refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();

                prdoorno = dtEmpdetails.Rows[0]["prdoorno"].ToString();
                prstreet = dtEmpdetails.Rows[0]["prstreet"].ToString();
                prarea = dtEmpdetails.Rows[0]["prarea"].ToString();
                prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                prDistrict = dtEmpdetails.Rows[0]["prDistrict"].ToString();
                prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                prState = dtEmpdetails.Rows[0]["prState"].ToString();
                prphone = dtEmpdetails.Rows[0]["prphone"].ToString();


                pedoor = dtEmpdetails.Rows[0]["pedoor"].ToString();
                pestreet = dtEmpdetails.Rows[0]["pestreet"].ToString();
                pearea = dtEmpdetails.Rows[0]["pearea"].ToString();
                pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                peDistrict = dtEmpdetails.Rows[0]["peDistrict"].ToString();
                pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                peState = dtEmpdetails.Rows[0]["peState"].ToString();
                pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                sscschool = dtEmpdetails.Rows[0]["sscschool"].ToString();
                sscbduniversity = dtEmpdetails.Rows[0]["sscbduniversity"].ToString();
                sscstdyear = dtEmpdetails.Rows[0]["sscstdyear"].ToString();
                imschool = dtEmpdetails.Rows[0]["imschool"].ToString();
                imbduniversity = dtEmpdetails.Rows[0]["imbduniversity"].ToString();
                imstdyear = dtEmpdetails.Rows[0]["imstdyear"].ToString();
                dgschool = dtEmpdetails.Rows[0]["dgschool"].ToString();
                dgbduniversity = dtEmpdetails.Rows[0]["dgbduniversity"].ToString();
                dgstdyear = dtEmpdetails.Rows[0]["dgstdyear"].ToString();
                pgschool = dtEmpdetails.Rows[0]["pgschool"].ToString();
                pgbduniversity = dtEmpdetails.Rows[0]["pgbduniversity"].ToString();
                pgstdyear = dtEmpdetails.Rows[0]["pgstdyear"].ToString();

                EmpCertfDet1 = dtEmpdetails.Rows[0]["EmpCertfDet"].ToString();

                // EmpsecurityDeposit = float.Parse(dtEmpdetails.Rows[0]["EmpsecurityDeposit"].ToString());
                Referedby = dtEmpdetails.Rows[0]["Referedby"].ToString();




                if (Referedby == "0")
                {
                    Referedby = string.Empty;
                }
                else
                {

                    Referedby = dtEmpdetails.Rows[0]["name"].ToString();

                }

                clientname = dtEmpdetails.Rows[0]["clientname"].ToString();

                string Marital = "";

                if (maritalstatus == "1")
                {
                    Marital = "Married";
                }
                if (maritalstatus == "0")
                {
                    Marital = "Single";
                }

                EmpCertfDet2 = dtEmpdetails.Rows[0]["EmpCertfDet2"].ToString();
                EmpCertfDet3 = dtEmpdetails.Rows[0]["EmpCertfDet3"].ToString();
                EmpCertfDet4 = dtEmpdetails.Rows[0]["EmpCertfDet4"].ToString();

                bool original1 = false;
                bool original2 = false;
                bool original3 = false;
                bool original4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original1"].ToString()) == false)
                {
                    original1 = Boolean.Parse(dtEmpdetails.Rows[0]["Original1"].ToString());
                }
                if (original1 == true)
                {
                    Original1 = "Yes";
                }
                else
                {
                    Original1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original2"].ToString()) == false)
                {
                    original2 = Boolean.Parse(dtEmpdetails.Rows[0]["Original2"].ToString());
                }
                if (original2 == true)
                {
                    Original2 = "Yes";
                }
                else
                {
                    Original2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original3"].ToString()) == false)
                {
                    original3 = Boolean.Parse(dtEmpdetails.Rows[0]["Original3"].ToString());
                }
                if (original3 == true)
                {
                    Original3 = "Yes";
                }
                else
                {
                    Original3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Original4"].ToString()) == false)
                {
                    original4 = Boolean.Parse(dtEmpdetails.Rows[0]["Original4"].ToString());
                }
                if (original4 == true)
                {
                    Original4 = "Yes";
                }
                else
                {
                    Original4 = "No";
                }



                bool xerox1 = false;
                bool xerox2 = false;
                bool xerox3 = false;
                bool xerox4 = false;

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox1"].ToString()) == false)
                {
                    xerox1 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox1"].ToString());
                }
                if (xerox1 == true)
                {
                    Xerox1 = "Yes";
                }
                else
                {
                    Xerox1 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox2"].ToString()) == false)
                {
                    xerox2 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox2"].ToString());
                }
                if (xerox2 == true)
                {
                    Xerox2 = "Yes";
                }
                else
                {
                    Xerox2 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox3"].ToString()) == false)
                {
                    xerox3 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox3"].ToString());
                }
                if (xerox3 == true)
                {
                    Xerox3 = "Yes";
                }
                else
                {
                    Xerox3 = "No";
                }

                if (String.IsNullOrEmpty(dtEmpdetails.Rows[0]["Xerox4"].ToString()) == false)
                {
                    xerox4 = Boolean.Parse(dtEmpdetails.Rows[0]["Xerox4"].ToString());
                }
                if (xerox4 == true)
                {
                    Xerox4 = "Yes";
                }
                else
                {
                    Xerox4 = "No";
                }

                Ref1Phone1 = dtEmpdetails.Rows[0]["Ref1Phone1"].ToString();
                Ref1Phone2 = dtEmpdetails.Rows[0]["Ref1Phone2"].ToString();
                Ref2Phone1 = dtEmpdetails.Rows[0]["Ref2Phone1"].ToString();
                Ref2Phone2 = dtEmpdetails.Rows[0]["Ref2Phone2"].ToString();

                ReplacementFor = dtEmpdetails.Rows[0]["ReplacementFor"].ToString();



                if (ReplacementFor == "0")
                {
                    ReplacementFor = "";
                }

                #endregion


                MemoryStream ms = new MemoryStream();
                string fileheader2 = Idno + "" + name + "" + "BIO DATA" + " .Pdf";
                Document document = new Document(PageSize.LEGAL.Rotate());

                // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("images");
                #region

                PdfPTable tblenewapp1 = new PdfPTable(13);
                tblenewapp1.TotalWidth = 800f;
                tblenewapp1.LockedWidth = true;
                float[] width = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                tblenewapp1.SetWidths(width);

                PdfPCell cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                cellspace.Colspan = 13;
                cellspace.Border = 0;
                cellspace.PaddingTop = 0;

                PdfPCell cellHead = new PdfPCell(new Phrase("[FORM  No. 9] ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                cellHead.HorizontalAlignment = 1;
                cellHead.Colspan = 13;
                cellHead.Border = 0;
                tblenewapp1.AddCell(cellHead);

                PdfPCell cellhelp12 = new PdfPCell(new Phrase("[See Rule 107]", FontFactory.GetFont(FontFactory.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.BLACK)));
                cellhelp12.HorizontalAlignment = 1;
                cellhelp12.Colspan = 13;
                cellhelp12.Border = 0;
                tblenewapp1.AddCell(cellhelp12);

                PdfPCell cellRule107 = new PdfPCell(new Phrase("REGISTER OF OVERTIME AND PAYMENT", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize + 3, Font.BOLD, BaseColor.BLACK)));
                cellRule107.HorizontalAlignment = 1;
                cellRule107.Colspan = 13;
                cellRule107.Border = 0;
                tblenewapp1.AddCell(cellRule107);

                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);

                PdfPCell cellhelp11 = new PdfPCell(new Phrase("Form No. 9 under Rule 107 of Karnataka Factories Rules, 1969..", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                cellhelp11.HorizontalAlignment = 0;
                cellhelp11.Colspan = 13;
                cellhelp11.Border = 0;
                cellhelp11.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp11);

                PdfPCell cellhelp10 = new PdfPCell(new Phrase("Form No. XIII under Rule 78(1) (a)(iii) of Contract Labour (Regulation and Abolition) Karnataka Rules, 1974.  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp10.HorizontalAlignment = 0;
                cellhelp10.Colspan = 13;
                cellhelp10.Border = 0;
                cellhelp10.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp10);

                PdfPCell cellhelp9 = new PdfPCell(new Phrase("Form No. IV under Rule 28(2) of Karnataka Minimum Wages Rules, 1958.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp9.HorizontalAlignment = 0;
                cellhelp9.Colspan = 13;
                cellhelp9.Border = 0;
                cellhelp9.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp9);

                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);

                PdfPCell cellhep8 = new PdfPCell(new Phrase("Name and Address of the Factory/Establishment :   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhep8.HorizontalAlignment = 0;
                cellhep8.Colspan = 2;
                cellhep8.Border = 0;
                cellhep8.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhep8);


                PdfPCell cellhelp8 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp8.HorizontalAlignment = 0;
                cellhelp8.Colspan = 2;
                cellhelp8.Border = 0;
                cellhelp8.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp8);



                PdfPCell cellhlp8 = new PdfPCell(new Phrase("Name and Address of the Principal Employer :", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhlp8.HorizontalAlignment = 0;
                cellhlp8.Colspan = 2;
                cellhlp8.Border = 0;
                cellhlp8.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhlp8);



                PdfPCell cellhlp9 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhlp9.HorizontalAlignment = 0;
                cellhlp9.Colspan = 2;
                cellhlp9.Border = 0;
                cellhlp9.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhlp9);



                PdfPCell cellhelp6 = new PdfPCell(new Phrase("Name and Address of the Contractor (if any) :  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp6.HorizontalAlignment = 0;
                cellhelp6.Colspan = 2;
                cellhelp6.Border = 0;
                cellhelp6.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp6);


                PdfPCell cellhelp7 = new PdfPCell(new Phrase("   ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp7.HorizontalAlignment = 0;
                cellhelp7.Colspan = 1;
                cellhelp7.Border = 0;
                cellhelp7.PaddingLeft = 0;
                tblenewapp1.AddCell(cellhelp7);

                PdfPCell cellhelp5 = new PdfPCell(new Phrase("Month/Year", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp5.HorizontalAlignment = 0;
                cellhelp5.Colspan = 2;
                cellhelp5.Border = 0;
                tblenewapp1.AddCell(cellhelp5);

                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);
                tblenewapp1.AddCell(cellspace);


                PdfPCell cellhelp4 = new PdfPCell(new Phrase("Place of Work :", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp4.HorizontalAlignment = 0;
                cellhelp4.Colspan = 13;
                cellhelp4.Border = 0;
                cellhelp5.PaddingLeft = 150;
                tblenewapp1.AddCell(cellhelp4);

                tblenewapp1.AddCell(cellspace);

                PdfPCell cellhelp3 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp3.HorizontalAlignment = 0;
                cellhelp3.Colspan = 4;
                tblenewapp1.AddCell(cellhelp3);



                PdfPCell cellhelp2 = new PdfPCell(new Phrase(" Particulars of OT Work ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp2.HorizontalAlignment = 1;
                cellhelp2.Colspan = 2;
                tblenewapp1.AddCell(cellhelp2);



                PdfPCell cellhelp1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellhelp1.HorizontalAlignment = 0;
                cellhelp1.Colspan = 7;
                tblenewapp1.AddCell(cellhelp1);






                PdfPCell cellfile13 = new PdfPCell(new Phrase("Sl.No. ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile13.HorizontalAlignment = 1;
                cellfile13.Colspan = 0;
                tblenewapp1.AddCell(cellfile13);

                PdfPCell cellfile12 = new PdfPCell(new Phrase("Employee Name Father/Husband Name", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile12.HorizontalAlignment = 1;
                cellfile12.Colspan = 0;
                tblenewapp1.AddCell(cellfile12);

                PdfPCell cellfile11 = new PdfPCell(new Phrase("Sex ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile11.HorizontalAlignment = 1;
                cellfile11.Colspan = 0;
                tblenewapp1.AddCell(cellfile11);


                PdfPCell cellfile10 = new PdfPCell(new Phrase("Designation/Employment No.  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile10.HorizontalAlignment = 1;
                cellfile10.Colspan = 0;
                tblenewapp1.AddCell(cellfile10);

                PdfPCell cellfile9 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile9.HorizontalAlignment = 1;
                cellfile9.Colspan = 0;
                tblenewapp1.AddCell(cellfile9);

                PdfPCell cellfile8 = new PdfPCell(new Phrase("Hours", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile8.HorizontalAlignment = 1;
                cellfile8.Colspan = 0;
                tblenewapp1.AddCell(cellfile8);

                PdfPCell cellfile7 = new PdfPCell(new Phrase("Normal rate of wages per hour", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile7.HorizontalAlignment = 1;
                cellfile7.Colspan = 0;
                tblenewapp1.AddCell(cellfile7);

                PdfPCell cellfile6 = new PdfPCell(new Phrase("Overtime wages per hour", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile6.HorizontalAlignment = 1;
                cellfile6.Colspan = 0;
                tblenewapp1.AddCell(cellfile6);

                PdfPCell cellfile5 = new PdfPCell(new Phrase("Normal piece rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile5.HorizontalAlignment = 1;
                cellfile5.Colspan = 0;
                tblenewapp1.AddCell(cellfile5);

                PdfPCell cellfile4 = new PdfPCell(new Phrase("OT piece rate of wages", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile4.HorizontalAlignment = 1;
                cellfile4.Colspan = 0;
                tblenewapp1.AddCell(cellfile4);


                PdfPCell cellfile3 = new PdfPCell(new Phrase("Total OT earnings", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile3.HorizontalAlignment = 1;
                cellfile3.Colspan = 0;
                tblenewapp1.AddCell(cellfile3);

                PdfPCell cellfile2 = new PdfPCell(new Phrase("Date of payment", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile2.HorizontalAlignment = 1;
                cellfile2.Colspan = 0;
                tblenewapp1.AddCell(cellfile2);

                PdfPCell cellfile1 = new PdfPCell(new Phrase("Signature/Thumb impression of the Employee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellfile1.HorizontalAlignment = 1;
                cellfile1.Colspan = 0;
                tblenewapp1.AddCell(cellfile1);







                PdfPCell cellview13 = new PdfPCell(new Phrase("  1 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview13.HorizontalAlignment = 1;
                cellview13.Colspan = 0;
                cellview13.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview13);

                PdfPCell cellview12 = new PdfPCell(new Phrase("  2", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview12.HorizontalAlignment = 1;
                cellview12.Colspan = 0;
                cellview12.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview12);

                PdfPCell cellview11 = new PdfPCell(new Phrase("  3 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview11.HorizontalAlignment = 1;
                cellview11.Colspan = 0;
                cellview11.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview11);

                PdfPCell cellview10 = new PdfPCell(new Phrase("  4", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview10.HorizontalAlignment = 1;
                cellview10.Colspan = 0;
                cellview10.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview10);

                PdfPCell cellview9 = new PdfPCell(new Phrase("  5 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview9.HorizontalAlignment = 1;
                cellview9.Colspan = 0;
                cellview9.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview9);

                PdfPCell cellview8 = new PdfPCell(new Phrase("  6", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview8.HorizontalAlignment = 1;
                cellview8.Colspan = 0;
                cellview8.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview8);

                PdfPCell cellview7 = new PdfPCell(new Phrase("  7 ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview7.HorizontalAlignment = 1;
                cellview7.Colspan = 0;
                cellview7.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview7);

                PdfPCell cellview6 = new PdfPCell(new Phrase("  8", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview6.HorizontalAlignment = 1;
                cellview6.Colspan = 0;
                cellview6.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview6);

                PdfPCell cellview5 = new PdfPCell(new Phrase("  9", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview5.HorizontalAlignment = 1;
                cellview5.Colspan = 0;
                cellview5.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview5);

                PdfPCell cellview4 = new PdfPCell(new Phrase("  10", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview4.HorizontalAlignment = 1;
                cellview4.Colspan = 0;
                cellview4.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview4);

                PdfPCell cellview3 = new PdfPCell(new Phrase("  11", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview3.HorizontalAlignment = 1;
                cellview3.Colspan = 0;
                cellview3.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview3);

                PdfPCell cellview2 = new PdfPCell(new Phrase("  12", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview2.HorizontalAlignment = 1;
                cellview2.Colspan = 0;
                cellview2.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview2);


                PdfPCell cellview1 = new PdfPCell(new Phrase("  13", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellview1.HorizontalAlignment = 1;
                cellview1.Colspan = 0;
                cellview1.PaddingBottom = 10f;
                tblenewapp1.AddCell(cellview1);




                PdfPCell cellsreplace13 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace13.HorizontalAlignment = 1;
                cellsreplace13.Colspan = 0;
                cellsreplace13.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace13);

                PdfPCell cellsreplace12 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace12.HorizontalAlignment = 1;
                cellsreplace12.Colspan = 0;
                cellsreplace12.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace12);

                PdfPCell cellsreplace11 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace11.HorizontalAlignment = 1;
                cellsreplace11.Colspan = 0;
                cellsreplace11.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace11);

                PdfPCell cellsreplace10 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace10.HorizontalAlignment = 1;
                cellsreplace10.Colspan = 0;
                cellsreplace10.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace10);

                PdfPCell cellsreplace9 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace9.HorizontalAlignment = 1;
                cellsreplace9.Colspan = 0;
                cellsreplace9.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace9);

                PdfPCell cellsreplace8 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace8.HorizontalAlignment = 1;
                cellsreplace8.Colspan = 0;
                cellsreplace8.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace8);

                PdfPCell cellsreplace7 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace7.HorizontalAlignment = 1;
                cellsreplace7.Colspan = 0;
                cellsreplace7.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace7);

                PdfPCell cellsreplace6 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace6.HorizontalAlignment = 1;
                cellsreplace6.Colspan = 0;
                cellsreplace6.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace6);

                PdfPCell cellsreplace5 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace5.HorizontalAlignment = 1;
                cellsreplace5.Colspan = 0;
                cellsreplace5.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace5);

                PdfPCell cellsreplace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace4.HorizontalAlignment = 1;
                cellsreplace4.Colspan = 0;
                cellsreplace4.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace4);

                PdfPCell cellsreplace3 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace3.HorizontalAlignment = 1;
                cellsreplace3.Colspan = 0;
                cellsreplace3.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace3);

                PdfPCell cellsreplace2 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace2.HorizontalAlignment = 1;
                cellsreplace2.Colspan = 0;
                cellsreplace2.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace2);


                PdfPCell cellsreplace1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                cellsreplace1.HorizontalAlignment = 1;
                cellsreplace1.Colspan = 0;
                cellsreplace1.PaddingBottom = 40f;
                tblenewapp1.AddCell(cellsreplace1);






                document.Add(tblenewapp1);

                #endregion Basic Information of the Employee

                document.NewPage();

                PdfPTable tblFingerprints = new PdfPTable(6);
                tblFingerprints.TotalWidth = 500f;
                tblFingerprints.LockedWidth = true;
                float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                tblFingerprints.SetWidths(widthfinger);


                string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }


            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;

            }
        }

        protected void btnAppointmentForm_Click(object sender, EventArgs e)
        {


            int totalfonts = FontFactory.RegisterDirectory("c:\\WINDOWS\\fonts");
            //StringBuilder sa = new StringBuilder();
            foreach (string fontname in FontFactory.RegisteredFonts)
            {
                // sa.Append(fontname + "\n");
            }
            Font FontStyle4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 13, Font.BOLD, BaseColor.BLACK);
            Font FontStyle1 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
            Font FontStyle5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 8, Font.BOLD, BaseColor.BLACK);
            Font FontStyleHeading = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 16, Font.BOLD, BaseColor.BLACK);
            int Fontsize = 10;

            #region for companyinfo
            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;


            string CompanyName = "";
            string Address = "";
            string Emailid = "";
            string Website = "";
            string Phoneno = "";
            string Faxno = "";

            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();
                Phoneno = DtCompanyInfo.Rows[0]["Phoneno"].ToString();
                Faxno = DtCompanyInfo.Rows[0]["Faxno"].ToString();
                Emailid = DtCompanyInfo.Rows[0]["Emailid"].ToString();
                Website = DtCompanyInfo.Rows[0]["Website"].ToString();


            }
            #endregion for companyinfo

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            string fromempid = "";
            string toempid = "";

            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            #region Begin Assign Values to The Variables

            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                SPName = "EmpBiodataPDF";
                Empid = txtEmpid.Text;
                HTEmpBiodata.Add("@empid", Empid);
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                SPName = "EmpBiodataBulk";
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;

                HTEmpBiodata.Add("@FromEmpid", fromempid);
                HTEmpBiodata.Add("@ToEmpid", toempid);
            }

            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure

            #region values

            string fontsyle = "TIMES_ROMAN";
            string name = "";
            string IDno = "";
            string designation = "";
            string doj = "";
            string city = "";
            string state = "";
            string area = "";
            string EmpPermanentAddress = "";
            #endregion

            string imagepathSeal = Server.MapPath("assets/seal.jpg");
            string imagepathArrow = Server.MapPath("assets/Arrow.png");
            string imagepath2 = Server.MapPath("assets/Images");

            if (dtEmpdetails.Rows.Count > 0)
            {

                Document document = new Document(PageSize.LEGAL);
                MemoryStream ms = new MemoryStream();
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

                if (ddlEmpIDoptions.SelectedIndex == 0)
                {

                    IDno = dtEmpdetails.Rows[0]["empid"].ToString();
                    name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                    designation = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                    doj = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    city = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    state = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    EmpPermanentAddress = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();
                    area = dtEmpdetails.Rows[0]["AreaName"].ToString();


                    #region for Appointment Form

                    PdfPTable table2 = new PdfPTable(3);
                    table2.TotalWidth = 530f;
                    table2.LockedWidth = true;
                    float[] width1 = new float[] { 0.4f, 2f, 2f };
                    table2.SetWidths(width1);

                    PdfPTable table1 = new PdfPTable(3);
                    table1.TotalWidth = 530f;
                    table1.LockedWidth = true;
                    float[] width = new float[] { 0.4f, 2f,2f };
                    table1.SetWidths(width);
                    PdfPCell cell;

                    cell = new PdfPCell(new Phrase("Employee: " + IDno + "  Appointment Form", FontStyle5));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    cell.PaddingTop = -30f;
                    //table1.AddCell(cell);

                    string imagepath3 = Server.MapPath("~/assets/SSDSS LOGO.jpg");

                    if (File.Exists(imagepath3))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath3);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(60);
                        gif2.SetAbsolutePosition(45f, 860f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    cell = new PdfPCell(new Phrase(CompanyName, FontStyleHeading));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.PaddingLeft = 40;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Address, FontStyle3));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = 5;
                    table1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("Date :" + ((DateTime.Now).ToString("dd/MM/yyy")), FontStyle1));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 2;
                    cell.PaddingTop = 30;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    var phrase1 = new Phrase();
                    phrase1.Add(new Chunk("Mr. / Mrs. ", FontStyle1));
                    phrase1.Add(new Chunk(name, FontStyle4));
                    PdfPCell cell131 = new PdfPCell();
                    cell131.AddElement(phrase1);
                    cell131.HorizontalAlignment = 0;
                    cell131.Colspan = 2;
                    cell131.Border = 0;
                    //table1.AddCell(cell131);

                    cell = new PdfPCell(new Phrase(EmpPermanentAddress, FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                   // table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Dear Sir / Madam :", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 10f;
                    cell.Border = 0;
                   // table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Appointment Letter", FontStyle2));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 2;
                    cell.PaddingTop = 30;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Dated: "+((DateTime.Now).ToString("dd-MM-yyy")), FontStyle2));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 1;
                    cell.PaddingTop = 30;
                    cell.Border = 0;
                    table1.AddCell(cell);


                    var phraseea1 = new Phrase();
                    phraseea1.Add(new Chunk("Dear ", FontStyle2));
                    phraseea1.Add(new Chunk(name, FontStyle4));
                    phraseea1.Add(new Chunk(',', FontStyle2));
                    PdfPCell cellla123 = new PdfPCell();
                    cellla123.AddElement(phraseea1);
                    cellla123.HorizontalAlignment = 0;
                    cellla123.Colspan = 3;
                    //celll123.PaddingLeft = 10;
                    cellla123.Border = 0;
                    cellla123.SetLeading(0, 1.2f);
                    table1.AddCell(cellla123);




                    cell = new PdfPCell(new Phrase("Dear", FontStyle2));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    //cell.PaddingTop = 30;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(name+',', FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.SetLeading(0, 1.2f);
                    //cell.PaddingTop = 30;
                    //cell.PaddingLeft = 20;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Dear ", FontStyle2));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 3;
                    //cell.PaddingTop = 30;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("We are pleased to inform you that you have been appointed as “PRODUCTION ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingLeft = 20;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("SUPERVISOR”.", FontStyle2));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    //cell.PaddingLeft = 20;
                    table1.AddCell(cell);

                    //var phrasee1 = new Phrase();
                    //phrasee1.Add(new Chunk("We are pleased to inform you that you have been appointed as “PRODUCTION ", FontStyle4));
                    //phrasee1.Add(new Chunk("SUPERVISOR”.", FontStyle1));
                    //PdfPCell celll14 = new PdfPCell();
                    //celll14.AddElement(phrasee1);
                    //celll14.HorizontalAlignment = 0;
                    //celll14.Colspan = 3;
                    //celll14.PaddingLeft = 20;
                    //celll14.Border = 0;
                    //table1.AddCell(celll14);



                    var phrase = new Phrase();
                    phrase.Add(new Chunk("With Reference to your application for employment and the subsequent interviews/s you had with us, we are pleased to offer you an appointment as ", FontStyle4));
                    phrase.Add(new Chunk(designation, FontStyle1));
                    phrase.Add(new Chunk(" w.e.f ", FontStyle4));
                    phrase.Add(new Chunk(doj, FontStyle1));
                    phrase.Add(new Chunk(" in our organization on the following terms and conditions :-", FontStyle4));
                    PdfPCell cell13 = new PdfPCell();
                    cell13.AddElement(phrase);
                    cell13.HorizontalAlignment = 0;
                    cell13.Colspan = 2;
                    cell13.Border = 0;
                    //table1.AddCell(cell13);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    //table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("1. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.PaddingLeft = 10;
                    cell.SetLeading(0, 1.2f);
                    //table1.AddCell(cell);

                    var phrasee = new Phrase();
                    phrasee.Add(new Chunk("1.  You will be deputed with our client", FontStyle4));
                    phrasee.Add(new Chunk(" M / s ITC LTD – ABD", FontStyle1));
                    phrasee.Add(new Chunk(" at their site", FontStyle4));
                    phrasee.Add(new Chunk("NELLORE(ASF)", FontStyle1));
                    phrasee.Add(new Chunk(" until further notice.", FontStyle4));
                    PdfPCell celll13 = new PdfPCell();
                    celll13.AddElement(phrasee);
                    celll13.HorizontalAlignment = 0;
                    celll13.Colspan = 3;
                    celll13.PaddingLeft = 10;
                    celll13.Border = 0;
                    celll13.SetLeading(0, 1.2f);
                    table1.AddCell(celll13);



                    PdfPCell celll4 = new PdfPCell(new Phrase("2. You shall report to the site in-charge on "+ doj+ " which will be your joining date.", FontStyle4));
                    celll4.HorizontalAlignment = 0;
                    celll4.Colspan = 3;
                    celll4.Border = 0;
                    celll4.PaddingLeft = 10;
                    celll4.SetLeading(0, 1.2f);
                    table1.AddCell(celll4);

                    PdfPCell celll5 = new PdfPCell(new Phrase("3. Your employment is subject to the terms and conditions of the organization that are enforced from time to time", FontStyle4));
                    celll5.HorizontalAlignment = 0;
                    celll5.Colspan = 3;
                    celll5.Border = 0;
                    celll5.PaddingLeft = 10;
                    celll5.SetLeading(0, 1.2f);
                    table1.AddCell(celll5);

                    PdfPCell celll6 = new PdfPCell(new Phrase("4. The appointee shall not have any right to claim employment with ITC LTD – ABD.", FontStyle4));
                    celll6.HorizontalAlignment = 0;
                    celll6.Colspan = 3;
                    celll6.Border = 0;
                    celll6.PaddingLeft = 10;
                    celll6.SetLeading(0, 1.2f);
                    table1.AddCell(celll6);



                    PdfPCell  celll7 = new PdfPCell(new Phrase("5. SDSS reserves the right to terminate the appointment without giving any prior notice (or)immediately, in case of irregular attendance or unsatisfactory performance or any information furnished is found to be false at any stage", FontStyle4));
                    celll7.HorizontalAlignment = 0;
                    celll7.Colspan = 3;
                    celll7.Border = 0;
                    celll7.PaddingLeft = 10;
                    celll7.SetLeading(0, 1.2f);
                    table1.AddCell(celll7);

                    PdfPCell celll8 = new PdfPCell(new Phrase("6. This appointment may be terminated by either parties by giving one-month prior notice or payment of one month’s salary in lieu thereof.", FontStyle4));
                    celll8.HorizontalAlignment = 0;
                    celll8.Colspan = 3;
                    celll8.Border = 0;
                    celll8.PaddingLeft = 10;
                    celll8.SetLeading(0, 1.2f);
                    table1.AddCell(celll8);

                    PdfPCell celll9 = new PdfPCell(new Phrase("7. You are liable to be transferred from one client/ establishment to another depending upon the requirements of work.", FontStyle4));
                    celll9.HorizontalAlignment = 0;
                    celll9.Colspan = 3;
                    celll9.Border = 0;
                    celll9.PaddingLeft = 10;
                    celll9.SetLeading(0, 1.2f);
                    table1.AddCell(celll9);

                    PdfPCell celll11 = new PdfPCell(new Phrase("We look forward for your fruitful co-operation and success. ", FontStyle4));
                    celll11.HorizontalAlignment = 0;
                    celll11.Colspan = 3;
                    celll11.Border = 0;
                    //cell.PaddingLeft = 10;
                    celll11.SetLeading(0, 1.2f);
                    table1.AddCell(celll11);

                    PdfPCell celll12 = new PdfPCell(new Phrase("Congratulations & we wish you all the Best.", FontStyle4));
                    celll12.HorizontalAlignment = 0;
                    celll12.Colspan = 3;
                    celll12.Border = 0;
                    //cell.PaddingLeft = 10;
                    celll12.SetLeading(0, 1.2f);
                    table1.AddCell(celll12);

                    PdfPCell celll14 = new PdfPCell(new Phrase("Payment Structure is as follows: ", FontStyle4));
                    celll14.HorizontalAlignment = 0;
                    celll14.Colspan = 3;
                    celll14.Border = 0;
                    //cell.PaddingLeft = 10;
                    celll14.PaddingBottom = 20;
                    celll14.SetLeading(0, 1.2f);
                    table1.AddCell(celll14);


                    PdfPCell ChildTable1 = new PdfPCell(table1);
                    ChildTable1.Colspan = 3;
                    ChildTable1.Border = 0;
                    table2.AddCell(ChildTable1);

                    PdfPTable table3 = new PdfPTable(8);
                    table3.TotalWidth = 530f;
                    table3.LockedWidth = true;
                    float[] width2 = new float[] { 1f, 1f, 1f,1f,1f,1f,1f,1f };
                    table3.SetWidths(width2);


                    PdfPCell celll121 = new PdfPCell(new Phrase("Employee Name", FontStyle2));
                    celll121.HorizontalAlignment = 1;
                    celll121.Colspan = 1;
                    //celll121.Border = 0;
                    //celll121.BorderWidth = 0.2f;
                    table3.AddCell(celll121);

                    PdfPCell celll122 = new PdfPCell(new Phrase("Joining Date", FontStyle2));
                    celll122.HorizontalAlignment = 1;
                    celll122.Colspan = 1;
                    //celll121.Border = 0;
                    //celll122.SetLeading(0, 1.2f);
                    table3.AddCell(celll122);


                    PdfPCell celll123 = new PdfPCell(new Phrase("Basic", FontStyle2));
                    celll123.HorizontalAlignment = 1;
                    celll123.Colspan = 1;
                    table3.AddCell(celll123);

                    PdfPCell celll124 = new PdfPCell(new Phrase("Supplementary allowance", FontStyle2));
                    celll124.HorizontalAlignment = 1;
                    celll124.Colspan = 1;
                    table3.AddCell(celll124);

                    PdfPCell celll125 = new PdfPCell(new Phrase("Gross Wages", FontStyle2));
                    celll125.HorizontalAlignment = 1;
                    celll125.Colspan = 1;
                    table3.AddCell(celll125);

                    PdfPCell celll126 = new PdfPCell(new Phrase("PF@12%", FontStyle2));
                    celll126.HorizontalAlignment = 1;
                    celll126.Colspan = 1;
                    table3.AddCell(celll126);

                    PdfPCell celll127 = new PdfPCell(new Phrase("ESI@0.75%", FontStyle2));
                    celll127.HorizontalAlignment = 1;
                    celll127.Colspan = 1;
                    table3.AddCell(celll127);

                    PdfPCell celll128 = new PdfPCell(new Phrase("G.Total to employee", FontStyle2));
                    celll128.HorizontalAlignment = 1;
                    celll128.Colspan = 1;
                    table3.AddCell(celll128);

                    if(dtEmpdetails.Rows.Count >= 0)
                    {
                        if(name !="")
                        {
                            PdfPCell celll129 = new PdfPCell(new Phrase(name, FontStyle4));
                            celll129.HorizontalAlignment = 1;
                            celll129.Colspan = 1;
                            table3.AddCell(celll129);
                        }
                        if (doj != "")
                        {
                            PdfPCell celll130 = new PdfPCell(new Phrase(doj, FontStyle4));
                            celll130.HorizontalAlignment = 1;
                            celll130.Colspan = 1;
                            table3.AddCell(celll130);
                        }

                        if (doj != "")
                        {
                            PdfPCell celll131 = new PdfPCell(new Phrase("", FontStyle4));
                            celll131.HorizontalAlignment = 1;
                            celll131.Colspan = 1;
                            table3.AddCell(celll131);
                        }
                        if (doj != "")
                        {
                            PdfPCell celll132 = new PdfPCell(new Phrase("", FontStyle4));
                            celll132.HorizontalAlignment = 1;
                            celll132.Colspan = 1;
                            table3.AddCell(celll132);
                        }
                        if (doj != "")
                        {
                            PdfPCell celll133 = new PdfPCell(new Phrase("", FontStyle4));
                            celll133.HorizontalAlignment = 1;
                            celll133.Colspan = 1;
                            table3.AddCell(celll133);
                        }
                        if (doj != "")
                        {
                            PdfPCell celll134 = new PdfPCell(new Phrase("", FontStyle4));
                            celll134.HorizontalAlignment = 1;
                            celll134.Colspan = 1;
                            table3.AddCell(celll134);
                        }
                        if (doj != "")
                        {
                            PdfPCell celll135 = new PdfPCell(new Phrase("", FontStyle4));
                            celll135.HorizontalAlignment = 1;
                            celll135.Colspan = 1;
                            table3.AddCell(celll135);
                        }
                        if (doj != "")
                        {
                            PdfPCell celll136 = new PdfPCell(new Phrase("", FontStyle4));
                            celll136.HorizontalAlignment = 1;
                            celll136.Colspan = 1;
                            table3.AddCell(celll136);
                        }
                    }

                    PdfPCell celll137 = new PdfPCell(new Phrase("Sincerely,", FontStyle2));
                    celll137.HorizontalAlignment = 0;
                    celll137.Colspan = 8;
                    celll137.Border = 0; 
                    celll137.PaddingTop = 10;
                    table3.AddCell(celll137);

                    PdfPCell celll138 = new PdfPCell(new Phrase("For Testing DETECTIVE &", FontStyle2));
                    celll138.HorizontalAlignment = 0;
                    celll138.Colspan = 8;
                    celll138.Border = 0;
                    celll138.PaddingTop = 10;
                    table3.AddCell(celll138);

                    PdfPCell celll140 = new PdfPCell(new Phrase("SECURITY SERVICES PVT LTD", FontStyle2));
                    celll140.HorizontalAlignment = 0;
                    celll140.Colspan = 8;
                    celll140.Border = 0;
                    celll140.PaddingLeft = 10;
                    table3.AddCell(celll140);

                    string imagepath4 = Server.MapPath("~/assets/signn.png");

                    //if (File.Exists(imagepath3))
                    //{
                    //    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath4);

                    //    gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                    //    // gif2.SpacingBefore = 50;
                    //    gif2.ScalePercent(60);
                    //    gif2.SetAbsolutePosition(45f, 860f);
                    //    document.Add(new Paragraph(" "));
                    //    document.Add(gif2);
                    //}


                    if (File.Exists(imagepath4))
                    {
                        iTextSharp.text.Image paysheetlogo = iTextSharp.text.Image.GetInstance(imagepath4);
                        paysheetlogo.ScaleAbsolute(80f, 45f);
                        PdfPCell companylogo = new PdfPCell();
                        Paragraph cmplogo = new Paragraph();
                        cmplogo.Add(new Chunk(paysheetlogo, 10, 0));
                        companylogo.AddElement(cmplogo);
                        companylogo.HorizontalAlignment = 0;
                        companylogo.Colspan = 8;
                        // companylogo.PaddingTop = 20;
                        companylogo.PaddingLeft = 10;
                        companylogo.Border = 0;
                        table3.AddCell(companylogo);
                    }

                    PdfPCell celll141 = new PdfPCell(new Phrase("Managing Director", FontStyle2));
                    celll141.HorizontalAlignment = 0;
                    celll141.Colspan = 8;
                    celll141.Border = 0;
                    celll141.PaddingLeft = 10;
                    celll141.PaddingBottom = 20;
                    //celll141.PaddingTop = 50;
                    table3.AddCell(celll141);



                    PdfPCell ChildTable2 = new PdfPCell(table3);
                    ChildTable2.Colspan = 3;
                    ChildTable2.Border = 0;
                    table2.AddCell(ChildTable2);







                    document.Add(table2);

                    document.NewPage();
                    #endregion for Appointment Form

                }
                else if (ddlEmpIDoptions.SelectedIndex == 1)
                {
                    for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                    {
                        document.NewPage();

                        IDno = dtEmpdetails.Rows[m]["empid"].ToString();
                        name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                        designation = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                        doj = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                        city = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                        state = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                        EmpPermanentAddress = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();
                        area = dtEmpdetails.Rows[m]["AreaName"].ToString();

                        #region for Appointment Form

                        PdfPTable table1 = new PdfPTable(2);
                        table1.TotalWidth = 500f;
                        table1.LockedWidth = true;
                        float[] width = new float[] { 0.4f, 6f };
                        table1.SetWidths(width);
                        PdfPCell cell;

                        cell = new PdfPCell(new Phrase("Employee: " + IDno + "  Appointment Form", FontStyle5));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        cell.PaddingTop = -30f;
                        table1.AddCell(cell);

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(50);
                            gif2.SetAbsolutePosition(16f, 895f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }

                        cell = new PdfPCell(new Phrase(CompanyName, FontStyleHeading));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(Address, FontStyle3));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        table1.AddCell(cell);


                        cell = new PdfPCell(new Phrase("Date :" + ((DateTime.Now).ToString("dd/MM/yyy")), FontStyle1));
                        cell.HorizontalAlignment = 2;
                        cell.Colspan = 2;
                        cell.PaddingTop = 30;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 5f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        var phrase1 = new Phrase();
                        phrase1.Add(new Chunk("Mr. / Mrs. ", FontStyle1));
                        phrase1.Add(new Chunk(name, FontStyle4));
                        PdfPCell cell131 = new PdfPCell();
                        cell131.AddElement(phrase1);
                        cell131.HorizontalAlignment = 0;
                        cell131.Colspan = 2;
                        cell131.Border = 0;
                        table1.AddCell(cell131);

                        cell = new PdfPCell(new Phrase(EmpPermanentAddress, FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle1));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 5f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Dear Sir / Madam :", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 10f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Sub : APPOINTMENT", FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 15f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        var phrase = new Phrase();
                        phrase.Add(new Chunk("With Reference to your application for employment and the subsequent interviews/s you had with us, we are pleased to offer you an appointment as ", FontStyle4));
                        phrase.Add(new Chunk(designation, FontStyle1));
                        phrase.Add(new Chunk(" w.e.f ", FontStyle4));
                        phrase.Add(new Chunk(doj, FontStyle1));
                        phrase.Add(new Chunk(" in our organization on the following terms and conditions :-", FontStyle4));
                        PdfPCell cell13 = new PdfPCell();
                        cell13.AddElement(phrase);
                        cell13.HorizontalAlignment = 0;
                        cell13.Colspan = 2;
                        cell13.Border = 0;
                        table1.AddCell(cell13);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("1. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("You will be on probation for a period of six months from the date you report to duty.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        //cell.PaddingBottom = 5f;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Your probationary period may be extended for a further period of six months at the sole discretion of the Management, and the same will be communicated to you in writing. On satisfactory completion of your probationary period and / or any extended period thereafter, you may be confirmed in writing by the Management.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("2. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("You will be paid a gross salary of Rs .................................... only (Rupees as per statutory post and grade) per month.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("3. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("At the end of the period of probation and / or any extended period thereafter, if no written confirmation is received by you, you will be deemed to have been confirmed.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("4. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("During the period of probation, your services will be liable to be terminated without any Notice or without assigning any reason or compensation.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("5. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("You will also be eligible for PF, ESI Gratuity, Leave and other benefits as per rules and as applicable to all other employees in your cadre.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("6. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("During the period of your employment, you shall agree to work in shifts. You shall accept to work at any security post within the same factory or to any other clients of the Company and the rules and regulations applicable to the new place of posting shall be applicable to you.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("7. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("You will also be required to carry out jobs and responsibilities entrusted to you by your superiors irrespective of your nature of work to which you have been appointed.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);


                        cell = new PdfPCell(new Phrase("8. ", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.SetLeading(0, 1.2f);
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("During the period of service with the Company, you shall not carry on any business of your own either part time or otherwise.", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        cell.SetLeading(0, 1.2f);
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle4));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;
                        cell.PaddingBottom = 20f;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        document.Add(table1);

                        document.NewPage();

                        PdfPTable table11 = new PdfPTable(2);
                        table11.TotalWidth = 500f;
                        table11.LockedWidth = true;
                        float[] width1 = new float[] { 0.4f, 6f };
                        table11.SetWidths(width1);
                        PdfPCell cell1;



                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.Border = 0;
                        cell1.PaddingTop = 50f;
                        //cell.SetLeading(0, 1.2f);
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("9. ", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.Border = 0;
                        cell1.SetLeading(0, 1.2f);
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("You shall not, at any time, disclose to anyone any information, know-how knowledge, secret methods, plans, etc., of the Company.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("10. ", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.3f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("You will be responsible for the work, machinery, tools and other items/materials entrusted to you from time to time.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.3f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("11. ", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("This offer of appointment is purely based on the information furnished by you, and should there be any material information not being disclosed or if found at a later stage that the information furnished by you is false, you will be subject to strict disciplinary action including  termination of employment  without any notice or compensation.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("12. ", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.Border = 0;
                        cell1.SetLeading(0, 1.2f);
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("In addition to the above conditions, you will be governed by the Certified Standing Orders of the company applicable to workers and to such other rules and regulations that may be framed from time to time.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("13. ", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("You shall retire from the services of the Company on attaining the age of 58 years.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.Border = 0;
                        cell1.SetLeading(0, 1.2f);
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.Border = 0;
                        cell1.SetLeading(0, 1.2f);
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Please sign the duplicate of this letter in token of your acceptance of the same.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 30;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("For " + CompanyName, FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        if (File.Exists(imagepathSeal))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(80f);
                            gif2.SetAbsolutePosition(65f, 925f);
                            PdfPCell sealImg = new PdfPCell();
                            sealImg.AddElement(gif2);
                            sealImg.Border = 0;
                            sealImg.HorizontalAlignment = 0;
                            sealImg.Colspan = 2;
                            sealImg.PaddingLeft = -400f;
                            // sealImg.PaddingRight = -400f;
                            sealImg.PaddingTop = 0;
                            table11.AddCell(sealImg);
                            //    document.Add(new Paragraph(" "));
                            //    document.Add(gif2);
                        }

                        cell1 = new PdfPCell(new Phrase("Authorized Signatory", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("The above terms and conditions of employment has been read over and explained to me in Kannada / ..................... and I voluntarily and willingly accept all the above terms & conditions.", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingBottom = 20f;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Place : " + area, FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        if (File.Exists(imagepathArrow))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(80f);
                            gif2.SetAbsolutePosition(65f, 925f);
                            PdfPCell sealImg = new PdfPCell();
                            sealImg.AddElement(gif2);
                            sealImg.Border = 0;
                            sealImg.HorizontalAlignment = 2;
                            sealImg.Colspan = 2;
                            //sealImg.PaddingLeft = -60f;
                            sealImg.PaddingBottom = -10f;
                            sealImg.PaddingRight = -260f;
                            sealImg.PaddingTop = 0;
                            table11.AddCell(sealImg);
                            //    document.Add(new Paragraph(" "));
                            //    document.Add(gif2);
                        }

                        cell1 = new PdfPCell(new Phrase("Signature of Employee", FontStyle4));
                        cell1.HorizontalAlignment = 2;
                        cell1.Colspan = 2;
                        cell1.SetLeading(0, 1.2f);
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Date : " + doj, FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.Border = 0;
                        table11.AddCell(cell1);

                        document.Add(table11);

                        #endregion for Appointment Form

                    }
                }


                string filename = "Appointment Form.pdf";

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }
        }

        protected void btnPoliceVfctn_Click(object sender, EventArgs e)
        {
            int totalfonts = FontFactory.RegisterDirectory("c:\\WINDOWS\\fonts");
            Font FontStyle3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
            Font FontStyle4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.BOLD, BaseColor.BLACK);
            Font FontStyle5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 8, Font.BOLD, BaseColor.BLACK);

            try
            {

                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    if (txtEmpid.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                        return;
                    }
                }
                else if (ddlEmpIDoptions.SelectedIndex == 1)
                {
                    if (txtfromempid.Text == "" || txttoempid.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee Series');", true);
                        return;
                    }
                }


                //#region  Begin  New Code

                #region  Begin  New Code

                #region Begin Variable Declaration
                string name = "";
                string fathername = "";
                string Gender = "";
                string MaritalStatus = "";
                string remarks1 = "";
                string Nationality = "";
                string Empdateofbirth = "";
                string DtOfJoining = "";
                string prTaluka = "";
                var PresentOrPermanentaddress = "False";
                string prTown = "";
                string prPostOffice = "";
                string prLmark = "";
                //string PrAdress = "";
                string Address1 = "";
                string SpouseName = "";
                string FSpouseName = "";
                string empaddresStatus = "";
                string prarea = "";
                string prcity = "";
                string prDistrict = "";
                string prPincode = "";
                string prState = "";
                string peTaluka = "";
                string peTown = "";
                string peLmark = "";
                string pearea = "";
                string pecity = "";
                string peDistrict = "";
                string pePincode = "";
                string peState = "";
                string pelmark = "";
                string branch = "";
                string pestreet = "";
                string pePostOffice = "";
                string pePoliceStation = "";
                string Age = "";
                string prPoliceStation = "";
                string prperiodofstay = "";
                string FatherName = "";
                string EmpDtofJoining = "";
                string EmpPresentAddress = "";
                string EmpPermanentAddress = "";
                string periodofstay = "";
                string AreaName = "";
                int j = 1;
                string empphone = "";
                string SPName = "";
                Hashtable HTEmpBiodata = new Hashtable();
                string Empid = "";
                string fromempid = "";
                string toempid = "";

                DataTable dtEmpdetails = null;

                #endregion end Variable Declaration


                #region Begin Assign Values to The Variables


                SPName = "EmployeeFormsPDF";

                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    Empid = txtEmpid.Text;
                    HTEmpBiodata.Add("@empid", Empid);
                    HTEmpBiodata.Add("@options", 0);

                }
                else if (ddlEmpIDoptions.SelectedIndex == 1)
                {

                    fromempid = txtfromempid.Text;
                    toempid = txttoempid.Text;
                    HTEmpBiodata.Add("@FromEmpid", fromempid);
                    HTEmpBiodata.Add("@ToEmpid", toempid);
                    HTEmpBiodata.Add("@options", 1);
                }



                dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
                #endregion  End  Call Stored Procedure

                #endregion End New Code As on [31-05-2014]

                string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");

                if (dtEmpdetails.Rows.Count > 0)
                {

                    MemoryStream ms = new MemoryStream();
                    Document document = new Document(PageSize.LEGAL);
                    var writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

                    if (ddlEmpIDoptions.SelectedIndex == 0)
                    {
                        #region for variables assignment
                        // IDno = dtEmpdetails.Rows[0]["empid"].ToString();

                        Empid = dtEmpdetails.Rows[0]["empid"].ToString();


                        name = dtEmpdetails.Rows[0]["EmployeeName"].ToString();
                        fathername = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                        Empdateofbirth = dtEmpdetails.Rows[0]["DtOfBirth"].ToString();
                        Nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                        Gender = dtEmpdetails.Rows[0]["gender"].ToString();
                        remarks1 = dtEmpdetails.Rows[0]["EmpRemarks"].ToString();
                        MaritalStatus = dtEmpdetails.Rows[0]["MaritalStatus"].ToString();
                        FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                        SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                        prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                        prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                        prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                        prState = dtEmpdetails.Rows[0]["prState"].ToString();
                        prcity = dtEmpdetails.Rows[0]["pecity"].ToString();
                        prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                        pelmark = dtEmpdetails.Rows[0]["peLmark"].ToString();
                        peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                        peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                        pecity = dtEmpdetails.Rows[0]["prcity"].ToString();
                        pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                        peState = dtEmpdetails.Rows[0]["peState"].ToString();
                        Age = dtEmpdetails.Rows[0]["Age"].ToString();
                        empphone = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                        branch = dtEmpdetails.Rows[0]["CompanyInfo"].ToString();
                        prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                        EmpDtofJoining = dtEmpdetails.Rows[0]["DtOfJoining"].ToString();
                        prperiodofstay = dtEmpdetails.Rows[0]["prperiodofstay"].ToString();

                        PresentOrPermanentaddress = dtEmpdetails.Rows[0]["pvcadd"].ToString();
                        var presentORperadd = "";
                        if (PresentOrPermanentaddress == "1")
                        {
                            presentORperadd = dtEmpdetails.Rows[0]["EmpPresentAddress"].ToString();
                        }
                        else if (PresentOrPermanentaddress == "2")
                        {
                            presentORperadd = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();
                        }

                        //periodofstay = dtEmpdetails.Rows[0]["prperiodofstay"].ToString();
                        AreaName = dtEmpdetails.Rows[0]["AreaName"].ToString();

                        #endregion for variables assignment

                        #region for police form
                        PdfPTable tablen1 = new PdfPTable(4);
                        tablen1.TotalWidth = 500f;
                        tablen1.LockedWidth = true;
                        float[] widthn1 = new float[] { 1f, 5f, 3f, 2f };
                        tablen1.SetWidths(widthn1);
                        PdfPCell cell1;

                        #region for image
                        string imagepath2 = Server.MapPath("Images/TSLogo.png");
                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(10.5f);
                            gif2.SetAbsolutePosition(270f, 945f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                        #endregion


                        cell1 = new PdfPCell(new Phrase("Emp Id: " + Empid + "  " + "Police Verification Form", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingTop = -25f;
                        tablen1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Karnataka State Police", FontStyle4));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingTop = 8;
                        tablen1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("APPLICATION FOR POLICE VERIFICATION / CLEARANCE CERTIFICATE\n(For Indian Only)", FontStyle4));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingBottom = 5;
                        tablen1.AddCell(cell1);


                        PdfPTable temptable1 = new PdfPTable(3);
                        temptable1.TotalWidth = 410f;
                        temptable1.LockedWidth = true;
                        float[] tempwidth1 = new float[] { 1f, 5f, 3f };
                        temptable1.SetWidths(tempwidth1);

                        cell1 = new PdfPCell(new Phrase("To", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 3;
                        cell1.Border = 0;
                        cell1.PaddingTop = 10;
                        temptable1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("The Commissioner of Police", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 3;
                        cell1.Border = 0;
                        cell1.PaddingTop = 10;
                        temptable1.AddCell(cell1);


                        cell1 = new PdfPCell(new Phrase("________________________City", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 3;
                        cell1.Border = 0;
                        temptable1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Sir,", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 3;
                        cell1.PaddingTop = 10;
                        cell1.Border = 0;
                        temptable1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Sub: - Application to issue Police Verification / Clearance Certificate\nfor the Purpose of...............................................................", FontStyle4));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 3;
                        cell1.Border = 0;
                        cell1.PaddingTop = 10;
                        cell1.PaddingLeft = 50;
                        cell1.PaddingBottom = 40;
                        cell1.SetLeading(0f, 1.3f);
                        temptable1.AddCell(cell1);

                        PdfPCell childTable1 = new PdfPCell(temptable1);
                        childTable1.Border = 0;
                        childTable1.HorizontalAlignment = 0;
                        childTable1.Colspan = 3;
                        tablen1.AddCell(childTable1);


                        PdfPTable temptable2 = new PdfPTable(1);
                        temptable2.TotalWidth = 90f;
                        temptable2.LockedWidth = true;
                        float[] tempwidth2 = new float[] { 2f };
                        temptable2.SetWidths(tempwidth2);


                        if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                        {
                            iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[0]["Image"].ToString());
                            //empphoto.ScalePercent(23f);
                            empphoto.ScaleAbsolute(110.7f, 140.5f);
                            PdfPCell employeephoto = new PdfPCell();
                            Paragraph logo = new Paragraph();
                            //  logo.Add(new Chunk(empphoto, 0, 0));
                            employeephoto.AddElement(logo);
                            employeephoto.HorizontalAlignment = 2;
                            employeephoto.Border = 0;
                            employeephoto.PaddingLeft = -20;
                            employeephoto.Colspan = 1;
                            // temptable2.AddCell(employeephoto);

                        }


                        PdfPCell childTable2 = new PdfPCell(temptable2);
                        childTable2.Border = 0;
                        childTable2.HorizontalAlignment = 0;
                        childTable2.Colspan = 1;
                        tablen1.AddCell(childTable2);

                        document.Add(tablen1);

                        PdfPTable table1 = new PdfPTable(4);
                        table1.TotalWidth = 500f;
                        table1.LockedWidth = true;
                        float[] width1 = new float[] { 1f, 5f, 2f, 3f };
                        table1.SetWidths(width1);


                        cell1 = new PdfPCell(new Phrase("Sl.No", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Name of the Verification Certificate ", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Amount in Rupees", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Select appropriate Service Sought", FontStyle2));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(1)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        cell1.PaddingTop = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(2)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(3)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(4)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate & other companies ANTECEDENTS VERIFICATION ONLY(as per police station records)", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate / &other companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION amount to be paid by the company.  ", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for job aspirants(General) ANTECEDENTS along with ADDRESS VERIFICATION", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(4.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION ONLY", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(5.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n750/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(6.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate of Institutions /Companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(7.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Marriage Alliances ANTECEDENTS VERIFICATION", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(8.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Training/Apprenticeship at Public sector undertakings or for Trainees / Workers working on daily wages at Government Institutions. ANTECEDENTS VERIFICATION. ", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(9.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for NCC / NSS Students attending training camps ANTECEDENTS VERIFICATION.", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(10.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Cooli / Loader / Class IV security staff / supervisor at Airport. (Individual applicants only) ANTECEDENTS VERIFICATION", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n150/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(11.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Central / State Government Employees request directly by employee. ANTECEDENTS VERIFICATION.", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(12.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police Clearance Certificate (PCC) for going abroad (Visa for studies) ", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.SetLeading(0, 1.2f);
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("(13.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Verification and comparison of Finger Print-Fees for each Verification", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n500/-\n500/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);


                        cell1 = new PdfPCell(new Phrase("(14.)", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Police clearance Certificate for Indian citizens/For accepting or Donating Kidney/Adoption of child/for purchase of property in other", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle3));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 1;
                        table1.AddCell(cell1);


                        document.Add(table1);
                        document.NewPage();

                        PdfPTable table2 = new PdfPTable(4);
                        table2.TotalWidth = 500f;
                        table2.LockedWidth = true;
                        float[] width2 = new float[] { 1f, 5f, 3f, 2f };
                        table2.SetWidths(width2);
                        PdfPCell cell2;

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 4;
                        cell2.PaddingTop = 50;
                        cell2.Border = 0;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Verification of service local Jurisdiction.", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Verification of service outside Jurisdiction.", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Any other purpose", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        cell2.PaddingBottom = 50;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("The verification done through Department as per Government Order’s : -", FontStyle2));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 4;
                        cell2.Border = 0;
                        cell2.PaddingBottom = 50;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(1)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(2)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(3)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("(4)", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("1.", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("PIO / OCI Cards", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("2.", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Pakistan Visa", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("3.", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Verification of Citizenships", FontStyle3));
                        cell2.HorizontalAlignment = 0; ;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("4.", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Government Employees Job Verification done through the department", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("", FontStyle3));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 1;
                        cell2.PaddingRight = 50;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("Note: - Please tick the appropriate one.", FontStyle2));
                        cell2.HorizontalAlignment = 1;
                        cell2.Colspan = 4;
                        cell2.Border = 0;
                        cell2.PaddingBottom = 50;
                        table2.AddCell(cell2);

                        cell2 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                        cell2.HorizontalAlignment = 0;
                        cell2.Colspan = 4;
                        cell2.PaddingBottom = 30;
                        cell2.Border = 0;
                        table2.AddCell(cell2);


                        // document.Add(table2);

                        PdfPTable table3 = new PdfPTable(3);
                        table3.TotalWidth = 500f;
                        table3.LockedWidth = true;
                        float[] width3 = new float[] { 0.8f, 3.2f, 9f };
                        table3.SetWidths(width3);
                        PdfPCell cell3;


                        cell3 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 4;
                        cell3.PaddingBottom = 30;
                        cell3.Border = 0;
                        table3.AddCell(cell3);


                        cell3 = new PdfPCell(new Phrase("1.", FontStyle4));
                        cell3.HorizontalAlignment = 1;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);

                        cell3 = new PdfPCell(new Phrase("Name", FontStyle4));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);

                        cell3 = new PdfPCell(new Phrase(name, FontStyle3));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);



                        cell3 = new PdfPCell(new Phrase("2.", FontStyle4));
                        cell3.HorizontalAlignment = 1;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);

                        cell3 = new PdfPCell(new Phrase("Father/Husband name", FontStyle4));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);

                        string Relationname = "";
                        string FatherSpouseName = "";


                        if (Gender == "Male")
                        {
                            FatherSpouseName = FatherName;
                        }
                        else if (Gender == "Female")
                        {
                            if (MaritalStatus == "Unmarried")
                            {
                                FatherSpouseName = FatherName;
                            }
                            else
                            {
                                FatherSpouseName = SpouseName;

                            }
                        }

                        //if (FatherName.Length > 0)
                        //{
                        //    FatherSpouseName = FatherName;
                        //}
                        //else if (SpouseName.Length > 0)
                        //{
                        //    FatherSpouseName = SpouseName;
                        //}
                        //else if (FSpouseName.Length > 0)
                        //{
                        //    FatherSpouseName = FSpouseName;
                        //}
                        //else
                        //{
                        //    FatherSpouseName = "";
                        //}

                        cell3 = new PdfPCell(new Phrase(FatherSpouseName, FontStyle3));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 1;
                        // cell3.PaddingTop = 5;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);



                        cell3 = new PdfPCell(new Phrase("3.", FontStyle4));
                        cell3.HorizontalAlignment = 1;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);

                        cell3 = new PdfPCell(new Phrase("Nationality", FontStyle4));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);

                        cell3 = new PdfPCell(new Phrase(Nationality, FontStyle3));
                        cell3.HorizontalAlignment = 0;
                        cell3.Colspan = 1;
                        cell3.PaddingTop = 5;
                        cell3.PaddingBottom = 5;
                        table3.AddCell(cell3);


                        document.Add(table3);

                        PdfPTable table4 = new PdfPTable(6);
                        table4.TotalWidth = 500f;
                        table4.LockedWidth = true;
                        float[] width4 = new float[] { 0.6f, 2.5f, 1.9f, 1f, 2f, 2f };
                        table4.SetWidths(width4);
                        PdfPCell cell4;

                        cell4 = new PdfPCell(new Phrase("4.", FontStyle4));
                        cell4.HorizontalAlignment = 1;
                        cell4.Colspan = 1;
                        cell4.PaddingTop = 5;
                        cell4.PaddingBottom = 5;
                        table4.AddCell(cell4);

                        cell4 = new PdfPCell(new Phrase("Date of Birth & Age", FontStyle4));
                        cell4.HorizontalAlignment = 0;
                        cell4.Colspan = 1;
                        cell4.PaddingTop = 5;
                        cell4.PaddingBottom = 5;
                        //cell4.PaddingLeft = 0;
                        table4.AddCell(cell4);

                        cell4 = new PdfPCell(new Phrase(Empdateofbirth, FontStyle3));
                        cell4.HorizontalAlignment = 0;
                        cell4.Colspan = 1;
                        cell4.PaddingTop = 5;
                        cell4.PaddingBottom = 5;
                        table4.AddCell(cell4);

                        cell4 = new PdfPCell(new Phrase("Age", FontStyle4));
                        cell4.HorizontalAlignment = 0;
                        cell4.Colspan = 1;
                        cell4.PaddingTop = 5;
                        cell4.PaddingBottom = 5;
                        table4.AddCell(cell4);

                        cell4 = new PdfPCell(new Phrase(Age + " years", FontStyle3));
                        cell4.HorizontalAlignment = 0;
                        cell4.Colspan = 2;
                        cell4.PaddingTop = 5;
                        cell4.PaddingBottom = 5;
                        table4.AddCell(cell4);



                        document.Add(table4);

                        PdfPTable table5 = new PdfPTable(3);
                        table5.TotalWidth = 500f;
                        table5.LockedWidth = true;
                        float[] width5 = new float[] { 0.8f, 3.2f, 9f };
                        table5.SetWidths(width5);
                        PdfPCell cell5;

                        cell5 = new PdfPCell(new Phrase("5.", FontStyle4));
                        cell5.HorizontalAlignment = 1;
                        cell5.Colspan = 1;
                        cell5.PaddingTop = 10;
                        cell5.PaddingBottom = 10;
                        table5.AddCell(cell5);


                        cell5 = new PdfPCell(new Phrase("Address needs to be verified with period of stay", FontStyle4));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 1;
                        cell5.PaddingTop = 10;
                        cell5.PaddingBottom = 10;
                        //cell5.PaddingTop = 50;
                        table5.AddCell(cell5);

                        #region
                        //if (empaddresStatus == "PE")
                        //{
                        //    cell5 = new PdfPCell(new Phrase("", FontStyle3));
                        //    cell5.HorizontalAlignment = 0;
                        //    cell5.Colspan = 1;
                        //    cell5.Border = 0;
                        //    //cell5.PaddingTop = 50;
                        //    table5.AddCell(cell5);
                        //}
                        ////EmpPresentAddress.Trim()
                        //else
                        //    if (empaddresStatus == "PR")
                        //    {
                        //        cell5 = new PdfPCell(new Phrase("", FontStyle3));
                        //        cell5.HorizontalAlignment = 0;
                        //        cell5.Colspan = 1;
                        //        cell5.Border = 0;
                        //        //cell5.PaddingTop = 50;
                        //        table5.AddCell(cell5);
                        //    }
                        //    else
                        //        if (empaddresStatus == "NR")
                        //        {
                        //            cell5 = new PdfPCell(new Phrase("", FontStyle3));
                        //            cell5.HorizontalAlignment = 0;
                        //            cell5.Colspan = 1;
                        //            cell5.Border = 0;
                        //            //cell5.PaddingTop = 50;
                        //            table5.AddCell(cell5);
                        //        }

                        #endregion
                        cell5 = new PdfPCell(new Phrase("#3/2/6, 1st Cross M C layout Vijayanagar Bangalore -560079", FontStyle3));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 1;
                        cell5.PaddingTop = 10;
                        cell5.PaddingBottom = 10;
                        //cell5.PaddingTop = 50;
                        table5.AddCell(cell5);




                        cell5 = new PdfPCell(new Phrase("6.", FontStyle4));
                        cell5.HorizontalAlignment = 1;
                        cell5.Colspan = 1;
                        cell5.PaddingTop = 5;
                        cell5.PaddingBottom = 5;
                        table5.AddCell(cell5);

                        cell5 = new PdfPCell(new Phrase("Period of stay", FontStyle4));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 1;
                        cell5.PaddingTop = 5;
                        cell5.PaddingBottom = 5;
                        table5.AddCell(cell5);

                        cell5 = new PdfPCell(new Phrase("2 years", FontStyle3));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 1;
                        cell5.PaddingTop = 5;
                        cell5.PaddingBottom = 5;
                        table5.AddCell(cell5);


                        cell5 = new PdfPCell(new Phrase("", FontStyle3));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 1;
                        cell5.Border = 0;
                        cell5.BorderWidthLeft = 0.5f;
                        //cell5.PaddingBottom = 5;
                        table5.AddCell(cell5);

                        cell5 = new PdfPCell(new Phrase("(Enclose additional sheet for more than one address)", FontStyle3));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 2;
                        cell5.BorderWidthRight = 0.5f;
                        cell5.BorderWidthLeft = 0.5f;
                        table5.AddCell(cell5);


                        #region Present address String array

                        string[] PrAdress = new string[8];
                        if (prLmark.Length > 0)
                        {
                            PrAdress[0] = "Landmark :  " + prLmark + ", ";
                        }
                        else
                        {
                            PrAdress[0] = "";
                        }
                        if (prTown.Length > 0)
                        {
                            PrAdress[1] = "Vill :  " + prTown + ", ";
                        }
                        else
                        {
                            PrAdress[1] = "";
                        }

                        if (prPostOffice.Length > 0)
                        {
                            PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                        }
                        else
                        {
                            PrAdress[2] = "";
                        }
                        if (prTaluka.Length > 0)
                        {
                            PrAdress[3] = "Taluka : " + prTaluka + ", ";
                        }
                        else
                        {
                            PrAdress[3] = "";
                        }
                        if (prPoliceStation.Length > 0)
                        {
                            PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                        }
                        else
                        {
                            PrAdress[4] = "";
                        }
                        if (prcity.Length > 0)
                        {
                            PrAdress[5] = "City : " + prcity + ", ";
                        }
                        else
                        {
                            PrAdress[5] = "";
                        }

                        if (prState.Length > 0)
                        {
                            PrAdress[6] = "State : " + prState + " ";
                        }
                        else
                        {
                            PrAdress[6] = ".";
                        }


                        if (prPincode.Length > 0)
                        {
                            PrAdress[7] = ", Pincode : " + prPincode + ".";
                        }
                        else
                        {
                            PrAdress[7] = "";
                        }

                        Address1 = string.Empty;

                        for (int i = 0; i < 8; i++)
                        {
                            Address1 += PrAdress[i];
                        }


                        #endregion



                        cell5 = new PdfPCell(new Phrase("", FontStyle3));
                        cell5.HorizontalAlignment = 0;
                        cell5.Colspan = 1;
                        cell5.Border = 0;
                        cell5.PaddingBottom = 10;
                        table5.AddCell(cell5);



                        #region Permanent address String array

                        string[] PeAdress = new string[8];

                        if (pelmark.Length > 0)
                        {
                            PeAdress[0] = "Landmark :  " + pelmark + ", ";
                        }
                        else
                        {
                            PeAdress[0] = "";
                        }
                        if (peTown.Length > 0)
                        {
                            PeAdress[1] = "Vill : " + peTown + ", ";
                        }
                        else
                        {
                            PeAdress[1] = "";
                        }

                        if (pePostOffice.Length > 0)
                        {
                            PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                        }
                        else
                        {
                            PeAdress[2] = "";
                        }
                        if (peTaluka.Length > 0)
                        {
                            PeAdress[3] = "Taluka : " + peTaluka + ", ";
                        }
                        else
                        {
                            PeAdress[3] = " ";
                        }
                        if (pePoliceStation.Length > 0)
                        {
                            PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                        }
                        else
                        {
                            PeAdress[4] = " ";
                        }
                        if (pecity.Length > 0)
                        {
                            PeAdress[5] = "City : " + pecity + ", ";
                        }
                        else
                        {
                            PeAdress[5] = " ";
                        }

                        if (peState.Length > 0)
                        {
                            PeAdress[6] = "State : " + peState + " ";
                        }
                        else
                        {
                            PeAdress[6] = ".";
                        }


                        if (pePincode.Length > 0)
                        {
                            PeAdress[7] = ", Pincode : " + pePincode + ".";
                        }
                        else
                        {
                            PeAdress[7] = "";
                        }

                        string Address2 = string.Empty;

                        for (int i = 0; i < 8; i++)
                        {
                            Address2 += PeAdress[i];
                        }


                        #endregion


                        document.Add(table5);

                        //document.NewPage();


                        PdfPTable table6 = new PdfPTable(6);
                        table6.TotalWidth = 500f;
                        table6.LockedWidth = true;
                        float[] width6 = new float[] { 0.6f, 2.4f, 2f, 1f, 2f, 2f };
                        table6.SetWidths(width6);
                        PdfPCell cell6;



                        cell6 = new PdfPCell(new Phrase("7.", FontStyle4));
                        cell6.HorizontalAlignment = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        cell6.Colspan = 1;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Name of the Jurisdiction Police Station.", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 2;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Vijayanagar", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        //table6.AddCell(cell6);




                        cell6 = new PdfPCell(new Phrase("8.", FontStyle4));
                        cell6.HorizontalAlignment = 1;
                        cell6.Colspan = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Contact telephone Number.", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 2;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase(empphone, FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 2;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        cell6.PaddingRight = 100;
                        // table6.AddCell(cell6);


                        cell6 = new PdfPCell(new Phrase("9.", FontStyle4));
                        cell6.HorizontalAlignment = 1;
                        cell6.Colspan = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Passport Number", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Validity", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 2;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);



                        cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                        cell6.HorizontalAlignment = 1;
                        cell6.Colspan = 1;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Bangalore One Challan Trans.No.:", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        cell6.BorderWidthRight = 0;
                        table6.AddCell(cell6);



                        cell6 = new PdfPCell(new Phrase("(Original Challan has to be enclosed)", FontStyle5));
                        cell6.HorizontalAlignment = 2;
                        cell6.Colspan = 2;
                        cell6.PaddingTop = 5;
                        cell6.PaddingBottom = 5;
                        cell6.BorderWidthLeft = 0;
                        table6.AddCell(cell6);

                        //document.Add(table61);


                        #region
                        cell6 = new PdfPCell(new Phrase(" (a) Landline", FontStyle3));
                        cell6.HorizontalAlignment = 1;
                        cell6.Colspan = 2;
                        cell6.PaddingLeft = 70;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);
                        cell6 = new PdfPCell(new Phrase("", FontStyle4));
                        cell6.HorizontalAlignment = 2;
                        cell6.Colspan = 2;
                        cell6.PaddingRight = 100;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("(b) Mobile", FontStyle3));
                        cell6.HorizontalAlignment = 1;
                        cell6.Colspan = 2;
                        cell6.PaddingLeft = 70;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase(empphone, FontStyle3));
                        cell6.HorizontalAlignment = 2;
                        cell6.Colspan = 2;
                        cell6.Border = 0;
                        cell6.PaddingRight = 100;
                        //table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        cell6.PaddingBottom = 30;
                        //table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Details of fee remitted:", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        cell6.PaddingLeft = -38;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 2;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("(a) Transaction Number of Bangalore One / Karnataka One: ", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.Border = 0;
                        cell6.PaddingLeft = -38;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);


                        cell6 = new PdfPCell(new Phrase("(Please enter the 12 digit transaction number in the boxes above. First 3 characters are Alphabetical and rest 9 characters are Numerical.).Original Receipt has to be enclosed", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.Border = 0;
                        cell6.PaddingLeft = -38;
                        cell6.PaddingBottom = 30;
                        // table6.AddCell(cell6);
                        //

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        //  table6.AddCell(cell6);


                        cell6 = new PdfPCell(new Phrase("(b) Treasury / Bank:", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.Border = 0;
                        cell6.PaddingLeft = -38;
                        //  table6.AddCell(cell6);


                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        //table6.AddCell(cell6);


                        cell6 = new PdfPCell(new Phrase("(Pl enter the challan Number)", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.Border = 0;
                        cell6.PaddingLeft = -38;
                        // table6.AddCell(cell6);



                        cell6 = new PdfPCell(new Phrase("If yes furnish particulars as below", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 4;
                        cell6.PaddingRight = 30;
                        cell6.PaddingBottom = 30;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);
                        #endregion

                        cell6 = new PdfPCell(new Phrase("", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.Border = 0;
                        cell6.PaddingTop = 40;
                        table6.AddCell(cell6);
                        //-----------end code today

                        cell6 = new PdfPCell(new Phrase("The information furnished in this application is true to the best of my / our knowledge & belief. No information has been suppressed.", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = 45;
                        cell6.PaddingBottom = 30;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Please verify the ANTECEDENTS and / or the STAY DETAILS of the above named person at the given address for the given period of stay and issue the PVC / PCC.", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingRight = 30;
                        cell6.PaddingBottom = 30;
                        cell6.Border = 0;
                        //table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Thanking you", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = 20;
                        cell6.PaddingBottom = 30;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Yours faithfully", FontStyle3));
                        cell6.HorizontalAlignment = 2;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = -40;
                        cell6.PaddingBottom = 30;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Date :", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.PaddingBottom = 20;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);
                        //EmpDtofJoining
                        cell6 = new PdfPCell(new Phrase(EmpDtofJoining, FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.PaddingLeft = -40;
                        cell6.PaddingBottom = 20;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Place:", FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 1;
                        cell6.Border = 0;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase(AreaName, FontStyle4));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 3;
                        cell6.Border = 0;
                        cell6.PaddingLeft = -40;
                        // table6.AddCell(cell6);

                        if (File.Exists(imagepathArrow))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(80f);
                            gif2.SetAbsolutePosition(65f, 925f);
                            PdfPCell sealImg = new PdfPCell();
                            sealImg.AddElement(gif2);
                            sealImg.Border = 0;
                            sealImg.HorizontalAlignment = 2;
                            sealImg.Colspan = 6;
                            //sealImg.PaddingLeft = -480f;
                            sealImg.PaddingBottom = -10f;
                            sealImg.PaddingRight = -245f;
                            //sealImg.PaddingTop = 40f;
                            table6.AddCell(sealImg);
                            //    document.Add(new Paragraph(" "));
                            //    document.Add(gif2);
                        }

                        cell6 = new PdfPCell(new Phrase("Signature of the Applicant / \nthe I / c of the Company / firm", FontStyle3));
                        cell6.HorizontalAlignment = 2;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = -40;
                        cell6.SetLeading(0f, 1.3f);
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("From Address:", FontStyle2));
                        cell6.HorizontalAlignment = 1;
                        cell6.Colspan = 4;
                        cell6.Border = 0;
                        cell6.PaddingTop = 20;
                        cell6.PaddingRight = 20;
                        cell6.PaddingBottom = 50;
                        // table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("Instructions.", FontStyle2));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.Border = 0;
                        cell6.PaddingBottom = 10;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("1. Applicant should furnish one of the approved documents by the State Government for the purpose of address proof.(Passport, Pan card, Ration Card, Voter ID, BSNL Telephone Bill, Gas Bill, Water Bill, Electricity Bill, Driving License)", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = 40;
                        cell6.Border = 0;
                        cell6.SetLeading(0, 1.3f);
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("2. Enclose two additional passport size photos along with the application.", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = 40;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("3. Furnish the proof of date of birth.", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = 40;
                        cell6.Border = 0;
                        table6.AddCell(cell6);

                        cell6 = new PdfPCell(new Phrase("4. The PVC / PCC issued shall not be used for any other purpose other than the purpose specified in the application.", FontStyle3));
                        cell6.HorizontalAlignment = 0;
                        cell6.Colspan = 6;
                        cell6.PaddingLeft = 40;
                        cell6.Border = 0;
                        table6.AddCell(cell6);


                        document.Add(table6);

                        #endregion for police form
                    }
                    else if (ddlEmpIDoptions.SelectedIndex == 1)
                    {

                        for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                        {
                            document.NewPage();

                            #region for variables assignment
                            name = dtEmpdetails.Rows[m]["EmployeeName"].ToString();
                            fathername = dtEmpdetails.Rows[m]["EmpFatherName"].ToString();
                            Empdateofbirth = dtEmpdetails.Rows[m]["DtOfBirth"].ToString();
                            Nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();
                            Gender = dtEmpdetails.Rows[m]["gender"].ToString();
                            remarks1 = dtEmpdetails.Rows[m]["EmpRemarks"].ToString();
                            MaritalStatus = dtEmpdetails.Rows[m]["MaritalStatus"].ToString();
                            FatherName = dtEmpdetails.Rows[m]["EmpFatherName"].ToString();
                            SpouseName = dtEmpdetails.Rows[m]["EmpSpouseName"].ToString();
                            prTaluka = dtEmpdetails.Rows[m]["prTaluka"].ToString();
                            prTown = dtEmpdetails.Rows[m]["prTown"].ToString();
                            prLmark = dtEmpdetails.Rows[m]["prLmark"].ToString();
                            prState = dtEmpdetails.Rows[m]["prState"].ToString();
                            prcity = dtEmpdetails.Rows[m]["pecity"].ToString();
                            prPincode = dtEmpdetails.Rows[m]["prPincode"].ToString();
                            pelmark = dtEmpdetails.Rows[m]["peLmark"].ToString();
                            peTaluka = dtEmpdetails.Rows[m]["peTaluka"].ToString();
                            peTown = dtEmpdetails.Rows[m]["peTown"].ToString();
                            pecity = dtEmpdetails.Rows[m]["prcity"].ToString();
                            pePincode = dtEmpdetails.Rows[m]["pePincode"].ToString();
                            peState = dtEmpdetails.Rows[m]["peState"].ToString();
                            Age = dtEmpdetails.Rows[m]["Age"].ToString();
                            empphone = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                            branch = dtEmpdetails.Rows[m]["CompanyInfo"].ToString();
                            prPoliceStation = dtEmpdetails.Rows[m]["prPoliceStation"].ToString();
                            EmpDtofJoining = dtEmpdetails.Rows[m]["DtOfJoining"].ToString();
                            prperiodofstay = dtEmpdetails.Rows[m]["prperiodofstay"].ToString();
                            //EmpPresentAddress = dtEmpdetails.Rows[m]["EmpPresentAddress"].ToString();
                            //EmpPermanentAddress = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();

                            //var PresentOrPermanentaddress = "False";
                            PresentOrPermanentaddress = dtEmpdetails.Rows[m]["pvcadd"].ToString();
                            var presentORperadd = "";
                            if (PresentOrPermanentaddress == "1")
                            {
                                presentORperadd = dtEmpdetails.Rows[m]["EmpPresentAddress"].ToString();
                            }
                            else if (PresentOrPermanentaddress == "2")
                            {
                                presentORperadd = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();
                            }


                            Empid = dtEmpdetails.Rows[m]["empid"].ToString();
                            AreaName = dtEmpdetails.Rows[m]["AreaName"].ToString();
                            #endregion for variables assignment


                            #region for police form
                            PdfPTable tablen1 = new PdfPTable(4);
                            tablen1.TotalWidth = 500f;
                            tablen1.LockedWidth = true;
                            float[] widthn1 = new float[] { 1f, 5f, 3f, 2f };
                            tablen1.SetWidths(widthn1);
                            PdfPCell cell1;

                            #region for image
                            string imagepath2 = Server.MapPath("Images/TSLogo.png");
                            if (File.Exists(imagepath2))
                            {
                                iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                                gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                                // gif2.SpacingBefore = 50;
                                gif2.ScalePercent(10.5f);
                                gif2.SetAbsolutePosition(270f, 945f);
                                document.Add(new Paragraph(" "));
                                document.Add(gif2);
                            }
                            #endregion


                            cell1 = new PdfPCell(new Phrase("Emp Id: " + Empid + "  " + "Police Verification Form", FontStyle4));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 4;
                            cell1.Border = 0;
                            cell1.PaddingTop = -25f;
                            tablen1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Karnataka State Police", FontStyle4));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 4;
                            cell1.Border = 0;
                            cell1.PaddingTop = 8;
                            tablen1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("APPLICATION FOR POLICE VERIFICATION / CLEARANCE CERTIFICATE\n(For Indian Only)", FontStyle4));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 4;
                            cell1.Border = 0;
                            cell1.PaddingBottom = 5;
                            tablen1.AddCell(cell1);


                            PdfPTable temptable1 = new PdfPTable(3);
                            temptable1.TotalWidth = 410f;
                            temptable1.LockedWidth = true;
                            float[] tempwidth1 = new float[] { 1f, 5f, 3f };
                            temptable1.SetWidths(tempwidth1);

                            cell1 = new PdfPCell(new Phrase("To", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 3;
                            cell1.Border = 0;
                            cell1.PaddingTop = 10;
                            temptable1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("The Commissioner of Police", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 3;
                            cell1.Border = 0;
                            cell1.PaddingTop = 10;
                            temptable1.AddCell(cell1);


                            cell1 = new PdfPCell(new Phrase("________________________City", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 3;
                            cell1.Border = 0;
                            temptable1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Sir,", FontStyle4));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 3;
                            cell1.PaddingTop = 10;
                            cell1.Border = 0;
                            temptable1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Sub: - Application to issue Police Verification / Clearance Certificate\nfor the Purpose of...............................................................", FontStyle4));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 3;
                            cell1.Border = 0;
                            cell1.PaddingTop = 10;
                            cell1.PaddingLeft = 50;
                            cell1.PaddingBottom = 40;
                            cell1.SetLeading(0f, 1.3f);
                            temptable1.AddCell(cell1);

                            PdfPCell childTable1 = new PdfPCell(temptable1);
                            childTable1.Border = 0;
                            childTable1.HorizontalAlignment = 0;
                            childTable1.Colspan = 3;
                            tablen1.AddCell(childTable1);


                            PdfPTable temptable2 = new PdfPTable(1);
                            temptable2.TotalWidth = 90f;
                            temptable2.LockedWidth = true;
                            float[] tempwidth2 = new float[] { 2f };
                            temptable2.SetWidths(tempwidth2);






                            if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                            {
                                iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[0]["Image"].ToString());
                                //empphoto.ScalePercent(23f);
                                empphoto.ScaleAbsolute(110.7f, 140.5f);
                                PdfPCell employeephoto = new PdfPCell();
                                Paragraph logo = new Paragraph();
                                logo.Add(new Chunk(empphoto, 0, 0));
                                employeephoto.AddElement(logo);
                                employeephoto.HorizontalAlignment = 2;
                                employeephoto.Border = 0;
                                employeephoto.PaddingLeft = -20;
                                employeephoto.Colspan = 1;
                                // temptable2.AddCell(employeephoto);

                            }


                            PdfPCell childTable2 = new PdfPCell(temptable2);
                            childTable2.Border = 0;
                            childTable2.HorizontalAlignment = 0;
                            childTable2.Colspan = 1;
                            tablen1.AddCell(childTable2);

                            document.Add(tablen1);

                            PdfPTable table1 = new PdfPTable(4);
                            table1.TotalWidth = 500f;
                            table1.LockedWidth = true;
                            float[] width1 = new float[] { 1f, 5f, 2f, 3f };
                            table1.SetWidths(width1);


                            cell1 = new PdfPCell(new Phrase("Sl.No", FontStyle2));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Name of the Verification Certificate ", FontStyle2));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Amount in Rupees", FontStyle2));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Select appropriate Service Sought", FontStyle2));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(1)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            cell1.PaddingTop = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(2)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(3)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(4)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate & other companies ANTECEDENTS VERIFICATION ONLY(as per police station records)", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate / &other companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION amount to be paid by the company.  ", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for job aspirants(General) ANTECEDENTS along with ADDRESS VERIFICATION", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(4.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION ONLY", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(5.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n750/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(6.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate of Institutions /Companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(7.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Marriage Alliances ANTECEDENTS VERIFICATION", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(8.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Training/Apprenticeship at Public sector undertakings or for Trainees / Workers working on daily wages at Government Institutions. ANTECEDENTS VERIFICATION. ", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(9.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for NCC / NSS Students attending training camps ANTECEDENTS VERIFICATION.", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(10.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Cooli / Loader / Class IV security staff / supervisor at Airport. (Individual applicants only) ANTECEDENTS VERIFICATION", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n150/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(11.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Central / State Government Employees request directly by employee. ANTECEDENTS VERIFICATION.", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(12.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police Clearance Certificate (PCC) for going abroad (Visa for studies) ", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            cell1.SetLeading(0, 1.2f);
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("(13.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Verification and comparison of Finger Print-Fees for each Verification", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n500/-\n500/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);


                            cell1 = new PdfPCell(new Phrase("(14.)", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("Police clearance Certificate for Indian citizens/For accepting or Donating Kidney/Adoption of child/for purchase of property in other", FontStyle3));
                            cell1.HorizontalAlignment = 0;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);

                            cell1 = new PdfPCell(new Phrase("", FontStyle3));
                            cell1.HorizontalAlignment = 1;
                            cell1.Colspan = 1;
                            table1.AddCell(cell1);


                            document.Add(table1);
                            document.NewPage();

                            PdfPTable table2 = new PdfPTable(4);
                            table2.TotalWidth = 500f;
                            table2.LockedWidth = true;
                            float[] width2 = new float[] { 1f, 5f, 3f, 2f };
                            table2.SetWidths(width2);
                            PdfPCell cell2;

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 4;
                            cell2.PaddingTop = 50;
                            cell2.Border = 0;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Verification of service local Jurisdiction.", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Verification of service outside Jurisdiction.", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Any other purpose", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            cell2.PaddingBottom = 50;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("The verification done through Department as per Government Order’s : -", FontStyle2));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 4;
                            cell2.Border = 0;
                            cell2.PaddingBottom = 50;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(1)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(2)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(3)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("(4)", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("1.", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("PIO / OCI Cards", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("2.", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Pakistan Visa", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("3.", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Verification of Citizenships", FontStyle3));
                            cell2.HorizontalAlignment = 0; ;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("4.", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Government Employees Job Verification done through the department", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("", FontStyle3));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 1;
                            cell2.PaddingRight = 50;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("Note: - Please tick the appropriate one.", FontStyle2));
                            cell2.HorizontalAlignment = 1;
                            cell2.Colspan = 4;
                            cell2.Border = 0;
                            cell2.PaddingBottom = 50;
                            table2.AddCell(cell2);

                            cell2 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                            cell2.HorizontalAlignment = 0;
                            cell2.Colspan = 4;
                            cell2.PaddingBottom = 30;
                            cell2.Border = 0;
                            table2.AddCell(cell2);


                            // document.Add(table2);

                            PdfPTable table3 = new PdfPTable(3);
                            table3.TotalWidth = 500f;
                            table3.LockedWidth = true;
                            float[] width3 = new float[] { 0.8f, 3.2f, 9f };
                            table3.SetWidths(width3);
                            PdfPCell cell3;


                            cell3 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 3;
                            cell3.PaddingBottom = 30;
                            cell3.Border = 0;
                            table3.AddCell(cell3);

                            cell3 = new PdfPCell(new Phrase("1.", FontStyle4));
                            cell3.HorizontalAlignment = 1;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);

                            cell3 = new PdfPCell(new Phrase("Name", FontStyle4));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);

                            cell3 = new PdfPCell(new Phrase(name, FontStyle3));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);



                            cell3 = new PdfPCell(new Phrase("2.", FontStyle4));
                            cell3.HorizontalAlignment = 1;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);

                            cell3 = new PdfPCell(new Phrase("Father/Husband name", FontStyle4));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);

                            string Relationname = "";
                            string FatherSpouseName = "";


                            if (Gender == "Male")
                            {
                                FatherSpouseName = FatherName;
                            }
                            else if (Gender == "Female")
                            {
                                if (MaritalStatus == "Unmarried")
                                {
                                    FatherSpouseName = FatherName;
                                }
                                else
                                {
                                    FatherSpouseName = SpouseName;

                                }
                            }

                            //if (FatherName.Length > 0)
                            //{
                            //    FatherSpouseName = FatherName;
                            //}
                            //else if (SpouseName.Length > 0)
                            //{
                            //    FatherSpouseName = SpouseName;
                            //}
                            //else if (FSpouseName.Length > 0)
                            //{
                            //    FatherSpouseName = FSpouseName;
                            //}
                            //else
                            //{
                            //    FatherSpouseName = "";
                            //}

                            cell3 = new PdfPCell(new Phrase(FatherSpouseName, FontStyle3));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 1;
                            // cell3.PaddingTop = 5;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);



                            cell3 = new PdfPCell(new Phrase("3.", FontStyle4));
                            cell3.HorizontalAlignment = 1;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);

                            cell3 = new PdfPCell(new Phrase("Nationality", FontStyle4));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);

                            cell3 = new PdfPCell(new Phrase(Nationality, FontStyle3));
                            cell3.HorizontalAlignment = 0;
                            cell3.Colspan = 1;
                            cell3.PaddingTop = 5;
                            cell3.PaddingBottom = 5;
                            table3.AddCell(cell3);


                            document.Add(table3);

                            PdfPTable table4 = new PdfPTable(6);
                            table4.TotalWidth = 500f;
                            table4.LockedWidth = true;
                            float[] width4 = new float[] { 0.6f, 2.5f, 1.9f, 1f, 2f, 2f };
                            table4.SetWidths(width4);
                            PdfPCell cell4;

                            cell4 = new PdfPCell(new Phrase("4.", FontStyle4));
                            cell4.HorizontalAlignment = 1;
                            cell4.Colspan = 1;
                            cell4.PaddingTop = 5;
                            cell4.PaddingBottom = 5;
                            table4.AddCell(cell4);

                            cell4 = new PdfPCell(new Phrase("Date of Birth & Age", FontStyle4));
                            cell4.HorizontalAlignment = 0;
                            cell4.Colspan = 1;
                            cell4.PaddingTop = 5;
                            cell4.PaddingBottom = 5;
                            //cell4.PaddingLeft = 0;
                            table4.AddCell(cell4);

                            cell4 = new PdfPCell(new Phrase(Empdateofbirth, FontStyle3));
                            cell4.HorizontalAlignment = 0;
                            cell4.Colspan = 1;
                            cell4.PaddingTop = 5;
                            cell4.PaddingBottom = 5;
                            table4.AddCell(cell4);

                            cell4 = new PdfPCell(new Phrase("Age", FontStyle4));
                            cell4.HorizontalAlignment = 0;
                            cell4.Colspan = 1;
                            cell4.PaddingTop = 5;
                            cell4.PaddingBottom = 5;
                            table4.AddCell(cell4);

                            cell4 = new PdfPCell(new Phrase(Age + " years", FontStyle3));
                            cell4.HorizontalAlignment = 0;
                            cell4.Colspan = 2;
                            cell4.PaddingTop = 5;
                            cell4.PaddingBottom = 5;
                            table4.AddCell(cell4);



                            document.Add(table4);

                            PdfPTable table5 = new PdfPTable(3);
                            table5.TotalWidth = 500f;
                            table5.LockedWidth = true;
                            float[] width5 = new float[] { 0.8f, 3.2f, 9f };
                            table5.SetWidths(width5);
                            PdfPCell cell5;

                            cell5 = new PdfPCell(new Phrase("5.", FontStyle4));
                            cell5.HorizontalAlignment = 1;
                            cell5.Colspan = 1;
                            cell5.PaddingTop = 10;
                            cell5.PaddingBottom = 10;
                            table5.AddCell(cell5);


                            cell5 = new PdfPCell(new Phrase("Address needs to be verified with period of stay", FontStyle4));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 1;
                            cell5.PaddingTop = 10;
                            cell5.PaddingBottom = 10;
                            table5.AddCell(cell5);


                            cell5 = new PdfPCell(new Phrase("#3/2/6, 1st Cross M C layout Vijayanagar Bangalore -560079", FontStyle3));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 1;
                            cell5.PaddingTop = 10;
                            cell5.PaddingBottom = 10;
                            table5.AddCell(cell5);




                            cell5 = new PdfPCell(new Phrase("6.", FontStyle4));
                            cell5.HorizontalAlignment = 1;
                            cell5.Colspan = 1;
                            cell5.PaddingTop = 5;
                            cell5.PaddingBottom = 5;
                            table5.AddCell(cell5);

                            cell5 = new PdfPCell(new Phrase("Period of stay", FontStyle4));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 1;
                            cell5.PaddingTop = 5;
                            cell5.PaddingBottom = 5;
                            table5.AddCell(cell5);

                            cell5 = new PdfPCell(new Phrase("2 years", FontStyle3));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 1;
                            cell5.PaddingTop = 5;
                            cell5.PaddingBottom = 5;
                            table5.AddCell(cell5);


                            cell5 = new PdfPCell(new Phrase("", FontStyle3));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 1;
                            cell5.Border = 0;
                            cell5.BorderWidthLeft = 0.5f;
                            //cell5.PaddingBottom = 5;
                            table5.AddCell(cell5);

                            cell5 = new PdfPCell(new Phrase("(Enclose additional sheet for more than one address)", FontStyle3));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 2;
                            cell5.BorderWidthRight = 0.5f;
                            cell5.BorderWidthLeft = 0.5f;
                            table5.AddCell(cell5);


                            #region Present address String array

                            string[] PrAdress = new string[8];
                            if (prLmark.Length > 0)
                            {
                                PrAdress[0] = "Landmark :  " + prLmark + ", ";
                            }
                            else
                            {
                                PrAdress[0] = "";
                            }
                            if (prTown.Length > 0)
                            {
                                PrAdress[1] = "Vill :  " + prTown + ", ";
                            }
                            else
                            {
                                PrAdress[1] = "";
                            }

                            if (prPostOffice.Length > 0)
                            {
                                PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                            }
                            else
                            {
                                PrAdress[2] = "";
                            }
                            if (prTaluka.Length > 0)
                            {
                                PrAdress[3] = "Taluka : " + prTaluka + ", ";
                            }
                            else
                            {
                                PrAdress[3] = "";
                            }
                            if (prPoliceStation.Length > 0)
                            {
                                PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                            }
                            else
                            {
                                PrAdress[4] = "";
                            }
                            if (prcity.Length > 0)
                            {
                                PrAdress[5] = "City : " + prcity + ", ";
                            }
                            else
                            {
                                PrAdress[5] = "";
                            }

                            if (prState.Length > 0)
                            {
                                PrAdress[6] = "State : " + prState + " ";
                            }
                            else
                            {
                                PrAdress[6] = ".";
                            }


                            if (prPincode.Length > 0)
                            {
                                PrAdress[7] = ", Pincode : " + prPincode + ".";
                            }
                            else
                            {
                                PrAdress[7] = "";
                            }

                            Address1 = string.Empty;

                            for (int i = 0; i < 8; i++)
                            {
                                Address1 += PrAdress[i];
                            }


                            #endregion



                            cell5 = new PdfPCell(new Phrase("", FontStyle3));
                            cell5.HorizontalAlignment = 0;
                            cell5.Colspan = 1;
                            cell5.Border = 0;
                            cell5.PaddingBottom = 10;
                            table5.AddCell(cell5);



                            #region Permanent address String array

                            string[] PeAdress = new string[8];

                            if (pelmark.Length > 0)
                            {
                                PeAdress[0] = "Landmark :  " + pelmark + ", ";
                            }
                            else
                            {
                                PeAdress[0] = "";
                            }
                            if (peTown.Length > 0)
                            {
                                PeAdress[1] = "Vill : " + peTown + ", ";
                            }
                            else
                            {
                                PeAdress[1] = "";
                            }

                            if (pePostOffice.Length > 0)
                            {
                                PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                            }
                            else
                            {
                                PeAdress[2] = "";
                            }
                            if (peTaluka.Length > 0)
                            {
                                PeAdress[3] = "Taluka : " + peTaluka + ", ";
                            }
                            else
                            {
                                PeAdress[3] = " ";
                            }
                            if (pePoliceStation.Length > 0)
                            {
                                PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                            }
                            else
                            {
                                PeAdress[4] = " ";
                            }
                            if (pecity.Length > 0)
                            {
                                PeAdress[5] = "City : " + pecity + ", ";
                            }
                            else
                            {
                                PeAdress[5] = " ";
                            }

                            if (peState.Length > 0)
                            {
                                PeAdress[6] = "State : " + peState + " ";
                            }
                            else
                            {
                                PeAdress[6] = ".";
                            }


                            if (pePincode.Length > 0)
                            {
                                PeAdress[7] = ", Pincode : " + pePincode + ".";
                            }
                            else
                            {
                                PeAdress[7] = "";
                            }

                            string Address2 = string.Empty;

                            for (int i = 0; i < 8; i++)
                            {
                                Address2 += PeAdress[i];
                            }


                            #endregion


                            document.Add(table5);

                            //document.NewPage();


                            PdfPTable table6 = new PdfPTable(6);
                            table6.TotalWidth = 500f;
                            table6.LockedWidth = true;
                            float[] width6 = new float[] { 0.6f, 2.4f, 2f, 1f, 2f, 2f };
                            table6.SetWidths(width6);
                            PdfPCell cell6;



                            cell6 = new PdfPCell(new Phrase("7.", FontStyle4));
                            cell6.HorizontalAlignment = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            cell6.Colspan = 1;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Name of the Jurisdiction Police Station.", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 2;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Vijayanagar", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("8.", FontStyle4));
                            cell6.HorizontalAlignment = 1;
                            cell6.Colspan = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Contact telephone Number.", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 2;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase(empphone, FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);




                            cell6 = new PdfPCell(new Phrase("9.", FontStyle4));
                            cell6.HorizontalAlignment = 1;
                            cell6.Colspan = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Passport Number", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Validity", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 2;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);



                            cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                            cell6.HorizontalAlignment = 1;
                            cell6.Colspan = 1;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Bangalore One Challan Trans.No.:", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            cell6.BorderWidthRight = 0;
                            table6.AddCell(cell6);



                            cell6 = new PdfPCell(new Phrase("(Original Challan has to be enclosed)", FontStyle5));
                            cell6.HorizontalAlignment = 2;
                            cell6.Colspan = 2;
                            cell6.PaddingTop = 5;
                            cell6.PaddingBottom = 5;
                            cell6.BorderWidthLeft = 0;
                            table6.AddCell(cell6);

                            #region
                            cell6 = new PdfPCell(new Phrase(" (a) Landline", FontStyle3));
                            cell6.HorizontalAlignment = 1;
                            cell6.Colspan = 2;
                            cell6.PaddingLeft = 70;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);
                            cell6 = new PdfPCell(new Phrase("", FontStyle4));
                            cell6.HorizontalAlignment = 2;
                            cell6.Colspan = 2;
                            cell6.PaddingRight = 100;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("(b) Mobile", FontStyle3));
                            cell6.HorizontalAlignment = 1;
                            cell6.Colspan = 2;
                            cell6.PaddingLeft = 70;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase(empphone, FontStyle3));
                            cell6.HorizontalAlignment = 2;
                            cell6.Colspan = 2;
                            cell6.Border = 0;
                            cell6.PaddingRight = 100;
                            //table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            cell6.PaddingBottom = 30;
                            //table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Details of fee remitted:", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            cell6.PaddingLeft = -38;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 2;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("(a) Transaction Number of Bangalore One / Karnataka One: ", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.Border = 0;
                            cell6.PaddingLeft = -38;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);


                            cell6 = new PdfPCell(new Phrase("(Please enter the 12 digit transaction number in the boxes above. First 3 characters are Alphabetical and rest 9 characters are Numerical.).Original Receipt has to be enclosed", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.Border = 0;
                            cell6.PaddingLeft = -38;
                            cell6.PaddingBottom = 30;
                            // table6.AddCell(cell6);
                            //

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            //  table6.AddCell(cell6);


                            cell6 = new PdfPCell(new Phrase("(b) Treasury / Bank:", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.Border = 0;
                            cell6.PaddingLeft = -38;
                            //  table6.AddCell(cell6);


                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            //table6.AddCell(cell6);


                            cell6 = new PdfPCell(new Phrase("(Pl enter the challan Number)", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.Border = 0;
                            cell6.PaddingLeft = -38;
                            // table6.AddCell(cell6);



                            cell6 = new PdfPCell(new Phrase("If yes furnish particulars as below", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 4;
                            cell6.PaddingRight = 30;
                            cell6.PaddingBottom = 30;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);
                            #endregion

                            cell6 = new PdfPCell(new Phrase("", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.Border = 0;
                            cell6.PaddingTop = 40;
                            table6.AddCell(cell6);
                            //-----------end code today

                            cell6 = new PdfPCell(new Phrase("The information furnished in this application is true to the best of my / our knowledge & belief. No information has been suppressed.", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = 45;
                            cell6.PaddingBottom = 30;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Please verify the ANTECEDENTS and / or the STAY DETAILS of the above named person at the given address for the given period of stay and issue the PVC / PCC.", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingRight = 30;
                            cell6.PaddingBottom = 30;
                            cell6.Border = 0;
                            //table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Thanking you", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = 20;
                            cell6.PaddingBottom = 30;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Yours faithfully", FontStyle3));
                            cell6.HorizontalAlignment = 2;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = -40;
                            cell6.PaddingBottom = 30;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Date :", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.PaddingBottom = 20;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);
                            //EmpDtofJoining
                            cell6 = new PdfPCell(new Phrase(EmpDtofJoining, FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.PaddingLeft = -40;
                            cell6.PaddingBottom = 20;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Place:", FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 1;
                            cell6.Border = 0;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase(AreaName, FontStyle4));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 3;
                            cell6.Border = 0;
                            cell6.PaddingLeft = -40;
                            // table6.AddCell(cell6);

                            if (File.Exists(imagepathArrow))
                            {
                                iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                                gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                                // gif2.SpacingBefore = 50;
                                gif2.ScalePercent(80f);
                                gif2.SetAbsolutePosition(65f, 925f);
                                PdfPCell sealImg = new PdfPCell();
                                sealImg.AddElement(gif2);
                                sealImg.Border = 0;
                                sealImg.HorizontalAlignment = 2;
                                sealImg.Colspan = 6;
                                //sealImg.PaddingLeft = -480f;
                                sealImg.PaddingBottom = -10f;
                                sealImg.PaddingRight = -245f;
                                //sealImg.PaddingTop = 40f;
                                table6.AddCell(sealImg);
                                //    document.Add(new Paragraph(" "));
                                //    document.Add(gif2);
                            }

                            cell6 = new PdfPCell(new Phrase("Signature of the Applicant / \nthe I / c of the Company / firm", FontStyle3));
                            cell6.HorizontalAlignment = 2;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = -40;
                            cell6.SetLeading(0f, 1.3f);
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("From Address:", FontStyle2));
                            cell6.HorizontalAlignment = 1;
                            cell6.Colspan = 4;
                            cell6.Border = 0;
                            cell6.PaddingTop = 20;
                            cell6.PaddingRight = 20;
                            cell6.PaddingBottom = 50;
                            // table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("Instructions.", FontStyle2));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.Border = 0;
                            cell6.PaddingBottom = 10;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("1. Applicant should furnish one of the approved documents by the State Government for the purpose of address proof.(Passport, Pan card, Ration Card, Voter ID, BSNL Telephone Bill, Gas Bill, Water Bill, Electricity Bill, Driving License)", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = 40;
                            cell6.Border = 0;
                            cell6.SetLeading(0, 1.3f);
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("2. Enclose two additional passport size photos along with the application.", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = 40;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("3. Furnish the proof of date of birth.", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = 40;
                            cell6.Border = 0;
                            table6.AddCell(cell6);

                            cell6 = new PdfPCell(new Phrase("4. The PVC / PCC issued shall not be used for any other purpose other than the purpose specified in the application.", FontStyle3));
                            cell6.HorizontalAlignment = 0;
                            cell6.Colspan = 6;
                            cell6.PaddingLeft = 40;
                            cell6.Border = 0;
                            table6.AddCell(cell6);


                            document.Add(table6);


                            #endregion for police form
                        }
                    }



                    string filename = "PoliceVerification.pdf";

                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();
                }

            }


            catch (Exception ex)
            {

            }



        }

        protected void btnMovementOrder_Click(object sender, EventArgs e)
        {
            int fontsize1 = 8;
            int fontsize2 = 6;

            int totalfonts = FontFactory.RegisterDirectory("c:\\WINDOWS\\fonts");
            //StringBuilder sa = new StringBuilder();
            foreach (string fontname in FontFactory.RegisteredFonts)
            {
                // sa.Append(fontname + "\n");
            }
            Font FontStyle4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 13, Font.BOLD, BaseColor.BLACK);
            Font FontStyle1 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
            Font FontStyle5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 9, Font.BOLD, BaseColor.BLACK);
            Font FontStyle6 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.ITALIC, BaseColor.BLACK);
            string fontstyle = "calibri";
            int Fontsize = 10;

            #region for companyinfo
            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;


            string CompanyName = "";
            string Address = "";
            string Emailid = "";
            string Website = "";
            string Phoneno = "";
            string Faxno = "";

            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();
                Phoneno = DtCompanyInfo.Rows[0]["Phoneno"].ToString();
                Faxno = DtCompanyInfo.Rows[0]["Faxno"].ToString();
                Emailid = DtCompanyInfo.Rows[0]["Emailid"].ToString();
                Website = DtCompanyInfo.Rows[0]["Website"].ToString();


            }
            #endregion for companyinfo

            string fontsyle = "TIMES_ROMAN";

            #region for declaration
            string name = "";
            string IDNo = "";
            string designation = "";
            string doj = "";
            string city = "";
            string state = "";
            string EmpPermanentAddress = "";
            string empid = "";
            string esino = "";
            string pfno = "";
            string height = "";
            string weight = "";
            string chest = "";
            string EmpIdMark1 = "";
            string division = "";
            string AreaName = "";
            string ReportingManager = "";
            string IDcardIssued = "";
            string IDcardvalid = "";
            string Image = "";
            string EmpSign = "";
            #endregion

            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            string fromempid = "";
            string toempid = "";
            DataTable dtEmpdetails = null;

            #endregion end Variable Declaration

            #region Begin Assign Values to The Variables

            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                SPName = "EmpBiodataPDF";
                Empid = txtEmpid.Text;
                HTEmpBiodata.Add("@empid", Empid);
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                SPName = "EmpBiodataBulk";
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;

                HTEmpBiodata.Add("@FromEmpid", fromempid);
                HTEmpBiodata.Add("@ToEmpid", toempid);
            }

            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure


            if (dtEmpdetails.Rows.Count > 0)
            {


                Document document = new Document(PageSize.LEGAL);
                MemoryStream ms = new MemoryStream();
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);

                string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                string imagepath3 = Server.MapPath("assets/EmpSign/");
                string imagepath6 = Server.MapPath("assets/Images/");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");
                //string imagepath2 = Server.MapPath("assets/Images/");
                //string imagepath4 = Server.MapPath("assets/Images/IDCardLogo.jpg");
                if (ddlEmpIDoptions.SelectedIndex == 0)
                {

                    IDNo = dtEmpdetails.Rows[0]["empid"].ToString();
                    name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                    designation = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                    doj = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    EmpPermanentAddress = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();
                    pfno = dtEmpdetails.Rows[0]["pfno"].ToString();
                    esino = dtEmpdetails.Rows[0]["esino"].ToString();
                    height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                    EmpIdMark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                    division = dtEmpdetails.Rows[0]["division"].ToString();
                    AreaName = dtEmpdetails.Rows[0]["AreaName"].ToString();
                    ReportingManager = dtEmpdetails.Rows[0]["RptrmanagerID"].ToString();
                    IDcardIssued = dtEmpdetails.Rows[0]["IDCardIssued"].ToString();
                    IDcardvalid = dtEmpdetails.Rows[0]["IDCardValid"].ToString();
                    Image = dtEmpdetails.Rows[0]["Image"].ToString();
                    EmpSign = dtEmpdetails.Rows[0]["EmpSign"].ToString();

                    #region for Movementorder

                    PdfPTable table1 = new PdfPTable(3);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    float[] width = new float[] { 2f, 2f, 2f };
                    table1.SetWidths(width);
                    PdfPCell cell;

                    cell = new PdfPCell(new Phrase("Employee: " + IDNo + "   Movement Order", FontStyle5));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = -40f;
                    table1.AddCell(cell);

                    #region for image
                    string imagepath2 = Server.MapPath("assets/Images");
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(14.5f);
                        gif2.SetAbsolutePosition(250f, 900f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion

                    cell = new PdfPCell(new Phrase(CompanyName, FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = 60f;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;

                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Place: ", FontStyle1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("MOVEMENT ORDER", FontStyle1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Date: " + ((DateTime.Now).ToString("dd/MM/yyyy")), FontStyle1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;

                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;

                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Service No., Name & Rank", FontStyle3));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;

                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(IDNo + "            " + name + "            " + designation, FontStyle3));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;

                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;

                    table1.AddCell(cell);

                    document.Add(table1);

                    PdfPTable table2 = new PdfPTable(4);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 4f, 2f, 4f };
                    table2.SetWidths(width2);
                    PdfPCell cell1;

                    cell1 = new PdfPCell(new Phrase("E.S.I No", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(esino, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("P.F.No", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(pfno, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingBottom = 5f;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Date of Posting", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);



                    cell1 = new PdfPCell(new Phrase(doj, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Area", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(AreaName, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingBottom = 5f;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Reporting to", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(ReportingManager, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Zone", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(division, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingBottom = 5f;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Height  " + height + "                                                        Weight " + weight + "                                     Chest " + chest, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingBottom = 5f;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Identification Mark  " + EmpIdMark1, FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 4;
                        sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -40f;
                        //sealImg.PaddingRight = -260f;
                        sealImg.PaddingTop = 40f;
                        table2.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Sig. of Individual", FontStyle6));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingTop = 0;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sig. of Authorised Officer", FontStyle6));
                    cell1.HorizontalAlignment = 2;
                    cell1.Colspan = 2;
                    cell1.PaddingTop = 0;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    document.Add(table2);


                    #endregion for Movementorder

                    #region for IDCard

                    #region for range ID Card Display


                    PdfPTable MainIDCarddetails = new PdfPTable(18);
                    MainIDCarddetails.TotalWidth = 800f;
                    MainIDCarddetails.LockedWidth = true;
                    MainIDCarddetails.DefaultCell.HorizontalAlignment = Element.ALIGN_LEFT;
                    MainIDCarddetails.DefaultCell.VerticalAlignment = Element.ALIGN_TOP;
                    float[] width4 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    MainIDCarddetails.SetWidths(width4);



                    PdfPCell emptycellgap = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    emptycellgap.HorizontalAlignment = 1;
                    emptycellgap.Border = 0;
                    emptycellgap.Colspan = 18;
                    emptycellgap.MinimumHeight = 100;
                    MainIDCarddetails.AddCell(emptycellgap);


                    PdfPTable IDCarddetails = new PdfPTable(10);
                    IDCarddetails.TotalWidth = 370f;
                    IDCarddetails.LockedWidth = true;
                    width = new float[] { 5f, 2f, 2f, 2f, 0.2f, 5f, 2f, 2f, 2f, 2.4f };
                    IDCarddetails.SetWidths(width);

                    PdfPTable IDCardTemptable1 = new PdfPTable(4);
                    IDCardTemptable1.TotalWidth = 185f;
                    // IDCardTemptable1.HorizontalAlignment = 0;
                    IDCardTemptable1.LockedWidth = true;
                    float[] width1 = new float[] { 2.4f, 2.4f, 2.4f, 2.4f };
                    IDCardTemptable1.SetWidths(width1);

                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath2);
                        srflogo.ScaleAbsolute(40f, 35f);
                        PdfPCell companylogo = new PdfPCell();
                        Paragraph cmplogo = new Paragraph();
                        cmplogo.Add(new Chunk(srflogo, 80f, 10f));
                        companylogo.AddElement(cmplogo);
                        companylogo.HorizontalAlignment = 0;
                        companylogo.Colspan = 4;
                        companylogo.PaddingLeft = -13;
                        companylogo.Border = 0;
                        IDCardTemptable1.AddCell(companylogo);
                    }
                    else
                    {
                        PdfPCell companylogo = new PdfPCell();
                        Paragraph cmplogo = new Paragraph();
                        cmplogo.Add(new Chunk("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                        companylogo.AddElement(cmplogo);
                        companylogo.HorizontalAlignment = 0;
                        companylogo.Colspan = 4;
                        companylogo.PaddingLeft = -13;
                        companylogo.Border = 0;
                        IDCardTemptable1.AddCell(companylogo);
                    }
                    PdfPCell cellSymbol = new PdfPCell(new Phrase("''A Symbol of Quality Services''", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    cellSymbol.HorizontalAlignment = 1;
                    cellSymbol.Border = 0;
                    cellSymbol.Colspan = 4;
                    cellSymbol.PaddingTop = -10f;
                    IDCardTemptable1.AddCell(cellSymbol);

                    BaseColor color1 = new BaseColor(255, 0, 0);
                    PdfPCell cellCertification = new PdfPCell(new Phrase("ISO 9001:2008", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, color1)));
                    cellCertification.HorizontalAlignment = 1;
                    cellCertification.Border = 0;
                    cellCertification.Colspan = 4;
                    cellCertification.PaddingTop = -1;
                    cellCertification.PaddingLeft = 10;
                    IDCardTemptable1.AddCell(cellCertification);

                    if (Image.Length > 0)
                    {
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + Image);
                        //Empphoto.ScalePercent(25f);
                        Empphoto.ScaleAbsolute(80f, 80f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 70f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 1;
                        EmpImage.PaddingLeft = -15f;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);
                    }
                    else
                    {
                        PdfPCell EmpImage = new PdfPCell();
                        EmpImage.HorizontalAlignment = 2;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);

                    }

                    PdfPCell cellName = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellName.HorizontalAlignment = 1;
                    cellName.Border = 0;
                    cellName.Colspan = 4;
                    IDCardTemptable1.AddCell(cellName);

                    PdfPCell cellIDNo = new PdfPCell(new Phrase("P.No : " + empid, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellIDNo.HorizontalAlignment = 1;
                    cellIDNo.Border = 0;
                    cellIDNo.Colspan = 4;
                    IDCardTemptable1.AddCell(cellIDNo);

                    PdfPCell cellRank = new PdfPCell(new Phrase("Rank : " + designation, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellRank.HorizontalAlignment = 1;
                    cellRank.Border = 0;
                    cellRank.Colspan = 4;
                    IDCardTemptable1.AddCell(cellRank);

                    PdfPCell cellDtIssued = new PdfPCell(new Phrase("Date of Issue : " + IDcardIssued, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);



                    PdfPCell cellDtValid = new PdfPCell(new Phrase("Valid Upto : " + IDcardvalid, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtValid.HorizontalAlignment = 1;
                    cellDtValid.Border = 0;
                    cellDtValid.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtValid);

                    cellDtIssued = new PdfPCell(new Phrase("ESI No : " + esino, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);

                    if (EmpSign.Length > 0)
                    {
                        iTextSharp.text.Image Sign = iTextSharp.text.Image.GetInstance(imagepath3 + EmpSign);
                        //Sign.ScalePercent(10f);
                        Sign.ScaleAbsolute(50f, 8f);
                        PdfPCell Signature = new PdfPCell();
                        Paragraph signlogo = new Paragraph();
                        signlogo.Add(new Chunk(Sign, 25f, 0));
                        Signature.AddElement(signlogo);
                        Signature.HorizontalAlignment = 1;
                        Signature.PaddingLeft = 5f;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        IDCardTemptable1.AddCell(Signature);
                    }
                    else
                    {

                        PdfPCell Signature = new PdfPCell();
                        Signature.HorizontalAlignment = 1;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        Signature.FixedHeight = 15;
                        IDCardTemptable1.AddCell(Signature);

                    }
                    if (File.Exists(imagepath6))
                    {
                        iTextSharp.text.Image IssuingAuth = iTextSharp.text.Image.GetInstance(imagepath6 + "Authority.png");
                        //IssuingAuth.ScalePercent(10f);
                        IssuingAuth.ScaleAbsolute(60f, 8f);
                        PdfPCell Authority = new PdfPCell();
                        Paragraph Authoritylogo = new Paragraph();
                        Authoritylogo.Add(new Chunk(IssuingAuth, 10f, 0));
                        Authority.AddElement(Authoritylogo);
                        Authority.HorizontalAlignment = 0;
                        Authority.Colspan = 2;
                        Authority.PaddingTop = -2f;
                        Authority.Border = 0;
                        IDCardTemptable1.AddCell(Authority);
                    }
                    else
                    {
                        PdfPCell Authority = new PdfPCell();
                        Paragraph Authoritylogo = new Paragraph();
                        Authoritylogo.Add(new Chunk("", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                        Authority.AddElement(Authoritylogo);
                        Authority.HorizontalAlignment = 0;
                        Authority.Colspan = 2;
                        Authority.PaddingTop = -2f;
                        Authority.Border = 0;
                        IDCardTemptable1.AddCell(Authority);
                    }
                    PdfPCell cellEmpSign = new PdfPCell(new Phrase("Signature of \nCard Holder", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellEmpSign.HorizontalAlignment = 1;
                    cellEmpSign.Border = 0;
                    cellEmpSign.Colspan = 2;
                    cellEmpSign.PaddingLeft = 20f;
                    IDCardTemptable1.AddCell(cellEmpSign);

                    PdfPCell cellAuthority = new PdfPCell(new Phrase("Issuing Authority", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthority.HorizontalAlignment = 1;
                    cellAuthority.Border = 0;
                    cellAuthority.Colspan = 2;
                    cellAuthority.PaddingTop = 5;
                    IDCardTemptable1.AddCell(cellAuthority);

                    PdfPCell childTable1 = new PdfPCell(IDCardTemptable1);
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 4;
                    IDCarddetails.AddCell(childTable1);

                    PdfPTable IDCardTemptable41 = new PdfPTable(1);
                    IDCardTemptable41.TotalWidth = 6f;
                    IDCardTemptable41.LockedWidth = true;
                    float[] width41 = new float[] { 0.8f };
                    IDCardTemptable41.SetWidths(width41);

                    PdfPCell cellempcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell1.Border = 0;
                    cellempcell1.Colspan = 1;
                    IDCardTemptable41.AddCell(cellempcell1);


                    PdfPCell childTable4 = new PdfPCell(IDCardTemptable41);
                    childTable4.HorizontalAlignment = 0;
                    childTable4.Colspan = 1;
                    childTable4.Border = 0;

                    IDCarddetails.AddCell(childTable4);


                    PdfPTable IDCardTemptable2 = new PdfPTable(4);
                    IDCardTemptable2.TotalWidth = 180f;
                    IDCardTemptable2.LockedWidth = true;
                    width2 = new float[] { 2.3f, 2.3f, 2.3f, 2.3f };
                    IDCardTemptable2.SetWidths(width2);


                    PdfPCell cellInstructions = new PdfPCell(new Phrase("Instructions :", FontFactory.GetFont(fontstyle, fontsize1 + 1, Font.BOLD, BaseColor.BLACK)));
                    cellInstructions.HorizontalAlignment = 0;
                    cellInstructions.Border = 0;
                    cellInstructions.Colspan = 4;
                    //cellInstructions.PaddingTop = -20f;
                    IDCardTemptable2.AddCell(cellInstructions);

                    PdfPCell cellInstructions1 = new PdfPCell(new Phrase("1) ID Card to be worn by employee \n    at all times while on duty.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions1.HorizontalAlignment = 0;
                    cellInstructions1.Border = 0;
                    cellInstructions1.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions1);

                    PdfPCell cellInstructions2 = new PdfPCell(new Phrase("2) Loss or Recovery of the Card shall be \n    reported to HR / Admin Dept.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions2.HorizontalAlignment = 0;
                    cellInstructions2.Border = 0;
                    cellInstructions2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions2);

                    PdfPCell cellInstructions3 = new PdfPCell(new Phrase("3) The Finder May Please return to:", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions3.HorizontalAlignment = 0;
                    cellInstructions3.Border = 0;
                    cellInstructions3.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions3);


                    PdfPCell cellInstructions4 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions4.HorizontalAlignment = 0;
                    cellInstructions4.Border = 0;
                    cellInstructions4.Colspan = 4;
                    cellInstructions4.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellInstructions4);

                    PdfPCell cellComp = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, fontsize1 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellComp.HorizontalAlignment = 0;
                    cellComp.Border = 0;
                    cellComp.Colspan = 4;
                    //cellComp.PaddingTop = 20;
                    IDCardTemptable2.AddCell(cellComp);

                    PdfPCell cellAddress = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize2 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Border = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.SetLeading(0f, 1.2f);
                    cellAddress.VerticalAlignment = 13;
                    IDCardTemptable2.AddCell(cellAddress);

                    PdfPCell cellmobile = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile.Border = 0;
                    cellmobile.Colspan = 4;
                    IDCardTemptable2.AddCell(cellmobile);

                    PdfPCell cellmobile1 = new PdfPCell(new Phrase("Fax : " + Faxno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile1.Border = 0;
                    cellmobile1.Colspan = 4;
                    cellmobile1.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellmobile1);

                    PdfPCell cellEmergency = new PdfPCell(new Phrase("Mail ID : " + Emailid, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                    cellEmergency.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellEmergency.Border = 0;
                    cellEmergency.Colspan = 4;
                    //cellEmergency.PaddingTop = 5;
                    IDCardTemptable2.AddCell(cellEmergency);

                    PdfPCell cellpolice = new PdfPCell(new Phrase("Emergency Contacts", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpolice.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpolice.Border = 0;
                    cellpolice.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpolice);

                    PdfPCell cellpol = new PdfPCell(new Phrase("Police : 100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpol.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpol.Border = 0;
                    cellpol.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpol);

                    PdfPCell cellfire = new PdfPCell(new Phrase("Fire : 101", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellfire.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellfire.Border = 0;
                    cellfire.Colspan = 4;
                    IDCardTemptable2.AddCell(cellfire);

                    PdfPCell celltraffic = new PdfPCell(new Phrase("Traffic : 103", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    celltraffic.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    celltraffic.Border = 0;
                    celltraffic.Colspan = 4;
                    IDCardTemptable2.AddCell(celltraffic);

                    PdfPCell cellamb = new PdfPCell(new Phrase("Ambulance : 102/108", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellamb.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellamb.Border = 0;
                    cellamb.Colspan = 4;
                    IDCardTemptable2.AddCell(cellamb);

                    PdfPCell cellteror = new PdfPCell(new Phrase("Anti Terrorist Squad : 10193", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellteror.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellteror.Border = 0;
                    cellteror.Colspan = 4;
                    IDCardTemptable2.AddCell(cellteror);

                    PdfPCell cellhelpl = new PdfPCell(new Phrase("Uniq Helpline : 9591990099", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellhelpl.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellhelpl.BorderWidthTop = 0;
                    cellhelpl.BorderWidthRight = 0;
                    cellhelpl.BorderWidthLeft = 0;
                    cellhelpl.BorderWidthBottom = 0;
                    cellhelpl.Colspan = 4;
                    IDCardTemptable2.AddCell(cellhelpl);

                    PdfPCell cellteror2 = new PdfPCell(new Phrase("Control Room : 9591990100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellteror2.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellteror2.Border = 0;
                    cellteror2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellteror2);



                    PdfPCell childTable2 = new PdfPCell(IDCardTemptable2);
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 4;
                    childTable2.PaddingLeft = 20;
                    IDCarddetails.AddCell(childTable2);



                    PdfPTable IDCardTemptable31 = new PdfPTable(1);
                    IDCardTemptable31.TotalWidth = 2f;
                    IDCardTemptable31.LockedWidth = true;
                    float[] width31 = new float[] { 1f };
                    IDCardTemptable31.SetWidths(width31);

                    PdfPCell cellempcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize2, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell.Border = 0;
                    cellempcell.Colspan = 1;
                    IDCardTemptable31.AddCell(cellempcell);

                    PdfPCell childTable3 = new PdfPCell(IDCardTemptable31);
                    childTable3.HorizontalAlignment = 0;
                    childTable3.Colspan = 1;
                    childTable3.Border = 0;
                    IDCarddetails.AddCell(childTable3);


                    ///

                    PdfPCell childTable6 = new PdfPCell(IDCarddetails);
                    childTable6.HorizontalAlignment = 0;
                    childTable6.Colspan = 18;
                    childTable6.Border = 0;
                    childTable6.PaddingLeft = -180;
                    childTable6.PaddingBottom = 10;
                    MainIDCarddetails.AddCell(childTable6);

                    #endregion for range ID Card Display

                    PdfPCell empcellnew = new PdfPCell();
                    empcellnew.HorizontalAlignment = 0;
                    empcellnew.Colspan = 9;
                    empcellnew.Border = 0;
                    MainIDCarddetails.AddCell(empcellnew);

                    document.Add(MainIDCarddetails);

                    #endregion

                }
                else if (ddlEmpIDoptions.SelectedIndex == 1)
                {
                    for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                    {
                        document.NewPage();


                        IDNo = dtEmpdetails.Rows[m]["empid"].ToString();
                        name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                        designation = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                        doj = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                        EmpPermanentAddress = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();
                        pfno = dtEmpdetails.Rows[m]["pfno"].ToString();
                        esino = dtEmpdetails.Rows[m]["esino"].ToString();
                        height = dtEmpdetails.Rows[m]["EmpHeight"].ToString();
                        weight = dtEmpdetails.Rows[m]["EmpWeight"].ToString();
                        chest = dtEmpdetails.Rows[m]["EmpChestExp"].ToString();
                        EmpIdMark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                        division = dtEmpdetails.Rows[m]["division"].ToString();
                        AreaName = dtEmpdetails.Rows[m]["AreaName"].ToString();
                        IDcardIssued = dtEmpdetails.Rows[m]["IDCardIssued"].ToString();
                        IDcardvalid = dtEmpdetails.Rows[m]["IDCardValid"].ToString();
                        ReportingManager = dtEmpdetails.Rows[m]["RptrmanagerID"].ToString();
                        Image = dtEmpdetails.Rows[m]["Image"].ToString();
                        EmpSign = dtEmpdetails.Rows[m]["EmpSign"].ToString();
                        string RprtMngr = "";
                        string qryn = "select (empfname+' '+empmname+' '+emplname) as rptid from empdetails where empid='" + ReportingManager + "'";
                        DataTable dtnew = Config.ExecuteReaderWithQueryAsync(qryn).Result;

                        if (dtnew.Rows.Count > 0)
                        {
                            RprtMngr = dtnew.Rows[0]["rptid"].ToString();
                        }

                        #region for Movementorder

                        PdfPTable table1 = new PdfPTable(3);
                        table1.TotalWidth = 500f;
                        table1.LockedWidth = true;
                        float[] width = new float[] { 2f, 2f, 2f };
                        table1.SetWidths(width);
                        PdfPCell cell;

                        cell = new PdfPCell(new Phrase("Employee: " + IDNo + "   Movement Order", FontStyle5));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 3;
                        cell.Border = 0;
                        cell.PaddingTop = -40f;
                        table1.AddCell(cell);

                        #region for image
                        string imagepath2 = Server.MapPath("assets/Images");
                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(14.5f);
                            gif2.SetAbsolutePosition(250f, 900f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                        #endregion

                        cell = new PdfPCell(new Phrase(CompanyName, FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 3;
                        cell.Border = 0;
                        cell.PaddingTop = 60f;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 3;
                        cell.Border = 0;

                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Place: ", FontStyle1));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("MOVEMENT ORDER", FontStyle1));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;
                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Date: " + ((DateTime.Now).ToString("dd/MM/yyyy")), FontStyle1));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;

                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 3;
                        cell.Border = 0;

                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("Service No., Name & Rank", FontStyle3));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 1;

                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase(IDNo + "                  " + name + "                 " + designation, FontStyle3));
                        cell.HorizontalAlignment = 0;
                        cell.Colspan = 2;

                        cell.Border = 0;
                        table1.AddCell(cell);

                        cell = new PdfPCell(new Phrase("", FontStyle2));
                        cell.HorizontalAlignment = 1;
                        cell.Colspan = 3;
                        cell.Border = 0;

                        table1.AddCell(cell);

                        document.Add(table1);

                        PdfPTable table2 = new PdfPTable(4);
                        table2.TotalWidth = 500f;
                        table2.LockedWidth = true;
                        float[] width2 = new float[] { 2f, 4f, 2f, 4f };
                        table2.SetWidths(width2);
                        PdfPCell cell1;

                        cell1 = new PdfPCell(new Phrase("E.S.I No", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase(esino, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("P.F.No", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase(pfno, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingBottom = 5f;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Date of Posting", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);



                        cell1 = new PdfPCell(new Phrase(doj, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Area", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase(AreaName, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingBottom = 5f;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Reporting to", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase(RprtMngr, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Zone", FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase(division, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 1;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingBottom = 5f;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Height  " + height + "                                                        Weight " + weight + "                                     Chest " + chest, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 4;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("", FontStyle2));
                        cell1.HorizontalAlignment = 1;
                        cell1.Colspan = 4;
                        cell1.Border = 0;
                        cell1.PaddingBottom = 5f;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Identification Mark  " + EmpIdMark1, FontStyle3));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 4;
                        cell1.PaddingBottom = 5f;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        if (File.Exists(imagepathArrow))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(80f);
                            gif2.SetAbsolutePosition(65f, 925f);
                            PdfPCell sealImg = new PdfPCell();
                            sealImg.AddElement(gif2);
                            sealImg.Border = 0;
                            sealImg.HorizontalAlignment = 0;
                            sealImg.Colspan = 4;
                            sealImg.PaddingLeft = -480f;
                            //sealImg.PaddingBottom = -40f;
                            //sealImg.PaddingRight = -260f;
                            sealImg.PaddingTop = 40f;
                            table2.AddCell(sealImg);
                            //    document.Add(new Paragraph(" "));
                            //    document.Add(gif2);
                        }

                        cell1 = new PdfPCell(new Phrase("Sig. of Individual", FontStyle6));
                        cell1.HorizontalAlignment = 0;
                        cell1.Colspan = 2;
                        cell1.PaddingTop = 0;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        cell1 = new PdfPCell(new Phrase("Sig. of Authorised Officer", FontStyle6));
                        cell1.HorizontalAlignment = 2;
                        cell1.Colspan = 2;
                        cell1.PaddingTop = 0;
                        cell1.Border = 0;
                        table2.AddCell(cell1);

                        document.Add(table2);


                        #endregion for Movementorder

                        #region for IDCard

                        #region for range ID Card Display


                        PdfPTable MainIDCarddetails = new PdfPTable(18);
                        MainIDCarddetails.TotalWidth = 800f;
                        MainIDCarddetails.LockedWidth = true;
                        MainIDCarddetails.DefaultCell.HorizontalAlignment = Element.ALIGN_LEFT;
                        MainIDCarddetails.DefaultCell.VerticalAlignment = Element.ALIGN_TOP;
                        float[] width4 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                        MainIDCarddetails.SetWidths(width4);



                        PdfPCell emptycellgap = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                        emptycellgap.HorizontalAlignment = 1;
                        emptycellgap.Border = 0;
                        emptycellgap.Colspan = 18;
                        emptycellgap.MinimumHeight = 100;
                        MainIDCarddetails.AddCell(emptycellgap);


                        PdfPTable IDCarddetails = new PdfPTable(10);
                        IDCarddetails.TotalWidth = 370f;
                        IDCarddetails.LockedWidth = true;
                        width = new float[] { 5f, 2f, 2f, 2f, 0.2f, 5f, 2f, 2f, 2f, 2.4f };
                        IDCarddetails.SetWidths(width);

                        PdfPTable IDCardTemptable1 = new PdfPTable(4);
                        IDCardTemptable1.TotalWidth = 185f;
                        // IDCardTemptable1.HorizontalAlignment = 0;
                        IDCardTemptable1.LockedWidth = true;
                        float[] width1 = new float[] { 2.4f, 2.4f, 2.4f, 2.4f };
                        IDCardTemptable1.SetWidths(width1);

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath2);
                            srflogo.ScaleAbsolute(40f, 35f);
                            PdfPCell companylogo = new PdfPCell();
                            Paragraph cmplogo = new Paragraph();
                            cmplogo.Add(new Chunk(srflogo, 80f, 10f));
                            companylogo.AddElement(cmplogo);
                            companylogo.HorizontalAlignment = 0;
                            companylogo.Colspan = 4;
                            companylogo.PaddingLeft = -13;
                            companylogo.Border = 0;
                            IDCardTemptable1.AddCell(companylogo);
                        }
                        PdfPCell cellSymbol = new PdfPCell(new Phrase("''A Symbol of Quality Services''", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                        cellSymbol.HorizontalAlignment = 1;
                        cellSymbol.Border = 0;
                        cellSymbol.Colspan = 4;
                        cellSymbol.PaddingTop = -10f;
                        IDCardTemptable1.AddCell(cellSymbol);

                        BaseColor color1 = new BaseColor(255, 0, 0);
                        PdfPCell cellCertification = new PdfPCell(new Phrase("ISO 9001:2008", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, color1)));
                        cellCertification.HorizontalAlignment = 1;
                        cellCertification.Border = 0;
                        cellCertification.Colspan = 4;
                        cellCertification.PaddingTop = -1;
                        cellCertification.PaddingLeft = 10;
                        IDCardTemptable1.AddCell(cellCertification);

                        if (Image.Length > 0)
                        {
                            iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + Image);
                            //Empphoto.ScalePercent(25f);
                            Empphoto.ScaleAbsolute(80f, 80f);
                            PdfPCell EmpImage = new PdfPCell();
                            Paragraph Emplogo = new Paragraph();
                            Emplogo.Add(new Chunk(Empphoto, 70f, 0));
                            EmpImage.AddElement(Emplogo);
                            EmpImage.HorizontalAlignment = 1;
                            EmpImage.PaddingLeft = -15f;
                            EmpImage.Colspan = 4;
                            EmpImage.Border = 0;
                            IDCardTemptable1.AddCell(EmpImage);
                        }
                        else
                        {
                            PdfPCell EmpImage = new PdfPCell();
                            EmpImage.HorizontalAlignment = 2;
                            EmpImage.Colspan = 4;
                            EmpImage.Border = 0;
                            IDCardTemptable1.AddCell(EmpImage);

                        }

                        PdfPCell cellName = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                        cellName.HorizontalAlignment = 1;
                        cellName.Border = 0;
                        cellName.Colspan = 4;
                        IDCardTemptable1.AddCell(cellName);

                        PdfPCell cellIDNo = new PdfPCell(new Phrase("P.No : " + empid, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                        cellIDNo.HorizontalAlignment = 1;
                        cellIDNo.Border = 0;
                        cellIDNo.Colspan = 4;
                        IDCardTemptable1.AddCell(cellIDNo);

                        PdfPCell cellRank = new PdfPCell(new Phrase("Rank : " + designation, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                        cellRank.HorizontalAlignment = 1;
                        cellRank.Border = 0;
                        cellRank.Colspan = 4;
                        IDCardTemptable1.AddCell(cellRank);

                        PdfPCell cellDtIssued = new PdfPCell(new Phrase("Date of Issue : " + IDcardIssued, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                        cellDtIssued.HorizontalAlignment = 1;
                        cellDtIssued.Border = 0;
                        cellDtIssued.Colspan = 4;
                        IDCardTemptable1.AddCell(cellDtIssued);



                        PdfPCell cellDtValid = new PdfPCell(new Phrase("Valid Upto : " + IDcardvalid, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                        cellDtValid.HorizontalAlignment = 1;
                        cellDtValid.Border = 0;
                        cellDtValid.Colspan = 4;
                        IDCardTemptable1.AddCell(cellDtValid);

                        cellDtIssued = new PdfPCell(new Phrase("ESI No : " + esino, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                        cellDtIssued.HorizontalAlignment = 1;
                        cellDtIssued.Border = 0;
                        cellDtIssued.Colspan = 4;
                        IDCardTemptable1.AddCell(cellDtIssued);

                        if (EmpSign.Length > 0)
                        {
                            iTextSharp.text.Image Sign = iTextSharp.text.Image.GetInstance(imagepath3 + EmpSign);
                            //Sign.ScalePercent(10f);
                            Sign.ScaleAbsolute(50f, 8f);
                            PdfPCell Signature = new PdfPCell();
                            Paragraph signlogo = new Paragraph();
                            signlogo.Add(new Chunk(Sign, 25f, 0));
                            Signature.AddElement(signlogo);
                            Signature.HorizontalAlignment = 1;
                            Signature.PaddingLeft = 5f;
                            Signature.Colspan = 2;
                            Signature.PaddingTop = -2f;
                            Signature.Border = 0;
                            IDCardTemptable1.AddCell(Signature);
                        }
                        else
                        {

                            PdfPCell Signature = new PdfPCell();
                            Signature.HorizontalAlignment = 1;
                            Signature.Colspan = 2;
                            Signature.PaddingTop = -2f;
                            Signature.Border = 0;
                            Signature.FixedHeight = 15;
                            IDCardTemptable1.AddCell(Signature);

                        }
                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image IssuingAuth = iTextSharp.text.Image.GetInstance(imagepath6 + "Authority.png");
                            //IssuingAuth.ScalePercent(10f);
                            IssuingAuth.ScaleAbsolute(60f, 8f);
                            PdfPCell Authority = new PdfPCell();
                            Paragraph Authoritylogo = new Paragraph();
                            Authoritylogo.Add(new Chunk(IssuingAuth, 10f, 0));
                            Authority.AddElement(Authoritylogo);
                            Authority.HorizontalAlignment = 0;
                            Authority.Colspan = 2;
                            Authority.PaddingTop = -2f;
                            Authority.Border = 0;
                            IDCardTemptable1.AddCell(Authority);
                        }
                        PdfPCell cellEmpSign = new PdfPCell(new Phrase("Signature of \nCard Holder", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellEmpSign.HorizontalAlignment = 1;
                        cellEmpSign.Border = 0;
                        cellEmpSign.Colspan = 2;
                        cellEmpSign.PaddingLeft = 20f;
                        IDCardTemptable1.AddCell(cellEmpSign);

                        PdfPCell cellAuthority = new PdfPCell(new Phrase("Issuing Authority", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellAuthority.HorizontalAlignment = 1;
                        cellAuthority.Border = 0;
                        cellAuthority.Colspan = 2;
                        cellAuthority.PaddingTop = 5;
                        IDCardTemptable1.AddCell(cellAuthority);

                        PdfPCell childTable1 = new PdfPCell(IDCardTemptable1);
                        childTable1.HorizontalAlignment = 0;
                        childTable1.Colspan = 4;
                        IDCarddetails.AddCell(childTable1);

                        PdfPTable IDCardTemptable41 = new PdfPTable(1);
                        IDCardTemptable41.TotalWidth = 6f;
                        IDCardTemptable41.LockedWidth = true;
                        float[] width41 = new float[] { 0.8f };
                        IDCardTemptable41.SetWidths(width41);

                        PdfPCell cellempcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellempcell1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellempcell1.Border = 0;
                        cellempcell1.Colspan = 1;
                        IDCardTemptable41.AddCell(cellempcell1);


                        PdfPCell childTable4 = new PdfPCell(IDCardTemptable41);
                        childTable4.HorizontalAlignment = 0;
                        childTable4.Colspan = 1;
                        childTable4.Border = 0;

                        IDCarddetails.AddCell(childTable4);


                        PdfPTable IDCardTemptable2 = new PdfPTable(4);
                        IDCardTemptable2.TotalWidth = 180f;
                        IDCardTemptable2.LockedWidth = true;
                        width2 = new float[] { 2.3f, 2.3f, 2.3f, 2.3f };
                        IDCardTemptable2.SetWidths(width2);


                        PdfPCell cellInstructions = new PdfPCell(new Phrase("Instructions :", FontFactory.GetFont(fontstyle, fontsize1 + 1, Font.BOLD, BaseColor.BLACK)));
                        cellInstructions.HorizontalAlignment = 0;
                        cellInstructions.Border = 0;
                        cellInstructions.Colspan = 4;
                        //cellInstructions.PaddingTop = -20f;
                        IDCardTemptable2.AddCell(cellInstructions);

                        PdfPCell cellInstructions1 = new PdfPCell(new Phrase("1) ID Card to be worn by employee \n    at all times while on duty.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions1.HorizontalAlignment = 0;
                        cellInstructions1.Border = 0;
                        cellInstructions1.Colspan = 4;
                        IDCardTemptable2.AddCell(cellInstructions1);

                        PdfPCell cellInstructions2 = new PdfPCell(new Phrase("2) Loss or Recovery of the Card shall be \n    reported to HR / Admin Dept.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions2.HorizontalAlignment = 0;
                        cellInstructions2.Border = 0;
                        cellInstructions2.Colspan = 4;
                        IDCardTemptable2.AddCell(cellInstructions2);

                        PdfPCell cellInstructions3 = new PdfPCell(new Phrase("3) The Finder May Please return to:", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions3.HorizontalAlignment = 0;
                        cellInstructions3.Border = 0;
                        cellInstructions3.Colspan = 4;
                        IDCardTemptable2.AddCell(cellInstructions3);


                        PdfPCell cellInstructions4 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions4.HorizontalAlignment = 0;
                        cellInstructions4.Border = 0;
                        cellInstructions4.Colspan = 4;
                        cellInstructions4.PaddingBottom = 5f;
                        IDCardTemptable2.AddCell(cellInstructions4);

                        PdfPCell cellComp = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, fontsize1 - 1, Font.BOLD, BaseColor.BLACK)));
                        cellComp.HorizontalAlignment = 0;
                        cellComp.Border = 0;
                        cellComp.Colspan = 4;
                        //cellComp.PaddingTop = 20;
                        IDCardTemptable2.AddCell(cellComp);

                        PdfPCell cellAddress = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize2 + 1, Font.NORMAL, BaseColor.BLACK)));
                        cellAddress.HorizontalAlignment = 0;
                        cellAddress.Border = 0;
                        cellAddress.Colspan = 4;
                        cellAddress.SetLeading(0f, 1.2f);
                        cellAddress.VerticalAlignment = 13;
                        IDCardTemptable2.AddCell(cellAddress);

                        PdfPCell cellmobile = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellmobile.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellmobile.Border = 0;
                        cellmobile.Colspan = 4;
                        IDCardTemptable2.AddCell(cellmobile);

                        PdfPCell cellmobile1 = new PdfPCell(new Phrase("Fax : " + Faxno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellmobile1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellmobile1.Border = 0;
                        cellmobile1.Colspan = 4;
                        cellmobile1.PaddingBottom = 5f;
                        IDCardTemptable2.AddCell(cellmobile1);

                        PdfPCell cellEmergency = new PdfPCell(new Phrase("Mail ID : " + Emailid, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                        cellEmergency.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellEmergency.Border = 0;
                        cellEmergency.Colspan = 4;
                        //cellEmergency.PaddingTop = 5;
                        IDCardTemptable2.AddCell(cellEmergency);

                        PdfPCell cellpolice = new PdfPCell(new Phrase("Emergency Contacts", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellpolice.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellpolice.Border = 0;
                        cellpolice.Colspan = 4;
                        IDCardTemptable2.AddCell(cellpolice);

                        PdfPCell cellpol = new PdfPCell(new Phrase("Police : 100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellpol.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellpol.Border = 0;
                        cellpol.Colspan = 4;
                        IDCardTemptable2.AddCell(cellpol);

                        PdfPCell cellfire = new PdfPCell(new Phrase("Fire : 101", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellfire.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellfire.Border = 0;
                        cellfire.Colspan = 4;
                        IDCardTemptable2.AddCell(cellfire);

                        PdfPCell celltraffic = new PdfPCell(new Phrase("Traffic : 103", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        celltraffic.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        celltraffic.Border = 0;
                        celltraffic.Colspan = 4;
                        IDCardTemptable2.AddCell(celltraffic);

                        PdfPCell cellamb = new PdfPCell(new Phrase("Ambulance : 102/108", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellamb.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellamb.Border = 0;
                        cellamb.Colspan = 4;
                        IDCardTemptable2.AddCell(cellamb);

                        PdfPCell cellteror = new PdfPCell(new Phrase("Anti Terrorist Squad : 10193", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellteror.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellteror.Border = 0;
                        cellteror.Colspan = 4;
                        IDCardTemptable2.AddCell(cellteror);

                        PdfPCell cellhelpl = new PdfPCell(new Phrase("Uniq Helpline : 9591990099", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellhelpl.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellhelpl.BorderWidthTop = 0;
                        cellhelpl.BorderWidthRight = 0;
                        cellhelpl.BorderWidthLeft = 0;
                        cellhelpl.BorderWidthBottom = 0;
                        cellhelpl.Colspan = 4;
                        IDCardTemptable2.AddCell(cellhelpl);

                        PdfPCell cellteror2 = new PdfPCell(new Phrase("Control Room : 9591990100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellteror2.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellteror2.Border = 0;
                        cellteror2.Colspan = 4;
                        IDCardTemptable2.AddCell(cellteror2);



                        PdfPCell childTable2 = new PdfPCell(IDCardTemptable2);
                        childTable2.HorizontalAlignment = 0;
                        childTable2.Colspan = 4;
                        childTable2.PaddingLeft = 20;
                        IDCarddetails.AddCell(childTable2);



                        PdfPTable IDCardTemptable31 = new PdfPTable(1);
                        IDCardTemptable31.TotalWidth = 2f;
                        IDCardTemptable31.LockedWidth = true;
                        float[] width31 = new float[] { 1f };
                        IDCardTemptable31.SetWidths(width31);

                        PdfPCell cellempcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize2, Font.NORMAL, BaseColor.BLACK)));
                        cellempcell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellempcell.Border = 0;
                        cellempcell.Colspan = 1;
                        IDCardTemptable31.AddCell(cellempcell);

                        PdfPCell childTable3 = new PdfPCell(IDCardTemptable31);
                        childTable3.HorizontalAlignment = 0;
                        childTable3.Colspan = 1;
                        childTable3.Border = 0;
                        IDCarddetails.AddCell(childTable3);


                        ///

                        PdfPCell childTable6 = new PdfPCell(IDCarddetails);
                        childTable6.HorizontalAlignment = 0;
                        childTable6.Colspan = 18;
                        childTable6.Border = 0;
                        childTable6.PaddingLeft = -180;
                        childTable6.PaddingBottom = 10;
                        MainIDCarddetails.AddCell(childTable6);

                        #endregion for range ID Card Display

                        PdfPCell empcellnew = new PdfPCell();
                        empcellnew.HorizontalAlignment = 0;
                        empcellnew.Colspan = 9;
                        empcellnew.Border = 0;
                        MainIDCarddetails.AddCell(empcellnew);

                        document.Add(MainIDCarddetails);

                        #endregion

                    }
                }



                string filename = "";


                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "MovementOrder.pdf";
                }
                else
                {
                    filename = "MovementOrder.pdf";
                }

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();
            }

        }

        public void IndividualDownload()
        {
            try
            {
                int Fontsize = 10;
                int fontsize1 = 8;
                int fontsize2 = 6;
                int Fontsize3 = 11;
                string Fontstyle = "Tahoma";

                var headfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK);
                var bodyfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD, BaseColor.BLACK);
                var bodyfontnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK);
                var Subheadnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.NORMAL, BaseColor.BLACK);
                var Subheadfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);


                int totalfonts = FontFactory.RegisterDirectory("c:\\WINDOWS\\fonts");
                //StringBuilder sa = new StringBuilder();
                foreach (string fontname in FontFactory.RegisteredFonts)
                {
                    // sa.Append(fontname + "\n");
                }
                Font FontStyle4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.NORMAL, BaseColor.BLACK);
                Font FontStyle3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
                Font FontStyle2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 13, Font.BOLD, BaseColor.BLACK);
                Font FontStyle1 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
                Font FontStyle5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 8, Font.BOLD, BaseColor.BLACK);
                Font FontStyleHeading = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 16, Font.BOLD, BaseColor.BLACK);

                #region Variable Declaration
                string EmpBankAcNo = "";
                string IFSCCOde = "";
                string empaddresStatus = "";
                string Qualification = "";
                string EstablishmentID = "";
                string email = "";
                string CompanyName = "";
                string CompanyAddress = "";
                string SpouseName = "";
                string NomineeName = "";
                string RelationPlace = "";
                string RRes = "";
                string NomineeRelation = "";
                var NomineeDateofbirth = "";
                string NomineeText = "";
                string FSpouseName = "";
                string FatherName = "";
                // string FatherSpouseName = "";
                // string FatherSpouseName = "";
                string FatherOccupation = "";
                string MotherName = "";
                string contactno = "";
                string Idno = "";
                string date = "";
                string Fname = "";
                string area = "";
                string Aadharno = "";
                string panno = "";
                // string division = "";

                string postappliedfor = "";
                string name = "";
                string dateofbirth = "";
                string Gender = "";
                string Dateofjoining = "";
                string educationqualification = "";
                string TechnicalQualification = "";
                string previouspost = "";
                string nationality = "";
                string community = "";
                string maritalstatus = "";
                string BloodGroupName = "";
                string MaritalStatusSpouseText = "";
                string height = "";
                string weight = "";
                string chest = "";
                string bloodgroup = "";
                string identificationmark1 = "";
                string identificationmark2 = "";
                string ReportingManager = "";
                string prTown = "";
                string prPostOffice = "";
                string prTaluka = "";
                string prPoliceStation = "";
                string prcity = "";
                string prLmark = "";
                string prPincode = "";
                string prState = "";


                string peTown = "";
                string pePostOffice = "";
                string peTaluka = "";
                string pePoliceStation = "";
                string pecity = "";
                string pelmark = "";
                string pePincode = "";
                string peState = "";
                string refaddress1 = "";
                string refaddress2 = "";
                string clientname = "";
                string MobileNumber = "";
                string relationName = "";
                string relationAge = "";
                string relationType = "";
                string PrevYrExp = "";
                string PlaceofBirth = "";
                string Haircolour = "";
                string eyecolour = "";
                string Complexion = "";
                string Languagesknown = "";
                string EmergencyPhone = "";
                string UANNumber = "";

                string Esino = "";
                string PfNo = "";
                string pephone = "";
                string RType = "";
                string RName = "";
                string EmpPresentAddress = "";
                string EmpPermanentAddress = "";

                string PrevRegionCode = "";
                string PrevEmployerCode = "";
                string PrevExtension = "";
                string PrevPFNo = "";
                string PrevDtofLeave = "";



                string AadharCardNo = "";
                string AadharCardName = "";
                string drivingLicenseName = ""; string DrivingLicenseNo = "";
                string VoterIDNo = "";
                string VoterIDName = "";
                string RationCardNo = "";
                string RationCardName = "";
                string PanCardNo = "";
                string PanCardName = "";
                string PassBookNo = ""; string BankPassbookName = ""; string ElectricityBillNo = "";
                string ElectricityBillName = ""; string OtherType = "";
                string Othertextname = ""; string ESICCardNo = ""; string ESICName = "";
                string PFno = ""; string Title = "";
                string Name = "";
                string Designation = "";
                string IDcardIssued = "";
                string IDcardvalid = "";
                string BloodGroup = "";
                string EmpSign = "";
                string EmpESINo = "";
                string Image = "";
                string Faxno = "";
                string Emailid = "";
                string Phoneno = "";
                string companyaddress = "";
                string AreaName = "";
                string EmpESIDispName = "";
                string RHThumb = "";
                string RHIndex = "";
                string RHMiddle = "";
                string RHRing = "";
                string RHLittle = "";
                string LHThumb = "";
                string LHIndex = "";
                string LHMiddle = "";
                string LHRing = "";
                string LHLittle = "";
                var EmpPhoneNumber = "";
                #endregion

                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    if (txtEmpid.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                        return;
                    }
                }

                if (ddlEmpIDoptions.SelectedIndex == 1)
                {
                    if (txtfromempid.Text == "")
                    {
                        ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee');", true);
                        return;
                    }
                }



                #region  Begin  New Code



                #region Begin Variable Declaration

                string SPName = "";
                Hashtable HTEmpBiodata = new Hashtable();
                string Empid = "";
                string fromempid = "";
                string toempid = "";
                int Options = ddlEmpIDoptions.SelectedIndex;
                DataTable dtEmpdetails = null;
                string EmpDtofBirths = "";
                string designation = "";
                string doj = "";
                #endregion end Variable Declaration


                #region Begin Assign Values to The Variables

                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    Empid = txtEmpid.Text;
                }
                else
                {
                    fromempid = txtfromempid.Text;
                    toempid = txttoempid.Text;
                }

               

                #endregion End Assign values To the Variables

                #region Begin Pass values to the Hash table
                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    SPName = "EmpBiodataPDF";
                    HTEmpBiodata.Add("@empid", Empid);
                }
                if (ddlEmpIDoptions.SelectedIndex == 1)
                {
                    SPName = "EmpBiodataBulk";
                    HTEmpBiodata.Add("@FromEmpid", fromempid);
                    HTEmpBiodata.Add("@ToEmpid", toempid);
                }

                //HTEmpBiodata.Add("@options", Options);

                #endregion  end Pass values to the Hash table

                #region Begin  Call Stored Procedure
                dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
                #endregion  End  Call Stored Procedure

                #endregion End New Code As on [31-05-2014]


                if (dtEmpdetails.Rows.Count > 0)
                {
                    #region Assining data to Variables
                    string FatherSpouseName = "";
                    string EmprCode = "";
                    Empid = dtEmpdetails.Rows[0]["Empid"].ToString();
                    Name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                    Designation = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                    IDcardIssued = dtEmpdetails.Rows[0]["IDCardIssued"].ToString();
                    IDcardvalid = dtEmpdetails.Rows[0]["IDCardValid"].ToString();
                    BloodGroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();
                    Image = dtEmpdetails.Rows[0]["Image"].ToString();
                    EmpSign = dtEmpdetails.Rows[0]["EmpSign"].ToString();
                    EmpESINo = dtEmpdetails.Rows[0]["EmpESINo"].ToString();
                    EmpESIDispName = dtEmpdetails.Rows[0]["EmpESIDispName"].ToString();
                    PFno = dtEmpdetails.Rows[0]["PFNo"].ToString();
                    Esino = dtEmpdetails.Rows[0]["esino"].ToString();
                    Qualification = dtEmpdetails.Rows[0]["Qualification"].ToString();
                    UANNumber = dtEmpdetails.Rows[0]["EmpUANNumber"].ToString();
                    email = dtEmpdetails.Rows[0]["email"].ToString();
                    Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                    name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                    Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                    Dateofjoining = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    maritalstatus = dtEmpdetails.Rows[0]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                    FatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                    FatherOccupation = dtEmpdetails.Rows[0]["EmpFatherOccupation"].ToString();
                    MobileNumber = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                    SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                    MotherName = dtEmpdetails.Rows[0]["EmpMotherName"].ToString();
                    PrevYrExp = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                    contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                    RType = dtEmpdetails.Rows[0]["RType"].ToString();
                    RName = dtEmpdetails.Rows[0]["RName"].ToString();
                    dateofbirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                    EmpDtofBirths = dtEmpdetails.Rows[0]["EmpDtofBirths"].ToString();
                    designation = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();
                    doj = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    area = dtEmpdetails.Rows[0]["AreaName"].ToString();
                    EmpBankAcNo = dtEmpdetails.Rows[0]["EmpBankAcNo"].ToString();
                    IFSCCOde = dtEmpdetails.Rows[0]["IFSCCOde"].ToString();
                    AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                    NomineeName = dtEmpdetails.Rows[0]["NomineeName"].ToString();
                    NomineeRelation = dtEmpdetails.Rows[0]["NomineeRelation"].ToString();
                    var NomineeAge = dtEmpdetails.Rows[0]["Age"].ToString();
                    var EmpFatherName = dtEmpdetails.Rows[0]["EmpFatherName"].ToString();
                    var EmpMotherName = dtEmpdetails.Rows[0]["EmpMotherName"].ToString();
                    var EmpDtofBirth = dtEmpdetails.Rows[0]["EmpDtofBirth"].ToString();
                    Title = dtEmpdetails.Rows[0]["Title"].ToString();
                    string PFNO = dtEmpdetails.Rows[0]["PFNo"].ToString();
                    string age = dtEmpdetails.Rows[0]["age"].ToString();
                    EmpPhoneNumber = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                    NomineeDateofbirth = dtEmpdetails.Rows[0]["DOfBirth"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    educationqualification = dtEmpdetails.Rows[0]["EmpQualification"].ToString();
                    string EmpIdMark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                    string division = dtEmpdetails.Rows[0]["division"].ToString();
                    height = dtEmpdetails.Rows[0]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[0]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[0]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[0]["EmpLanguagesKnown"].ToString();
                    identificationmark1 = dtEmpdetails.Rows[0]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[0]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[0]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[0]["EmpBloodGroup"].ToString();
                    BloodGroupName = dtEmpdetails.Rows[0]["BloodGroupName"].ToString();
                    // EmpPresentAddress = dtEmpdetails.Rows[0]["EmpPresentAddress"].ToString();
                    string Nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[0]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[0]["EmpRefAddr2"].ToString();
                    string SpeciallyAbled = dtEmpdetails.Rows[0]["SpeciallyAbled"].ToString();
                    string Category = dtEmpdetails.Rows[0]["Category"].ToString();
                    date = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[0]["Nationality"].ToString();
                    ReportingManager = dtEmpdetails.Rows[0]["RptrmanagerID"].ToString();
                    EmergencyPhone = dtEmpdetails.Rows[0]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[0]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[0]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[0]["EmpComplexion"].ToString();
                    // EmpPermanentAddress = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();

                    var PresentOrPermanentaddress = "0";
                    PresentOrPermanentaddress = dtEmpdetails.Rows[0]["pvcadd"].ToString();
                    var presentORperadd = "";
                    if (PresentOrPermanentaddress == "1")
                    {
                        presentORperadd = dtEmpdetails.Rows[0]["EmpPresentAddress"].ToString();
                    }
                    else if (PresentOrPermanentaddress == "2")
                    {
                        presentORperadd = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();
                    }


                    prLmark = dtEmpdetails.Rows[0]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[0]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[0]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[0]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[0]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[0]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[0]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[0]["prPincode"].ToString();
                    string periodofstay = dtEmpdetails.Rows[0]["prperiodofstay"].ToString();
                    pelmark = dtEmpdetails.Rows[0]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[0]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[0]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[0]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[0]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[0]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[0]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[0]["pePincode"].ToString();
                    // pephone = dtEmpdetails.Rows[0]["pephone"].ToString();

                    clientname = dtEmpdetails.Rows[0]["clientname"].ToString();
                    RHThumb = dtEmpdetails.Rows[0]["RHThumb"].ToString();
                    RHIndex = dtEmpdetails.Rows[0]["RHIndex"].ToString();
                    RHMiddle = dtEmpdetails.Rows[0]["RHMiddle"].ToString();
                    RHRing = dtEmpdetails.Rows[0]["RHRing"].ToString();
                    RHLittle = dtEmpdetails.Rows[0]["RHLittle"].ToString();
                    LHThumb = dtEmpdetails.Rows[0]["LHThumb"].ToString();
                    LHIndex = dtEmpdetails.Rows[0]["LHIndex"].ToString();
                    LHMiddle = dtEmpdetails.Rows[0]["LHMiddle"].ToString();
                    LHRing = dtEmpdetails.Rows[0]["LHRing"].ToString();
                    LHLittle = dtEmpdetails.Rows[0]["LHLittle"].ToString();
                    string Image1 = "";

                    if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[0]["Image"].ToString();
                    }
                    else
                    {

                    }




                    CompanyName = dtEmpdetails.Rows[0]["CompanyName"].ToString();
                    CompanyAddress = dtEmpdetails.Rows[0]["CompanyAddress"].ToString();

                    FSpouseName = dtEmpdetails.Rows[0]["SpouseName"].ToString();



                    PrevRegionCode = dtEmpdetails.Rows[0]["PrevRegionCode"].ToString();
                    PrevEmployerCode = dtEmpdetails.Rows[0]["PrevEmployerCode"].ToString();
                    PrevExtension = dtEmpdetails.Rows[0]["PrevExtension"].ToString();
                    PrevPFNo = dtEmpdetails.Rows[0]["PrevPFNo"].ToString();
                    PrevDtofLeave = dtEmpdetails.Rows[0]["PrevDateofLeave"].ToString();
                    if (PrevDtofLeave == "01/01/1900")
                    {
                        PrevDtofLeave = "";
                    }
                    else
                    {
                        PrevDtofLeave = dtEmpdetails.Rows[0]["PrevDateofLeave"].ToString();

                    }
                    //PrevYrExp = dtEmpdetails.Rows[0]["PrevYrExp"].ToString();


                    AadharCardNo = dtEmpdetails.Rows[0]["AadharCardNo"].ToString();
                    AadharCardName = dtEmpdetails.Rows[0]["AadharCardName"].ToString();
                    drivingLicenseName = dtEmpdetails.Rows[0]["drivingLicenseName"].ToString();
                    DrivingLicenseNo = dtEmpdetails.Rows[0]["DrivingLicenseNo"].ToString();
                    VoterIDNo = dtEmpdetails.Rows[0]["VoterIDNo"].ToString();
                    VoterIDName = dtEmpdetails.Rows[0]["VoterIDName"].ToString();
                    RationCardNo = dtEmpdetails.Rows[0]["RationCardNo"].ToString();
                    RationCardName = dtEmpdetails.Rows[0]["RationCardName"].ToString();
                    PanCardNo = dtEmpdetails.Rows[0]["PanCardNo"].ToString();

                    PanCardName = dtEmpdetails.Rows[0]["PanCardName"].ToString();
                    // PassBookNo = dtEmpdetails.Rows[0]["PassBookNo"].ToString();
                    PassBookNo = dtEmpdetails.Rows[0]["EmpBankAcNo"].ToString();
                    BankPassbookName = dtEmpdetails.Rows[0]["BankPassbookName"].ToString();
                    ElectricityBillNo = dtEmpdetails.Rows[0]["ElectricityBillNo"].ToString();
                    ElectricityBillName = dtEmpdetails.Rows[0]["ElectricityBillName"].ToString();
                    OtherType = dtEmpdetails.Rows[0]["OtherType"].ToString();
                    Othertextname = dtEmpdetails.Rows[0]["Othertextname"].ToString();
                    ESICCardNo = dtEmpdetails.Rows[0]["ESICCardNo"].ToString();
                    ESICName = dtEmpdetails.Rows[0]["ESICName"].ToString();
                    if (dtEmpdetails.Rows[0]["Title"].ToString() != "--Select--")
                    {
                        Title = dtEmpdetails.Rows[0]["Title"].ToString();
                    }

                    EmpPresentAddress = dtEmpdetails.Rows[0]["EmpPresentAddress"].ToString();
                    EmpPermanentAddress = dtEmpdetails.Rows[0]["EmpPermanentAddress"].ToString();
                    #endregion


                    string querypf = " select *,case Convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else Convert(varchar(10),DOfBirth,103) end as DateOfBirth from EmpRelationships where EmpId='" + Idno + "' and PFNominee='Y' ";
                    DataTable dtpf = Config.ExecuteReaderWithQueryAsync(querypf).Result;



                    string QueryNominee = "select top 1 RName as NomineeName ,Rtype as NomineeRelation from emprelationships where empid='" + Idno + "' and PFNominee='Y' order by id";
                    DataTable DtNominee = Config.ExecuteReaderWithQueryAsync(QueryNominee).Result;

                    if (DtNominee.Rows.Count > 0)
                    {
                        NomineeRelation = DtNominee.Rows[0]["NomineeRelation"].ToString();
                        NomineeName = DtNominee.Rows[0]["NomineeName"].ToString();
                    }

                    string queryre = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + txtEmpid.Text + "' and PFNominee='Y'  ";
                    DataTable dtesi = Config.ExecuteReaderWithQueryAsync(queryre).Result;

                    string residence = ""; string place = "";
                    string queryres = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + txtEmpid.Text + "' and PFNominee='Y'  ";
                    DataTable dtesione = Config.ExecuteReaderWithQueryAsync(queryres).Result;

                    string RNames = "";
                    string RTypes = "";
                    if (dtesione.Rows.Count > 0)
                    {
                        RNames = dtesione.Rows[0]["RName"].ToString();
                        RTypes = dtesione.Rows[0]["RType"].ToString();

                    }

                    string BranchDetails = "select * from branchdetails";
                    DataTable dtBranchDetails = Config.ExecuteReaderWithQueryAsync(BranchDetails).Result;

                    string Branchname = "";

                    if (dtBranchDetails.Rows.Count > 0)
                    {
                        Branchname = dtBranchDetails.Rows[0]["Branchname"].ToString();

                    }
                    string QueryCompanyInfo = "select * from companyinfo";
                    DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;


                    string Address = "";
                    string cmpnyinfo = "";

                    if (DtCompanyInfo.Rows.Count > 0)
                    {
                        Address = DtCompanyInfo.Rows[0]["Address"].ToString();
                        cmpnyinfo = DtCompanyInfo.Rows[0]["PFNo"].ToString();

                    }


                    string lgknwn = "";

                    if (Languagesknown.Length > 0)
                    {
                        string qry = "select language from languages where languageid in (" + Languagesknown + ")";
                        DataTable dtqry = Config.ExecuteReaderWithQueryAsync(qry).Result;


                        string lang = "";

                        var list = new List<string>();

                        if (dtqry.Rows.Count > 0)
                        {
                            for (int u = 0; u < dtqry.Rows.Count; u++)
                            {
                                lang = dtqry.Rows[u]["language"].ToString();

                                list.Add(lang);
                            }

                        }

                        lgknwn = string.Join(",", list.ToArray());
                    }



                    MemoryStream ms = new MemoryStream();
                    string fileheader2 = Idno + "" + name + "" + "Biodata" + " .Pdf";
                    Document document = new Document(PageSize.LEGAL);
                    // var output = new FileStream(fileheader2, FileMode., FileAccess.Write, FileShare.None);
                    var writer = PdfWriter.GetInstance(document, ms);
                    document.Open();
                    BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                    string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                    string imagepath2 = Server.MapPath("assets/GDXBillLogo.png");
                    string imagepathPFLogo = Server.MapPath("Images/EPFLogo.png");
                    string imagepath6 = Server.MapPath("assets/Images/");
                    string imagepathSeal = Server.MapPath("Images/seal.jpg");
                    string imagepathArrow = Server.MapPath("Images/Arrow.png");


                    #region for biodata

                    #region Headings of the Pdf

                    PdfPTable table = new PdfPTable(6);
                    table.TotalWidth = 570f;
                    table.LockedWidth = true;
                    float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                    table.SetWidths(width);

                    string fontstyle = "calibri";
                    PdfPCell cellspace1 = new PdfPCell(new Phrase("Employee: " + Idno + "   Enrolment Form", FontFactory.GetFont(fontstyle, Fontsize3 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellspace1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace1.Colspan = 6;
                    cellspace1.Border = 0;
                    cellspace1.PaddingTop = -50;
                    table.AddCell(cellspace1);

                    PdfPCell cellspace = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 6;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;
                    table.AddCell(cellspace);


                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50);
                        gif2.SetAbsolutePosition(16f, 910f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    PdfPCell cellHead = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, Fontsize3 + 4, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 1;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.SetLeading(0f, 1.3f);
                    table.AddCell(cellHead);

                    BaseColor color = new BaseColor(221, 226, 222);

                    PdfPCell cellHeadISO = new PdfPCell(new Phrase("ISO 9001-2008", FontFactory.GetFont(fontstyle, Fontsize3 - 1, Font.NORMAL, color)));
                    cellHeadISO.HorizontalAlignment = 0;
                    cellHeadISO.Colspan = 6;
                    cellHeadISO.Border = 0;
                    cellHeadISO.PaddingTop = -5;
                    cellHeadISO.PaddingLeft = 70;
                    // table.AddCell(cellHeadISO);

                    PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHead2.HorizontalAlignment = 1;
                    cellHead2.Colspan = 6;
                    cellHead2.Border = 0;


                    PdfPCell cellHead4 = new PdfPCell();
                    var celldescription = new Phrase();
                    celldescription.Add(new Chunk("                                                      ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldescription.Add(new Chunk("ENROLMENT FORM", FontFactory.GetFont(fontstyle, Fontsize3 + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    // celldescription.Add(new Chunk("                                              NO.", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHead4.AddElement(celldescription);
                    cellHead4.HorizontalAlignment = 1;
                    cellHead4.PaddingLeft = 60f;
                    cellHead4.Colspan = 6;
                    cellHead4.Border = 0;
                    table.AddCell(cellHead4);

                    PdfPCell cellNo1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellNo1.HorizontalAlignment = 0;
                    cellNo1.Colspan = 3;
                    cellNo1.Border = 0;
                    cellNo1.PaddingLeft = -3;
                    table.AddCell(cellNo1);

                    if (Dateofjoining != "")
                    {
                        PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : " + Dateofjoining, FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                        celldate1.HorizontalAlignment = 1;
                        celldate1.Colspan = 3;
                        celldate1.Border = 0;
                        celldate1.PaddingLeft = 135;
                        table.AddCell(celldate1);
                    }
                    else
                    {
                        PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                        celldate1.HorizontalAlignment = 1;
                        celldate1.Colspan = 3;
                        celldate1.Border = 0;
                        celldate1.PaddingLeft = 78;
                        table.AddCell(celldate1);
                    }


                    table.AddCell(cellspace);

                    PdfPCell cellpost1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellpost1.HorizontalAlignment = 0;
                    cellpost1.Colspan = 0;
                    cellpost1.Border = 0;
                    cellpost1.PaddingLeft = 10;
                    table.AddCell(cellpost1);



                    document.Add(table);

                    #endregion

                    #region Basic Information of the Employee

                    PdfPTable table2 = new PdfPTable(6);
                    table2.TotalWidth = 570f;
                    table2.LockedWidth = true;
                    float[] width1 = new float[] { 5f, 2f, 5f, 2f, 1.5f, 2f };
                    table2.SetWidths(width1);


                    PdfPTable temptable1 = new PdfPTable(3);
                    temptable1.TotalWidth = 400f;
                    temptable1.LockedWidth = true;
                    float[] tempwidth1 = new float[] { 5f, 2f, 5f };
                    temptable1.SetWidths(tempwidth1);

                    PdfPCell Contactno = new PdfPCell(new Phrase("1  Personal No. ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Contactno.HorizontalAlignment = 0;
                    Contactno.Border = 0;
                    Contactno.PaddingTop = 5;
                    temptable1.AddCell(Contactno);

                    PdfPCell Contactno2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Contactno2.HorizontalAlignment = 0;
                    Contactno2.Border = 0;
                    Contactno2.PaddingTop = 5;
                    temptable1.AddCell(Contactno2);

                    PdfPCell Contactno1 = new PdfPCell(new Phrase(Idno, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    Contactno1.HorizontalAlignment = 0;
                    Contactno1.Border = 0;
                    Contactno1.PaddingTop = 5;
                    temptable1.AddCell(Contactno1);

                    PdfPCell Rank = new PdfPCell(new Phrase("2  Rank", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Rank.HorizontalAlignment = 0;
                    Rank.Border = 0;
                    Rank.PaddingTop = 5;
                    temptable1.AddCell(Rank);

                    PdfPCell Rank2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Rank2.HorizontalAlignment = 0;
                    Rank2.Border = 0;
                    Rank2.PaddingTop = 5;
                    temptable1.AddCell(Rank2);

                    PdfPCell Rank1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    Rank1.HorizontalAlignment = 0;
                    Rank1.Border = 0;
                    Rank1.PaddingTop = 5;
                    temptable1.AddCell(Rank1);




                    PdfPCell cellName2 = new PdfPCell(new Phrase("3  Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellName2.HorizontalAlignment = 0;
                    cellName2.Border = 0;
                    cellName2.PaddingTop = 5;
                    temptable1.AddCell(cellName2);

                    PdfPCell cellName4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellName4.HorizontalAlignment = 0;
                    cellName4.Border = 0;
                    cellName4.PaddingTop = 5;
                    temptable1.AddCell(cellName4);

                    PdfPCell cellName3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellName3.HorizontalAlignment = 0;
                    cellName3.Border = 0;
                    cellName3.PaddingTop = 5;
                    temptable1.AddCell(cellName3);

                    PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Age ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDateofbirth.HorizontalAlignment = 0;
                    cellDateofbirth.Border = 0;
                    cellDateofbirth.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth);

                    PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDateofbirth2.HorizontalAlignment = 0;
                    cellDateofbirth2.Border = 0;
                    cellDateofbirth2.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth2);

                    PdfPCell cellDateofbirth1;

                    if (EmpDtofBirths.Length > 0)
                    {
                        cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths + " & " + dateofbirth, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellDateofbirth1.HorizontalAlignment = 0;
                        cellDateofbirth1.Border = 0;
                        cellDateofbirth1.PaddingTop = 5;
                        temptable1.AddCell(cellDateofbirth1);
                    }
                    else
                    {
                        cellDateofbirth1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellDateofbirth1.HorizontalAlignment = 0;
                        cellDateofbirth1.Border = 0;
                        cellDateofbirth1.PaddingTop = 5;
                        temptable1.AddCell(cellDateofbirth1);
                    }

                    PdfPCell cellEdq = new PdfPCell(new Phrase("5  Qualification ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellEdq.HorizontalAlignment = 0;
                    cellEdq.Border = 0;
                    cellEdq.PaddingTop = 5;
                    temptable1.AddCell(cellEdq);

                    PdfPCell cellEdq2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellEdq2.HorizontalAlignment = 0;
                    cellEdq2.Border = 0;
                    cellEdq2.PaddingTop = 5;
                    temptable1.AddCell(cellEdq2);

                    PdfPCell cellEdq1 = new PdfPCell(new Phrase(educationqualification, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellEdq1.HorizontalAlignment = 0;
                    cellEdq1.Border = 0;
                    cellEdq1.PaddingTop = 5;
                    temptable1.AddCell(cellEdq1);

                    PdfPCell cellExperienc = new PdfPCell(new Phrase("6  Experience", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellExperienc.HorizontalAlignment = 0;
                    cellExperienc.Border = 0;
                    cellExperienc.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc);

                    PdfPCell cellExperienc2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellExperienc2.HorizontalAlignment = 0;
                    cellExperienc2.Border = 0;
                    cellExperienc2.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc2);


                    PdfPCell cellExperienc1 = new PdfPCell(new Phrase(PrevYrExp, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellExperienc1.HorizontalAlignment = 0;
                    cellExperienc1.Border = 0;
                    cellExperienc1.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc1);

                    PdfPCell cellFather21 = new PdfPCell(new Phrase("7  Father’s Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellFather21.HorizontalAlignment = 0;
                    cellFather21.Border = 0;
                    cellFather21.PaddingTop = 5;
                    temptable1.AddCell(cellFather21);

                    PdfPCell cellFather41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellFather41.HorizontalAlignment = 0;
                    cellFather41.Border = 0;
                    cellFather41.PaddingTop = 5;
                    temptable1.AddCell(cellFather41);

                    PdfPCell cellFather31 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellFather31.HorizontalAlignment = 0;
                    cellFather31.Border = 0;
                    cellFather31.PaddingTop = 5;
                    temptable1.AddCell(cellFather31);

                    PdfPCell cellMother21 = new PdfPCell(new Phrase("8  Mother’s Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMother21.HorizontalAlignment = 0;
                    cellMother21.Border = 0;
                    cellMother21.PaddingTop = 5;
                    temptable1.AddCell(cellMother21);

                    PdfPCell cellMother41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMother41.HorizontalAlignment = 0;
                    cellMother41.Border = 0;
                    cellMother41.PaddingTop = 5;
                    temptable1.AddCell(cellMother41);

                    PdfPCell cellMother31 = new PdfPCell(new Phrase(MotherName, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellMother31.HorizontalAlignment = 0;
                    cellMother31.Border = 0;
                    cellMother31.PaddingTop = 5;
                    temptable1.AddCell(cellMother31);






                    PdfPCell cellDesign = new PdfPCell(new Phrase("9  Occupation  ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDesign.HorizontalAlignment = 0;
                    cellDesign.Border = 0;
                    cellDesign.PaddingTop = 5;
                    temptable1.AddCell(cellDesign);

                    PdfPCell cellDesign1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDesign1.HorizontalAlignment = 0;
                    cellDesign1.Border = 0;
                    cellDesign1.PaddingTop = 5;
                    temptable1.AddCell(cellDesign1);

                    PdfPCell cellDesign3 = new PdfPCell(new Phrase(FatherOccupation, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellDesign3.HorizontalAlignment = 0;
                    cellDesign3.Border = 0;
                    cellDesign3.PaddingTop = 5;
                    temptable1.AddCell(cellDesign3);

                    PdfPCell cellMobile1 = new PdfPCell(new Phrase("10  Mobile", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMobile1.HorizontalAlignment = 0;
                    cellMobile1.Border = 0;
                    cellMobile1.PaddingTop = 5;
                    temptable1.AddCell(cellMobile1);

                    PdfPCell cellMobile12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMobile12.HorizontalAlignment = 0;
                    cellMobile12.Border = 0;
                    cellMobile12.PaddingTop = 5;
                    temptable1.AddCell(cellMobile12);

                    PdfPCell cellMobile11 = new PdfPCell(new Phrase(MobileNumber, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellMobile11.HorizontalAlignment = 0;
                    cellMobile11.Border = 0;
                    cellMobile11.PaddingTop = 5;
                    temptable1.AddCell(cellMobile11);


                    PdfPCell cellAadhaar1 = new PdfPCell(new Phrase("11  Aadhaar No", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellAadhaar1.HorizontalAlignment = 0;
                    cellAadhaar1.Border = 0;
                    cellAadhaar1.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar1);

                    PdfPCell cellAadhaar12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellAadhaar12.HorizontalAlignment = 0;
                    cellAadhaar12.Border = 0;
                    cellAadhaar12.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar12);

                    PdfPCell cellAadhaar11 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellAadhaar11.HorizontalAlignment = 0;
                    cellAadhaar11.Border = 0;
                    cellAadhaar11.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar11);



                    PdfPCell cellPAn1 = new PdfPCell(new Phrase("12  PAN No", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellPAn1.HorizontalAlignment = 0;
                    cellPAn1.Border = 0;
                    cellPAn1.PaddingTop = 5;
                    temptable1.AddCell(cellPAn1);

                    PdfPCell cellpan12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellpan12.HorizontalAlignment = 0;
                    cellpan12.Border = 0;
                    cellpan12.PaddingTop = 5;
                    temptable1.AddCell(cellpan12);

                    PdfPCell cellpan11 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellpan11.HorizontalAlignment = 0;
                    cellpan11.Border = 0;
                    cellpan11.PaddingTop = 5;
                    temptable1.AddCell(cellpan11);

                    PdfPCell childTable1 = new PdfPCell(temptable1);
                    childTable1.Border = 0;
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 3;
                    table2.AddCell(childTable1);


                    PdfPTable temptable2 = new PdfPTable(3);
                    temptable2.TotalWidth = 70f;
                    temptable2.LockedWidth = true;
                    float[] tempwidth2 = new float[] { 2f, 3f, 2f };
                    temptable2.SetWidths(tempwidth2);


                    if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                    {
                        iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[0]["Image"].ToString());
                        //empphoto.ScalePercent(23f);
                        empphoto.ScaleAbsolute(110.7f, 140.5f);
                        PdfPCell employeephoto = new PdfPCell();
                        Paragraph logo = new Paragraph();
                        logo.Add(new Chunk(empphoto, 0, 0));
                        employeephoto.AddElement(logo);
                        employeephoto.HorizontalAlignment = 2;
                        employeephoto.Border = 0;
                        employeephoto.Colspan = 3;

                        temptable2.AddCell(employeephoto);

                    }


                    PdfPCell childTable2 = new PdfPCell(temptable2);
                    childTable2.Border = 0;
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 3;
                    table2.AddCell(childTable2);

                    document.Add(table2);

                    #endregion Basic Information of the Employee

                    #region Employee Addresses



                    PdfPTable tbldatas2 = new PdfPTable(6);
                    tbldatas2.TotalWidth = 580f;
                    tbldatas2.LockedWidth = true;
                    float[] widthdata2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };

                    PdfPTable tbldata2 = new PdfPTable(3);
                    tbldata2.TotalWidth = 290f;
                    tbldata2.LockedWidth = true;
                    float[] widths1 = new float[] { 2f, 1.5f, 3f };
                    tbldata2.SetWidths(widths1);


                    PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    data2space.Colspan = 6;
                    data2space.Border = 0;


                    PdfPCell cellPresentaddr = new PdfPCell(new Phrase("13  Present Address ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 3;
                    cellPresentaddr.Border = 0;
                    cellPresentaddr.PaddingTop = 8;
                    tbldata2.AddCell(cellPresentaddr);


                    PdfPCell cellPresentaddrval = new PdfPCell(new Phrase(EmpPresentAddress, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddrval.HorizontalAlignment = 0;
                    cellPresentaddrval.Colspan = 3;
                    cellPresentaddrval.Border = 0;
                    cellPresentaddrval.PaddingTop = 8;
                    tbldata2.AddCell(cellPresentaddrval);







                    PdfPCell childTables1 = new PdfPCell(tbldata2);
                    childTables1.HorizontalAlignment = 0;
                    childTables1.Colspan = 3;
                    childTables1.Border = 0;
                    tbldatas2.AddCell(childTables1);



                    PdfPTable tbldata3 = new PdfPTable(3);
                    tbldata3.TotalWidth = 290f;
                    tbldata3.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 1.5f, 3f };
                    tbldata3.SetWidths(width2);

                    PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("Permanent Address", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 3;
                    cellPerminentaddr.Border = 0;
                    cellPerminentaddr.PaddingTop = 8;
                    cellPerminentaddr.PaddingLeft = 15;
                    tbldata3.AddCell(cellPerminentaddr);


                    PdfPCell cellPerminentaddrval = new PdfPCell(new Phrase(EmpPermanentAddress, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddrval.HorizontalAlignment = 0;
                    cellPerminentaddrval.Colspan = 3;
                    cellPerminentaddrval.Border = 0;
                    cellPerminentaddrval.PaddingTop = 8;
                    cellPerminentaddrval.PaddingLeft = 15;
                    tbldata3.AddCell(cellPerminentaddrval);




                    PdfPCell childTables12 = new PdfPCell(tbldata3);
                    childTables12.HorizontalAlignment = 0;
                    childTables12.Colspan = 3;
                    childTables12.Border = 0;
                    tbldatas2.AddCell(childTables12);

                    document.Add(tbldatas2);




                    #endregion Employee Addresses

                    #region

                    PdfPTable table3 = new PdfPTable(8);
                    table3.TotalWidth = 580f;
                    table3.LockedWidth = true;
                    float[] widtha2 = new float[] { 1f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    table3.SetWidths(widtha2);

                    PdfPCell celllanguage = new PdfPCell(new Phrase("14  Languages Known                   :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celllanguage.HorizontalAlignment = 0;
                    celllanguage.Colspan = 4;
                    celllanguage.Border = 0;
                    celllanguage.PaddingTop = 8;
                    celllanguage.PaddingLeft = -3;
                    table3.AddCell(celllanguage);


                    PdfPCell celllanguage1 = new PdfPCell(new Phrase(lgknwn, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celllanguage1.HorizontalAlignment = 0;
                    celllanguage1.Colspan = 4;
                    celllanguage1.Border = 0;
                    celllanguage1.PaddingTop = 8;
                    celllanguage1.PaddingLeft = -50;
                    table3.AddCell(celllanguage1);

                    PdfPCell cellphyst = new PdfPCell(new Phrase("15  Physical GDX ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellphyst.HorizontalAlignment = 0;
                    cellphyst.Colspan = 2;
                    cellphyst.Border = 0;
                    cellphyst.PaddingTop = 8;
                    cellphyst.PaddingLeft = -3;
                    table3.AddCell(cellphyst);

                    table3.AddCell(cellspace);



                    PdfPCell cellHeightem = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHeightem.HorizontalAlignment = 0;
                    cellHeightem.Colspan = 1;
                    cellHeightem.Border = 0;
                    cellHeightem.PaddingTop = 5;
                    cellHeightem.PaddingLeft = 30;
                    table3.AddCell(cellHeightem);


                    PdfPCell cellHeightem1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHeightem1.HorizontalAlignment = 0;
                    cellHeightem1.Colspan = 1;
                    cellHeightem1.Border = 0;
                    cellHeightem1.PaddingTop = 5;
                    cellHeightem1.PaddingLeft = 30;
                    table3.AddCell(cellHeightem1);


                    PdfPCell cellHeight = new PdfPCell(new Phrase(" Height :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHeight.HorizontalAlignment = 0;
                    cellHeight.Colspan = 0;
                    cellHeight.Border = 0;
                    cellHeight.PaddingTop = 5;
                    cellHeight.PaddingLeft = 10;
                    table3.AddCell(cellHeight);


                    if (height != "0")
                    {
                        PdfPCell cellHeight1 = new PdfPCell(new Phrase(height, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellHeight1.HorizontalAlignment = 0;
                        cellHeight1.Colspan = 0;
                        cellHeight1.Border = 0;
                        cellHeight1.PaddingTop = 5;
                        table3.AddCell(cellHeight1);
                    }
                    if (height == "0")
                    {
                        PdfPCell cellHeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellHeight1.HorizontalAlignment = 0;
                        cellHeight1.Colspan = 0;
                        cellHeight1.Border = 0;
                        cellHeight1.PaddingTop = 5;
                        cellHeight1.PaddingLeft = -30;
                        table3.AddCell(cellHeight1);
                    }


                    PdfPCell cellWeight = new PdfPCell(new Phrase("Weight :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellWeight.HorizontalAlignment = 0;
                    cellWeight.Colspan = 0;
                    cellWeight.Border = 0;
                    cellWeight.PaddingTop = 5;
                    cellWeight.PaddingLeft = 30;
                    table3.AddCell(cellWeight);

                    if (weight != "0")
                    {
                        PdfPCell cellWeight1 = new PdfPCell(new Phrase(weight, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellWeight1.HorizontalAlignment = 0;
                        cellWeight1.Colspan = 0;
                        cellWeight1.Border = 0;
                        cellWeight1.PaddingTop = 5;
                        table3.AddCell(cellWeight1);
                    }
                    if (weight == "0")
                    {
                        PdfPCell cellWeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellWeight1.HorizontalAlignment = 0;
                        cellWeight1.Colspan = 0;
                        cellWeight1.Border = 0;
                        cellWeight1.PaddingTop = 5;
                        cellWeight1.PaddingLeft = -50;
                        table3.AddCell(cellWeight1);
                    }
                    //data1.AddCell(cellspace1);

                    PdfPCell cellchest = new PdfPCell(new Phrase(" Chest :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellchest.HorizontalAlignment = 0;
                    cellchest.Colspan = 0;
                    cellchest.Border = 0;
                    cellchest.PaddingTop = 5;
                    table3.AddCell(cellchest);


                    if (chest != "0")
                    {
                        PdfPCell cellChest1 = new PdfPCell(new Phrase(chest, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellChest1.HorizontalAlignment = 0;
                        cellChest1.Colspan = 0;
                        cellChest1.Border = 0;
                        cellChest1.PaddingTop = 5;
                        cellChest1.PaddingLeft = -30;
                        table3.AddCell(cellChest1);
                    }
                    if (chest == "0")
                    {
                        PdfPCell cellChest1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellChest1.HorizontalAlignment = 0;
                        cellChest1.Colspan = 0;
                        cellChest1.Border = 0;
                        cellChest1.PaddingTop = 5;
                        cellChest1.PaddingLeft = -30;
                        table3.AddCell(cellChest1);
                    }

                    table3.AddCell(cellspace);

                    document.Add(table3);



                    PdfPTable data1 = new PdfPTable(3);
                    data1.TotalWidth = 580f;
                    data1.LockedWidth = true;
                    float[] widthdate = new float[] { 3f, 2f, 3f };
                    data1.SetWidths(widthdate);

                    PdfPCell celldata15 = new PdfPCell(new Phrase("16  Identification Marks ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldata15.HorizontalAlignment = 0;
                    celldata15.Colspan = 0;
                    celldata15.Border = 0;
                    celldata15.PaddingTop = 8;
                    celldata15.PaddingLeft = -3;
                    data1.AddCell(celldata15);

                    PdfPCell celldatacol = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldatacol.HorizontalAlignment = 0;
                    celldatacol.Colspan = 2;
                    celldatacol.Border = 0;
                    celldatacol.PaddingTop = 8;
                    celldatacol.PaddingLeft = -46;
                    data1.AddCell(celldatacol);


                    PdfPCell celldata16 = new PdfPCell(new Phrase("      (i) " + identificationmark1 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata16.HorizontalAlignment = 0;
                    celldata16.Colspan = 3;
                    celldata16.Border = 0;
                    celldata16.PaddingTop = 5;
                    data1.AddCell(celldata16);

                    data1.AddCell(cellspace);

                    PdfPCell celldata17 = new PdfPCell(new Phrase("      (ii) " + identificationmark2 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata17.HorizontalAlignment = 0;
                    celldata17.Colspan = 3;
                    celldata17.Border = 0;
                    celldata17.PaddingTop = 5;
                    // celldata17.PaddingLeft = -20;
                    data1.AddCell(celldata17);

                    data1.AddCell(cellspace);

                    PdfPCell cellMarital = new PdfPCell(new Phrase("17  Marital Status / \n      Name of Spouse", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMarital.HorizontalAlignment = 0;
                    cellMarital.Colspan = 0;
                    cellMarital.Border = 0;
                    cellMarital.PaddingTop = 8;
                    cellMarital.PaddingLeft = -3;
                    data1.AddCell(cellMarital);

                    PdfPCell cellMarital2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMarital2.HorizontalAlignment = 0;
                    cellMarital2.Colspan = 0;
                    cellMarital2.Border = 0;
                    cellMarital2.PaddingTop = 8;
                    cellMarital2.PaddingLeft = -46;
                    data1.AddCell(cellMarital2);

                    if (maritalstatus.Length > 0)
                    {
                        if (SpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = maritalstatus + " / " + SpouseName;

                        }
                        else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = maritalstatus + " / " + FSpouseName;
                        }
                        else
                        {

                            MaritalStatusSpouseText = maritalstatus;
                        }



                    }
                    else if (maritalstatus.Length == 0)
                    {

                        if (SpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = SpouseName;

                        }

                        else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                        {

                            MaritalStatusSpouseText = FSpouseName;

                        }
                        else
                        {

                            MaritalStatusSpouseText = "";
                        }

                    }
                    else
                    {
                        MaritalStatusSpouseText = "";
                    }

                    PdfPCell cellMarital1 = new PdfPCell(new Phrase(MaritalStatusSpouseText, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellMarital1.HorizontalAlignment = 0;
                    cellMarital1.Colspan = 0;
                    cellMarital1.Border = 0;
                    cellMarital1.PaddingTop = 8;
                    cellMarital1.PaddingLeft = -100;
                    data1.AddCell(cellMarital1);

                    PdfPCell celldatablood = new PdfPCell(new Phrase("18  Blood Group ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldatablood.HorizontalAlignment = 0;
                    celldatablood.Colspan = 1;
                    celldatablood.Border = 0;
                    celldatablood.PaddingTop = 8;
                    celldatablood.PaddingLeft = -3;
                    data1.AddCell(celldatablood);

                    PdfPCell celldatabloodl = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldatabloodl.HorizontalAlignment = 0;
                    celldatabloodl.Colspan = 1;
                    celldatabloodl.Border = 0;
                    celldatabloodl.PaddingTop = 8;
                    celldatabloodl.PaddingLeft = -46;
                    data1.AddCell(celldatabloodl);


                    PdfPCell celldatabloodl16 = new PdfPCell(new Phrase(BloodGroupName, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldatabloodl16.HorizontalAlignment = 0;
                    celldatabloodl16.Colspan = 1;
                    celldatabloodl16.Border = 0;
                    celldatabloodl16.PaddingTop = 5;
                    celldatabloodl16.PaddingLeft = -100;
                    data1.AddCell(celldatabloodl16);

                    document.Add(data1);

                    PdfPTable Family = new PdfPTable(4);
                    Family.TotalWidth = 590f;
                    Family.LockedWidth = true;
                    float[] widthFamily = new float[] { 2f, 3f, 4f, 3f };
                    Family.SetWidths(widthFamily);

                    PdfPCell cellheading = new PdfPCell(new Phrase("19  Family Particulars                               :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellheading.Colspan = 4;
                    cellheading.Border = 0;
                    cellheading.HorizontalAlignment = 0;
                    Family.AddCell(cellheading);

                    PdfPCell cellsno = new PdfPCell(new Phrase("SL No.", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellsno.Colspan = 1;
                    cellsno.Border = 0;
                    cellsno.HorizontalAlignment = 0;
                    Family.AddCell(cellsno);

                    PdfPCell cellfamname = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellfamname.Colspan = 1;
                    cellfamname.Border = 0;
                    cellfamname.HorizontalAlignment = 0;
                    Family.AddCell(cellfamname);

                    PdfPCell cellfamage = new PdfPCell(new Phrase("Date of Birth/ Age", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellfamage.Colspan = 1;
                    cellfamage.Border = 0;
                    cellfamage.HorizontalAlignment = 0;
                    Family.AddCell(cellfamage);

                    PdfPCell cellRemp = new PdfPCell(new Phrase("Relation with the Employee", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellRemp.Colspan = 1;
                    cellRemp.Border = 0;
                    cellRemp.HorizontalAlignment = 0;
                    Family.AddCell(cellRemp);

                    string Relname = "";
                    string Relage = "";
                    string RelDOFBirth = "";
                    string RType1 = "";
                    string ROccupation = "";

                    int k = 1;
                    if (dtEmpdetails.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                        {
                            Relname = dtEmpdetails.Rows[i]["RName"].ToString();
                            Relage = dtEmpdetails.Rows[i]["age"].ToString();
                            RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();
                            ROccupation = dtEmpdetails.Rows[i]["ROccupation"].ToString();
                            RType1 = dtEmpdetails.Rows[i]["RType"].ToString();


                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtEmpdetails.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + " / " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }

                            if (Relname.Length > 0)
                            {
                                PdfPCell cellsno1 = new PdfPCell(new Phrase(k.ToString(), FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                                cellsno1.Colspan = 1;
                                cellsno1.HorizontalAlignment = 0;
                                cellsno1.Border = 0;
                                Family.AddCell(cellsno1);
                            }
                            else
                            {
                                PdfPCell cellsno1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                                cellsno1.Colspan = 1;
                                cellsno1.HorizontalAlignment = 0;
                                cellsno1.Border = 0;
                                Family.AddCell(cellsno1);
                            }
                            PdfPCell cellfamname1 = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                            cellfamname1.Colspan = 1;
                            cellfamname1.Border = 0;
                            cellfamname1.HorizontalAlignment = 0;
                            Family.AddCell(cellfamname1);


                            if (RelDOFBirth.Length > 0)
                            {
                                PdfPCell cellfamage1 = new PdfPCell(new Phrase(RelDOFBirth, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                                cellfamage1.Colspan = 1;
                                cellfamage1.HorizontalAlignment = 0;
                                cellfamage1.Border = 0;
                                Family.AddCell(cellfamage1);
                            }
                            else
                            {
                                PdfPCell cellfamage1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                                cellfamage1.Colspan = 1;
                                cellfamage1.HorizontalAlignment = 0;
                                cellfamage1.Border = 0;
                                Family.AddCell(cellfamage1);
                            }
                            PdfPCell cellfamrelation1 = new PdfPCell(new Phrase(RType1, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                            cellfamrelation1.Colspan = 1;
                            cellfamrelation1.Border = 0;
                            cellfamrelation1.HorizontalAlignment = 0;
                            Family.AddCell(cellfamrelation1);

                            k++;
                        }

                    }
                    document.Add(Family);


                    PdfPTable data4 = new PdfPTable(2);
                    data4.TotalWidth = 525f;
                    data4.LockedWidth = true;
                    float[] widthdate4 = new float[] { 2f, 1f };
                    data4.SetWidths(widthdate4);

                    PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellempty.HorizontalAlignment = 0;
                    cellempty.Colspan = 2;
                    cellempty.Border = 0;
                    cellempty.PaddingTop = 5;

                    document.Add(data4);

                    #region Employee Reference Details


                    PdfPTable tblReferences = new PdfPTable(4);
                    tblReferences.TotalWidth = 580f;
                    tblReferences.LockedWidth = true;
                    float[] widthRef = new float[] { 2f, 2f, 2f, 2f };
                    tblReferences.SetWidths(widthRef);

                    PdfPCell celldataref = new PdfPCell(new Phrase("20  Reference (2 Neighbours with name , occupation and address / father-in-law address)", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldataref.HorizontalAlignment = 0;
                    celldataref.Colspan = 4;
                    celldataref.Border = 0;
                    celldataref.PaddingTop = 5;
                    celldataref.PaddingLeft = -3;
                    tblReferences.AddCell(celldataref);

                    PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Refspace.Colspan = 4;
                    Refspace.Border = 0;

                    PdfPCell celldata26 = new PdfPCell(new Phrase("    a) " + refaddress1 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata26.HorizontalAlignment = 0;
                    celldata26.Colspan = 4;
                    celldata26.Border = 0;
                    celldata26.PaddingTop = 5;
                    tblReferences.AddCell(celldata26);

                    //tblReferences.AddCell(Refspace);

                    PdfPCell celldata28 = new PdfPCell(new Phrase("    b) " + refaddress2 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata28.HorizontalAlignment = 0;
                    celldata28.Colspan = 4;
                    celldata28.Border = 0;
                    tblReferences.AddCell(celldata28);
                    tblReferences.AddCell(Refspace);

                    #region for photos

                    iTextSharp.text.Image gif = null;


                    PdfPCell cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);

                    if (LHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(100f, 100f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 20f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblReferences.AddCell(EmpImage);
                    }
                    else
                    {
                        cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellSpacetemprt.HorizontalAlignment = 0;
                        cellSpacetemprt.Colspan = 1;
                        cellSpacetemprt.FixedHeight = 50;
                        tblReferences.AddCell(cellSpacetemprt);
                    }

                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);

                    if (RHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(100f, 100f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 20f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        // EmpImage.PaddingLeft = 15;
                        tblReferences.AddCell(EmpImage);
                    }
                    else
                    {
                        cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellSpacetemprt.HorizontalAlignment = 0;
                        cellSpacetemprt.Colspan = 1;
                        cellSpacetemprt.FixedHeight = 50;
                        tblReferences.AddCell(cellSpacetemprt);
                    }

                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" Left Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    cellSpacetemprt.PaddingRight = 10;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" Right Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    cellSpacetemprt.PaddingRight = 10;
                    tblReferences.AddCell(cellSpacetemprt);

                    #endregion for photos

                    tblReferences.AddCell(Refspace);

                    PdfPCell cellSpace16 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellSpace16.HorizontalAlignment = 0;
                    cellSpace16.Colspan = 6;
                    cellSpace16.Border = 0;
                    tblReferences.AddCell(cellSpace16);

                    PdfPCell cellDesc = new PdfPCell(new Phrase("The above information is true to the best of my knowledge and belief.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.BOLD, BaseColor.BLACK)));
                    cellDesc.HorizontalAlignment = 0;
                    cellDesc.Colspan = 4;
                    cellDesc.Border = 0;
                    cellDesc.PaddingTop = 5;
                    cellDesc.PaddingLeft = -3;
                    tblReferences.AddCell(cellDesc);

                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 4;
                        sealImg.PaddingLeft = -570f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblReferences.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellsign = new PdfPCell(new Phrase("Signature of Applicant :  ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellsign.HorizontalAlignment = 0;
                    cellsign.Colspan = 2;
                    cellsign.Border = 0;
                    cellsign.PaddingTop = 5;
                    cellsign.PaddingLeft = 0;
                    cellsign.PaddingLeft = -3;
                    tblReferences.AddCell(cellsign);


                    PdfPCell cellrecrutment = new PdfPCell(new Phrase("Recruitment Officer", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellrecrutment.HorizontalAlignment = 1;
                    cellrecrutment.Colspan = 2;
                    cellrecrutment.Border = 0;
                    cellrecrutment.PaddingTop = 5;
                    cellrecrutment.PaddingLeft = -3;
                    tblReferences.AddCell(cellrecrutment);


                    PdfPCell celldate3 = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldate3.HorizontalAlignment = 0;
                    celldate3.Colspan = 2;
                    celldate3.Border = 0;
                    celldate3.PaddingLeft = -3;
                    tblReferences.AddCell(celldate3);


                    PdfPCell cellplace = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellplace.HorizontalAlignment = 1;
                    cellplace.Border = 0;
                    cellplace.Colspan = 2;
                    cellplace.PaddingLeft = -75;
                    tblReferences.AddCell(cellplace);



                    document.Add(tblReferences);


                    document.NewPage();

                    #region For Finger Prints

                    PdfPTable tblefingerprints = new PdfPTable(6);
                    tblefingerprints.TotalWidth = 580f;
                    tblefingerprints.LockedWidth = true;
                    float[] widthFinger = new float[] { 2f, 3f, 1f, 2f, 3f, 0.5f };
                    tblefingerprints.SetWidths(widthFinger);
                    PdfPCell FingerPrints;

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    FingerPrints.FixedHeight = 60;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Left Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 1;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Right Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 1;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);


                    FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHIndex.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHIndex);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHIndex.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHIndex);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHMiddle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHMiddle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHMiddle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHMiddle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);


                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHRing.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHRing);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHRing.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHRing);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHLittle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHLittle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }

                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHLittle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHLittle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    document.Add(tblefingerprints);
                    document.NewPage();

                    #endregion

                    PdfPTable tblinstructions = new PdfPTable(4);
                    tblinstructions.TotalWidth = 580f;
                    tblinstructions.LockedWidth = true;
                    float[] widthRefIns = new float[] { 0.5f, 2f, 2f, 2f };
                    tblinstructions.SetWidths(widthRefIns);

                    PdfPCell cellSpace161 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellSpace161.HorizontalAlignment = 0;
                    cellSpace161.Colspan = 6;
                    cellSpace161.Border = 0;


                    PdfPCell cellExperiencphrase = new PdfPCell(new Phrase("RULES AND REGULATIONS", FontFactory.GetFont(fontstyle, Fontsize3 + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellExperiencphrase.HorizontalAlignment = 1;
                    cellExperiencphrase.Colspan = 4;
                    cellExperiencphrase.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase);

                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase77 = new PdfPCell(new Phrase("I hereby agree that I will abide by all the rules and regulations of the company as given hereunder. Also I am aware that any  violation of these rules and regulations  I shall be liable to disciplinary action as per the company laws :-", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase77.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase77.Colspan = 4;
                    cellExperiencphrase77.Border = 0;
                    cellExperiencphrase77.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase77);

                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase66 = new PdfPCell(new Phrase("1.  After joining the duty, every security person has to work for one full month. He will not be absent from duty without obtaining prior permission from field officer.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase66.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase66.Colspan = 4;
                    cellExperiencphrase66.Border = 0;
                    cellExperiencphrase66.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase66);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase55 = new PdfPCell(new Phrase("2.  He may take a maximum of 3 days leave with prior permission from the field officer. field officer can grant  leave upto there days. Area manger can grant leave upto 6 days, managing Director’s prior permission, is necessary in case of the leave exceeding 6 days. Request shall be initiated one week in advance in such cases.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase55.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase55.Colspan = 4;
                    cellExperiencphrase55.Border = 0;
                    cellExperiencphrase55.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase55);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase44 = new PdfPCell(new Phrase("3.  Any security person will be removed from services if he is found having any bad habits or absenting from duty without prior permission or misbehaving with his superiors / colleagues.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase44.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase44.Colspan = 4;
                    cellExperiencphrase44.Border = 0;
                    cellExperiencphrase44.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase44);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase33 = new PdfPCell(new Phrase("4. If any security person is found involved in theft, cheating, dacoity, lending  or borrowing money from the employees of the unit/factory, he shall be handed over to police for suitable action.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase33.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase33.Colspan = 4;
                    cellExperiencphrase33.Border = 0;
                    cellExperiencphrase33.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase33);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase22 = new PdfPCell(new Phrase("5.  All security personnel should wear neat and clean uniform during duty hours. They have to have proper hair cut and daily shaving before reporting for duty. He is to ensure that no complaints on indiscipline are received from clients.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase22.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase22.Colspan = 4;
                    cellExperiencphrase22.Border = 0;
                    cellExperiencphrase22.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase22);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase11 = new PdfPCell(new Phrase("6.  If any security person wishes to resign from the company, he may be so provided; He has minimum services of 12 months in the company and has informed the organization, in writing at least one month in advance. Any violation of the rule shall result in non-payment of his salary for the month.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase11.Colspan = 4;
                    cellExperiencphrase11.Border = 0;
                    cellExperiencphrase11.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase11);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase10 = new PdfPCell(new Phrase("7.  Parades at unit level/mass parades in a particular area and various physical activities are conducted at regular intervals. it is mandatory to all security personnel to attend without any pre-condition. Necessary disciplinary action will be initiated against the defaulters as per the company’s Rule.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase10.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase10.Colspan = 4;
                    cellExperiencphrase10.Border = 0;
                    cellExperiencphrase10.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase10);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase9 = new PdfPCell(new Phrase("8.  He shall not leave the working place under any circumstances without properly handing over his duties to the reliever. in case of emergency he should make an alternative arrangement before leaving the duty post or continue performing the till he is relived.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase9.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase9.Colspan = 4;
                    cellExperiencphrase9.Border = 0;
                    cellExperiencphrase9.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase9);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase8 = new PdfPCell(new Phrase("9.  All security personnel should obey the orders issued by their superiors and should perform their duty in a disciplined manner.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase8.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase8.Colspan = 4;
                    cellExperiencphrase8.Border = 0;
                    cellExperiencphrase8.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase8);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase7 = new PdfPCell(new Phrase("10.  A full set of uniform will be issued at the time of joining the duty. The second set, viz. one pant in the fourth month and two pairs of socks in the sixth month will be issued on payment. uniform once issued will not be taken back under any circumstances.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase7.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase7.Colspan = 4;
                    cellExperiencphrase7.Border = 0;
                    cellExperiencphrase7.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase7);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase6 = new PdfPCell(new Phrase("11.  All security personnel should be punctual in reporting for they duty and ensure signing the attendances register before joining the duty. The late comers shall be liable for disciplinary action as per company law.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase6.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase6.Colspan = 4;
                    cellExperiencphrase6.Border = 0;
                    cellExperiencphrase6.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase6);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase5 = new PdfPCell(new Phrase("12.  All security personnel are required to perform overtime or additional duties as and when called upon to do so. Refusal to do such additional tasks or overtime duties shall attract disciplinary action.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase5.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase5.Colspan = 4;
                    cellExperiencphrase5.Border = 0;
                    cellExperiencphrase5.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase5);

                    tblinstructions.AddCell(cellSpace161);
                    tblinstructions.AddCell(cellSpace161);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase4 = new PdfPCell(new Phrase("Left Hand Thumb                                                         Impression of the Applicant", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase4.HorizontalAlignment = 1;
                    cellExperiencphrase4.Colspan = 2;
                    cellExperiencphrase4.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase4);


                    PdfPCell cellExperiencphrase3 = new PdfPCell(new Phrase("Signature of the Applicant", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase3.HorizontalAlignment = 1;
                    cellExperiencphrase3.Colspan = 2;
                    cellExperiencphrase3.Border = 0;
                    //cellExperiencphrase3.PaddingLe = -50;
                    tblinstructions.AddCell(cellExperiencphrase3);

                    PdfPCell cellExperiencphrase2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase2.HorizontalAlignment = 1;
                    cellExperiencphrase2.Colspan = 2;
                    cellExperiencphrase2.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase2);

                    PdfPCell cellExperiencphrase1 = new PdfPCell(new Phrase(" Date:", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase1.HorizontalAlignment = 1;
                    cellExperiencphrase1.Colspan = 2;
                    cellExperiencphrase1.Border = 0;
                    cellExperiencphrase1.PaddingLeft = -110;
                    cellExperiencphrase1.PaddingBottom = -40;
                    tblinstructions.AddCell(cellExperiencphrase1);

                    // document.Add(tblinstructions);


                    #endregion


                    #region Employee Finger Prints


                    document.NewPage();

                    PdfPTable tblFingerprints = new PdfPTable(6);
                    tblFingerprints.TotalWidth = 500f;
                    tblFingerprints.LockedWidth = true;
                    float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                    tblFingerprints.SetWidths(widthfinger);

                    #endregion Employee Finger Prints

                    #endregion

                    #endregion

                    document.NewPage();
                    #region for Declaration
                    Fontsize = 10;
                    fontsyle = "calibri";
                    string imagepath3 = Server.MapPath("Images/ESIC-LOGO102.png");
                    string imagepath4 = Server.MapPath("assets/seal.jpg");
                    if (File.Exists(imagepath3))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath3);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }


                    #region Headings of the Pdf



                    table = new PdfPTable(6);
                    table.TotalWidth = 500f;
                    table.LockedWidth = true;
                    width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                    table.SetWidths(width);

                    PdfPCell celllogoHeadEmp = new PdfPCell(new Phrase("Employee: " + Empid + "    ESI Declaration", FontFactory.GetFont(fontsyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celllogoHeadEmp.HorizontalAlignment = 0;
                    celllogoHeadEmp.Colspan = 6;
                    celllogoHeadEmp.Border = 0;
                    celllogoHeadEmp.PaddingTop = -30f;
                    table.AddCell(celllogoHeadEmp);

                    cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 6;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celllogoHead.HorizontalAlignment = 2;
                    celllogoHead.Colspan = 3;
                    celllogoHead.Border = 0;
                    table.AddCell(celllogoHead);

                    cellHead = new PdfPCell(new Phrase("DECLARATION FORM", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 1;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.PaddingLeft = -250;
                    table.AddCell(cellHead);

                    cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead2.HorizontalAlignment = 1;
                    cellHead2.Colspan = 6;
                    cellHead2.Border = 0;
                    table.AddCell(cellHead2);

                    cellHead4 = new PdfPCell(new Phrase("To be filled in the employee after reading instructions overleaf. Two postcard size photographs are to be attached this form.This form is free of cost", FontFactory.GetFont(fontsyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    cellHead4.HorizontalAlignment = 0;
                    cellHead4.Colspan = 6;
                    cellHead4.Border = 0;
                    cellHead4.SetLeading(0f, 1.2f);
                    table.AddCell(cellHead4);
                    table.AddCell(cellspace);

                    PdfPCell cellHead5 = new PdfPCell(new Phrase("A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead5.HorizontalAlignment = 0;
                    cellHead5.Colspan = 6;
                    cellHead5.Border = 0;
                    table.AddCell(cellHead5);
                    table.AddCell(cellspace);

                    document.Add(table);

                    #endregion


                    #region Basic Information of the Employee

                    table2 = new PdfPTable(6);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    width1 = new float[] { 5f, 1.5f, 2f, 2f, 1.5f, 2f };
                    table2.SetWidths(width1);

                    PdfPCell cellInsuranceno2 = new PdfPCell(new Phrase("1  Insurance No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno2.HorizontalAlignment = 0;
                    cellInsuranceno2.Colspan = 0;
                    cellInsuranceno2.Border = 0;
                    cellInsuranceno2.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno2);

                    PdfPCell cellInsuranceno4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno4.HorizontalAlignment = 0;
                    cellInsuranceno4.Colspan = 0;
                    cellInsuranceno4.Border = 0;
                    cellInsuranceno4.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno4);

                    PdfPCell cellInsuranceno3 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno3.HorizontalAlignment = 0;
                    cellInsuranceno3.Colspan = 3;
                    cellInsuranceno3.Border = 0;
                    cellInsuranceno3.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno3);


                    PdfPCell cellspace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellspace4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace4.Colspan = 1;
                    cellspace4.Border = 0;
                    table2.AddCell(cellspace4);

                    PdfPCell cellname2 = new PdfPCell(new Phrase("2  Name", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname2.HorizontalAlignment = 0;
                    cellname2.Colspan = 0;
                    cellname2.Border = 0;
                    cellname2.PaddingTop = 5;
                    table2.AddCell(cellname2);

                    PdfPCell cellname4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname4.HorizontalAlignment = 0;
                    cellname4.Colspan = 0;
                    cellname4.Border = 0;
                    cellname4.PaddingTop = 5;
                    table2.AddCell(cellname4);

                    PdfPCell cellname3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellname3.HorizontalAlignment = 0;
                    cellname3.Colspan = 3;
                    cellname3.Border = 0;
                    cellname3.PaddingTop = 5;
                    table2.AddCell(cellname3);

                    table2.AddCell(cellspace4);

                    PdfPCell cellfather = new PdfPCell(new Phrase("3  Father / Husband's Name  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather.HorizontalAlignment = 0;
                    cellfather.Colspan = 0;
                    cellfather.Border = 0;
                    cellfather.PaddingTop = 5;
                    table2.AddCell(cellfather);


                    PdfPCell cellfather1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather1.HorizontalAlignment = 0;
                    cellfather1.Colspan = 0;
                    cellfather1.Border = 0;
                    cellfather1.PaddingTop = 5;
                    table2.AddCell(cellfather1);


                    PdfPCell cellfather3 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather3.HorizontalAlignment = 0;
                    cellfather3.Colspan = 3;
                    cellfather3.Border = 0;
                    cellfather3.PaddingTop = 5;
                    table2.AddCell(cellfather3);

                    table2.AddCell(cellspace4);

                    cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Sex ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth.HorizontalAlignment = 0;
                    cellDateofbirth.Colspan = 0;
                    cellDateofbirth.Border = 0;
                    cellDateofbirth.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth);

                    cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth2.HorizontalAlignment = 0;
                    cellDateofbirth2.Colspan = 0;
                    cellDateofbirth2.Border = 0;
                    cellDateofbirth2.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth2);

                    string value = "";
                    if (EmpDtofBirths.Length > 0)
                    {
                        value = EmpDtofBirths + " / " + Gender;

                    }
                    else
                    {
                        value = Gender;
                    }

                    cellDateofbirth1 = new PdfPCell(new Phrase(value, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth1.HorizontalAlignment = 0;
                    cellDateofbirth1.Colspan = 3;
                    cellDateofbirth1.Border = 0;
                    cellDateofbirth1.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth1);

                    table2.AddCell(cellspace4);

                    PdfPCell Maritalstatus = new PdfPCell(new Phrase("5  Marital status", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus.HorizontalAlignment = 0;
                    Maritalstatus.Colspan = 0;
                    Maritalstatus.Border = 0;
                    Maritalstatus.PaddingTop = 5;
                    table2.AddCell(Maritalstatus);

                    PdfPCell Maritalstatus2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus2.HorizontalAlignment = 0;
                    Maritalstatus2.Colspan = 0;
                    Maritalstatus2.Border = 0;
                    Maritalstatus2.PaddingTop = 5;
                    table2.AddCell(Maritalstatus2);


                    PdfPCell Maritalstatus1 = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus1.HorizontalAlignment = 0;
                    Maritalstatus1.Colspan = 3;
                    Maritalstatus1.Border = 0;
                    Maritalstatus1.PaddingTop = 5;
                    Maritalstatus1.PaddingRight = -10;
                    table2.AddCell(Maritalstatus1);

                    table2.AddCell(cellspace4);

                    document.Add(table2);

                    #region Employee Addresses



                    tbldata2 = new PdfPTable(3);
                    tbldata2.TotalWidth = 500f;
                    tbldata2.LockedWidth = true;
                    widthdata2 = new float[] { 5f, 1.5f, 5f };

                    data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    data2space.Colspan = 3;
                    data2space.Border = 0;
                    //tbldata2.AddCell(data2space);
                    //tbldata2.AddCell(data2space);
                    //tbldata2.AddCell(data2space);

                    cellPresentaddr = new PdfPCell(new Phrase("6  Permanent Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 0;
                    cellPresentaddr.Border = 0;
                    cellPresentaddr.PaddingTop = 5;
                    tbldata2.AddCell(cellPresentaddr);

                    PdfPCell cellPresentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddrcol.HorizontalAlignment = 0;
                    cellPresentaddrcol.Colspan = 0;
                    cellPresentaddrcol.Border = 0;
                    cellPresentaddrcol.PaddingTop = 5;
                    cellPresentaddrcol.PaddingLeft = 14;
                    tbldata2.AddCell(cellPresentaddrcol);




                    #region permanent address String array

                    string[] PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = " -" + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    string Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion

                    PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(EmpPermanentAddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddr1.HorizontalAlignment = 0;
                    cellPresentaddr1.Colspan = 0;
                    cellPresentaddr1.Border = 0;
                    cellPresentaddr1.PaddingTop = 5;
                    cellPresentaddr1.PaddingLeft = -98;
                    tbldata2.AddCell(cellPresentaddr1);


                    tbldata2.AddCell(data2space);



                    cellPerminentaddr = new PdfPCell(new Phrase("7  Current Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 0;
                    cellPerminentaddr.Border = 0;
                    cellPerminentaddr.PaddingTop = 5;
                    //cellPerminentaddr.PaddingLeft = -3;
                    tbldata2.AddCell(cellPerminentaddr);

                    PdfPCell cellPerminentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddrcol.HorizontalAlignment = 0;
                    cellPerminentaddrcol.Colspan = 0;
                    cellPerminentaddrcol.Border = 0;
                    cellPerminentaddrcol.PaddingTop = 5;
                    cellPerminentaddrcol.PaddingLeft = 14;
                    //cellPerminentaddr.PaddingLeft = -3;
                    tbldata2.AddCell(cellPerminentaddrcol);

                    #region Present address String array

                    string[] PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = " -" + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    string Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion

                    PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(EmpPresentAddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddr1.HorizontalAlignment = 0;
                    cellPerminentaddr1.Colspan = 0;
                    cellPerminentaddr1.Border = 0;
                    cellPerminentaddr1.PaddingTop = 5;
                    cellPerminentaddr1.PaddingLeft = -98;
                    tbldata2.AddCell(cellPerminentaddr1);

                    PdfPCell cellBranchOffice = new PdfPCell(new Phrase("8  Branch Office / ESI Dispensary", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOffice.HorizontalAlignment = 0;
                    cellBranchOffice.Colspan = 0;
                    cellBranchOffice.Border = 0;
                    cellBranchOffice.PaddingTop = 5;
                    tbldata2.AddCell(cellBranchOffice);

                    PdfPCell cellBranchOfficecol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOfficecol.HorizontalAlignment = 0;
                    cellBranchOfficecol.Colspan = 0;
                    cellBranchOfficecol.Border = 0;
                    cellBranchOfficecol.PaddingTop = 5;
                    cellBranchOfficecol.PaddingLeft = 14;
                    tbldata2.AddCell(cellBranchOfficecol);


                    PdfPCell cellB = new PdfPCell(new Phrase(EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellB.HorizontalAlignment = 0;
                    cellB.Colspan = 0;
                    cellB.Border = 0;
                    cellB.PaddingTop = 5;
                    cellB.PaddingLeft = -98;
                    tbldata2.AddCell(cellB);

                    tbldata2.AddCell(data2space);

                    document.Add(tbldata2);

                    #endregion

                    table3 = new PdfPTable(6);
                    table3.TotalWidth = 500f;
                    table3.LockedWidth = true;
                    width2 = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                    table3.SetWidths(width2);



                    cellphyst = new PdfPCell(new Phrase("B) EMPLOYER'S PARTICULARS   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellphyst.HorizontalAlignment = 0;
                    cellphyst.Colspan = 6;
                    cellphyst.Border = 0;
                    cellphyst.PaddingTop = 3;
                    cellphyst.PaddingLeft = -3;
                    table3.AddCell(cellphyst);




                    document.Add(table3);


                    data1 = new PdfPTable(3);
                    data1.TotalWidth = 500f;
                    data1.LockedWidth = true;
                    widthdate = new float[] { 5f, 1.5f, 5f };
                    data1.SetWidths(widthdate);



                    celldata15 = new PdfPCell(new Phrase("9  Employer's Code No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata15.HorizontalAlignment = 0;
                    celldata15.Colspan = 0;
                    celldata15.Border = 0;
                    celldata15.PaddingTop = 5;
                    data1.AddCell(celldata15);

                    celldatacol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldatacol.HorizontalAlignment = 0;
                    celldatacol.Colspan = 0;
                    celldatacol.Border = 0;
                    celldatacol.PaddingTop = 5;
                    celldatacol.PaddingLeft = -35;
                    data1.AddCell(celldatacol);


                    PdfPCell celldataid = new PdfPCell(new Phrase(EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldataid.HorizontalAlignment = 0;
                    celldataid.Colspan = 0;
                    celldataid.Border = 0;
                    celldataid.PaddingTop = 5;
                    celldataid.PaddingLeft = -45;
                    data1.AddCell(celldataid);


                    PdfPCell cellAppointment = new PdfPCell(new Phrase("10  Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment.HorizontalAlignment = 0;
                    cellAppointment.Colspan = 0;
                    cellAppointment.Border = 0;
                    cellAppointment.PaddingTop = 5;
                    cellAppointment.PaddingLeft = -3;
                    data1.AddCell(cellAppointment);

                    PdfPCell cellAppointment2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment2.HorizontalAlignment = 0;
                    cellAppointment2.Colspan = 0;
                    cellAppointment2.Border = 0;
                    cellAppointment2.PaddingTop = 5;
                    cellAppointment2.PaddingLeft = -35;
                    data1.AddCell(cellAppointment2);


                    PdfPCell cellAppointment1 = new PdfPCell(new Phrase(doj, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment1.HorizontalAlignment = 0;
                    cellAppointment1.Colspan = 0;
                    cellAppointment1.Border = 0;
                    cellAppointment1.PaddingTop = 5;
                    cellAppointment1.PaddingLeft = -45;
                    data1.AddCell(cellAppointment1);


                    PdfPCell cellNameadd = new PdfPCell(new Phrase("11  Name & Address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd.HorizontalAlignment = 0;
                    cellNameadd.Colspan = 0;
                    cellNameadd.Border = 0;
                    cellNameadd.PaddingTop = 5;
                    cellNameadd.PaddingLeft = -3;
                    data1.AddCell(cellNameadd);

                    PdfPCell cellNameadd2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd2.HorizontalAlignment = 0;
                    cellNameadd2.Colspan = 0;
                    cellNameadd2.Border = 0;
                    cellNameadd2.PaddingTop = 5;
                    cellNameadd2.PaddingLeft = -35;
                    data1.AddCell(cellNameadd2);


                    PdfPCell cellNameadd1 = new PdfPCell(new Phrase(CompanyName + "\n" + Address, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd1.HorizontalAlignment = 0;
                    cellNameadd1.Colspan = 0;
                    cellNameadd1.Border = 0;
                    cellNameadd1.PaddingTop = 5;
                    cellNameadd1.PaddingLeft = -45;
                    data1.AddCell(cellNameadd1);




                    document.Add(data1);



                    #endregion

                    data4 = new PdfPTable(2);
                    data4.TotalWidth = 500f;
                    data4.LockedWidth = true;
                    widthdate4 = new float[] { 2f, 1f };
                    data4.SetWidths(widthdate4);

                    cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempty.HorizontalAlignment = 0;
                    cellempty.Colspan = 2;
                    cellempty.Border = 0;
                    cellempty.PaddingTop = 5;


                    celldataref = new PdfPCell(new Phrase("12  In case of any previous employment please fill up the details as under", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldataref.HorizontalAlignment = 0;
                    celldataref.Colspan = 6;
                    celldataref.Border = 0;
                    celldataref.PaddingTop = 5;
                    celldataref.PaddingLeft = -3;
                    data4.AddCell(celldataref);

                    document.Add(data4);



                    #region Employee Reference Details



                    tblReferences = new PdfPTable(4);
                    tblReferences.TotalWidth = 500f;
                    tblReferences.LockedWidth = true;
                    widthRef = new float[] { 2f, 2f, 2f, 2f };
                    tblReferences.SetWidths(widthRef);

                    Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Refspace.Colspan = 4;
                    Refspace.Border = 0;




                    celldata26 = new PdfPCell(new Phrase("a) Previous ins No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata26.HorizontalAlignment = 0;
                    celldata26.Colspan = 4;
                    celldata26.Border = 0;
                    celldata26.PaddingTop = 5;
                    celldata26.PaddingLeft = 20;
                    tblReferences.AddCell(celldata26);

                    celldata28 = new PdfPCell(new Phrase("b) Empir's Code No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata28.HorizontalAlignment = 0;
                    celldata28.Colspan = 4;
                    celldata28.Border = 0;
                    celldata28.PaddingTop = 5;
                    celldata28.PaddingLeft = 20;
                    tblReferences.AddCell(celldata28);


                    PdfPCell cellnameemp = new PdfPCell(new Phrase("c) Name & address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellnameemp.HorizontalAlignment = 0;
                    cellnameemp.Colspan = 4;
                    cellnameemp.Border = 0;
                    cellnameemp.PaddingTop = 5;
                    cellnameemp.PaddingLeft = 20;
                    tblReferences.AddCell(cellnameemp);

                    tblReferences.AddCell(Refspace);

                    PdfPCell celldetaisnominee = new PdfPCell(new Phrase("C)Details of Nominees U/S 71 ESI Act 1948/Rule56(2) of ESI(Central) Rules, 1950 for payment of cash benefit in the event of death)", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    celldetaisnominee.HorizontalAlignment = 0;
                    celldetaisnominee.Colspan = 6;
                    celldetaisnominee.Border = 0;
                    celldetaisnominee.PaddingTop = 5;
                    celldetaisnominee.PaddingLeft = -3;
                    tblReferences.AddCell(celldetaisnominee);

                    PdfPCell cellnamedata = new PdfPCell(new Phrase("Name :  " + RNames, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellnamedata.HorizontalAlignment = 0;
                    cellnamedata.Colspan = 4;
                    cellnamedata.Border = 0;
                    cellnamedata.PaddingTop = 5;
                    cellnamedata.PaddingLeft = 20;
                    tblReferences.AddCell(cellnamedata);





                    string relationTypess = "";
                    if (relationTypess != "--Select--")
                    {
                        PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :  " + RTypes, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRelationship.HorizontalAlignment = 0;
                        cellRelationship.Colspan = 4;
                        cellRelationship.Border = 0;
                        cellRelationship.PaddingTop = 5;
                        cellRelationship.PaddingLeft = 20;
                        tblReferences.AddCell(cellRelationship);
                    }
                    else
                    {
                        PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRelationship.HorizontalAlignment = 0;
                        cellRelationship.Colspan = 4;
                        cellRelationship.Border = 0;
                        cellRelationship.PaddingTop = 5;
                        cellRelationship.PaddingLeft = 20;
                        tblReferences.AddCell(cellRelationship);
                    }

                    PdfPCell cellAddress = new PdfPCell(new Phrase("Address :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.Border = 0;
                    cellAddress.PaddingLeft = 20;
                    cellAddress.PaddingTop = 5;
                    tblReferences.AddCell(cellAddress);

                    tblReferences.AddCell(Refspace);


                    #endregion

                    document.Add(tblReferences);


                    PdfPTable tblReference = new PdfPTable(6);
                    tblReference.TotalWidth = 500f;
                    tblReference.LockedWidth = true;
                    widths1 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    tblReference.SetWidths(widths1);

                    PdfPCell Refcspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    Refcspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Refcspace.Colspan = 6;
                    Refcspace.Border = 0;
                    //tblReference.AddCell(Refcspace);



                    PdfPCell cellPARTICULARS = new PdfPCell(new Phrase("D) FAMILY PARTICULARS OF INSURED PERSON ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellPARTICULARS.HorizontalAlignment = 0;
                    cellPARTICULARS.Colspan = 6;
                    cellPARTICULARS.Border = 0;
                    cellPARTICULARS.PaddingLeft = 0;
                    cellPARTICULARS.PaddingTop = 5;
                    tblReference.AddCell(cellPARTICULARS);



                    PdfPCell cnamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cnamec.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnamec.BorderWidthLeft = 0;
                    cnamec.BorderWidthRight = 0;
                    cnamec.BorderWidthTop = 0.5f;
                    cnamec.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(cnamec);

                    PdfPCell caddressc = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    caddressc.HorizontalAlignment = 1;//0=Left, 1=Centre, 2=Right
                    caddressc.BorderWidthLeft = 0;
                    caddressc.BorderWidthRight = 0;
                    caddressc.BorderWidthTop = 0.5f;
                    caddressc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(caddressc);

                    PdfPCell crelationshipc = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    crelationshipc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    crelationshipc.BorderWidthLeft = 0;
                    crelationshipc.BorderWidthRight = 0;
                    crelationshipc.BorderWidthTop = 0.5f;
                    crelationshipc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(crelationshipc);

                    PdfPCell cdobc = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cdobc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cdobc.BorderWidthLeft = 0;
                    cdobc.BorderWidthRight = 0;
                    cdobc.BorderWidthTop = 0.8f;
                    cdobc.BorderWidthBottom = 0.6f;
                    tblReference.AddCell(cdobc);

                    PdfPCell camtc = new PdfPCell(new Phrase("Whether residing With", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    camtc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    camtc.BorderWidthLeft = 0;
                    camtc.BorderWidthRight = 0;
                    camtc.BorderWidthTop = 0.5f;
                    camtc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(camtc);

                    PdfPCell cminorc = new PdfPCell(new Phrase("if No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cminorc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cminorc.BorderWidthLeft = 0;
                    cminorc.BorderWidthRight = 0;
                    cminorc.BorderWidthTop = 0.5f;
                    cminorc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(cminorc);

                    int s = 1;
                    if (dtesi.Rows.Count > 0)
                    {
                        for (k = 0; k < dtesi.Rows.Count; k++)
                        {
                            string Relnames = dtesi.Rows[k]["Rname"].ToString();
                            string RPlace = dtesi.Rows[k]["RPlace"].ToString();
                            Relage = dtesi.Rows[k]["age"].ToString();
                            RelDOFBirth = dtesi.Rows[k]["DOfBirth"].ToString();
                            if (Relage == "0")
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    Relage = "";
                                }
                                else
                                {
                                    Relage = RelDOFBirth;
                                }
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtesi.Rows[k]["age"].ToString();
                            }
                            else
                            {
                                Relage = "";
                            }


                            cellsno = new PdfPCell(new Phrase((s).ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno.BorderWidthLeft = 0;
                            cellsno.BorderWidthRight = 0;
                            cellsno.BorderWidthTop = 0;
                            cellsno.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno);

                            PdfPCell cellsno4 = new PdfPCell(new Phrase(Relnames, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno4.BorderWidthLeft = 0;
                            cellsno4.BorderWidthRight = 0;
                            cellsno4.BorderWidthTop = 0;
                            cellsno4.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno4);



                            PdfPCell cellsno2 = new PdfPCell(new Phrase(Relage, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno2.BorderWidthLeft = 0;
                            cellsno2.BorderWidthRight = 0;
                            cellsno2.BorderWidthTop = 0;
                            cellsno2.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno2);

                            string relationTypes = "";
                            string RelrelationType = dtesi.Rows[k]["RType"].ToString();
                            if (relationTypes != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(RelrelationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRType.BorderWidthLeft = 0;
                                cellRType.BorderWidthRight = 0;
                                cellRType.BorderWidthTop = 0;
                                cellRType.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRType.BorderWidthLeft = 0;
                                cellRType.BorderWidthRight = 0;
                                cellRType.BorderWidthTop = 0;
                                cellRType.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRType);
                            }


                            string RResidences = "";
                            string RResidenced = dtesi.Rows[k]["RResidence"].ToString();
                            if (RResidences != "--Select--")
                            {
                                PdfPCell cellRResidences = new PdfPCell(new Phrase(RResidenced, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRResidences.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRResidences.BorderWidthLeft = 0;
                                cellRResidences.BorderWidthRight = 0;
                                cellRResidences.BorderWidthTop = 0;
                                cellRResidences.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRResidences);
                            }
                            else
                            {
                                PdfPCell cellRResidences1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRResidences1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRResidences1.BorderWidthLeft = 0;
                                cellRResidences1.BorderWidthRight = 0;
                                cellRResidences1.BorderWidthTop = 0;
                                cellRResidences1.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRResidences1);
                            }
                            if (RResidenced == "Yes")
                            {
                                //RPlace
                                cellplace = new PdfPCell(new Phrase(EmpPresentAddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellplace.BorderWidthLeft = 0;
                                cellplace.BorderWidthRight = 0;
                                cellplace.BorderWidthTop = 0;
                                cellplace.BorderWidthBottom = 0;
                                tblReference.AddCell(cellplace);
                            }
                            else if (RResidenced == "No")
                            {
                                //RPlace
                                cellplace = new PdfPCell(new Phrase(EmpPermanentAddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellplace.BorderWidthLeft = 0;
                                cellplace.BorderWidthRight = 0;
                                cellplace.BorderWidthTop = 0;
                                cellplace.BorderWidthBottom = 0;
                                tblReference.AddCell(cellplace);
                            }

                            s++;
                        }
                    }
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReferences.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);





                    PdfPCell cpt1c = new PdfPCell(new Phrase("ESI Corporation Temporary Identity Card", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt1c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt1c.Colspan = 6;
                    cpt1c.Border = 0;
                    tblReference.AddCell(cpt1c);

                    PdfPCell cpt2c = new PdfPCell(new Phrase("Name ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c.Colspan = 2;
                    cpt2c.Border = 0;
                    tblReference.AddCell(cpt2c);

                    PdfPCell cpt2c1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c1.Colspan = 0;
                    cpt2c1.Border = 0;
                    // tblReference.AddCell(cpt2c1);

                    PdfPCell cpt2c2 = new PdfPCell(new Phrase(": " + Name, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c2.Colspan = 4;
                    cpt2c2.Border = 0;
                    tblReference.AddCell(cpt2c2);


                    PdfPCell Ins = new PdfPCell(new Phrase("Ins No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins.Colspan = 2;
                    Ins.Border = 0;
                    tblReference.AddCell(Ins);

                    PdfPCell Ins1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins1.Colspan = 0;
                    Ins1.Border = 0;
                    //  tblReference.AddCell(Ins1);

                    PdfPCell Ins2 = new PdfPCell(new Phrase(": " + Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins2.Colspan = 4;
                    Ins2.Border = 0;
                    tblReference.AddCell(Ins2);

                    PdfPCell Appointment = new PdfPCell(new Phrase("Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment.Colspan = 2;
                    Appointment.Border = 0;
                    tblReference.AddCell(Appointment);


                    PdfPCell Appointment1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment1.Colspan = 0;
                    Appointment1.Border = 0;
                    //tblReference.AddCell(Appointment1);

                    PdfPCell Appointment2 = new PdfPCell(new Phrase(": " + doj, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment2.Colspan = 4;
                    Appointment2.Border = 0;
                    tblReference.AddCell(Appointment2);

                    PdfPCell Branch = new PdfPCell(new Phrase("Branch Office", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Branch.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Branch.Colspan = 2;
                    Branch.Border = 0;
                    tblReference.AddCell(Branch);

                    PdfPCell Branch1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Branch1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Branch1.Colspan = 4;
                    Branch1.Border = 0;
                    tblReference.AddCell(Branch1);

                    PdfPCell Dispensary = new PdfPCell(new Phrase("ESI Dispensary ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary.Colspan = 2;
                    Dispensary.Border = 0;
                    tblReference.AddCell(Dispensary);


                    PdfPCell Dispensary1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary1.Colspan = 0;
                    Dispensary1.Border = 0;
                    // tblReference.AddCell(Dispensary1);

                    PdfPCell Dispensary2 = new PdfPCell(new Phrase(": " + EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary2.Colspan = 4;
                    Dispensary2.Border = 0;
                    tblReference.AddCell(Dispensary2);

                    PdfPCell code = new PdfPCell(new Phrase("Employer's code No ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code.Colspan = 2;
                    code.Border = 0;
                    tblReference.AddCell(code);

                    PdfPCell code1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code1.Colspan = 0;
                    code1.Border = 0;
                    //tblReference.AddCell(code1);

                    PdfPCell code2 = new PdfPCell(new Phrase(": " + EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code2.Colspan = 4;
                    code2.Border = 0;
                    tblReference.AddCell(code2);



                    PdfPCell Validity = new PdfPCell(new Phrase("Validity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Validity.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Validity.Colspan = 2;
                    Validity.Border = 0;
                    tblReference.AddCell(Validity);


                    PdfPCell Validity1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Validity1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Validity1.Colspan = 4;
                    Validity1.Border = 0;
                    tblReference.AddCell(Validity1);

                    PdfPCell date1 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    date1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    date1.Colspan = 2;
                    date1.Border = 0;
                    tblReference.AddCell(date1);


                    PdfPCell date11 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    date11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    date11.Colspan = 4;
                    date11.Border = 0;
                    tblReference.AddCell(date11);

                    tblReference.AddCell(Refcspace);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 6;
                        sealImg.PaddingLeft = -370f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblReference.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cellsign = new PdfPCell(new Phrase("    Signature of T.I Of I.P   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellsign.HorizontalAlignment = 0;
                    cellsign.Colspan = 3;
                    cellsign.Border = 0;
                    cellsign.PaddingTop = 5;
                    cellsign.PaddingLeft = 50;
                    tblReference.AddCell(cellsign);


                    cellrecrutment = new PdfPCell(new Phrase("Signature of B.M. With Seal  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellrecrutment.HorizontalAlignment = 0;
                    cellrecrutment.Colspan = 3;
                    cellrecrutment.Border = 0;
                    cellrecrutment.PaddingTop = 5;
                    cellrecrutment.PaddingLeft = 50;
                    tblReference.AddCell(cellrecrutment);


                    document.Add(tblReference);

                    document.NewPage();


                    #region Employee Refer Details



                    PdfPTable tblRefer = new PdfPTable(2);
                    tblRefer.TotalWidth = 500f;
                    tblRefer.LockedWidth = true;
                    float[] widthRefer = new float[] { 5f, 5f };
                    tblRefer.SetWidths(widthRefer);

                    PdfPCell Referspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                    Referspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Referspace.Colspan = 4;
                    Referspace.Border = 0;

                    PdfPCell celldeclare = new PdfPCell(new Phrase("I declare that my dependent parents income from all sources is 1) Father's income Rs................... (2) Mother's income Rs.................... Total Rs................(Rupees.............................................) and he/she/they,is /are Wholly dependent on me and also resides with me. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldeclare.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    celldeclare.Colspan = 2;
                    celldeclare.Border = 0;
                    celldeclare.PaddingTop = 5;
                    celldeclare.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(celldeclare);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);


                    PdfPCell cellhereby = new PdfPCell(new Phrase("I hereby declare that the particulars given by me are correct to the best of knowledge and belief.I undertake to intimate the corporation any changes in the membership of my family within 15 days of such change.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellhereby.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellhereby.Colspan = 2;
                    cellhereby.Border = 0;
                    cellhereby.PaddingLeft = 0;
                    cellhereby.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellhereby);


                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);


                    //

                    PdfPCell cellSRFDETECTIVE = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontsyle, 12, Font.BOLD, BaseColor.BLACK)));
                    cellSRFDETECTIVE.HorizontalAlignment = 0;
                    cellSRFDETECTIVE.Colspan = 2;
                    cellSRFDETECTIVE.Border = 0;
                    cellSRFDETECTIVE.PaddingTop = 5;
                    cellSRFDETECTIVE.PaddingLeft = 0;
                    tblRefer.AddCell(cellSRFDETECTIVE);


                    tblRefer.AddCell(Referspace);


                    PdfPCell cellAuthorised = new PdfPCell(new Phrase("Authorised signatory  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthorised.HorizontalAlignment = 0;
                    cellAuthorised.Colspan = 2;
                    cellAuthorised.Border = 0;
                    cellAuthorised.PaddingTop = 5;
                    cellAuthorised.PaddingLeft = 0;
                    tblRefer.AddCell(cellAuthorised);



                    PdfPCell cellCounter = new PdfPCell(new Phrase("Counter signature by the employer  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellCounter.HorizontalAlignment = 0;
                    cellCounter.Colspan = 2;
                    cellCounter.Border = 0;
                    cellCounter.PaddingTop = 5;
                    cellCounter.PaddingLeft = 0;
                    tblRefer.AddCell(cellCounter);

                    //  tblRefer.AddCell(Referspace);

                    if (File.Exists(imagepath4))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath4);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 2;
                        sealImg.PaddingLeft = -400f;
                        sealImg.PaddingTop = 0;
                        tblRefer.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellCounter1 = new PdfPCell(new Phrase("Signature with seal ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellCounter1.HorizontalAlignment = 0;
                    cellCounter1.Colspan = 1;
                    cellCounter1.Border = 0;
                    cellCounter1.PaddingTop = 5;
                    cellCounter1.PaddingLeft = 0;
                    tblRefer.AddCell(cellCounter1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 1;
                        sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblRefer.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellseal = new PdfPCell(new Phrase("Dated:................... \n\n", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellseal.HorizontalAlignment = 0;
                    cellseal.Colspan = 0;
                    cellseal.Border = 0;
                    cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                    cellseal.BorderWidthBottom = 1.5f;
                    cellseal.PaddingBottom = 5;
                    tblRefer.AddCell(cellseal);





                    PdfPCell cellSignature = new PdfPCell(new Phrase("Signature / T.I & IP", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellSignature.Colspan = 0;
                    cellSignature.Border = 0;
                    cellSignature.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                    cellSignature.BorderWidthBottom = 1.5f;
                    cellSignature.PaddingBottom = 5;
                    cellSignature.PaddingLeft = 10;
                    tblRefer.AddCell(cellSignature);





                    tblRefer.AddCell(Referspace);

                    PdfPCell cellINSTRUCTIONS = new PdfPCell(new Phrase("INSTRUCTIONS  ", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellINSTRUCTIONS.HorizontalAlignment = 0;
                    cellINSTRUCTIONS.Colspan = 2;
                    cellINSTRUCTIONS.Border = 0;
                    cellINSTRUCTIONS.PaddingTop = 5;
                    cellINSTRUCTIONS.PaddingLeft = 0;
                    tblRefer.AddCell(cellINSTRUCTIONS);


                    PdfPCell cellSubmission = new PdfPCell(new Phrase(" 1. Submission of Form -1,is governed by regulations 11 & 12 of ESI (General) Regulations, 1950  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSubmission.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellSubmission.Colspan = 2;
                    cellSubmission.Border = 0;
                    cellSubmission.PaddingTop = 5;
                    cellSubmission.PaddingLeft = 0;
                    cellSubmission.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellSubmission);



                    PdfPCell cellFamily = new PdfPCell(new Phrase(" 2. Family means all or any of the following relatives of an insured person namely:-(i) a spouse (ii) a minor legitimate or adopted child dependant upon the I.P.(iii) a child who is wholly dependent on the earnings of the I.P.and who is(a) receiving education, till he or she attains the age 21 yrs(b) an unmarried daughter ;(iv) a child who is infirm by reason of any physical or mental abononormally pr imjury and is wholly dependent on the earnings of the I.P.so lo9ng as the infirmity continues;(v) dependent parents(please seen section 2 clause 11 of the 7 ESI Act 1948 for details)   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellFamily.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellFamily.Colspan = 2;
                    cellFamily.Border = 0;
                    cellFamily.PaddingTop = 5;
                    cellFamily.PaddingLeft = 0;
                    cellFamily.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellFamily);




                    PdfPCell cellcards = new PdfPCell(new Phrase(" 3. Identity cards is Non-transferable.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellcards.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellcards.Colspan = 2;
                    cellcards.Border = 0;
                    cellcards.PaddingTop = 5;
                    cellcards.PaddingLeft = 0;
                    cellcards.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellcards);




                    PdfPCell cellidentity = new PdfPCell(new Phrase(" 4. Loss of identity card be reported to employer /Branch manger immediately   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellidentity.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellidentity.Colspan = 2;
                    cellidentity.Border = 0;
                    cellidentity.PaddingTop = 5;
                    cellidentity.PaddingLeft = 0;
                    cellidentity.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellidentity);



                    PdfPCell cellsubmission1 = new PdfPCell(new Phrase(" 5. Submission of faise informationsattracts penal action under section 84 of ESI .Act,1948   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellsubmission1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellsubmission1.Colspan = 2;
                    cellsubmission1.Border = 0;
                    cellsubmission1.PaddingTop = 5;
                    cellsubmission1.PaddingLeft = 0;
                    cellsubmission1.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellsubmission1);





                    PdfPCell cellduly = new PdfPCell(new Phrase(" 6. This form duly filled in must reach. the concerned Branch office within 10 days of appointment of an Employee .Dealy attracts penal action under section 85 of the ACT,against employer.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellduly.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellduly.Colspan = 2;
                    cellduly.Border = 0;
                    cellduly.PaddingTop = 5;
                    cellduly.PaddingLeft = 0;
                    cellduly.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellduly);




                    PdfPCell cellperson = new PdfPCell(new Phrase(" 7. As an insured person you and your dependent family members are entitled to full medical care.the other benetifits in cash  include (1) sickness benfit(2) temporary disablement benfit (3)permanent disablement benfit (4) dependents benefit and (5) maternity benfit(in case of women employees)subject to fulfilment of contribution conditions.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellperson.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellperson.Colspan = 2;
                    cellperson.Border = 0;
                    cellperson.PaddingTop = 5;
                    cellperson.PaddingLeft = 0;
                    cellperson.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellperson);



                    PdfPCell cellmore = new PdfPCell(new Phrase(" 8. For more details please visit website of ESIC at www.esic.org.in or contact regional office or branch office.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellmore.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmore.Colspan = 2;
                    cellmore.Border = 0;
                    cellmore.PaddingTop = 5;
                    cellmore.PaddingLeft = 0;
                    cellmore.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellmore);


                    tblRefer.AddCell(Referspace);




                    PdfPCell cellBRACH = new PdfPCell(new Phrase(" FOR BRANCH OFFICE USE ONLY   ", FontFactory.GetFont(fontsyle, 13, Font.BOLD, BaseColor.BLACK)));
                    cellBRACH.HorizontalAlignment = 1;
                    cellBRACH.Colspan = 2;
                    cellBRACH.Border = 0;
                    cellBRACH.PaddingTop = 5;
                    tblRefer.AddCell(cellBRACH);

                    tblRefer.AddCell(Referspace);

                    PdfPCell cellDateOfAllotment = new PdfPCell(new Phrase(" 1. Date Of Allotment Of Ins No:   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateOfAllotment.HorizontalAlignment = 0;
                    cellDateOfAllotment.Colspan = 2;
                    cellDateOfAllotment.Border = 0;
                    cellDateOfAllotment.PaddingTop = 5;
                    cellDateOfAllotment.PaddingLeft = 0;
                    tblRefer.AddCell(cellDateOfAllotment);


                    PdfPCell cellIssue = new PdfPCell(new Phrase(" 2. Date Of Issue Of TIC:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellIssue.HorizontalAlignment = 0;
                    cellIssue.Colspan = 2;
                    cellIssue.Border = 0;
                    cellIssue.PaddingTop = 5;
                    cellIssue.PaddingLeft = 0;
                    tblRefer.AddCell(cellIssue);


                    PdfPCell cellDisp = new PdfPCell(new Phrase(" 3. Name / No. Of Disp:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellDisp.HorizontalAlignment = 0;
                    cellDisp.Colspan = 2;
                    cellDisp.Border = 0;
                    cellDisp.PaddingTop = 5;
                    cellDisp.PaddingLeft = 0;
                    tblRefer.AddCell(cellDisp);

                    PdfPCell cellMedical = new PdfPCell(new Phrase(" 4. Whether reciprocal Medical arrangement involved ? If yes, please indicate:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellMedical.HorizontalAlignment = 0;
                    cellMedical.Colspan = 2;
                    cellMedical.Border = 0;
                    cellMedical.PaddingTop = 5;
                    cellMedical.PaddingLeft = 0;
                    tblRefer.AddCell(cellMedical);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);

                    PdfPCell cellBranch = new PdfPCell(new Phrase(" Signature of Branch Manger   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranch.HorizontalAlignment = 0;
                    cellBranch.Colspan = 2;
                    cellBranch.Border = 0;
                    cellBranch.PaddingTop = 5;
                    cellBranch.PaddingLeft = 300;
                    tblRefer.AddCell(cellBranch);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);
                    document.Add(tblRefer);

                    #endregion Employee Refer Details

                    PdfPTable tblReferen = new PdfPTable(6);
                    tblReferen.TotalWidth = 500f;
                    tblReferen.LockedWidth = true;
                    float[] widths3 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    tblReferen.SetWidths(widths3);

                    PdfPCell Referencspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    Referencspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Referencspace.Colspan = 6;
                    Referencspace.Border = 0;
                    tblReferen.AddCell(Referencspace);




                    PdfPCell canamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    canamec.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    canamec.BorderWidthLeft = 0;
                    canamec.BorderWidthRight = 0;
                    canamec.BorderWidthTop = 0;
                    canamec.BorderWidthBottom = 0;
                    tblReferen.AddCell(canamec);

                    PdfPCell caddressca = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    caddressca.HorizontalAlignment = 0;//0=Left, 1=Centre, 2=Right
                    caddressca.BorderWidthLeft = 0;
                    caddressca.BorderWidthRight = 0;
                    caddressca.BorderWidthTop = 0;
                    caddressca.BorderWidthBottom = 0;
                    tblReferen.AddCell(caddressca);

                    PdfPCell crelationshipca = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    crelationshipca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    crelationshipca.BorderWidthLeft = 0;
                    crelationshipca.BorderWidthRight = 0;
                    crelationshipca.BorderWidthTop = 0;
                    crelationshipca.BorderWidthBottom = 0;
                    tblReferen.AddCell(crelationshipca);

                    PdfPCell cdobca = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cdobca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdobca.BorderWidthLeft = 0;
                    cdobca.BorderWidthRight = 0;
                    cdobca.BorderWidthTop = 0;
                    cdobca.BorderWidthBottom = 0;

                    tblReferen.AddCell(cdobca);

                    PdfPCell camtca = new PdfPCell(new Phrase("Whether residing With him/her", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    camtca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camtca.BorderWidthLeft = 0;
                    camtca.BorderWidthRight = 0;
                    camtca.BorderWidthTop = 0;
                    camtca.BorderWidthBottom = 0;
                    tblReferen.AddCell(camtca);

                    PdfPCell cminorca = new PdfPCell(new Phrase("If No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cminorca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminorca.BorderWidthLeft = 0;
                    cminorca.BorderWidthRight = 0;
                    cminorca.BorderWidthTop = 0;
                    cminorca.BorderWidthBottom = 0f;
                    tblReferen.AddCell(cminorca);



                    // document.Add(tblReferen);

                    #endregion

                    document.NewPage();
                    #region for PFForm

                    Fontsize = 9;


                    table = new PdfPTable(3);
                    table.TotalWidth = 550f;
                    table.LockedWidth = true;
                    width = new float[] { 3f, 0.3f, 3f };
                    table.SetWidths(width);

                    #region for image
                    if (File.Exists(imagepathPFLogo))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathPFLogo);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50f);
                        gif2.SetAbsolutePosition(60f, 885f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion

                    PdfPCell cellstart = new PdfPCell(new Phrase("Employee : " + Idno + "   PF Declaration", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellstart.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellstart.Colspan = 3;
                    cellstart.Border = 0;
                    cellstart.PaddingTop = -30f;
                    table.AddCell(cellstart);

                    cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 3;
                    cellspace.Border = 0;
                    //cellspace.PaddingTop = -5;
                    table.AddCell(cellspace);

                    cellheading = new PdfPCell(new Phrase("EMPLOYEES' PROVIDENT FUND ORGANISATION", headfont));
                    cellheading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading.Colspan = 3;
                    cellheading.Border = 0;
                    table.AddCell(cellheading);


                    PdfPCell cellheading1 = new PdfPCell(new Phrase("NOMINATION AND DECLARATION FORM ", Subheadfont));
                    cellheading1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading1.Colspan = 3;
                    cellheading1.PaddingLeft = -30f;
                    cellheading1.Border = 0;
                    table.AddCell(cellheading1);

                    PdfPCell cellheadingg1 = new PdfPCell(new Phrase("FOR UNEXEMPTED / EXEMPTED ESTABLISHMENTS", Subheadfont));
                    cellheadingg1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheadingg1.Colspan = 3;
                    cellheadingg1.Border = 0;
                    table.AddCell(cellheadingg1);

                    table.AddCell(cellspace);


                    PdfPCell cellheading2 = new PdfPCell(new Phrase("Declaration and Nomination form under the Employees' Provident Funds and Employee's Pension Scheme", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cellheading2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading2.Colspan = 3;
                    cellheading2.Border = 0;
                    table.AddCell(cellheading2);

                    PdfPCell cellheading3 = new PdfPCell(new Phrase("(Paragraph 33 & 61 of the Employees' Provident Fund Schema, 1952 and Paragraph 18 of the Employees' Pension Scheme, 1995 )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cellheading3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading3.Colspan = 3;
                    cellheading3.Border = 0;

                    table.AddCell(cellheading3);

                    table.AddCell(cellspace);


                    PdfPCell cellnamehead = new PdfPCell(new Phrase("1. Name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellnamehead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellnamehead.Colspan = 0;
                    cellnamehead.Border = 0;
                    table.AddCell(cellnamehead);

                    PdfPCell cellnamecol = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellnamecol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellnamecol.Colspan = 0;
                    cellnamecol.Border = 0;
                    table.AddCell(cellnamecol);

                    //PdfPCell cellname = new PdfPCell();
                    //var cellaaffsc = new Phrase();
                    //cellaaffsc.Add(new Chunk(name + "                              Employee No ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    //cellaaffsc.Add(new Chunk(Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));

                    PdfPCell cellname = new PdfPCell(new Phrase(name + "  Employee No : " + Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    //cellname.AddElement(cellaaffsc);
                    cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellname.Colspan = 0;
                    cellname.Border = 0;
                    //cellname.PaddingLeft = -150f;
                    table.AddCell(cellname);


                    table.AddCell(cellspace);


                    PdfPCell cellFathershead = new PdfPCell(new Phrase("2. Father's/Husband's Name\n    (In case of married woman)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellFathershead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFathershead.Colspan = 0;
                    cellFathershead.Border = 0;
                    table.AddCell(cellFathershead);

                    PdfPCell cellFatherscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellFatherscol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFatherscol.Colspan = 0;
                    cellFatherscol.Border = 0;
                    table.AddCell(cellFatherscol);

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }

                    PdfPCell cellFathername = new PdfPCell(new Phrase(FatherSpouseName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellFathername.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFathername.Colspan = 0;
                    cellFathername.Border = 0;
                    table.AddCell(cellFathername);

                    table.AddCell(cellspace);


                    PdfPCell cellDOBhead = new PdfPCell(new Phrase("3. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOBhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOBhead.Colspan = 0;
                    cellDOBhead.Border = 0;
                    table.AddCell(cellDOBhead);

                    PdfPCell cellDOBcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOBcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOBcol.Colspan = 0;
                    cellDOBcol.Border = 0;
                    table.AddCell(cellDOBcol);

                    PdfPCell cellDOB = new PdfPCell(new Phrase(EmpDtofBirths.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellDOB.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOB.Colspan = 0;
                    cellDOB.Border = 0;
                    table.AddCell(cellDOB);

                    table.AddCell(cellspace);

                    PdfPCell cellSexhead = new PdfPCell(new Phrase("4. Gender", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellSexhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSexhead.Colspan = 0;
                    cellSexhead.Border = 0;
                    table.AddCell(cellSexhead);

                    PdfPCell cellSexcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellSexcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSexcol.Colspan = 0;
                    cellSexcol.Border = 0;
                    table.AddCell(cellSexcol);

                    PdfPCell cellSex = new PdfPCell(new Phrase(Gender.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellSex.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSex.Colspan = 0;
                    cellSex.Border = 0;
                    table.AddCell(cellSex);

                    table.AddCell(cellspace);

                    PdfPCell cellMSHead = new PdfPCell(new Phrase("5. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellMSHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMSHead.Colspan = 0;
                    cellMSHead.Border = 0;
                    table.AddCell(cellMSHead);

                    PdfPCell cellMScol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellMScol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMScol.Colspan = 0;
                    cellMScol.Border = 0;
                    table.AddCell(cellMScol);

                    PdfPCell cellMS = new PdfPCell(new Phrase(maritalstatus.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellMS.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMS.Colspan = 0;
                    cellMS.Border = 0;
                    table.AddCell(cellMS);

                    table.AddCell(cellspace);

                    PdfPCell cellANHead = new PdfPCell(new Phrase("6. Account No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellANHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellANHead.Colspan = 0;
                    cellANHead.Border = 0;
                    table.AddCell(cellANHead);

                    PdfPCell cellANcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellANcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellANcol.Colspan = 0;
                    cellANcol.Border = 0;
                    table.AddCell(cellANcol);

                    PdfPCell cellAN = new PdfPCell(new Phrase(cmpnyinfo + "" + PFNO, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellAN.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellAN.Colspan = 0;
                    cellAN.Border = 0;
                    table.AddCell(cellAN);

                    table.AddCell(cellspace);



                    cellPerminentaddr = new PdfPCell(new Phrase("7. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 0;
                    cellPerminentaddr.Border = 0;
                    table.AddCell(cellPerminentaddr);

                    PdfPCell cellPerminentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPerminentaddr2.HorizontalAlignment = 0;
                    cellPerminentaddr2.Colspan = 0;
                    cellPerminentaddr2.Border = 0;

                    table.AddCell(cellPerminentaddr2);

                    #region Permanent address String array

                    PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = "Landmark :  " + pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = "Vill : " + peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = "Taluka : " + peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = "City : " + pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = "State : " + peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = ", Pincode : " + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion


                    cellPerminentaddr1 = new PdfPCell(new Phrase(EmpPermanentAddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellPerminentaddr1.HorizontalAlignment = 0;
                    cellPerminentaddr1.Colspan = 0;
                    cellPerminentaddr1.Border = 0;
                    //cellPerminentaddr1.PaddingLeft = -140;
                    table.AddCell(cellPerminentaddr1);
                    table.AddCell(cellspace);

                    cellPresentaddr = new PdfPCell(new Phrase("8. Current Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 0;
                    cellPresentaddr.Border = 0;
                    table.AddCell(cellPresentaddr);

                    PdfPCell cellPresentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPresentaddr2.HorizontalAlignment = 0;
                    cellPresentaddr2.Colspan = 0;
                    cellPresentaddr2.Border = 0;
                    table.AddCell(cellPresentaddr2);

                    #region Present address String array

                    PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = "Landmark :  " + prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = "Vill :  " + prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = "Taluka : " + prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = "City : " + prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = "State : " + prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = ", Pincode : " + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion

                    cellPresentaddr1 = new PdfPCell(new Phrase(EmpPresentAddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellPresentaddr1.HorizontalAlignment = 0;
                    cellPresentaddr1.Colspan = 0;
                    cellPresentaddr1.Border = 0;
                    //cellPresentaddr1.PaddingLeft = -140;i
                    table.AddCell(cellPresentaddr1);
                    table.AddCell(cellspace);

                    table.AddCell(cellspace);


                    PdfPCell cellDOJHead = new PdfPCell(new Phrase("9. Date of Joining", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDOJHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJHead.Colspan = 0;
                    cellDOJHead.Border = 0;
                    //table.AddCell(cellDOJHead);

                    PdfPCell cellDOJcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOJcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJcol.Colspan = 0;
                    cellDOJcol.Border = 0;
                    //table.AddCell(cellDOJcol);

                    PdfPCell cellDOJ = new PdfPCell(new Phrase(date.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellDOJ.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJ.Colspan = 0;
                    cellDOJ.Border = 0;
                    //table.AddCell(cellDOJ);

                    table.AddCell(cellspace);
                    table.AddCell(cellspace);
                    table.AddCell(cellspace);

                    PdfPCell cellPartA = new PdfPCell(new Phrase("PART - A (EPF) Para 18", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPartA.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellPartA.Colspan = 3;
                    cellPartA.Border = 0;
                    table.AddCell(cellPartA);

                    PdfPCell cellPartAdesc = new PdfPCell(new Phrase("I hereby nominate the person(s)/cancel the nomination made by me previously and nominate the person(s), mentioned below to receive the amount standing to my credit in the Employee's Provident Fund in the event of my death.", Subheadfont));
                    cellPartAdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellPartAdesc.Colspan = 3;
                    cellPartAdesc.Border = 0;
                    cellPartAdesc.PaddingTop = 20;
                    table.AddCell(cellPartAdesc);

                    document.Add(table);

                    table2 = new PdfPTable(6);
                    table2.TotalWidth = 550f;
                    table2.LockedWidth = true;
                    float[] widths = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    table2.SetWidths(widths);

                    PdfPCell cspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cspace.Colspan = 6;
                    cspace.Border = 0;
                    table2.AddCell(cspace);

                    PdfPCell cname = new PdfPCell(new Phrase("Name & Address Nominee/Nominees  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cname.Colspan = 2;
                    table2.AddCell(cname);

                    PdfPCell caddress = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    caddress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    caddress.Colspan = 0;
                    //table2.AddCell(caddress);

                    PdfPCell crelationship = new PdfPCell(new Phrase("Nominee's relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    crelationship.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    crelationship.Colspan = 2;
                    table2.AddCell(crelationship);

                    PdfPCell cdob = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cdob.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdob.Colspan = 2;
                    table2.AddCell(cdob);






                    if (dtpf.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtpf.Rows.Count; i++)
                        {
                            Fname = dtpf.Rows[i]["RName"].ToString();
                            PdfPCell cnamedesc = new PdfPCell(new Phrase(Fname, bodyfontnormal));
                            cnamedesc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cnamedesc.Colspan = 2;
                            cnamedesc.MinimumHeight = 30;
                            table2.AddCell(cnamedesc);

                            place = dtpf.Rows[i]["RPlace"].ToString();
                            PdfPCell caddressdesc = new PdfPCell(new Phrase(place, bodyfontnormal));
                            caddressdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            caddressdesc.Colspan = 0;
                            // table2.AddCell(caddressdesc);

                            relationType = dtpf.Rows[i]["RType"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell crelationshipdesc = new PdfPCell(new Phrase(relationType, bodyfontnormal));
                                crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                crelationshipdesc.Colspan = 2;
                                table2.AddCell(crelationshipdesc);
                            }
                            else
                            {

                                PdfPCell crelationshipdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                                crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                crelationshipdesc.Colspan = 2;
                                table2.AddCell(crelationshipdesc);
                            }

                            Relage = dtpf.Rows[i]["age"].ToString();
                            RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();
                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtpf.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + "\nAge : " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }



                            PdfPCell cdobnodesc = new PdfPCell(new Phrase(RelDOFBirth, bodyfontnormal));
                            cdobnodesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cdobnodesc.Colspan = 2;
                            table2.AddCell(cdobnodesc);

                            PdfPCell camtdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                            camtdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            camtdesc.Colspan = 0;
                            //table2.AddCell(camtdesc);

                            PdfPCell cminordesc = new PdfPCell(new Phrase("", bodyfontnormal));
                            cminordesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cminordesc.Colspan = 0;
                            //table2.AddCell(cminordesc);




                        }


                    }

                    PdfPCell camt = new PdfPCell(new Phrase("Total amount of share of accumulation in Provident Fund to be paid to each nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    camt.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camt.Colspan = 3;
                    camt.Border = 0;
                    table2.AddCell(camt);

                    PdfPCell camt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    camt11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camt11.Colspan = 3;
                    camt11.Border = 0;
                    table2.AddCell(camt11);

                    PdfPCell cminor = new PdfPCell(new Phrase("If the nominee is a minor, name & relationship & address of the guardian who may receive the amount during the minority of nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cminor.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminor.Colspan = 3;
                    cminor.Border = 0;
                    table2.AddCell(cminor);

                    PdfPCell cminor1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cminor1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminor1.Colspan = 3;
                    cminor1.Border = 0;
                    table2.AddCell(cminor1);

                    table2.AddCell(cspace);
                    table2.AddCell(cspace);

                    PdfPCell cpt1 = new PdfPCell(new Phrase("1.  *Certified that I have no family as defined in para 2(g) of the Employees' Provident Fund Scheme,1952 and should I acquire a family hereafter the above nomination should be deemed as cancelled.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpt1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt1.Colspan = 6;
                    cpt1.Border = 0;
                    table2.AddCell(cpt1);

                    PdfPCell cpt2 = new PdfPCell(new Phrase("2.  *Certified that my father/mother is/are dependant upon me.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpt2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2.Colspan = 6;
                    cpt2.Border = 0;
                    table2.AddCell(cpt2);

                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);

                    PdfPCell cpt3 = new PdfPCell(new Phrase("I hereby furnish below particulars of the members of my family who would be eligible to receive Widow / Widower / Children Pension in the event of my death :-", Subheadfont));
                    cpt3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt3.Colspan = 6;
                    cpt3.Border = 0;
                    table2.AddCell(cpt3);

                    PdfPCell csign = new PdfPCell(new Phrase("Signature or thumb impression of the Subscriber", Subheadfont));
                    csign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csign.Colspan = 3;
                    csign.Border = 0;
                    //table2.AddCell(csign);
                    document.Add(table2);

                    table2.AddCell(cellspace);

                    document.NewPage();






                    table3 = new PdfPTable(6);
                    table3.TotalWidth = 550f;
                    table3.LockedWidth = true;
                    width2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };
                    table3.SetWidths(width2);

                    PdfPCell cpartBemp = new PdfPCell(new Phrase("", headfont));
                    cpartBemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cpartBemp.Colspan = 6;
                    cpartBemp.Border = 0;
                    table3.AddCell(cpartBemp);

                    PdfPCell cpartB = new PdfPCell(new Phrase("PART B (EPS) (Para 18)", headfont));
                    cpartB.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cpartB.Colspan = 6;
                    cpartB.Border = 0;
                    cpartB.PaddingTop = 5;
                    table3.AddCell(cpartB);

                    //table3.AddCell(cellspace);

                    PdfPCell cpartBdesc = new PdfPCell(new Phrase("I hereby furnish below particular of the members of my family who would be eligible to receive widow/ children pension in the event of my death", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpartBdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpartBdesc.Colspan = 6;
                    cpartBdesc.Border = 0;
                    cpartBdesc.PaddingTop = 5;
                    //table3.AddCell(cpartBdesc);

                    table3.AddCell(cspace);

                    PdfPCell csno = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    csno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csno.Colspan = 1;
                    // table3.AddCell(csno);

                    PdfPCell cnameaddress = new PdfPCell(new Phrase("Name of the family member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnameaddress.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnameaddress.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 1;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 1;
                    table3.AddCell(cnameaddress);

                    PdfPCell cndob = new PdfPCell(new Phrase("Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cndob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cndob.Colspan = 3;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(cndob);

                    PdfPCell cnrelationship = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnrelationship.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnrelationship.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(cnrelationship);

                    PdfPCell csnonoemp = new PdfPCell(new Phrase("Relation with member", bodyfont));
                    csnonoemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csnonoemp.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(csnonoemp);


                    PdfPCell csnonoemp123 = new PdfPCell(new Phrase("", bodyfont));
                    csnonoemp123.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csnonoemp123.Colspan = 1;
                    csnonoemp123.PaddingTop = 15f;
                    csnonoemp123.Border = 0;
                    // table3.AddCell(csnonoemp123);


                    if (dtEmpdetails.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtEmpdetails.Rows.Count; i++)
                        {



                            Fname = dtEmpdetails.Rows[i]["RName"].ToString();
                            PdfPCell cellRName = new PdfPCell(new Phrase(Fname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellRName.HorizontalAlignment = 0;
                            cellRName.Colspan = 1;
                            //cellRName.Border = 0;
                            cellRName.MinimumHeight = 30;
                            table3.AddCell(cellRName);

                            place = dtEmpdetails.Rows[i]["RPlace"].ToString();
                            if (place.Length > 0)
                            {
                                RelationPlace = place;
                            }
                            else if (RRes.Length > 0)
                            {
                                RelationPlace = RRes;
                            }
                            else
                            {

                                RelationPlace = "";
                            }

                            PdfPCell cellres1 = new PdfPCell(new Phrase(RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellres1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellres1.Colspan = 3;
                            //cellres1.Border = 0;
                            cellres1.MinimumHeight = 20;
                            table3.AddCell(cellres1);



                            if (RelDOFBirth.Length > 0)
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    RelDOFBirth = "";
                                }
                                else
                                {
                                    RelDOFBirth = dtEmpdetails.Rows[i]["DOfBirth"].ToString();

                                }
                            }


                            relationAge = dtEmpdetails.Rows[i]["age"].ToString();

                            if (relationAge.Length > 0 && relationAge != "0")
                            {
                                relationAge = "\nAge: " + dtEmpdetails.Rows[i]["age"].ToString();
                            }
                            else
                            {

                                relationAge = "";
                            }







                            PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellreldob1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellreldob1.Colspan = 1;
                            //cellreldob1.Border = 0;
                            cellreldob1.MinimumHeight = 20;
                            table3.AddCell(cellreldob1);



                            relationType = dtEmpdetails.Rows[i]["rtype"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 0;
                                //cellRType.Border = 0;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 0;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);


                            }



                        }


                    }

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);

                    PdfPCell cpnt1 = new PdfPCell(new Phrase("** Certified that I have no family as defined in para 2(vii) of Employees' Pension Scheme 1995 and should I acquire a family hereafter I shall furnish particulars thereon in the above form.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt1.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    cpnt1.Colspan = 6;
                    cpnt1.Border = 0;
                    cpnt1.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -100f;
                        sealImg.PaddingRight = -130f;
                        sealImg.PaddingTop = 0;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cpnt121 = new PdfPCell(new Phrase("Signature of thumb impression of the subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt121.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cpnt121.Colspan = 6;
                    cpnt121.PaddingTop = 10f;
                    cpnt121.Border = 0;
                    cpnt121.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt121);



                    PdfPCell cpnt2 = new PdfPCell(new Phrase("I hereby nominate the following person for receiving the monthly Pension (admissible under para 16(2)(g)(i) and (ii) in the event of my death without leaving any eligible family member for receiving pension.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt2.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    cpnt2.Colspan = 6;
                    cpnt2.Border = 0;
                    cpnt2.PaddingTop = 5;
                    cpnt2.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt2);


                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);


                    PdfPCell cnameaddressp3 = new PdfPCell(new Phrase("Name and Address of the Nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnameaddressp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnameaddressp3.Colspan = 3;
                    cnameaddressp3.MinimumHeight = 30;
                    table3.AddCell(cnameaddressp3);

                    PdfPCell cndobp3 = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cndobp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cndobp3.Colspan = 2;
                    table3.AddCell(cndobp3);

                    PdfPCell cnrelationshipp3 = new PdfPCell(new Phrase("Relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnrelationshipp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnrelationshipp3.Colspan = 1;
                    table3.AddCell(cnrelationshipp3);


                    if (dtpf.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtpf.Rows.Count; i++)
                        {

                            place = dtpf.Rows[i]["RPlace"].ToString();
                            if (place.Length > 0)
                            {
                                RelationPlace = place;
                            }
                            else if (RRes.Length > 0)
                            {
                                RelationPlace = RRes;
                            }
                            else
                            {

                                RelationPlace = "";
                            }

                            Fname = dtpf.Rows[i]["RName"].ToString();
                            PdfPCell cellRName = new PdfPCell(new Phrase(Fname + "\n" + RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellRName.HorizontalAlignment = 1;
                            cellRName.Colspan = 3;
                            cellRName.MinimumHeight = 30;
                            table3.AddCell(cellRName);






                            if (RelDOFBirth.Length > 0)
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    RelDOFBirth = "";
                                }
                                else
                                {
                                    RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();

                                }
                            }


                            relationAge = dtpf.Rows[i]["age"].ToString();

                            if (relationAge.Length > 0 && relationAge != "0")
                            {
                                relationAge = "\nAge: " + dtpf.Rows[i]["age"].ToString();
                            }
                            else
                            {

                                relationAge = "";
                            }







                            PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellreldob1.Colspan = 2;
                            cellreldob1.MinimumHeight = 20;
                            table3.AddCell(cellreldob1);



                            relationType = dtpf.Rows[i]["rtype"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);


                            }



                        }


                    }




                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -30f;
                        sealImg.PaddingRight = -80f;
                        sealImg.PaddingTop = 30;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cdate = new PdfPCell(new Phrase("Date : ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cdate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdate.Colspan = 3;
                    cdate.PaddingTop = 5;
                    cdate.Border = 0;
                    table3.AddCell(cdate);

                    PdfPCell cnsign = new PdfPCell(new Phrase("Signature of thumb impression of the Subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnsign.Colspan = 3;
                    cnsign.Border = 0;
                    cnsign.PaddingTop = 30;
                    table3.AddCell(cnsign);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);



                    PdfPCell ForUse = new PdfPCell(new Phrase("FOR OFFICE USE ONLY", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    ForUse.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    ForUse.Colspan = 6;
                    ForUse.Border = 0;
                    table3.AddCell(ForUse);

                    PdfPCell DojPf = new PdfPCell(new Phrase("Dt. of Joining E.P.F         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojPf.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojPf.Colspan = 3;
                    DojPf.BorderWidthTop = 1;
                    DojPf.BorderWidthLeft = 1;
                    DojPf.BorderWidthRight = 1;
                    DojPf.BorderWidthBottom = 0;
                    table3.AddCell(DojPf);

                    PdfPCell DojPf1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojPf1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojPf1.Colspan = 1;
                    DojPf1.BorderWidthTop = 1;
                    DojPf1.BorderWidthLeft = 0;
                    DojPf1.BorderWidthRight = 1;
                    DojPf1.BorderWidthBottom = 0;
                    table3.AddCell(DojPf1);

                    PdfPCell Entries = new PdfPCell(new Phrase("ENTRIES VERIFIED", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    Entries.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Entries.Colspan = 2;
                    Entries.BorderWidthTop = 1;
                    Entries.BorderWidthLeft = 0;
                    Entries.BorderWidthRight = 1;
                    Entries.BorderWidthBottom = 0;
                    table3.AddCell(Entries);

                    PdfPCell PastService = new PdfPCell(new Phrase("Past Service         ..............Year", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    PastService.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService.Colspan = 3;
                    PastService.BorderWidthTop = 0;
                    PastService.BorderWidthLeft = 1;
                    PastService.BorderWidthRight = 1;
                    PastService.BorderWidthBottom = 0;
                    table3.AddCell(PastService);

                    PdfPCell PastService1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    PastService1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService1.Colspan = 1;
                    PastService1.BorderWidthTop = 0;
                    PastService1.BorderWidthLeft = 0;
                    PastService1.BorderWidthRight = 1;
                    PastService1.BorderWidthBottom = 0;
                    table3.AddCell(PastService1);

                    PdfPCell PastService2 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    PastService2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService2.Colspan = 2;
                    PastService2.BorderWidthTop = 0;
                    PastService2.BorderWidthLeft = 0;
                    PastService2.BorderWidthRight = 1;
                    PastService2.BorderWidthBottom = 0;
                    table3.AddCell(PastService2);

                    PdfPCell DojEps = new PdfPCell(new Phrase("Date of Joining EPS         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojEps.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps.Colspan = 3;
                    DojEps.BorderWidthTop = 0;
                    DojEps.BorderWidthLeft = 1;
                    DojEps.BorderWidthRight = 1;
                    DojEps.BorderWidthBottom = 1;
                    table3.AddCell(DojEps);

                    PdfPCell DojEps1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    DojEps1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps1.Colspan = 1;
                    DojEps1.BorderWidthTop = 0;
                    DojEps1.BorderWidthLeft = 0;
                    DojEps1.BorderWidthRight = 1;
                    DojEps1.BorderWidthBottom = 1;
                    table3.AddCell(DojEps1);

                    PdfPCell DojEps2 = new PdfPCell(new Phrase("DA            SS            A.A.O.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojEps2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps2.Colspan = 2;
                    DojEps2.BorderWidthTop = 0;
                    DojEps2.BorderWidthLeft = 0;
                    DojEps2.BorderWidthRight = 1;
                    DojEps2.BorderWidthBottom = 1;
                    table3.AddCell(DojEps2);




                    PdfPCell cstrike = new PdfPCell(new Phrase("** Strike out whichever is not applicable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cstrike.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cstrike.Colspan = 6;
                    cstrike.Border = 0;
                    // table3.AddCell(cstrike);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);




                    PdfPCell ccert = new PdfPCell(new Phrase("CERTIFICATE BY EMPLOYER", headfont));
                    ccert.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    ccert.Colspan = 6;
                    ccert.Border = 0;
                    table3.AddCell(ccert);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);


                    PdfPCell ccertdesc = new PdfPCell(new Phrase("Certified that the above declaration and nomination has been signed/thumb impressed before me by Shri/Smt./Kum. " + name + " employed in my establishment after he/she has read the entries/ entries been read over to him/her by me and got confirmed by him/her", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    ccertdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    ccertdesc.Colspan = 6;
                    ccertdesc.Border = 0;
                    ccertdesc.SetLeading(0f, 1.2f);
                    table3.AddCell(ccertdesc);

                    table3.AddCell(cpartBemp);

                    PdfPCell cnplace = new PdfPCell(new Phrase("For " + CompanyName, Subheadfont));
                    cnplace.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnplace.Colspan = 6;
                    cnplace.PaddingTop = 30;
                    cnplace.Border = 0;
                    cnplace.PaddingBottom = 30;
                    table3.AddCell(cnplace);


                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -400f;
                        sealImg.PaddingRight = -400f;
                        sealImg.PaddingBottom = -20f;
                        sealImg.PaddingTop = 0;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }



                    PdfPCell cnemp = new PdfPCell(new Phrase("Authorized Signatory", Subheadfont));
                    cnemp.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnemp.Colspan = 6;
                    cnemp.Border = 0;
                    cnemp.PaddingTop = 30;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp);
                    table3.AddCell(cpartBemp);

                    PdfPCell cnemp11 = new PdfPCell(new Phrase("Designation : ", Subheadfont));
                    cnemp11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnemp11.Colspan = 6;
                    cnemp11.Border = 0;
                    cnemp11.PaddingTop = 25;
                    cnemp11.PaddingLeft = 270;
                    table3.AddCell(cnemp11);
                    table3.AddCell(cpartBemp);

                    PdfPCell cnemp11w2 = new PdfPCell(new Phrase("Date :", Subheadfont));
                    cnemp11w2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cnemp11w2.Colspan = 2;
                    cnemp11w2.Border = 0;
                    //cnemp11w2.PaddingTop = 25;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp11w2);

                    PdfPCell cnemp11w = new PdfPCell(new Phrase(CompanyName, Subheadfont));
                    cnemp11w.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnemp11w.Colspan = 4;
                    cnemp11w.Border = 0;
                    cnemp11w.PaddingTop = 10;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp11w);
                    //table3.AddCell(cpartBemp);



                    PdfPCell cnempaddrw = new PdfPCell(new Phrase(companyaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                    cnempaddrw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnempaddrw.Colspan = 6;
                    cnempaddrw.Border = 0;
                    cnempaddrw.PaddingTop = 10;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnempaddrw);
                    // table3.AddCell(cpartBemp);





                    PdfPCell cnbxsign = new PdfPCell(new Phrase(" ", bodyfont));
                    cnbxsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnbxsign.Colspan = 2;
                    cnbxsign.MinimumHeight = 100;
                    //table3.AddCell(cnbxsign);

                    PdfPCell cnsgn = new PdfPCell(new Phrase("  Signature of the employer or other Authorized Officers of the\n  Establishment \n\n\n  Destination __________________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cnsgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cnsgn.Colspan = 4;
                    cnsgn.Border = 0;
                    //cnsgn.PaddingTop = 30;
                    table3.AddCell(cnsgn);

                    document.Add(table3);

                    #endregion for PFForm

                    document.NewPage();
                    #region for Appointment Form

                    Fontsize = 10;
                    fontsize1 = 8;
                    fontsize2 = 6;
                    Fontsize3 = 11;

                    PdfPTable table1 = new PdfPTable(2);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    float[] width11 = new float[] { 0.4f, 6f };
                    table1.SetWidths(width11);
                    PdfPCell cell;

                    cell = new PdfPCell(new Phrase("Employee: " + Idno + "  Appointment Form", FontStyle5));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    cell.PaddingTop = -30f;
                    table1.AddCell(cell);

                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50);
                        gif2.SetAbsolutePosition(16f, 895f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    cell = new PdfPCell(new Phrase(CompanyName, FontStyleHeading));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(CompanyAddress, FontStyle3));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Date :" + ((DateTime.Now).ToString("dd/MM/yyy")), FontStyle1));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 2;
                    cell.PaddingTop = 30;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    var phrase1 = new Phrase();
                    phrase1.Add(new Chunk("Mr. / Mrs. ", FontStyle1));
                    phrase1.Add(new Chunk(name, FontStyle4));
                    PdfPCell cell131 = new PdfPCell();
                    cell131.AddElement(phrase1);
                    cell131.HorizontalAlignment = 0;
                    cell131.Colspan = 2;
                    cell131.Border = 0;
                    table1.AddCell(cell131);

                    cell = new PdfPCell(new Phrase(EmpPermanentAddress, FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Dear Sir / Madam :", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 10f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Sub : APPOINTMENT", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 15f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    var phrase = new Phrase();
                    phrase.Add(new Chunk("With Reference to your application for employment and the subsequent interviews/s you had with us, we are pleased to offer you an appointment as ", FontStyle4));
                    phrase.Add(new Chunk(designation, FontStyle1));
                    phrase.Add(new Chunk(" w.e.f ", FontStyle4));
                    phrase.Add(new Chunk(doj, FontStyle1));
                    phrase.Add(new Chunk(" in our organization on the following terms and conditions :-", FontStyle4));
                    PdfPCell cell13 = new PdfPCell();
                    cell13.AddElement(phrase);
                    cell13.HorizontalAlignment = 0;
                    cell13.Colspan = 2;
                    cell13.Border = 0;
                    table1.AddCell(cell13);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("1. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will be on probation for a period of six months from the date you report to duty.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    //cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Your probationary period may be extended for a further period of six months at the sole discretion of the Management, and the same will be communicated to you in writing. On satisfactory completion of your probationary period and / or any extended period thereafter, you may be confirmed in writing by the Management.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("2. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will be paid a gross salary of Rs ................................ only (Rupees as per statutory post and grade) per month.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("3. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("At the end of the period of probation and / or any extended period thereafter, if no written confirmation is received by you, you will be deemed to have been confirmed.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("4. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("During the period of probation, your services will be liable to be terminated without any Notice or without assigning any reason or compensation.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("5. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will also be eligible for PF, ESI Gratuity, Leave and other benefits as per rules and as applicable to all other employees in your cadre.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("6. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("During the period of your employment, you shall agree to work in shifts. You shall accept to work at any security post within the same factory or to any other clients of the Company and the rules and regulations applicable to the new place of posting shall be applicable to you.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("7. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will also be required to carry out jobs and responsibilities entrusted to you by your superiors irrespective of your nature of work to which you have been appointed.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("8. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("During the period of service with the Company, you shall not carry on any business of your own either part time or otherwise.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    document.Add(table1);

                    document.NewPage();

                    PdfPTable table11 = new PdfPTable(2);
                    table11.TotalWidth = 500f;
                    table11.LockedWidth = true;
                    float[] width13 = new float[] { 0.4f, 6f };
                    table11.SetWidths(width13);
                    PdfPCell cell1;



                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    cell1.PaddingTop = 50f;
                    //cell.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("9. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("You shall not, at any time, disclose to anyone any information, know-how knowledge, secret methods, plans, etc., of the Company.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("10. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.3f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("You will be responsible for the work, machinery, tools and other items/materials entrusted to you from time to time.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.3f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("11. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("This offer of appointment is purely based on the information furnished by you, and should there be any material information not being disclosed or if found at a later stage that the information furnished by you is false, you will be subject to strict disciplinary action including  termination of employment  without any notice or compensation.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("12. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("In addition to the above conditions, you will be governed by the Certified Standing Orders of the company applicable to workers and to such other rules and regulations that may be framed from time to time.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("13. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("You shall retire from the services of the Company on attaining the age of 58 years.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Please sign the duplicate of this letter in token of your acceptance of the same.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 30;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("For " + CompanyName, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 2;
                        sealImg.PaddingLeft = -400f;
                        // sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        table11.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Authorized Signatory", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("The above terms and conditions of employment has been read over and explained to me in Kannada / ..................... and I voluntarily and willingly accept all the above terms & conditions.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Place : " + area, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 2;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -10f;
                        sealImg.PaddingRight = -260f;
                        sealImg.PaddingTop = 0;
                        table11.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Signature of Employee", FontStyle4));
                    cell1.HorizontalAlignment = 2;
                    cell1.Colspan = 2;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Date : " + doj, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    document.Add(table11);

                    #endregion for Appointment Form

                    document.NewPage();
                    #region for Movement

                    Font FontStylee4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.NORMAL, BaseColor.BLACK);
                    Font FontStylee3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
                    Font FontStylee2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 13, Font.BOLD, BaseColor.BLACK);
                    Font FontStylee1 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
                    Font FontStylee5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 9, Font.BOLD, BaseColor.BLACK);
                    Font FontStyle6 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.ITALIC, BaseColor.BLACK);

                    Fontsize = 10;

                    table1 = new PdfPTable(3);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    width = new float[] { 2f, 2f, 2f };
                    table1.SetWidths(width);


                    cell = new PdfPCell(new Phrase("Employee: " + Idno + "   Movement Order", FontStylee5));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = 10f;
                    table1.AddCell(cell);

                    #region for image
                    //imagepath2 = Server.MapPath("Images/");
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(14.5f);
                        gif2.SetAbsolutePosition(250f, 900f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion

                    cell = new PdfPCell(new Phrase(CompanyName, FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = 60f;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;

                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Place: ", FontStylee1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("MOVEMENT ORDER", FontStylee1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Date: " + ((DateTime.Now).ToString("dd/MM/yyyy")), FontStylee1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;

                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Service No., Name & Rank", FontStylee3));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Empid + "             " + name + "            " + postappliedfor, FontStylee3));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;

                    table1.AddCell(cell);

                    document.Add(table1);

                    table2 = new PdfPTable(4);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    width2 = new float[] { 2f, 4f, 2f, 4f };
                    table2.SetWidths(width2);
                    // PdfPCell cell1;

                    cell1 = new PdfPCell(new Phrase("E.S.I No", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(Esino, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("P.F.No", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(PFno, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Date of Posting", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);



                    cell1 = new PdfPCell(new Phrase(Dateofjoining, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Area", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(area, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Reporting to", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(ReportingManager, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Zone", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(division, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Height  " + height + "                                                        Weight " + weight + "                                     Chest " + chest, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Identification Mark  " + EmpIdMark1, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 4;
                        sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -40f;
                        //sealImg.PaddingRight = -260f;
                        sealImg.PaddingTop = 40f;
                        table2.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Sig. of Individual", FontStyle6));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingTop = 0;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sig. of Authorised Officer", FontStyle6));
                    cell1.HorizontalAlignment = 2;
                    cell1.Colspan = 2;
                    cell1.PaddingTop = 0;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    document.Add(table2);

                    #endregion

                    #region for IDCard

                    #region for range ID Card Display


                    PdfPTable MainIDCarddetails = new PdfPTable(18);
                    MainIDCarddetails.TotalWidth = 800f;
                    MainIDCarddetails.LockedWidth = true;
                    MainIDCarddetails.DefaultCell.HorizontalAlignment = Element.ALIGN_LEFT;
                    MainIDCarddetails.DefaultCell.VerticalAlignment = Element.ALIGN_TOP;
                    float[] width4 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    MainIDCarddetails.SetWidths(width4);



                    PdfPCell emptycellgap = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    emptycellgap.HorizontalAlignment = 1;
                    emptycellgap.Border = 0;
                    emptycellgap.Colspan = 18;
                    emptycellgap.MinimumHeight = 100;
                    MainIDCarddetails.AddCell(emptycellgap);


                    PdfPTable IDCarddetails = new PdfPTable(10);
                    IDCarddetails.TotalWidth = 370f;
                    IDCarddetails.LockedWidth = true;
                    width = new float[] { 5f, 2f, 2f, 2f, 0.2f, 5f, 2f, 2f, 2f, 2.4f };
                    IDCarddetails.SetWidths(width);

                    PdfPTable IDCardTemptable1 = new PdfPTable(4);
                    IDCardTemptable1.TotalWidth = 185f;
                    // IDCardTemptable1.HorizontalAlignment = 0;
                    IDCardTemptable1.LockedWidth = true;
                    width1 = new float[] { 2.4f, 2.4f, 2.4f, 2.4f };
                    IDCardTemptable1.SetWidths(width1);
                    if (File.Exists(imagepath2))
                    {

                        iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath2);
                        srflogo.ScaleAbsolute(50f, 45f);
                        PdfPCell companylogo = new PdfPCell();
                        Paragraph cmplogo = new Paragraph();
                        cmplogo.Add(new Chunk(srflogo, 80f, 10f));
                        companylogo.AddElement(cmplogo);
                        companylogo.HorizontalAlignment = 0;
                        companylogo.Colspan = 4;
                        companylogo.PaddingLeft = -13;
                        companylogo.Border = 0;
                        IDCardTemptable1.AddCell(companylogo);
                    }
                    PdfPCell cellSymbol = new PdfPCell(new Phrase("''A Symbol of Quality Services''", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    cellSymbol.HorizontalAlignment = 1;
                    cellSymbol.Border = 0;
                    cellSymbol.Colspan = 4;
                    cellSymbol.PaddingTop = -10f;
                    IDCardTemptable1.AddCell(cellSymbol);

                    BaseColor color1 = new BaseColor(255, 0, 0);
                    PdfPCell cellCertification = new PdfPCell(new Phrase("ISO 9001:2008", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, color1)));
                    cellCertification.HorizontalAlignment = 1;
                    cellCertification.Border = 0;
                    cellCertification.Colspan = 4;
                    cellCertification.PaddingTop = -1;
                    cellCertification.PaddingLeft = 10;
                    IDCardTemptable1.AddCell(cellCertification);

                    if (Image.Length > 0)
                    {
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + Image);
                        //Empphoto.ScalePercent(25f);
                        Empphoto.ScaleAbsolute(80f, 80f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 70f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 1;
                        EmpImage.PaddingLeft = -15f;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);
                    }
                    else
                    {
                        PdfPCell EmpImage = new PdfPCell();
                        EmpImage.HorizontalAlignment = 2;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);

                    }

                    PdfPCell cellName = new PdfPCell(new Phrase(Name, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellName.HorizontalAlignment = 1;
                    cellName.Border = 0;
                    cellName.Colspan = 4;
                    IDCardTemptable1.AddCell(cellName);

                    PdfPCell cellIDNo = new PdfPCell(new Phrase("P.No : " + Empid, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellIDNo.HorizontalAlignment = 1;
                    cellIDNo.Border = 0;
                    cellIDNo.Colspan = 4;
                    IDCardTemptable1.AddCell(cellIDNo);

                    PdfPCell cellRank = new PdfPCell(new Phrase("Rank : " + Designation, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellRank.HorizontalAlignment = 1;
                    cellRank.Border = 0;
                    cellRank.Colspan = 4;
                    IDCardTemptable1.AddCell(cellRank);

                    PdfPCell cellDtIssued = new PdfPCell(new Phrase("Date of Issue : " + IDcardIssued, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);



                    PdfPCell cellDtValid = new PdfPCell(new Phrase("Valid Upto : " + IDcardvalid, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtValid.HorizontalAlignment = 1;
                    cellDtValid.Border = 0;
                    cellDtValid.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtValid);

                    cellDtIssued = new PdfPCell(new Phrase("ESI No : " + Esino, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);

                    if (EmpSign.Length > 0)
                    {
                        iTextSharp.text.Image Sign = iTextSharp.text.Image.GetInstance(imagepath3 + EmpSign);
                        //Sign.ScalePercent(10f);
                        Sign.ScaleAbsolute(50f, 8f);
                        PdfPCell Signature = new PdfPCell();
                        Paragraph signlogo = new Paragraph();
                        signlogo.Add(new Chunk(Sign, 25f, 0));
                        Signature.AddElement(signlogo);
                        Signature.HorizontalAlignment = 1;
                        Signature.PaddingLeft = 5f;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        IDCardTemptable1.AddCell(Signature);
                    }
                    else
                    {

                        PdfPCell Signature = new PdfPCell();
                        Signature.HorizontalAlignment = 1;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        Signature.FixedHeight = 15;
                        IDCardTemptable1.AddCell(Signature);

                    }
                    if (File.Exists(imagepath6))
                    {
                        iTextSharp.text.Image IssuingAuth = iTextSharp.text.Image.GetInstance(imagepath6 + "Authority.png");
                        //IssuingAuth.ScalePercent(10f);
                        IssuingAuth.ScaleAbsolute(60f, 8f);
                        PdfPCell Authority = new PdfPCell();
                        Paragraph Authoritylogo = new Paragraph();
                        Authoritylogo.Add(new Chunk(IssuingAuth, 10f, 0));
                        Authority.AddElement(Authoritylogo);
                        Authority.HorizontalAlignment = 0;
                        Authority.Colspan = 2;
                        Authority.PaddingTop = -2f;
                        Authority.Border = 0;
                        IDCardTemptable1.AddCell(Authority);
                    }
                    PdfPCell cellEmpSign = new PdfPCell(new Phrase("Signature of \nCard Holder", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellEmpSign.HorizontalAlignment = 1;
                    cellEmpSign.Border = 0;
                    cellEmpSign.Colspan = 2;
                    cellEmpSign.PaddingLeft = 20f;
                    IDCardTemptable1.AddCell(cellEmpSign);

                    PdfPCell cellAuthority = new PdfPCell(new Phrase("Issuing Authority", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthority.HorizontalAlignment = 1;
                    cellAuthority.Border = 0;
                    cellAuthority.Colspan = 2;
                    cellAuthority.PaddingTop = 5;
                    IDCardTemptable1.AddCell(cellAuthority);

                    childTable1 = new PdfPCell(IDCardTemptable1);
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 4;
                    IDCarddetails.AddCell(childTable1);

                    PdfPTable IDCardTemptable41 = new PdfPTable(1);
                    IDCardTemptable41.TotalWidth = 6f;
                    IDCardTemptable41.LockedWidth = true;
                    float[] width41 = new float[] { 0.8f };
                    IDCardTemptable41.SetWidths(width41);

                    PdfPCell cellempcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell1.Border = 0;
                    cellempcell1.Colspan = 1;
                    IDCardTemptable41.AddCell(cellempcell1);


                    PdfPCell childTable4 = new PdfPCell(IDCardTemptable41);
                    childTable4.HorizontalAlignment = 0;
                    childTable4.Colspan = 1;
                    childTable4.Border = 0;

                    IDCarddetails.AddCell(childTable4);


                    PdfPTable IDCardTemptable2 = new PdfPTable(4);
                    IDCardTemptable2.TotalWidth = 180f;
                    IDCardTemptable2.LockedWidth = true;
                    width2 = new float[] { 2.3f, 2.3f, 2.3f, 2.3f };
                    IDCardTemptable2.SetWidths(width2);


                    PdfPCell cellInstructions = new PdfPCell(new Phrase("Instructions :", FontFactory.GetFont(fontstyle, fontsize1 + 1, Font.BOLD, BaseColor.BLACK)));
                    cellInstructions.HorizontalAlignment = 0;
                    cellInstructions.Border = 0;
                    cellInstructions.Colspan = 4;
                    //cellInstructions.PaddingTop = -20f;
                    IDCardTemptable2.AddCell(cellInstructions);

                    PdfPCell cellInstructions1 = new PdfPCell(new Phrase("1) ID Card to be worn by employee \n    at all times while on duty.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions1.HorizontalAlignment = 0;
                    cellInstructions1.Border = 0;
                    cellInstructions1.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions1);

                    PdfPCell cellInstructions2 = new PdfPCell(new Phrase("2) Loss or Recovery of the Card shall be \n    reported to HR / Admin Dept.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions2.HorizontalAlignment = 0;
                    cellInstructions2.Border = 0;
                    cellInstructions2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions2);

                    PdfPCell cellInstructions3 = new PdfPCell(new Phrase("3) The Finder May Please return to:", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions3.HorizontalAlignment = 0;
                    cellInstructions3.Border = 0;
                    cellInstructions3.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions3);


                    PdfPCell cellInstructions4 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions4.HorizontalAlignment = 0;
                    cellInstructions4.Border = 0;
                    cellInstructions4.Colspan = 4;
                    cellInstructions4.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellInstructions4);

                    PdfPCell cellComp = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, fontsize1 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellComp.HorizontalAlignment = 0;
                    cellComp.Border = 0;
                    cellComp.Colspan = 4;
                    //cellComp.PaddingTop = 20;
                    IDCardTemptable2.AddCell(cellComp);

                    cellAddress = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize2 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Border = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.SetLeading(0f, 1.2f);
                    cellAddress.VerticalAlignment = 13;
                    IDCardTemptable2.AddCell(cellAddress);

                    PdfPCell cellmobile = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile.Border = 0;
                    cellmobile.Colspan = 4;
                    IDCardTemptable2.AddCell(cellmobile);

                    PdfPCell cellmobile1 = new PdfPCell(new Phrase("Fax : " + Faxno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile1.Border = 0;
                    cellmobile1.Colspan = 4;
                    cellmobile1.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellmobile1);

                    PdfPCell cellEmergency = new PdfPCell(new Phrase("Mail ID : " + Emailid, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                    cellEmergency.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellEmergency.Border = 0;
                    cellEmergency.Colspan = 4;
                    //cellEmergency.PaddingTop = 5;
                    IDCardTemptable2.AddCell(cellEmergency);

                    PdfPCell cellpolice = new PdfPCell(new Phrase("Emergency Contacts", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpolice.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpolice.Border = 0;
                    cellpolice.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpolice);

                    PdfPCell cellpol = new PdfPCell(new Phrase("Police : 100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpol.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpol.Border = 0;
                    cellpol.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpol);

                    PdfPCell cellfire = new PdfPCell(new Phrase("Fire : 101", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellfire.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellfire.Border = 0;
                    cellfire.Colspan = 4;
                    IDCardTemptable2.AddCell(cellfire);

                    PdfPCell celltraffic = new PdfPCell(new Phrase("Traffic : 103", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    celltraffic.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    celltraffic.Border = 0;
                    celltraffic.Colspan = 4;
                    IDCardTemptable2.AddCell(celltraffic);

                    PdfPCell cellamb = new PdfPCell(new Phrase("Ambulance : 102/108", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellamb.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellamb.Border = 0;
                    cellamb.Colspan = 4;
                    IDCardTemptable2.AddCell(cellamb);

                    PdfPCell cellteror = new PdfPCell(new Phrase("Anti Terrorist Squad : 10193", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellteror.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellteror.Border = 0;
                    cellteror.Colspan = 4;
                    IDCardTemptable2.AddCell(cellteror);

                    PdfPCell cellhelpl = new PdfPCell(new Phrase("Uniq Helpline : 9591990099", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellhelpl.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellhelpl.BorderWidthTop = 0;
                    cellhelpl.BorderWidthRight = 0;
                    cellhelpl.BorderWidthLeft = 0;
                    cellhelpl.BorderWidthBottom = 0;
                    cellhelpl.Colspan = 4;
                    IDCardTemptable2.AddCell(cellhelpl);

                    PdfPCell cellteror2 = new PdfPCell(new Phrase("Control Room : 9591990100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellteror2.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellteror2.Border = 0;
                    cellteror2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellteror2);



                    childTable2 = new PdfPCell(IDCardTemptable2);
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 4;
                    childTable2.PaddingLeft = 20;
                    IDCarddetails.AddCell(childTable2);



                    PdfPTable IDCardTemptable31 = new PdfPTable(1);
                    IDCardTemptable31.TotalWidth = 2f;
                    IDCardTemptable31.LockedWidth = true;
                    float[] width31 = new float[] { 1f };
                    IDCardTemptable31.SetWidths(width31);

                    PdfPCell cellempcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize2, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell.Border = 0;
                    cellempcell.Colspan = 1;
                    IDCardTemptable31.AddCell(cellempcell);

                    PdfPCell childTable3 = new PdfPCell(IDCardTemptable31);
                    childTable3.HorizontalAlignment = 0;
                    childTable3.Colspan = 1;
                    childTable3.Border = 0;
                    IDCarddetails.AddCell(childTable3);


                    ///

                    PdfPCell childTable6 = new PdfPCell(IDCarddetails);
                    childTable6.HorizontalAlignment = 0;
                    childTable6.Colspan = 18;
                    childTable6.Border = 0;
                    childTable6.PaddingLeft = -180;
                    childTable6.PaddingBottom = 10;
                    MainIDCarddetails.AddCell(childTable6);

                    #endregion for range ID Card Display

                    PdfPCell empcellnew = new PdfPCell();
                    empcellnew.HorizontalAlignment = 0;
                    empcellnew.Colspan = 9;
                    empcellnew.Border = 0;
                    MainIDCarddetails.AddCell(empcellnew);

                    document.Add(MainIDCarddetails);

                    #endregion
                    document.NewPage();
                    #region for police form
                    PdfPTable tablen1 = new PdfPTable(4);
                    tablen1.TotalWidth = 500f;
                    tablen1.LockedWidth = true;
                    float[] widthn1 = new float[] { 1f, 5f, 3f, 2f };
                    tablen1.SetWidths(widthn1);
                    //PdfPCell cell1;

                    #region for image
                    string imagepath9 = Server.MapPath("Images/TSLogo.png");
                    if (File.Exists(imagepath9))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath9);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(10.5f);
                        gif2.SetAbsolutePosition(270f, 945f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion


                    cell1 = new PdfPCell(new Phrase("Employee: " + Idno, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingTop = -25f;
                    tablen1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Telangana State Police", FontStyle4));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingTop = 8;
                    tablen1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("APPLICATION FOR POLICE VERIFICATION / CLEARANCE CERTIFICATE\n(For Indian Only)", FontStyle4));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingBottom = 5;
                    tablen1.AddCell(cell1);


                    temptable1 = new PdfPTable(3);
                    temptable1.TotalWidth = 410f;
                    temptable1.LockedWidth = true;
                    tempwidth1 = new float[] { 1f, 5f, 3f };
                    temptable1.SetWidths(tempwidth1);

                    cell1 = new PdfPCell(new Phrase("To", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    cell1.PaddingTop = 10;
                    temptable1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("The Commissioner of Police", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    cell1.PaddingTop = 10;
                    temptable1.AddCell(cell1);


                    cell1 = new PdfPCell(new Phrase("________________________City", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    temptable1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sir,", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.PaddingTop = 10;
                    cell1.Border = 0;
                    temptable1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sub: - Application to issue Police Verification / Clearance Certificate\nfor the Purpose of...............................................................", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    cell1.PaddingTop = 10;
                    cell1.PaddingLeft = 50;
                    cell1.PaddingBottom = 40;
                    cell1.SetLeading(0f, 1.3f);
                    temptable1.AddCell(cell1);

                    childTable1 = new PdfPCell(temptable1);
                    childTable1.Border = 0;
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 3;
                    tablen1.AddCell(childTable1);


                    temptable2 = new PdfPTable(1);
                    temptable2.TotalWidth = 90f;
                    temptable2.LockedWidth = true;
                    tempwidth2 = new float[] { 2f };
                    temptable2.SetWidths(tempwidth2);






                    if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                    {
                        iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[0]["Image"].ToString());
                        //empphoto.ScalePercent(23f);
                        empphoto.ScaleAbsolute(110.7f, 140.5f);
                        PdfPCell employeephoto = new PdfPCell();
                        Paragraph logo = new Paragraph();
                        logo.Add(new Chunk(empphoto, 0, 0));
                        employeephoto.AddElement(logo);
                        employeephoto.HorizontalAlignment = 2;
                        employeephoto.Border = 0;
                        employeephoto.PaddingLeft = -20;
                        employeephoto.Colspan = 1;
                        //  temptable2.AddCell(employeephoto);

                    }


                    childTable2 = new PdfPCell(temptable2);
                    childTable2.Border = 0;
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 1;
                    tablen1.AddCell(childTable2);

                    document.Add(tablen1);

                    table1 = new PdfPTable(4);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    width1 = new float[] { 1f, 5f, 2f, 3f };
                    table1.SetWidths(width1);


                    cell1 = new PdfPCell(new Phrase("Sl.No", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Name of the Verification Certificate ", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Amount in Rupees", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Select appropriate Service Sought", FontStyle2));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(1)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    cell1.PaddingTop = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(2)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(3)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(4)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate & other companies ANTECEDENTS VERIFICATION ONLY(as per police station records)", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate / &other companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION amount to be paid by the company.  ", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for job aspirants(General) ANTECEDENTS along with ADDRESS VERIFICATION", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(4.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION ONLY", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(5.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n750/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(6.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate of Institutions /Companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(7.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Marriage Alliances ANTECEDENTS VERIFICATION", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(8.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Training/Apprenticeship at Public sector undertakings or for Trainees / Workers working on daily wages at Government Institutions. ANTECEDENTS VERIFICATION. ", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(9.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for NCC / NSS Students attending training camps ANTECEDENTS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(10.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Cooli / Loader / Class IV security staff / supervisor at Airport. (Individual applicants only) ANTECEDENTS VERIFICATION", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n150/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(11.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Central / State Government Employees request directly by employee. ANTECEDENTS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(12.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Clearance Certificate (PCC) for going abroad (Visa for studies) ", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(13.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Verification and comparison of Finger Print-Fees for each Verification", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n500/-\n500/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);


                    cell1 = new PdfPCell(new Phrase("(14.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police clearance Certificate for Indian citizens/For accepting or Donating Kidney/Adoption of child/for purchase of property in other", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);


                    document.Add(table1);
                    document.NewPage();

                    table2 = new PdfPTable(4);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    width2 = new float[] { 1f, 5f, 3f, 2f };
                    table2.SetWidths(width2);
                    PdfPCell cell2;

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 4;
                    cell2.PaddingTop = 50;
                    cell2.Border = 0;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Verification of service local Jurisdiction.", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Verification of service outside Jurisdiction.", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Any other purpose", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    cell2.PaddingBottom = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("The verification done through Department as per Government Order’s : -", FontStyle2));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 4;
                    cell2.Border = 0;
                    cell2.PaddingBottom = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(1)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(2)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(3)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(4)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("1.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("PIO / OCI Cards", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("2.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Pakistan Visa", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("3.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Verification of Citizenships", FontStyle3));
                    cell2.HorizontalAlignment = 0; ;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("4.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Government Employees Job Verification done through the department", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    cell2.PaddingRight = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Note: - Please tick the appropriate one.", FontStyle2));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 4;
                    cell2.Border = 0;
                    cell2.PaddingBottom = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 4;
                    cell2.PaddingBottom = 30;
                    cell2.Border = 0;
                    table2.AddCell(cell2);


                    // document.Add(table2);

                    table3 = new PdfPTable(3);
                    table3.TotalWidth = 500f;
                    table3.LockedWidth = true;
                    float[] width3 = new float[] { 0.8f, 3.2f, 9f };
                    table3.SetWidths(width3);
                    PdfPCell cell3;

                    cell3 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 4;
                    cell3.PaddingBottom = 30;
                    cell3.Border = 0;
                    table3.AddCell(cell3);



                    cell3 = new PdfPCell(new Phrase("1.", FontStyle4));
                    cell3.HorizontalAlignment = 1;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("Name", FontStyle4));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase(name, FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("2.", FontStyle4));
                    cell3.HorizontalAlignment = 1;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("Father/Husband name", FontStyle4));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    string Relationname = "";
                    string MaritalStatus = "";
                    //string FatherSpouseName = "";

                    //shivarathri
                    if (Gender == "Male")
                    {
                        FatherSpouseName = FatherName;
                    }
                    else if (Gender == "Female")
                    {
                        if (MaritalStatus == "Unmarried")
                        {
                            FatherSpouseName = FatherName;
                        }
                        else
                        {
                            FatherSpouseName = SpouseName;

                        }
                    }



                    cell3 = new PdfPCell(new Phrase(FatherSpouseName, FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    // cell3.PaddingTop = 5;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);



                    cell3 = new PdfPCell(new Phrase("3.", FontStyle4));
                    cell3.HorizontalAlignment = 1;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("Nationality", FontStyle4));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase(Nationality, FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);


                    document.Add(table3);

                    PdfPTable table4 = new PdfPTable(6);
                    table4.TotalWidth = 500f;
                    table4.LockedWidth = true;
                    width4 = new float[] { 0.6f, 2.5f, 1.9f, 1f, 2f, 2f };
                    table4.SetWidths(width4);
                    PdfPCell cell4;

                    cell4 = new PdfPCell(new Phrase("4.", FontStyle4));
                    cell4.HorizontalAlignment = 1;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);

                    cell4 = new PdfPCell(new Phrase("Date of Birth & Age", FontStyle4));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    //cell4.PaddingLeft = 0;
                    table4.AddCell(cell4);
                    //sharada---------------------
                    cell4 = new PdfPCell(new Phrase(EmpDtofBirths, FontStyle3));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);
                    cell4 = new PdfPCell(new Phrase("Age", FontStyle4));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);

                    cell4 = new PdfPCell(new Phrase(dateofbirth + " years", FontStyle3));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 2;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);

                    document.Add(table4);

                    PdfPTable table5 = new PdfPTable(3);
                    table5.TotalWidth = 500f;
                    table5.LockedWidth = true;
                    float[] width5 = new float[] { 0.8f, 3.2f, 9f };
                    table5.SetWidths(width5);
                    PdfPCell cell5;

                    cell5 = new PdfPCell(new Phrase("5.", FontStyle4));
                    cell5.HorizontalAlignment = 1;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 10;
                    cell5.PaddingBottom = 10;
                    table5.AddCell(cell5);


                    cell5 = new PdfPCell(new Phrase("Address needs to be verified with period of stay", FontStyle4));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 10;
                    cell5.PaddingBottom = 10;
                    //cell5.PaddingTop = 50;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("#3/2/6, 1st Cross M C layout Vijayanagar Bangalore -560079", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 10;
                    cell5.PaddingBottom = 10;
                    //cell5.PaddingTop = 50;
                    table5.AddCell(cell5);




                    cell5 = new PdfPCell(new Phrase("6.", FontStyle4));
                    cell5.HorizontalAlignment = 1;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 5;
                    cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("Period of stay", FontStyle4));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 5;
                    cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("2 Years", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 5;
                    cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.Border = 0;
                    cell5.BorderWidthLeft = 0.5f;
                    //cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("(Enclose additional sheet for more than one address)", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 2;
                    cell5.BorderWidthRight = 0.5f;
                    cell5.BorderWidthLeft = 0.5f;
                    table5.AddCell(cell5);



                    #region Present address String array

                    PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = "Landmark :  " + prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = "Vill :  " + prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = "Taluka : " + prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = "City : " + prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = "State : " + prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = ", Pincode : " + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion




                    cell5 = new PdfPCell(new Phrase("", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.Border = 0;
                    cell5.PaddingBottom = 10;
                    table5.AddCell(cell5);



                    #region Permanent address String array

                    PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = "Landmark :  " + pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = "Vill : " + peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = "Taluka : " + peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = "City : " + pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = "State : " + peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = ", Pincode : " + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    //string Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion






                    document.Add(table5);

                    //document.NewPage();

                    PdfPTable table6 = new PdfPTable(6);
                    table6.TotalWidth = 500f;
                    table6.LockedWidth = true;
                    float[] width6 = new float[] { 0.6f, 2.4f, 2f, 1f, 2f, 2f };
                    table6.SetWidths(width6);
                    PdfPCell cell6;



                    cell6 = new PdfPCell(new Phrase("7.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    cell6.Colspan = 1;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Name of the Jurisdiction Police Station.", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("Vijayanagar", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("8.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("Contact telephone Number.", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    //sha
                    cell6 = new PdfPCell(new Phrase(MobileNumber, FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("9.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Passport Number", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Validity", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Bangalore One Challan Trans.No.:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    cell6.BorderWidthRight = 0;
                    table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("(Original Challan has to be enclosed)", FontStyle5));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    cell6.BorderWidthLeft = 0;
                    table6.AddCell(cell6);


                    #region
                    cell6 = new PdfPCell(new Phrase(" (a) Landline", FontStyle3));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 2;
                    cell6.PaddingLeft = 70;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);
                    cell6 = new PdfPCell(new Phrase("", FontStyle4));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 2;
                    cell6.PaddingRight = 100;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("(b) Mobile", FontStyle3));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 2;
                    cell6.PaddingLeft = 70;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase(MobileNumber, FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 2;
                    cell6.Border = 0;
                    cell6.PaddingRight = 100;
                    //table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    cell6.PaddingBottom = 30;
                    //table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Details of fee remitted:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("(a) Transaction Number of Bangalore One / Karnataka One: ", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("(Please enter the 12 digit transaction number in the boxes above. First 3 characters are Alphabetical and rest 9 characters are Numerical.).Original Receipt has to be enclosed", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    cell6.PaddingBottom = 30;
                    // table6.AddCell(cell6);
                    //

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    //  table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("(b) Treasury / Bank:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    //  table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    //table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("(Pl enter the challan Number)", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    // table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("If yes furnish particulars as below", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 4;
                    cell6.PaddingRight = 30;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);
                    #endregion


                    cell6 = new PdfPCell(new Phrase("", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    cell6.PaddingTop = 40;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("The information furnished in this application is true to the best of my / our knowledge & belief. No information has been suppressed.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 45;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Please verify the ANTECEDENTS and / or the STAY DETAILS of the above named person at the given address for the given period of stay and issue the PVC / PCC.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 4;
                    cell6.PaddingRight = 30;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    //table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Thanking you", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 20;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Yours faithfully", FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = -40;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Date :", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingBottom = 20;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);
                    //EmpDtofJoining
                    //cell6 = new PdfPCell(new Phrase(EmpDtofJoining, FontStyle3));
                    //cell6.HorizontalAlignment = 0;
                    //cell6.Colspan = 3;
                    //cell6.PaddingLeft = -40;
                    //cell6.PaddingBottom = 20;
                    //cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Place:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase(AreaName, FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -40;
                    // table6.AddCell(cell6);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -480f;
                        sealImg.PaddingBottom = -10f;
                        sealImg.PaddingRight = -245f;
                        //sealImg.PaddingTop = 40f;
                        table6.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell6 = new PdfPCell(new Phrase("Signature of the Applicant / \nthe I / c of the Company / firm", FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = -40;
                    cell6.SetLeading(0f, 1.3f);
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("From Address:", FontStyle2));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 4;
                    cell6.Border = 0;
                    cell6.PaddingTop = 20;
                    cell6.PaddingRight = 20;
                    cell6.PaddingBottom = 50;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Instructions.", FontStyle2));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    cell6.PaddingBottom = 10;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("1. Applicant should furnish one of the approved documents by the State Government for the purpose of address proof.(Passport, Pan card, Ration Card, Voter ID, BSNL Telephone Bill, Gas Bill, Water Bill, Electricity Bill, Driving License)", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    cell6.SetLeading(0, 1.3f);
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("2. Enclose two additional passport size photos along with the application.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("3. Furnish the proof of date of birth.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("4. The PVC / PCC issued shall not be used for any other purpose other than the purpose specified in the application.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    table6.AddCell(cell6);


                    document.Add(table6);


                    #endregion for police form

                    document.NewPage();
                    #region for form11

                    #region


                    Fontsize = 8;


                    PdfPTable tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    width = new float[] { 1f, 5f, 2f, 2f };
                    tablespf.SetWidths(width);

                    cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 4;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell cellpfform1 = new PdfPCell(new Phrase("New Form No.11- Declaration Form ", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    cellpfform1.HorizontalAlignment = 2;
                    cellpfform1.Colspan = 4;
                    cellpfform1.Border = 0;
                    tablespf.AddCell(cellpfform1);

                    PdfPCell cellpfdeclaration = new PdfPCell(new Phrase("(To be retained by the employer for future reference)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfdeclaration.HorizontalAlignment = 2;
                    cellpfdeclaration.Colspan = 4;
                    cellpfdeclaration.Border = 0;
                    tablespf.AddCell(cellpfdeclaration);

                    tablespf.AddCell(cellspace);


                    string imagepathpf1 = Server.MapPath("images/");

                    string imagepathpf = Server.MapPath("Images/");
                    if (File.Exists(imagepathpf))
                    {
                        iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepathpf + "/EPFLogo.PNG");
                        headtext.ScalePercent(50f);
                        PdfPCell esiclogo = new PdfPCell();
                        Paragraph p9 = new Paragraph();
                        p9.Add(new Chunk(headtext, 0, 0));
                        esiclogo.AddElement(p9);
                        esiclogo.HorizontalAlignment = 0;
                        esiclogo.Colspan = 1;
                        esiclogo.Border = 0;
                        esiclogo.PaddingBottom = -10;
                        tablespf.AddCell(esiclogo);
                    }
                    else
                    {
                        PdfPCell esiclogo = new PdfPCell();
                        Paragraph p9 = new Paragraph();
                        p9.Add(new Chunk(" ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                        esiclogo.AddElement(p9);
                        esiclogo.HorizontalAlignment = 0;
                        esiclogo.Colspan = 1;
                        esiclogo.Border = 0;
                        esiclogo.PaddingBottom = -10;
                        tablespf.AddCell(esiclogo);
                    }
                    var celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Employees’ Provident Fund Organization \n", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("Employees provident funds scheme, 1952 (paragraph 34 & 57) & \nEmployees pension scheme 1995 (paragraph 24) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PdfPCell cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 1;
                    cellpfMandatory1s.Border = 0;
                    tablespf.AddCell(cellpfMandatory1s);

                    celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Emp Code: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(Empid, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("\nCompany: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(CompanyName, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 2;
                    cellpfMandatory1s.SetLeading(0f, -1.2f);
                    tablespf.AddCell(cellpfMandatory1s);


                    PdfPCell PFCell;


                    PFCell = new PdfPCell(new Phrase("(Declaration by a person taking up employment in any establishment on which EPF Scheme, 1952 end /of EPS1995 is applicable)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 4;
                    PFCell.Border = 0;
                    // PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    document.Add(tablespf);
                    tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    width = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tablespf.SetWidths(width);


                    PFCell = new PdfPCell(new Phrase("1", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = -3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Name of  the member", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Title + ". " + name, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    Relationname = "";

                    imagepath2 = Server.MapPath("assets/Images/Rightlogo.png");

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(220f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }



                    PFCell = new PdfPCell(new Phrase("2", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Father’s Name (      ) Spouse’s Name(       )\n(Please Tick Whichever Is Applicable) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("MR. " + FatherSpouseName, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("3", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Date of Birth (DD/MM/YYYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(EmpDtofBirths, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("4", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Gender: ( male / Female /Transgender ) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("5", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Marital Status (married /Unmarried /widow/divorce)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("6", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("(a)Email ID:\n\n(b)Mobile No: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(email + "\n\n" + contactno, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("7*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘provident Fund Scheme 1952", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    if (UANNumber.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase("        Yes          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("        No          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }



                    PFCell = new PdfPCell(new Phrase("8*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘Pension Scheme ,1995", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("        Yes          No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0.5f;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("If response to any or both of (7) & (8) above is yes. MANDATORY FILL UP THE (COLUMN 9) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Universal Account Number(UAN)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(UANNumber, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) Previous PF a/c No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("9", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Date of exit from previous employment  (DD/MM/YYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Scheme  Certificate No (if Issued )", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("e) Pension Payment Order (PPO)No (if Issued)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) International Worker:", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("10", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) If Yes , State Country Of Origin (India /Name  of Other Country)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Passport No ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Validity Of Passport (DD/MM/YYY) to(DD/MM/YYY) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("KYC Details: (attach Self attested copies of following KYCs) ** ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Bank Account No .& IFS code", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);

                    if (EmpBankAcNo.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase(EmpBankAcNo + " & " + IFSCCOde, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("11", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) AADHAR Number (12 Digit) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Permanent Account Number (PAN),If available ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    document.Add(tablespf);

                    PdfPTable tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    float[] widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);



                    PdfPCell cellpfUNDERTAKING = new PdfPCell(new Phrase("UNDERTAKING:", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfUNDERTAKING.HorizontalAlignment = 1;
                    cellpfUNDERTAKING.Colspan = 4;
                    cellpfUNDERTAKING.Border = 0;
                    tbliepf.AddCell(cellpfUNDERTAKING);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("1) Certified that  the Particulars  are true to the best of my Knowledge ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("2) I authorize  EPFO to use my Aadhar for verification / e KYC purpose for service delivery ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("3) Kindly transfer the funds  and service details, if applicable if applicable, from the previous PF account as declared above to the present P.F Account(The Transfer Would be possible only if the identified KYC details approved by previous employer has been verified by present employer ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("4) In case of changes In above details the same Will be intimate to employer at the earliest ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDATE1 = new PdfPCell(new Phrase("DATE: " + date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE1.HorizontalAlignment = 0;
                    cellpfDATE1.Colspan = 2;
                    cellpfDATE1.Border = 0;
                    tbliepf.AddCell(cellpfDATE1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 2;
                        //sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -245f;
                        //sealImg.PaddingTop = 40f;
                        tbliepf.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    PdfPCell cellpfPLACE = new PdfPCell(new Phrase("PLACE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfPLACE.HorizontalAlignment = 0;
                    cellpfPLACE.Colspan = 2;
                    cellpfPLACE.Border = 0;
                    tbliepf.AddCell(cellpfPLACE);
                    PdfPCell cellpfSIGNATURE1 = new PdfPCell(new Phrase("SIGNATURE OF MEMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE1.HorizontalAlignment = 2;
                    cellpfSIGNATURE1.Colspan = 2;
                    cellpfSIGNATURE1.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE1);

                    tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDECLARATION = new PdfPCell(new Phrase("DECLARATION BY PRESENT EMPLOYER ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfDECLARATION.HorizontalAlignment = 1;
                    cellpfDECLARATION.Colspan = 4;
                    cellpfDECLARATION.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    var celldescription1 = new Phrase();
                    celldescription1.Add(new Chunk("A.The member Mr./Ms./Mrs ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(name, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" .has  joined  on  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" and has been allotted PF Number ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(PFno, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    PdfPCell cellpfCERTIFY11a = new PdfPCell();
                    cellpfCERTIFY11a.HorizontalAlignment = 0;
                    cellpfCERTIFY11a.AddElement(celldescription1);
                    cellpfCERTIFY11a.Colspan = 3;
                    cellpfCERTIFY11a.Border = 0;
                    cellpfCERTIFY11a.PaddingTop = -5;
                    tbliepf.AddCell(cellpfCERTIFY11a);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfCERTIFY11 = new PdfPCell(new Phrase("B) In case person was earlier not a member of EPF Scheme ,1952 and EPS,1995 ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfCERTIFY11.Colspan = 3;
                    cellpfCERTIFY11.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY11);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfEARLIER = new PdfPCell(new Phrase("•  (Post allotment of UAN ) The UAN Allotted for the member is………….. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfEARLIER.HorizontalAlignment = 0;
                    cellpfEARLIER.Colspan = 3;
                    cellpfEARLIER.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfENSURED = new PdfPCell(new Phrase("•  Please tick the Appropriate Option: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED.HorizontalAlignment = 0;
                    cellpfENSURED.Colspan = 3;
                    cellpfENSURED.Border = 0;
                    tbliepf.AddCell(cellpfENSURED);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfIIDETAILS = new PdfPCell(new Phrase("The KYC  details of the above member in the UAN database ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS.HorizontalAlignment = 0;
                    cellpfIIDETAILS.Colspan = 3;
                    cellpfIIDETAILS.Border = 0;
                    tbliepf.AddCell(cellpfIIDETAILS);

                    document.Add(tbliepf);
                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop11 = new PdfPCell(sqpng);
                    tickop11.HorizontalAlignment = 2;
                    tickop11.Colspan = 1;
                    tickop11.Border = 0;
                    tbliepf.AddCell(tickop11);

                    PdfPCell cellpfHAVE = new PdfPCell(new Phrase("Have not been uploaded", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE.HorizontalAlignment = 0;
                    cellpfHAVE.Colspan = 4;
                    cellpfHAVE.Border = 0;
                    tbliepf.AddCell(cellpfHAVE);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng4 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop12 = new PdfPCell(sqpng4);
                    tickop12.HorizontalAlignment = 2;
                    tickop12.Colspan = 1;
                    tickop12.Border = 0;
                    tbliepf.AddCell(tickop12);

                    PdfPCell cellpfIII1 = new PdfPCell(new Phrase("Have been uploaded but not approved", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIII1.HorizontalAlignment = 0;
                    cellpfIII1.Colspan = 4;
                    cellpfIII1.Border = 0;
                    tbliepf.AddCell(cellpfIII1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop13 = new PdfPCell(sqpng1);
                    tickop13.HorizontalAlignment = 2;
                    tickop13.Colspan = 1;
                    tickop13.Border = 0;
                    tbliepf.AddCell(tickop13);

                    PdfPCell cellpfDECLARATION1 = new PdfPCell(new Phrase("Have been uploaded and approved with DSC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfDECLARATION1.HorizontalAlignment = 0;
                    cellpfDECLARATION1.Colspan = 4;
                    cellpfDECLARATION1.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION1);

                    tbliepf.AddCell(cellspace);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    PdfPCell cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfCERTIFY1 = new PdfPCell(new Phrase("C) In case the person was earlier a member of EPF Scheme ,1952 and EPS, 1995: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY1.HorizontalAlignment = 0;
                    cellpfCERTIFY1.Colspan = 3;
                    cellpfCERTIFY1.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfEARLIER1 = new PdfPCell(new Phrase("•  The above PF account number /UAN  of the member as mentioned in (a) above has been tagged with his /her UAN/previous member ID as declared by member ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfEARLIER1.HorizontalAlignment = 0;
                    cellpfEARLIER1.Colspan = 3;
                    cellpfEARLIER1.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfENSURED1 = new PdfPCell(new Phrase("•  Please Tick the Appropriate Option ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED1.HorizontalAlignment = 0;
                    cellpfENSURED1.Colspan = 3;
                    cellpfENSURED1.Border = 0;
                    tbliepf.AddCell(cellpfENSURED1);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop14 = new PdfPCell(sqpng2);
                    tickop14.HorizontalAlignment = 2;
                    tickop14.Colspan = 1;
                    tickop14.Border = 0;
                    tickop14.PaddingTop = 5;
                    tbliepf.AddCell(tickop14);

                    PdfPCell cellpfIIDETAILS1 = new PdfPCell(new Phrase("The KYC details of the above member in the UAN database have been approved with digital signature Certificate and transfer request has been generated on portal. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS1.HorizontalAlignment = 0;
                    cellpfIIDETAILS1.Colspan = 4;
                    cellpfIIDETAILS1.Border = 0;
                    cellpfIIDETAILS1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfIIDETAILS1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop15 = new PdfPCell(sqpng3);
                    tickop15.HorizontalAlignment = 2;
                    tickop15.Colspan = 1;
                    tickop15.Border = 0;
                    tickop15.PaddingTop = 5;
                    tbliepf.AddCell(tickop15);

                    PdfPCell cellpfHAVE1 = new PdfPCell(new Phrase(" As the DSC of establishment are not registered With EPFO the member has been informed to file physical claim (Form13) for transfer of funds from his previous establishment. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE1.HorizontalAlignment = 0;
                    cellpfHAVE1.Colspan = 4;
                    cellpfHAVE1.Border = 0;
                    cellpfHAVE1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfHAVE1);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);


                    PdfPCell cellpfDATE = new PdfPCell(new Phrase("DATE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE.HorizontalAlignment = 0;
                    cellpfDATE.Colspan = 2;
                    cellpfDATE.Border = 0;
                    tbliepf.AddCell(cellpfDATE);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(70f);
                        gif2.SetAbsolutePosition(400f, 85f);
                        //document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }


                    PdfPCell cellpfSIGNATURE = new PdfPCell(new Phrase("SIGNATURE OF EMPLOYER WITH SEAL OF ESTABLISHMENT", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE.HorizontalAlignment = 2;
                    cellpfSIGNATURE.Colspan = 2;
                    cellpfSIGNATURE.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE);

                    document.Add(tbliepf);

                    #endregion

                    #endregion

                    string filename = txtName.Text + " - " + txtEmpid.Text.ToString() + " - " + "Biodata.pdf";


                    document.Close();
                    Response.ContentType = "application/pdf";
                    Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                    Response.Buffer = true;
                    Response.Clear();
                    Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                    Response.OutputStream.Flush();
                    Response.End();

                }




                else
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                    return;
                }

            }
            catch (Exception ex)
            {

            }
        }

        public void PDFS()
        {
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                IndividualDownload();
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                BulkDownload();
            }
        }

        public void BulkDownload()
        {
            int Fontsize = 10;
            int fontsize1 = 8;
            int fontsize2 = 6;
            int Fontsize3 = 11;

            var headfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.BLACK);
            var bodyfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.BOLD, BaseColor.BLACK);
            var bodyfontnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 9, Font.NORMAL, BaseColor.BLACK);
            var Subheadnormal = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.NORMAL, BaseColor.BLACK);
            var Subheadfont = FontFactory.GetFont(FontFactory.TIMES_ROMAN, 11, Font.BOLD, BaseColor.BLACK);


            int totalfonts = FontFactory.RegisterDirectory("c:\\WINDOWS\\fonts");
            //StringBuilder sa = new StringBuilder();
            foreach (string fontname in FontFactory.RegisteredFonts)
            {
                // sa.Append(fontname + "\n");
            }
            Font FontStyle4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
            Font FontStyle2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 13, Font.BOLD, BaseColor.BLACK);
            Font FontStyle1 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
            Font FontStyle6 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.ITALIC, BaseColor.BLACK);
            Font FontStyle5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 8, Font.ITALIC, BaseColor.BLACK);
            Font FontStyle7 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 8, Font.BOLD, BaseColor.BLACK);
            Font FontStyleHeading = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 16, Font.BOLD, BaseColor.BLACK);


            #region Variable Declaration
            string EmpBankAcNo = "";
            string IFSCCOde = "";
            string empaddresStatus = "";
            string Qualification = "";
            string EstablishmentID = "";
            string email = "";
            string CompanyName = "";
            string SpouseName = "";
            string NomineeName = "";
            string RelationPlace = "";
            string place = "";
            string RRes = "";
            string NomineeRelation = "";
            string NomineeText = "";
            string FSpouseName = "";
            string FatherName = "";
            string area = "";
            // string division = "";
            string FatherOccupation = "";
            string MotherName = "";
            string contactno = "";
            string Idno = "";
            string date = "";
            string Fname = "";
            string postappliedfor = "";
            string name = "";
            string dateofbirth = "";
            string Gender = "";
            string Dateofjoining = "";
            string educationqualification = "";
            string TechnicalQualification = "";
            string previouspost = "";
            string nationality = "";
            string ReportingManager = "";
            string community = "";
            string maritalstatus = "";
            string BloodGroupName = "";
            string MaritalStatusSpouseText = "";
            string height = "";
            string weight = "";
            string chest = "";
            string bloodgroup = "";
            string identificationmark1 = "";
            string identificationmark2 = "";

            string prTown = "";
            string prPostOffice = "";
            string prTaluka = "";
            string prPoliceStation = "";
            string prcity = "";
            string prLmark = "";
            string prPincode = "";
            string prState = "";


            string peTown = "";
            string pePostOffice = "";
            string peTaluka = "";
            string pePoliceStation = "";
            string pecity = "";
            string pelmark = "";
            string pePincode = "";
            string peState = "";

            string refaddress1 = "";
            string refaddress2 = "";
            string Emppresentaddress = "";
            string Emppermanentaddress = "";





            string clientname = "";
            string MobileNumber = "";

            string relationName = "";
            string relationAge = "";
            string relationType = "";
            string PrevYrExp = "";

            string PlaceofBirth = "";
            string Haircolour = "";
            string eyecolour = "";
            string Complexion = "";
            string Languagesknown = "";
            string EmergencyPhone = "";
            string UANNumber = "";

            string Esino = "";
            string PfNo = "";
            string pephone = "";
            string RType = "";
            string RName = "";

            string PrevRegionCode = "";
            string PrevEmployerCode = "";
            string PrevExtension = "";
            string PrevPFNo = "";
            string PrevDtofLeave = "";



            string AadharCardNo = "";
            string AadharCardName = "";
            string drivingLicenseName = ""; string DrivingLicenseNo = "";
            string VoterIDNo = "";
            string VoterIDName = "";
            string RationCardNo = "";
            string RationCardName = "";
            string PanCardNo = "";
            string PanCardName = "";
            string PassBookNo = ""; string BankPassbookName = ""; string ElectricityBillNo = "";
            string ElectricityBillName = ""; string OtherType = "";
            string Othertextname = ""; string ESICCardNo = ""; string ESICName = "";
            string PFno = "";
            string Name = "";
            string Designation = "";
            string IDcardIssued = "";
            string IDcardvalid = "";
            string BloodGroup = "";
            string EmpSign = "";
            string EmpESINo = "";
            string Image = "";
            string Faxno = "";
            string Emailid = "";
            string Phoneno = "";
            string companyaddress = "";
            string EmpESIDispName = "";
            string Empdateofbirth = "";
            string Age = "";
            string RHThumb = "";
            string RHIndex = "";
            string RHMiddle = "";
            string RHRing = "";
            string RHLittle = "";
            string LHThumb = "";
            string LHIndex = "";
            string LHMiddle = "";
            string LHRing = "";
            string LHLittle = "";



            #endregion



            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                if (txtfromempid.Text == "" || txttoempid.Text == "")
                {
                    ScriptManager.RegisterStartupScript(this, GetType(), "Show alert", "alert('Please select Employee Series');", true);
                    return;
                }
            }



            #region  Begin  New Code



            #region Begin Variable Declaration

            string SPName = "";
            Hashtable HTEmpBiodata = new Hashtable();
            string Empid = "";
            string fromempid = "";
            string toempid = "";
            string designation = "";
            //string FatherSpouseName = "";
            string doj = "";
            int Options = ddlEmpIDoptions.SelectedIndex;
            DataTable dtEmpdetails = null;
            string EmpDtofBirths = "";
            #endregion end Variable Declaration


            #region Begin Assign Values to The Variables


            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                fromempid = txtfromempid.Text;
                toempid = txttoempid.Text;
            }

            #endregion End Assign values To the Variables

            SPName = "EmpBiodataBulk";
            HTEmpBiodata.Add("@FromEmpid", fromempid);
            HTEmpBiodata.Add("@ToEmpid", toempid);

            #endregion  end Pass values to the Hash table

            #region Begin  Call Stored Procedure
            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(SPName, HTEmpBiodata).Result;
            #endregion  End  Call Stored Procedure



            if (dtEmpdetails.Rows.Count > 0)
            {

                MemoryStream ms = new MemoryStream();
                Document document = new Document(PageSize.LEGAL);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();
                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                string imagepath2 = Server.MapPath("assets/Images/");
                string imagepath6 = Server.MapPath("assets/Images/");
                string imagepathPFLogo = Server.MapPath("assets/EPFLogo.png");
                string imagepathSeal = Server.MapPath("assets/seal.jpg");
                string imagepathArrow = Server.MapPath("assets/Arrow.png");

                for (int m = 0; m < dtEmpdetails.Rows.Count; m++)
                {
                    string FatherSpouseName = "";
                    #region Assining data to Variables
                    string EmprCode = "";
                    EmpBankAcNo = dtEmpdetails.Rows[m]["EmpBankAcNo"].ToString();
                    IFSCCOde = dtEmpdetails.Rows[m]["IFSCCOde"].ToString();
                    EmprCode = dtEmpdetails.Rows[m]["EmprCode"].ToString();
                    Empid = dtEmpdetails.Rows[m]["Empid"].ToString();
                    Name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                    Designation = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    IDcardIssued = dtEmpdetails.Rows[m]["IDCardIssued"].ToString();
                    IDcardvalid = dtEmpdetails.Rows[m]["IDCardValid"].ToString();
                    BloodGroup = dtEmpdetails.Rows[m]["EmpBloodGroup"].ToString();
                    Image = dtEmpdetails.Rows[m]["Image"].ToString();
                    EmpSign = dtEmpdetails.Rows[m]["EmpSign"].ToString();
                    EmpESINo = dtEmpdetails.Rows[m]["EmpESINo"].ToString();
                    EmpESIDispName = dtEmpdetails.Rows[m]["EmpESIDispName"].ToString();
                    PFno = dtEmpdetails.Rows[m]["PFNo"].ToString();
                    Esino = dtEmpdetails.Rows[m]["esino"].ToString();
                    Qualification = dtEmpdetails.Rows[m]["Qualification"].ToString();
                    UANNumber = dtEmpdetails.Rows[m]["EmpUANNumber"].ToString();
                    CompanyName = dtEmpdetails.Rows[m]["CompanyName"].ToString();
                    companyaddress = dtEmpdetails.Rows[m]["CompanyAddress"].ToString();
                    email = dtEmpdetails.Rows[m]["email"].ToString();
                    Idno = dtEmpdetails.Rows[m]["EmpId"].ToString();
                    name = dtEmpdetails.Rows[m]["Fullname"].ToString();
                    Gender = dtEmpdetails.Rows[m]["EmpSex"].ToString();
                    Dateofjoining = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    maritalstatus = dtEmpdetails.Rows[m]["EmpMaritalStatus"].ToString();
                    postappliedfor = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    FatherName = dtEmpdetails.Rows[m]["EmpFatherName"].ToString();
                    FatherOccupation = dtEmpdetails.Rows[m]["EmpFatherOccupation"].ToString();
                    MobileNumber = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    SpouseName = dtEmpdetails.Rows[m]["EmpSpouseName"].ToString();
                    MotherName = dtEmpdetails.Rows[m]["EmpMotherName"].ToString();
                    PrevYrExp = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    contactno = dtEmpdetails.Rows[m]["EmpPhone"].ToString();
                    RType = dtEmpdetails.Rows[m]["RType"].ToString();
                    RName = dtEmpdetails.Rows[m]["RName"].ToString();
                    dateofbirth = dtEmpdetails.Rows[m]["EmpDtofBirth"].ToString();
                    EmpDtofBirths = dtEmpdetails.Rows[m]["EmpDtofBirths"].ToString();
                    designation = dtEmpdetails.Rows[m]["EmpDesgn"].ToString();
                    doj = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    area = dtEmpdetails.Rows[m]["AreaName"].ToString();
                    string PFNO = dtEmpdetails.Rows[m]["PFNo"].ToString();
                    string age = dtEmpdetails.Rows[m]["age"].ToString();
                    if (dateofbirth == "01/01/1900")
                    {
                        dateofbirth = string.Empty;
                    }
                    educationqualification = dtEmpdetails.Rows[m]["EmpQualification"].ToString();
                    string EmpIdMark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                    string division = dtEmpdetails.Rows[m]["division"].ToString();
                    height = dtEmpdetails.Rows[m]["EmpHeight"].ToString();
                    weight = dtEmpdetails.Rows[m]["EmpWeight"].ToString();
                    chest = dtEmpdetails.Rows[m]["EmpChestExp"].ToString();
                    Languagesknown = dtEmpdetails.Rows[m]["EmpLanguagesKnown"].ToString();

                    string lgknwn = "";

                    if (Languagesknown.Length > 0)
                    {
                        string qry = "select language from languages where languageid in (" + Languagesknown + ")";
                        DataTable dtqry = Config.ExecuteReaderWithQueryAsync(qry).Result;

                        string lang = "";

                        var list = new List<string>();

                        if (dtqry.Rows.Count > 0)
                        {
                            for (int u = 0; u < dtqry.Rows.Count; u++)
                            {
                                lang = dtqry.Rows[u]["language"].ToString();

                                list.Add(lang);
                            }

                        }

                        lgknwn = string.Join(",", list.ToArray());
                    }



                    identificationmark1 = dtEmpdetails.Rows[m]["EmpIdMark1"].ToString();
                    identificationmark2 = dtEmpdetails.Rows[m]["EmpIdMark2"].ToString();
                    previouspost = dtEmpdetails.Rows[m]["EmpPreviousExp"].ToString();
                    bloodgroup = dtEmpdetails.Rows[m]["EmpBloodGroup"].ToString();
                    BloodGroupName = dtEmpdetails.Rows[m]["BloodGroupName"].ToString();
                    // EmpPresentAddress = dtEmpdetails.Rows[m]["EmpPresentAddress"].ToString();
                    string Nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();
                    if (bloodgroup == "0")
                    {
                        bloodgroup = string.Empty;
                    }

                    refaddress1 = dtEmpdetails.Rows[m]["EmpRefAddr1"].ToString();
                    refaddress2 = dtEmpdetails.Rows[m]["EmpRefAddr2"].ToString();
                    string SpeciallyAbled = dtEmpdetails.Rows[m]["SpeciallyAbled"].ToString();
                    string Category = dtEmpdetails.Rows[m]["Category"].ToString();
                    date = dtEmpdetails.Rows[m]["EmpDtofJoining"].ToString();
                    if (date == "01/01/1900")
                    {
                        date = string.Empty;
                    }
                    nationality = dtEmpdetails.Rows[m]["Nationality"].ToString();
                    ReportingManager = dtEmpdetails.Rows[m]["RptrmanagerID"].ToString();

                    string RprtMngr = "";
                    string qryn = "select (empfname+' '+empmname+' '+emplname) as rptid from empdetails where empid='" + ReportingManager + "'";
                    DataTable dtnew = Config.ExecuteReaderWithQueryAsync(qryn).Result;
                    if (dtnew.Rows.Count > 0)
                    {
                        RprtMngr = dtnew.Rows[0]["rptid"].ToString();
                    }

                    EmergencyPhone = dtEmpdetails.Rows[m]["EmpEmergencyPhone"].ToString();
                    Haircolour = dtEmpdetails.Rows[m]["EmpHairColor"].ToString();
                    eyecolour = dtEmpdetails.Rows[m]["EmpEyesColor"].ToString();
                    Complexion = dtEmpdetails.Rows[m]["EmpComplexion"].ToString();
                    // EmpPermanentAddress = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();
                    var PresentOrPermanentaddress = "0";
                    PresentOrPermanentaddress = dtEmpdetails.Rows[m]["pvcadd"].ToString();
                    var presentORperadd = "";
                    if (PresentOrPermanentaddress == "1")
                    {
                        presentORperadd = dtEmpdetails.Rows[m]["EmpPresentAddress"].ToString();
                    }
                    else if (PresentOrPermanentaddress == "2")
                    {
                        presentORperadd = dtEmpdetails.Rows[m]["EmpPermanentAddress"].ToString();
                    }


                    prLmark = dtEmpdetails.Rows[m]["prLmark"].ToString();
                    prTown = dtEmpdetails.Rows[m]["prTown"].ToString();
                    prPostOffice = dtEmpdetails.Rows[m]["prPostOffice"].ToString();
                    prTaluka = dtEmpdetails.Rows[m]["prTaluka"].ToString();
                    prPoliceStation = dtEmpdetails.Rows[m]["prPoliceStation"].ToString();
                    prcity = dtEmpdetails.Rows[m]["prcity"].ToString();
                    prState = dtEmpdetails.Rows[m]["prState"].ToString();
                    prPincode = dtEmpdetails.Rows[m]["prPincode"].ToString();
                    string periodofstay = dtEmpdetails.Rows[m]["prperiodofstay"].ToString();
                    pelmark = dtEmpdetails.Rows[m]["pelmark"].ToString();
                    peTown = dtEmpdetails.Rows[m]["peTown"].ToString();
                    pePostOffice = dtEmpdetails.Rows[m]["pePostOffice"].ToString();
                    peTaluka = dtEmpdetails.Rows[m]["peTaluka"].ToString();
                    pePoliceStation = dtEmpdetails.Rows[m]["pePoliceStation"].ToString();
                    pecity = dtEmpdetails.Rows[m]["pecity"].ToString();
                    peState = dtEmpdetails.Rows[m]["peState"].ToString();
                    pePincode = dtEmpdetails.Rows[m]["pePincode"].ToString();
                    // pephone = dtEmpdetails.Rows[m]["pephone"].ToString();
                    Emppresentaddress = dtEmpdetails.Rows[m]["Emppresentaddress"].ToString();
                    Emppermanentaddress = dtEmpdetails.Rows[m]["Emppermanentaddress"].ToString();

                    clientname = dtEmpdetails.Rows[m]["clientname"].ToString();
                    RHThumb = dtEmpdetails.Rows[m]["RHThumb"].ToString();
                    RHIndex = dtEmpdetails.Rows[m]["RHIndex"].ToString();
                    RHMiddle = dtEmpdetails.Rows[m]["RHMiddle"].ToString();
                    RHRing = dtEmpdetails.Rows[m]["RHRing"].ToString();
                    RHLittle = dtEmpdetails.Rows[m]["RHLittle"].ToString();
                    LHThumb = dtEmpdetails.Rows[m]["LHThumb"].ToString();
                    LHIndex = dtEmpdetails.Rows[m]["LHIndex"].ToString();
                    LHMiddle = dtEmpdetails.Rows[m]["LHMiddle"].ToString();
                    LHRing = dtEmpdetails.Rows[m]["LHRing"].ToString();
                    LHLittle = dtEmpdetails.Rows[m]["LHLittle"].ToString();

                    string Image1 = "";

                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        Image1 = dtEmpdetails.Rows[m]["Image"].ToString();
                    }
                    else
                    {

                    }



                    CompanyName = dtEmpdetails.Rows[m]["CompanyName"].ToString();
                    FSpouseName = dtEmpdetails.Rows[m]["SpouseName"].ToString();
                    PrevRegionCode = dtEmpdetails.Rows[m]["PrevRegionCode"].ToString();
                    PrevEmployerCode = dtEmpdetails.Rows[m]["PrevEmployerCode"].ToString();
                    PrevExtension = dtEmpdetails.Rows[m]["PrevExtension"].ToString();
                    PrevPFNo = dtEmpdetails.Rows[m]["PrevPFNo"].ToString();
                    PrevDtofLeave = dtEmpdetails.Rows[m]["PrevDateofLeave"].ToString();
                    if (PrevDtofLeave == "01/01/1900")
                    {
                        PrevDtofLeave = "";
                    }
                    else
                    {
                        PrevDtofLeave = dtEmpdetails.Rows[m]["PrevDateofLeave"].ToString();

                    }
                    //PrevYrExp = dtEmpdetails.Rows[m]["PrevYrExp"].ToString();


                    AadharCardNo = dtEmpdetails.Rows[m]["AadharCardNo"].ToString();
                    AadharCardName = dtEmpdetails.Rows[m]["AadharCardName"].ToString();
                    drivingLicenseName = dtEmpdetails.Rows[m]["drivingLicenseName"].ToString();
                    DrivingLicenseNo = dtEmpdetails.Rows[m]["DrivingLicenseNo"].ToString();
                    VoterIDNo = dtEmpdetails.Rows[m]["VoterIDNo"].ToString();
                    VoterIDName = dtEmpdetails.Rows[m]["VoterIDName"].ToString();
                    RationCardNo = dtEmpdetails.Rows[m]["RationCardNo"].ToString();
                    RationCardName = dtEmpdetails.Rows[m]["RationCardName"].ToString();
                    PanCardNo = dtEmpdetails.Rows[m]["PanCardNo"].ToString();
                    PanCardName = dtEmpdetails.Rows[m]["PanCardName"].ToString();
                    //  PassBookNo = dtEmpdetails.Rows[m]["PassBookNo"].ToString();
                    PassBookNo = dtEmpdetails.Rows[m]["EmpBankAcNo"].ToString();
                    BankPassbookName = dtEmpdetails.Rows[m]["BankPassbookName"].ToString();
                    ElectricityBillNo = dtEmpdetails.Rows[m]["ElectricityBillNo"].ToString();
                    ElectricityBillName = dtEmpdetails.Rows[m]["ElectricityBillName"].ToString();
                    OtherType = dtEmpdetails.Rows[m]["OtherType"].ToString();
                    Othertextname = dtEmpdetails.Rows[m]["Othertextname"].ToString();
                    ESICCardNo = dtEmpdetails.Rows[m]["ESICCardNo"].ToString();
                    ESICName = dtEmpdetails.Rows[m]["ESICName"].ToString();
                    if (dtEmpdetails.Rows[m]["Title"].ToString() != "--Select--")
                    {
                        Title = dtEmpdetails.Rows[m]["Title"].ToString();
                    }
                    #endregion


                    string querypf = " select *,case Convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else Convert(varchar(10),DOfBirth,103) end as DateOfBirth from EmpRelationships where EmpId='" + Idno + "' and PFNominee='Y' ";
                    DataTable dtpf = Config.ExecuteReaderWithQueryAsync(querypf).Result;


                    string QueryNominee = "select top 1 RName as NomineeName ,Rtype as NomineeRelation from emprelationships where empid='" + Idno + "' and PFNominee='Y' order by id";
                    DataTable DtNominee = Config.ExecuteReaderWithQueryAsync(QueryNominee).Result;
                    if (DtNominee.Rows.Count > 0)
                    {
                        NomineeRelation = DtNominee.Rows[0]["NomineeRelation"].ToString();
                        NomineeName = DtNominee.Rows[0]["NomineeName"].ToString();
                    }

                    string queryre = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + Idno + "' and PFNominee='Y'  ";
                    DataTable dtesi = Config.ExecuteReaderWithQueryAsync(queryre).Result;

                    string queryres = " select RName,age,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(nvarchar(20),DOfBirth,103) end as DOfBirth,RType ,RPlace,RResidence,ed.unitid,ed.EmpDtofJoining from EmpRelationships er left  join EmpDetails ed on ed.EmpId=er.EmpId where ed.empid='" + Idno + "' and PFNominee='Y'  ";
                    DataTable dtesione = Config.ExecuteReaderWithQueryAsync(queryres).Result;
                    string RNames = "";
                    string RTypes = "";
                    if (dtesione.Rows.Count > 0)
                    {
                        RNames = dtesione.Rows[0]["RName"].ToString();
                        RTypes = dtesione.Rows[0]["RType"].ToString();

                    }

                    string BranchDetails = "select * from branchdetails";
                    DataTable dtBranchDetails = Config.ExecuteReaderWithQueryAsync(BranchDetails).Result;
                    string Branchname = "";

                    if (dtBranchDetails.Rows.Count > 0)
                    {
                        Branchname = dtBranchDetails.Rows[0]["Branchname"].ToString();

                    }
                    string QueryCompanyInfo = "select * from companyinfo";
                    DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;

                    string Address = "";
                    string cmpnyinfo = "";

                    if (DtCompanyInfo.Rows.Count > 0)
                    {
                        Address = DtCompanyInfo.Rows[0]["Address"].ToString();
                        cmpnyinfo = DtCompanyInfo.Rows[0]["PFNo"].ToString();

                    }





                    document.NewPage();
                    #region for biodata
                    Fontsize3 = 11;
                    #region Headings of the Pdf

                    PdfPTable table = new PdfPTable(6);
                    table.TotalWidth = 570f;
                    table.LockedWidth = true;
                    float[] width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                    table.SetWidths(width);


                    string fontstyle = "calibri";
                    PdfPCell cellspace1 = new PdfPCell(new Phrase("Employee: " + Idno + "   Enrolment Form", FontFactory.GetFont(fontstyle, Fontsize3 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellspace1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace1.Colspan = 6;
                    cellspace1.Border = 0;
                    cellspace1.PaddingTop = -50;
                    table.AddCell(cellspace1);

                    PdfPCell cellspace = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 6;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;
                    table.AddCell(cellspace);

                    imagepath2 = Server.MapPath("assets/Images/");

                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50);
                        gif2.SetAbsolutePosition(16f, 910f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }


                    PdfPCell cellHead = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, Fontsize3 + 4, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 1;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.SetLeading(0f, 1.3f);
                    table.AddCell(cellHead);

                    BaseColor color = new BaseColor(221, 226, 222);

                    PdfPCell cellHeadISO = new PdfPCell(new Phrase("ISO 9001-2008", FontFactory.GetFont(fontstyle, Fontsize3 - 1, Font.NORMAL, color)));
                    cellHeadISO.HorizontalAlignment = 0;
                    cellHeadISO.Colspan = 6;
                    cellHeadISO.Border = 0;
                    cellHeadISO.PaddingTop = -5;
                    cellHeadISO.PaddingLeft = 70;
                    // table.AddCell(cellHeadISO);

                    PdfPCell cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHead2.HorizontalAlignment = 1;
                    cellHead2.Colspan = 6;
                    cellHead2.Border = 0;


                    PdfPCell cellHead4 = new PdfPCell();
                    var celldescription = new Phrase();
                    celldescription.Add(new Chunk("                                                      ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldescription.Add(new Chunk("ENROLMENT FORM", FontFactory.GetFont(fontstyle, Fontsize3 + 4, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    // celldescription.Add(new Chunk("                                              NO.", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHead4.AddElement(celldescription);
                    cellHead4.HorizontalAlignment = 1;
                    cellHead4.PaddingLeft = 60f;
                    cellHead4.Colspan = 6;
                    cellHead4.Border = 0;
                    table.AddCell(cellHead4);

                    PdfPCell cellNo1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellNo1.HorizontalAlignment = 0;
                    cellNo1.Colspan = 3;
                    cellNo1.Border = 0;
                    cellNo1.PaddingLeft = -3;
                    table.AddCell(cellNo1);

                    if (Dateofjoining != "")
                    {
                        PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : " + Dateofjoining, FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                        celldate1.HorizontalAlignment = 1;
                        celldate1.Colspan = 3;
                        celldate1.Border = 0;
                        celldate1.PaddingLeft = 135;
                        table.AddCell(celldate1);
                    }
                    else
                    {
                        PdfPCell celldate1 = new PdfPCell(new Phrase(" Date : ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                        celldate1.HorizontalAlignment = 1;
                        celldate1.Colspan = 3;
                        celldate1.Border = 0;
                        celldate1.PaddingLeft = 78;
                        table.AddCell(celldate1);
                    }


                    table.AddCell(cellspace);

                    PdfPCell cellpost1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellpost1.HorizontalAlignment = 0;
                    cellpost1.Colspan = 0;
                    cellpost1.Border = 0;
                    cellpost1.PaddingLeft = 10;
                    table.AddCell(cellpost1);



                    document.Add(table);

                    #endregion

                    #region Basic Information of the Employee

                    PdfPTable table2 = new PdfPTable(6);
                    table2.TotalWidth = 570f;
                    table2.LockedWidth = true;
                    float[] width1 = new float[] { 5f, 2f, 5f, 2f, 1.5f, 2f };
                    table2.SetWidths(width1);


                    PdfPTable temptable1 = new PdfPTable(3);
                    temptable1.TotalWidth = 400f;
                    temptable1.LockedWidth = true;
                    float[] tempwidth1 = new float[] { 5f, 2f, 5f };
                    temptable1.SetWidths(tempwidth1);

                    PdfPCell Contactno = new PdfPCell(new Phrase("1  Personal No. ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Contactno.HorizontalAlignment = 0;
                    Contactno.Border = 0;
                    Contactno.PaddingTop = 5;
                    temptable1.AddCell(Contactno);

                    PdfPCell Contactno2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Contactno2.HorizontalAlignment = 0;
                    Contactno2.Border = 0;
                    Contactno2.PaddingTop = 5;
                    temptable1.AddCell(Contactno2);

                    PdfPCell Contactno1 = new PdfPCell(new Phrase(Idno, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    Contactno1.HorizontalAlignment = 0;
                    Contactno1.Border = 0;
                    Contactno1.PaddingTop = 5;
                    temptable1.AddCell(Contactno1);

                    PdfPCell Rank = new PdfPCell(new Phrase("2  Rank", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Rank.HorizontalAlignment = 0;
                    Rank.Border = 0;
                    Rank.PaddingTop = 5;
                    temptable1.AddCell(Rank);

                    PdfPCell Rank2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    Rank2.HorizontalAlignment = 0;
                    Rank2.Border = 0;
                    Rank2.PaddingTop = 5;
                    temptable1.AddCell(Rank2);

                    PdfPCell Rank1 = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    Rank1.HorizontalAlignment = 0;
                    Rank1.Border = 0;
                    Rank1.PaddingTop = 5;
                    temptable1.AddCell(Rank1);




                    PdfPCell cellName2 = new PdfPCell(new Phrase("3  Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellName2.HorizontalAlignment = 0;
                    cellName2.Border = 0;
                    cellName2.PaddingTop = 5;
                    temptable1.AddCell(cellName2);

                    PdfPCell cellName4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellName4.HorizontalAlignment = 0;
                    cellName4.Border = 0;
                    cellName4.PaddingTop = 5;
                    temptable1.AddCell(cellName4);

                    PdfPCell cellName3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellName3.HorizontalAlignment = 0;
                    cellName3.Border = 0;
                    cellName3.PaddingTop = 5;
                    temptable1.AddCell(cellName3);

                    PdfPCell cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Age ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDateofbirth.HorizontalAlignment = 0;
                    cellDateofbirth.Border = 0;
                    cellDateofbirth.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth);

                    PdfPCell cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDateofbirth2.HorizontalAlignment = 0;
                    cellDateofbirth2.Border = 0;
                    cellDateofbirth2.PaddingTop = 5;
                    temptable1.AddCell(cellDateofbirth2);

                    PdfPCell cellDateofbirth1;

                    if (int.Parse(dateofbirth) == 0)
                    {
                        cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellDateofbirth1.HorizontalAlignment = 0;
                        cellDateofbirth1.Border = 0;
                        cellDateofbirth1.PaddingTop = 5;
                        temptable1.AddCell(cellDateofbirth1);
                    }
                    else
                    {
                        cellDateofbirth1 = new PdfPCell(new Phrase(EmpDtofBirths + " & " + dateofbirth, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellDateofbirth1.HorizontalAlignment = 0;
                        cellDateofbirth1.Border = 0;
                        cellDateofbirth1.PaddingTop = 5;
                        temptable1.AddCell(cellDateofbirth1);
                    }

                    PdfPCell cellEdq = new PdfPCell(new Phrase("5  Qualification ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellEdq.HorizontalAlignment = 0;
                    cellEdq.Border = 0;
                    cellEdq.PaddingTop = 5;
                    temptable1.AddCell(cellEdq);

                    PdfPCell cellEdq2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellEdq2.HorizontalAlignment = 0;
                    cellEdq2.Border = 0;
                    cellEdq2.PaddingTop = 5;
                    temptable1.AddCell(cellEdq2);

                    PdfPCell cellEdq1 = new PdfPCell(new Phrase(educationqualification, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellEdq1.HorizontalAlignment = 0;
                    cellEdq1.Border = 0;
                    cellEdq1.PaddingTop = 5;
                    temptable1.AddCell(cellEdq1);

                    PdfPCell cellExperienc = new PdfPCell(new Phrase("6  Experience", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellExperienc.HorizontalAlignment = 0;
                    cellExperienc.Border = 0;
                    cellExperienc.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc);

                    PdfPCell cellExperienc2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellExperienc2.HorizontalAlignment = 0;
                    cellExperienc2.Border = 0;
                    cellExperienc2.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc2);


                    PdfPCell cellExperienc1 = new PdfPCell(new Phrase(PrevYrExp, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellExperienc1.HorizontalAlignment = 0;
                    cellExperienc1.Border = 0;
                    cellExperienc1.PaddingTop = 5;
                    temptable1.AddCell(cellExperienc1);

                    PdfPCell cellFather21 = new PdfPCell(new Phrase("7  Father’s Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellFather21.HorizontalAlignment = 0;
                    cellFather21.Border = 0;
                    cellFather21.PaddingTop = 5;
                    temptable1.AddCell(cellFather21);

                    PdfPCell cellFather41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellFather41.HorizontalAlignment = 0;
                    cellFather41.Border = 0;
                    cellFather41.PaddingTop = 5;
                    temptable1.AddCell(cellFather41);

                    PdfPCell cellFather31 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellFather31.HorizontalAlignment = 0;
                    cellFather31.Border = 0;
                    cellFather31.PaddingTop = 5;
                    temptable1.AddCell(cellFather31);

                    PdfPCell cellMother21 = new PdfPCell(new Phrase("8  Mother’s Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMother21.HorizontalAlignment = 0;
                    cellMother21.Border = 0;
                    cellMother21.PaddingTop = 5;
                    temptable1.AddCell(cellMother21);

                    PdfPCell cellMother41 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMother41.HorizontalAlignment = 0;
                    cellMother41.Border = 0;
                    cellMother41.PaddingTop = 5;
                    temptable1.AddCell(cellMother41);

                    PdfPCell cellMother31 = new PdfPCell(new Phrase(MotherName, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellMother31.HorizontalAlignment = 0;
                    cellMother31.Border = 0;
                    cellMother31.PaddingTop = 5;
                    temptable1.AddCell(cellMother31);






                    PdfPCell cellDesign = new PdfPCell(new Phrase("9  Occupation  ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDesign.HorizontalAlignment = 0;
                    cellDesign.Border = 0;
                    cellDesign.PaddingTop = 5;
                    temptable1.AddCell(cellDesign);

                    PdfPCell cellDesign1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellDesign1.HorizontalAlignment = 0;
                    cellDesign1.Border = 0;
                    cellDesign1.PaddingTop = 5;
                    temptable1.AddCell(cellDesign1);

                    PdfPCell cellDesign3 = new PdfPCell(new Phrase(FatherOccupation, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellDesign3.HorizontalAlignment = 0;
                    cellDesign3.Border = 0;
                    cellDesign3.PaddingTop = 5;
                    temptable1.AddCell(cellDesign3);

                    PdfPCell cellMobile1 = new PdfPCell(new Phrase("10  Mobile", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMobile1.HorizontalAlignment = 0;
                    cellMobile1.Border = 0;
                    cellMobile1.PaddingTop = 5;
                    temptable1.AddCell(cellMobile1);

                    PdfPCell cellMobile12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMobile12.HorizontalAlignment = 0;
                    cellMobile12.Border = 0;
                    cellMobile12.PaddingTop = 5;
                    temptable1.AddCell(cellMobile12);

                    PdfPCell cellMobile11 = new PdfPCell(new Phrase(MobileNumber, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellMobile11.HorizontalAlignment = 0;
                    cellMobile11.Border = 0;
                    cellMobile11.PaddingTop = 5;
                    temptable1.AddCell(cellMobile11);


                    PdfPCell cellAadhaar1 = new PdfPCell(new Phrase("11  Aadhaar No", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellAadhaar1.HorizontalAlignment = 0;
                    cellAadhaar1.Border = 0;
                    cellAadhaar1.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar1);

                    PdfPCell cellAadhaar12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellAadhaar12.HorizontalAlignment = 0;
                    cellAadhaar12.Border = 0;
                    cellAadhaar12.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar12);

                    PdfPCell cellAadhaar11 = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellAadhaar11.HorizontalAlignment = 0;
                    cellAadhaar11.Border = 0;
                    cellAadhaar11.PaddingTop = 5;
                    temptable1.AddCell(cellAadhaar11);

                    PdfPCell cellpan1 = new PdfPCell(new Phrase("12  PAN No", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellpan1.HorizontalAlignment = 0;
                    cellpan1.Border = 0;
                    cellpan1.PaddingTop = 5;
                    temptable1.AddCell(cellpan1);

                    PdfPCell cellepan12 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellepan12.HorizontalAlignment = 0;
                    cellepan12.Border = 0;
                    cellepan12.PaddingTop = 5;
                    temptable1.AddCell(cellepan12);

                    PdfPCell cellpanno11 = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellpanno11.HorizontalAlignment = 0;
                    cellpanno11.Border = 0;
                    cellpanno11.PaddingTop = 5;
                    temptable1.AddCell(cellpanno11);

                    PdfPCell childTable1 = new PdfPCell(temptable1);
                    childTable1.Border = 0;
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 3;
                    table2.AddCell(childTable1);


                    PdfPTable temptable2 = new PdfPTable(3);
                    temptable2.TotalWidth = 70f;
                    temptable2.LockedWidth = true;
                    float[] tempwidth2 = new float[] { 2f, 3f, 2f };
                    temptable2.SetWidths(tempwidth2);


                    if (dtEmpdetails.Rows[m]["Image"].ToString() != "")
                    {
                        iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[m]["Image"].ToString());
                        //empphoto.ScalePercent(23f);
                        empphoto.ScaleAbsolute(110.7f, 140.5f);
                        PdfPCell employeephoto = new PdfPCell();
                        Paragraph logo = new Paragraph();
                        logo.Add(new Chunk(empphoto, 0, 0));
                        employeephoto.AddElement(logo);
                        employeephoto.HorizontalAlignment = 2;
                        employeephoto.Border = 0;
                        employeephoto.Colspan = 3;

                        temptable2.AddCell(employeephoto);

                    }


                    PdfPCell childTable2 = new PdfPCell(temptable2);
                    childTable2.Border = 0;
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 3;
                    table2.AddCell(childTable2);

                    document.Add(table2);

                    #endregion Basic Information of the Employee

                    #region Employee Addresses



                    PdfPTable tbldatas2 = new PdfPTable(6);
                    tbldatas2.TotalWidth = 580f;
                    tbldatas2.LockedWidth = true;
                    float[] widthdata2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };

                    PdfPTable tbldata2 = new PdfPTable(3);
                    tbldata2.TotalWidth = 290f;
                    tbldata2.LockedWidth = true;
                    float[] widths1 = new float[] { 2f, 1.5f, 3f };
                    tbldata2.SetWidths(widths1);


                    PdfPCell data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    data2space.Colspan = 6;
                    data2space.Border = 0;


                    PdfPCell cellPresentaddr = new PdfPCell(new Phrase("13  Present Address ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 3;
                    cellPresentaddr.Border = 0;
                    cellPresentaddr.PaddingTop = 8;
                    tbldata2.AddCell(cellPresentaddr);


                    PdfPCell cellPresentaddrval = new PdfPCell(new Phrase(Emppresentaddress, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddrval.HorizontalAlignment = 0;
                    cellPresentaddrval.Colspan = 3;
                    cellPresentaddrval.Border = 0;
                    cellPresentaddrval.PaddingTop = 8;
                    tbldata2.AddCell(cellPresentaddrval);







                    PdfPCell childTables1 = new PdfPCell(tbldata2);
                    childTables1.HorizontalAlignment = 0;
                    childTables1.Colspan = 3;
                    childTables1.Border = 0;
                    tbldatas2.AddCell(childTables1);



                    PdfPTable tbldata3 = new PdfPTable(3);
                    tbldata3.TotalWidth = 290f;
                    tbldata3.LockedWidth = true;
                    float[] width2 = new float[] { 2f, 1.5f, 3f };
                    tbldata3.SetWidths(width2);

                    PdfPCell cellPerminentaddr = new PdfPCell(new Phrase("Permanent Address", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 3;
                    cellPerminentaddr.Border = 0;
                    cellPerminentaddr.PaddingTop = 8;
                    cellPerminentaddr.PaddingLeft = 15;
                    tbldata3.AddCell(cellPerminentaddr);


                    PdfPCell cellPerminentaddrval = new PdfPCell(new Phrase(Emppermanentaddress, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddrval.HorizontalAlignment = 0;
                    cellPerminentaddrval.Colspan = 3;
                    cellPerminentaddrval.Border = 0;
                    cellPerminentaddrval.PaddingTop = 8;
                    cellPerminentaddrval.PaddingLeft = 15;
                    tbldata3.AddCell(cellPerminentaddrval);




                    PdfPCell childTables12 = new PdfPCell(tbldata3);
                    childTables12.HorizontalAlignment = 0;
                    childTables12.Colspan = 3;
                    childTables12.Border = 0;
                    tbldatas2.AddCell(childTables12);

                    document.Add(tbldatas2);




                    #endregion Employee Addresses

                    #region

                    PdfPTable table3 = new PdfPTable(8);
                    table3.TotalWidth = 580f;
                    table3.LockedWidth = true;
                    float[] widtha2 = new float[] { 1f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    table3.SetWidths(widtha2);

                    PdfPCell celllanguage = new PdfPCell(new Phrase("14  Languages Known                   :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celllanguage.HorizontalAlignment = 0;
                    celllanguage.Colspan = 4;
                    celllanguage.Border = 0;
                    celllanguage.PaddingTop = 8;
                    celllanguage.PaddingLeft = -3;
                    table3.AddCell(celllanguage);


                    PdfPCell celllanguage1 = new PdfPCell(new Phrase(lgknwn, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celllanguage1.HorizontalAlignment = 0;
                    celllanguage1.Colspan = 4;
                    celllanguage1.Border = 0;
                    celllanguage1.PaddingTop = 8;
                    celllanguage1.PaddingLeft = -50;
                    table3.AddCell(celllanguage1);

                    PdfPCell cellphyst = new PdfPCell(new Phrase("15  Physical GDX ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellphyst.HorizontalAlignment = 0;
                    cellphyst.Colspan = 2;
                    cellphyst.Border = 0;
                    cellphyst.PaddingTop = 8;
                    cellphyst.PaddingLeft = -3;
                    table3.AddCell(cellphyst);

                    table3.AddCell(cellspace);



                    PdfPCell cellHeightem = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHeightem.HorizontalAlignment = 0;
                    cellHeightem.Colspan = 1;
                    cellHeightem.Border = 0;
                    cellHeightem.PaddingTop = 5;
                    cellHeightem.PaddingLeft = 30;
                    table3.AddCell(cellHeightem);


                    PdfPCell cellHeightem1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHeightem1.HorizontalAlignment = 0;
                    cellHeightem1.Colspan = 1;
                    cellHeightem1.Border = 0;
                    cellHeightem1.PaddingTop = 5;
                    cellHeightem1.PaddingLeft = 30;
                    table3.AddCell(cellHeightem1);


                    PdfPCell cellHeight = new PdfPCell(new Phrase(" Height :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellHeight.HorizontalAlignment = 0;
                    cellHeight.Colspan = 0;
                    cellHeight.Border = 0;
                    cellHeight.PaddingTop = 5;
                    cellHeight.PaddingLeft = 10;
                    table3.AddCell(cellHeight);


                    if (height != "0")
                    {
                        PdfPCell cellHeight1 = new PdfPCell(new Phrase(height, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellHeight1.HorizontalAlignment = 0;
                        cellHeight1.Colspan = 0;
                        cellHeight1.Border = 0;
                        cellHeight1.PaddingTop = 5;
                        table3.AddCell(cellHeight1);
                    }
                    if (height == "0")
                    {
                        PdfPCell cellHeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellHeight1.HorizontalAlignment = 0;
                        cellHeight1.Colspan = 0;
                        cellHeight1.Border = 0;
                        cellHeight1.PaddingTop = 5;
                        cellHeight1.PaddingLeft = -30;
                        table3.AddCell(cellHeight1);
                    }


                    PdfPCell cellWeight = new PdfPCell(new Phrase("Weight :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellWeight.HorizontalAlignment = 0;
                    cellWeight.Colspan = 0;
                    cellWeight.Border = 0;
                    cellWeight.PaddingTop = 5;
                    cellWeight.PaddingLeft = 30;
                    table3.AddCell(cellWeight);

                    if (weight != "0")
                    {
                        PdfPCell cellWeight1 = new PdfPCell(new Phrase(weight, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellWeight1.HorizontalAlignment = 0;
                        cellWeight1.Colspan = 0;
                        cellWeight1.Border = 0;
                        cellWeight1.PaddingTop = 5;
                        table3.AddCell(cellWeight1);
                    }
                    if (weight == "0")
                    {
                        PdfPCell cellWeight1 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellWeight1.HorizontalAlignment = 0;
                        cellWeight1.Colspan = 0;
                        cellWeight1.Border = 0;
                        cellWeight1.PaddingTop = 5;
                        cellWeight1.PaddingLeft = -50;
                        table3.AddCell(cellWeight1);
                    }
                    //data1.AddCell(cellspace1);

                    PdfPCell cellchest = new PdfPCell(new Phrase(" Chest :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellchest.HorizontalAlignment = 0;
                    cellchest.Colspan = 0;
                    cellchest.Border = 0;
                    cellchest.PaddingTop = 5;
                    table3.AddCell(cellchest);


                    if (chest != "0")
                    {
                        PdfPCell cellChest1 = new PdfPCell(new Phrase(chest, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellChest1.HorizontalAlignment = 0;
                        cellChest1.Colspan = 0;
                        cellChest1.Border = 0;
                        cellChest1.PaddingTop = 5;
                        cellChest1.PaddingLeft = -30;
                        table3.AddCell(cellChest1);
                    }
                    if (chest == "0")
                    {
                        PdfPCell cellChest1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                        cellChest1.HorizontalAlignment = 0;
                        cellChest1.Colspan = 0;
                        cellChest1.Border = 0;
                        cellChest1.PaddingTop = 5;
                        cellChest1.PaddingLeft = -30;
                        table3.AddCell(cellChest1);
                    }

                    table3.AddCell(cellspace);

                    document.Add(table3);



                    PdfPTable data1 = new PdfPTable(3);
                    data1.TotalWidth = 580f;
                    data1.LockedWidth = true;
                    float[] widthdate = new float[] { 3f, 2f, 3f };
                    data1.SetWidths(widthdate);

                    PdfPCell celldata15 = new PdfPCell(new Phrase("16  Identification Marks ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldata15.HorizontalAlignment = 0;
                    celldata15.Colspan = 0;
                    celldata15.Border = 0;
                    celldata15.PaddingTop = 8;
                    celldata15.PaddingLeft = -3;
                    data1.AddCell(celldata15);

                    PdfPCell celldatacol = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldatacol.HorizontalAlignment = 0;
                    celldatacol.Colspan = 2;
                    celldatacol.Border = 0;
                    celldatacol.PaddingTop = 8;
                    celldatacol.PaddingLeft = -46;
                    data1.AddCell(celldatacol);


                    PdfPCell celldata16 = new PdfPCell(new Phrase("      (i) " + identificationmark1 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata16.HorizontalAlignment = 0;
                    celldata16.Colspan = 3;
                    celldata16.Border = 0;
                    celldata16.PaddingTop = 5;
                    data1.AddCell(celldata16);

                    data1.AddCell(cellspace);

                    PdfPCell celldata17 = new PdfPCell(new Phrase("      (ii) " + identificationmark2 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata17.HorizontalAlignment = 0;
                    celldata17.Colspan = 3;
                    celldata17.Border = 0;
                    celldata17.PaddingTop = 5;
                    // celldata17.PaddingLeft = -20;
                    data1.AddCell(celldata17);

                    data1.AddCell(cellspace);

                    PdfPCell cellMarital = new PdfPCell(new Phrase("17  Marital Status / \n      Name of Spouse", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMarital.HorizontalAlignment = 0;
                    cellMarital.Colspan = 0;
                    cellMarital.Border = 0;
                    cellMarital.PaddingTop = 8;
                    cellMarital.PaddingLeft = -3;
                    data1.AddCell(cellMarital);

                    PdfPCell cellMarital2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellMarital2.HorizontalAlignment = 0;
                    cellMarital2.Colspan = 0;
                    cellMarital2.Border = 0;
                    cellMarital2.PaddingTop = 8;
                    cellMarital2.PaddingLeft = -46;
                    data1.AddCell(cellMarital2);

                    if (maritalstatus.Length > 0)
                    {
                        if (SpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = maritalstatus + " / " + SpouseName;

                        }
                        else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = maritalstatus + " / " + FSpouseName;
                        }
                        else
                        {

                            MaritalStatusSpouseText = maritalstatus;
                        }



                    }
                    else if (maritalstatus.Length == 0)
                    {

                        if (SpouseName.Length > 0)
                        {
                            MaritalStatusSpouseText = SpouseName;

                        }

                        else if (SpouseName.Length == 0 && FSpouseName.Length > 0)
                        {

                            MaritalStatusSpouseText = FSpouseName;

                        }
                        else
                        {

                            MaritalStatusSpouseText = "";
                        }

                    }
                    else
                    {
                        MaritalStatusSpouseText = "";
                    }

                    PdfPCell cellMarital1 = new PdfPCell(new Phrase(MaritalStatusSpouseText, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellMarital1.HorizontalAlignment = 0;
                    cellMarital1.Colspan = 0;
                    cellMarital1.Border = 0;
                    cellMarital1.PaddingTop = 8;
                    cellMarital1.PaddingLeft = -100;
                    data1.AddCell(cellMarital1);

                    PdfPCell celldatablood = new PdfPCell(new Phrase("18  Blood Group ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldatablood.HorizontalAlignment = 0;
                    celldatablood.Colspan = 1;
                    celldatablood.Border = 0;
                    celldatablood.PaddingTop = 8;
                    celldatablood.PaddingLeft = -3;
                    data1.AddCell(celldatablood);

                    PdfPCell celldatabloodl = new PdfPCell(new Phrase(": ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldatabloodl.HorizontalAlignment = 0;
                    celldatabloodl.Colspan = 1;
                    celldatabloodl.Border = 0;
                    celldatabloodl.PaddingTop = 8;
                    celldatabloodl.PaddingLeft = -46;
                    data1.AddCell(celldatabloodl);


                    PdfPCell celldatabloodl16 = new PdfPCell(new Phrase(BloodGroupName, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldatabloodl16.HorizontalAlignment = 0;
                    celldatabloodl16.Colspan = 1;
                    celldatabloodl16.Border = 0;
                    celldatabloodl16.PaddingTop = 5;
                    celldatabloodl16.PaddingLeft = -100;
                    data1.AddCell(celldatabloodl16);

                    document.Add(data1);

                    PdfPTable Family = new PdfPTable(4);
                    Family.TotalWidth = 590f;
                    Family.LockedWidth = true;
                    float[] widthFamily = new float[] { 2f, 3f, 4f, 3f };
                    Family.SetWidths(widthFamily);

                    PdfPCell cellheading = new PdfPCell(new Phrase("19  Family Particulars                               :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellheading.Colspan = 4;
                    cellheading.Border = 0;
                    cellheading.HorizontalAlignment = 0;
                    Family.AddCell(cellheading);

                    PdfPCell cellsno = new PdfPCell(new Phrase("SL No.", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellsno.Colspan = 1;
                    cellsno.Border = 0;
                    cellsno.HorizontalAlignment = 0;
                    Family.AddCell(cellsno);

                    PdfPCell cellfamname = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellfamname.Colspan = 1;
                    cellfamname.Border = 0;
                    cellfamname.HorizontalAlignment = 0;
                    Family.AddCell(cellfamname);

                    PdfPCell cellfamage = new PdfPCell(new Phrase("Date of Birth/ Age", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellfamage.Colspan = 1;
                    cellfamage.Border = 0;
                    cellfamage.HorizontalAlignment = 0;
                    Family.AddCell(cellfamage);

                    PdfPCell cellRemp = new PdfPCell(new Phrase("Relation with the Employee", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellRemp.Colspan = 1;
                    cellRemp.Border = 0;
                    cellRemp.HorizontalAlignment = 0;
                    Family.AddCell(cellRemp);

                    string Relname = "";
                    string Relage = "";
                    string RelDOFBirth = "";
                    string RType1 = "";
                    string ROccupation = "";

                    int k = 1;



                    string familydetails = "select *,case convert(varchar(10),DOfBirth,103) when '01/01/1900' then '' else convert(varchar(10),DOfBirth,103) end as dbirth from emprelationships where EmpId='" + Idno + "'";
                    DataTable dtfamilydetails = Config.ExecuteReaderWithQueryAsync(familydetails).Result;
                    if (dtfamilydetails.Rows.Count > 0)
                    {


                        for (int i = 0; i < dtfamilydetails.Rows.Count; i++)
                        {
                            Relname = dtfamilydetails.Rows[i]["RName"].ToString();
                            Relage = dtfamilydetails.Rows[i]["age"].ToString();
                            RelDOFBirth = dtfamilydetails.Rows[i]["dbirth"].ToString();
                            ROccupation = dtfamilydetails.Rows[i]["ROccupation"].ToString();
                            RType1 = dtfamilydetails.Rows[i]["RType"].ToString();
                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtfamilydetails.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + " / " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }

                            if (Relname.Length > 0)
                            {
                                PdfPCell cellsno1 = new PdfPCell(new Phrase(k.ToString(), FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                                cellsno1.Colspan = 1;
                                cellsno1.HorizontalAlignment = 0;
                                cellsno1.Border = 0;
                                Family.AddCell(cellsno1);
                            }
                            else
                            {
                                PdfPCell cellsno1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                                cellsno1.Colspan = 1;
                                cellsno1.HorizontalAlignment = 0;
                                cellsno1.Border = 0;
                                Family.AddCell(cellsno1);
                            }
                            PdfPCell cellfamname1 = new PdfPCell(new Phrase(Relname, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                            cellfamname1.Colspan = 1;
                            cellfamname1.Border = 0;
                            cellfamname1.HorizontalAlignment = 0;
                            Family.AddCell(cellfamname1);



                            PdfPCell cellfamage1 = new PdfPCell(new Phrase(RelDOFBirth, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                            cellfamage1.Colspan = 1;
                            cellfamage1.HorizontalAlignment = 0;
                            cellfamage1.Border = 0;
                            Family.AddCell(cellfamage1);

                            PdfPCell cellfamrelation1 = new PdfPCell(new Phrase(RType1, FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                            cellfamrelation1.Colspan = 1;
                            cellfamrelation1.Border = 0;
                            cellfamrelation1.HorizontalAlignment = 0;
                            Family.AddCell(cellfamrelation1);

                            k++;
                        }

                    }
                    document.Add(Family);


                    PdfPTable data4 = new PdfPTable(2);
                    data4.TotalWidth = 525f;
                    data4.LockedWidth = true;
                    float[] widthdate4 = new float[] { 2f, 1f };
                    data4.SetWidths(widthdate4);

                    PdfPCell cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellempty.HorizontalAlignment = 0;
                    cellempty.Colspan = 2;
                    cellempty.Border = 0;
                    cellempty.PaddingTop = 5;

                    document.Add(data4);

                    #region Employee Reference Details


                    PdfPTable tblReferences = new PdfPTable(4);
                    tblReferences.TotalWidth = 580f;
                    tblReferences.LockedWidth = true;
                    float[] widthRef = new float[] { 2f, 2f, 2f, 2f };
                    tblReferences.SetWidths(widthRef);

                    PdfPCell celldataref = new PdfPCell(new Phrase("20  Reference (2 Neighbours with name , occupation and address / father-in-law address)", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldataref.HorizontalAlignment = 0;
                    celldataref.Colspan = 4;
                    celldataref.Border = 0;
                    celldataref.PaddingTop = 5;
                    celldataref.PaddingLeft = -3;
                    tblReferences.AddCell(celldataref);

                    PdfPCell Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Refspace.Colspan = 4;
                    Refspace.Border = 0;

                    PdfPCell celldata26 = new PdfPCell(new Phrase("    a) " + refaddress1 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata26.HorizontalAlignment = 0;
                    celldata26.Colspan = 4;
                    celldata26.Border = 0;
                    celldata26.PaddingTop = 5;
                    tblReferences.AddCell(celldata26);

                    //tblReferences.AddCell(Refspace);

                    PdfPCell celldata28 = new PdfPCell(new Phrase("    b) " + refaddress2 + "", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    celldata28.HorizontalAlignment = 0;
                    celldata28.Colspan = 4;
                    celldata28.Border = 0;
                    tblReferences.AddCell(celldata28);
                    tblReferences.AddCell(Refspace);




                    #region for photos

                    iTextSharp.text.Image gif = null;


                    PdfPCell cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);

                    if (LHThumb.Length > 0)
                    {

                        Byte[] bytes = Convert.FromBase64String(LHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(100f, 100f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 20f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        // EmpImage.PaddingLeft = 15;
                        tblReferences.AddCell(EmpImage);
                    }
                    else
                    {
                        cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellSpacetemprt.HorizontalAlignment = 0;
                        cellSpacetemprt.Colspan = 1;
                        cellSpacetemprt.FixedHeight = 50;
                        tblReferences.AddCell(cellSpacetemprt);
                    }

                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);

                    if (RHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(100f, 100f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 20f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        // EmpImage.PaddingLeft = 15;
                        tblReferences.AddCell(EmpImage);
                    }
                    else
                    {
                        cellSpacetemprt = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellSpacetemprt.HorizontalAlignment = 0;
                        cellSpacetemprt.Colspan = 1;
                        cellSpacetemprt.FixedHeight = 50;
                        tblReferences.AddCell(cellSpacetemprt);
                    }

                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" Left Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    cellSpacetemprt.PaddingRight = 10;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    tblReferences.AddCell(cellSpacetemprt);
                    cellSpacetemprt = new PdfPCell(new Phrase(" Right Thumb impressions:", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellSpacetemprt.HorizontalAlignment = 0;
                    cellSpacetemprt.Colspan = 1;
                    cellSpacetemprt.Border = 0;
                    cellSpacetemprt.PaddingRight = 10;
                    tblReferences.AddCell(cellSpacetemprt);
                    #endregion for photos

                    tblReferences.AddCell(Refspace);


                    PdfPCell cellSpace16 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellSpace16.HorizontalAlignment = 0;
                    cellSpace16.Colspan = 6;
                    cellSpace16.Border = 0;
                    tblReferences.AddCell(cellSpace16);

                    PdfPCell cellDesc = new PdfPCell(new Phrase("The above information is true to the best of my knowledge and belief.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.BOLD, BaseColor.BLACK)));
                    cellDesc.HorizontalAlignment = 0;
                    cellDesc.Colspan = 4;
                    cellDesc.Border = 0;
                    cellDesc.PaddingTop = 5;
                    cellDesc.PaddingLeft = -3;
                    tblReferences.AddCell(cellDesc);

                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);
                    tblReferences.AddCell(cellSpace16);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 4;
                        sealImg.PaddingLeft = -570f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblReferences.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellsign = new PdfPCell(new Phrase("Signature of Applicant :  ", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellsign.HorizontalAlignment = 0;
                    cellsign.Colspan = 2;
                    cellsign.Border = 0;
                    cellsign.PaddingTop = 5;
                    cellsign.PaddingLeft = 0;
                    cellsign.PaddingLeft = -3;
                    tblReferences.AddCell(cellsign);


                    PdfPCell cellrecrutment = new PdfPCell(new Phrase("Recruitment Officer", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellrecrutment.HorizontalAlignment = 1;
                    cellrecrutment.Colspan = 2;
                    cellrecrutment.Border = 0;
                    cellrecrutment.PaddingTop = 5;
                    cellrecrutment.PaddingLeft = -3;
                    tblReferences.AddCell(cellrecrutment);


                    PdfPCell celldate3 = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    celldate3.HorizontalAlignment = 0;
                    celldate3.Colspan = 2;
                    celldate3.Border = 0;
                    celldate3.PaddingLeft = -3;
                    tblReferences.AddCell(celldate3);


                    PdfPCell cellplace = new PdfPCell(new Phrase("Date :", FontFactory.GetFont(fontstyle, Fontsize3, Font.BOLD, BaseColor.BLACK)));
                    cellplace.HorizontalAlignment = 1;
                    cellplace.Border = 0;
                    cellplace.Colspan = 2;
                    cellplace.PaddingLeft = -75;
                    tblReferences.AddCell(cellplace);



                    document.Add(tblReferences);


                    document.NewPage();


                    #region For Finger Prints

                    PdfPTable tblefingerprints = new PdfPTable(6);
                    tblefingerprints.TotalWidth = 580f;
                    tblefingerprints.LockedWidth = true;
                    float[] widthFinger = new float[] { 2f, 3f, 1f, 2f, 3f, 0.5f };
                    tblefingerprints.SetWidths(widthFinger);
                    PdfPCell FingerPrints;

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    FingerPrints.FixedHeight = 60;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Left Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 1;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Right Hand", FontFactory.GetFont(fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 1;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Thumb Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHThumb.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHThumb);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);


                    FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHIndex.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHIndex);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Index Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHIndex.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHIndex);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHMiddle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHMiddle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Middle Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHMiddle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHMiddle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);


                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHRing.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHRing);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Ring Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHRing.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHRing);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 6;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (LHLittle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(LHLittle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }

                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);
                    FingerPrints = new PdfPCell(new Phrase("Little Finger", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    FingerPrints.PaddingTop = 30;
                    tblefingerprints.AddCell(FingerPrints);
                    if (RHLittle.Length > 0)
                    {
                        Byte[] bytes = Convert.FromBase64String(RHLittle);
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(bytes);
                        Empphoto.ScaleAbsolute(70f, 90f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 30f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 0;
                        EmpImage.Colspan = 1;
                        EmpImage.PaddingLeft = 15;
                        tblefingerprints.AddCell(EmpImage);
                    }
                    else
                    {
                        FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        FingerPrints.HorizontalAlignment = 0;
                        FingerPrints.Colspan = 1;
                        tblefingerprints.AddCell(FingerPrints);
                    }
                    FingerPrints = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    FingerPrints.HorizontalAlignment = 0;
                    FingerPrints.Colspan = 1;
                    FingerPrints.Border = 0;
                    tblefingerprints.AddCell(FingerPrints);

                    document.Add(tblefingerprints);
                    document.NewPage();

                    #endregion

                    PdfPTable tblinstructions = new PdfPTable(4);
                    tblinstructions.TotalWidth = 580f;
                    tblinstructions.LockedWidth = true;
                    float[] widthRefIns = new float[] { 0.5f, 2f, 2f, 2f };
                    tblinstructions.SetWidths(widthRefIns);

                    PdfPCell cellSpace161 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontstyle, Fontsize3, Font.NORMAL, BaseColor.BLACK)));
                    cellSpace161.HorizontalAlignment = 0;
                    cellSpace161.Colspan = 6;
                    cellSpace161.Border = 0;


                    PdfPCell cellExperiencphrase = new PdfPCell(new Phrase("RULES AND REGULATIONS", FontFactory.GetFont(fontstyle, Fontsize3 + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellExperiencphrase.HorizontalAlignment = 1;
                    cellExperiencphrase.Colspan = 4;
                    cellExperiencphrase.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase);

                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase77 = new PdfPCell(new Phrase("I hereby agree that I will abide by all the rules and regulations of the company as given hereunder. Also I am aware that any  violation of these rules and regulations  I shall be liable to disciplinary action as per the company laws :-", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase77.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase77.Colspan = 4;
                    cellExperiencphrase77.Border = 0;
                    cellExperiencphrase77.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase77);

                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase66 = new PdfPCell(new Phrase("1.  After joining the duty, every security person has to work for one full month. He will not be absent from duty without obtaining prior permission from field officer.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase66.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase66.Colspan = 4;
                    cellExperiencphrase66.Border = 0;
                    cellExperiencphrase66.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase66);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase55 = new PdfPCell(new Phrase("2.  He may take a maximum of 3 days leave with prior permission from the field officer. field officer can grant  leave upto there days. Area manger can grant leave upto 6 days, managing Director’s prior permission, is necessary in case of the leave exceeding 6 days. Request shall be initiated one week in advance in such cases.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase55.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase55.Colspan = 4;
                    cellExperiencphrase55.Border = 0;
                    cellExperiencphrase55.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase55);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase44 = new PdfPCell(new Phrase("3.  Any security person will be removed from services if he is found having any bad habits or absenting from duty without prior permission or misbehaving with his superiors / colleagues.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase44.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase44.Colspan = 4;
                    cellExperiencphrase44.Border = 0;
                    cellExperiencphrase44.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase44);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase33 = new PdfPCell(new Phrase("4. If any security person is found involved in theft, cheating, dacoity, lending  or borrowing money from the employees of the unit/factory, he shall be handed over to police for suitable action.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase33.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase33.Colspan = 4;
                    cellExperiencphrase33.Border = 0;
                    cellExperiencphrase33.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase33);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase22 = new PdfPCell(new Phrase("5.  All security personnel should wear neat and clean uniform during duty hours. They have to have proper hair cut and daily shaving before reporting for duty. He is to ensure that no complaints on indiscipline are received from clients.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase22.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase22.Colspan = 4;
                    cellExperiencphrase22.Border = 0;
                    cellExperiencphrase22.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase22);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase11 = new PdfPCell(new Phrase("6.  If any security person wishes to resign from the company, he may be so provided; He has minimum services of 12 months in the company and has informed the organization, in writing at least one month in advance. Any violation of the rule shall result in non-payment of his salary for the month.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase11.Colspan = 4;
                    cellExperiencphrase11.Border = 0;
                    cellExperiencphrase11.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase11);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase10 = new PdfPCell(new Phrase("7.  Parades at unit level/mass parades in a particular area and various physical activities are conducted at regular intervals. it is mandatory to all security personnel to attend without any pre-condition. Necessary disciplinary action will be initiated against the defaulters as per the company’s Rule.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase10.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase10.Colspan = 4;
                    cellExperiencphrase10.Border = 0;
                    cellExperiencphrase10.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase10);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase9 = new PdfPCell(new Phrase("8.  He shall not leave the working place under any circumstances without properly handing over his duties to the reliever. in case of emergency he should make an alternative arrangement before leaving the duty post or continue performing the till he is relived.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase9.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase9.Colspan = 4;
                    cellExperiencphrase9.Border = 0;
                    cellExperiencphrase9.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase9);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase8 = new PdfPCell(new Phrase("9.  All security personnel should obey the orders issued by their superiors and should perform their duty in a disciplined manner.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase8.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase8.Colspan = 4;
                    cellExperiencphrase8.Border = 0;
                    cellExperiencphrase8.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase8);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase7 = new PdfPCell(new Phrase("10.  A full set of uniform will be issued at the time of joining the duty. The second set, viz. one pant in the fourth month and two pairs of socks in the sixth month will be issued on payment. uniform once issued will not be taken back under any circumstances.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase7.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase7.Colspan = 4;
                    cellExperiencphrase7.Border = 0;
                    cellExperiencphrase7.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase7);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase6 = new PdfPCell(new Phrase("11.  All security personnel should be punctual in reporting for they duty and ensure signing the attendances register before joining the duty. The late comers shall be liable for disciplinary action as per company law.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase6.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase6.Colspan = 4;
                    cellExperiencphrase6.Border = 0;
                    cellExperiencphrase6.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase6);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase5 = new PdfPCell(new Phrase("12.  All security personnel are required to perform overtime or additional duties as and when called upon to do so. Refusal to do such additional tasks or overtime duties shall attract disciplinary action.", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase5.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellExperiencphrase5.Colspan = 4;
                    cellExperiencphrase5.Border = 0;
                    cellExperiencphrase5.SetLeading(0f, 1.2f);
                    tblinstructions.AddCell(cellExperiencphrase5);

                    tblinstructions.AddCell(cellSpace161);
                    tblinstructions.AddCell(cellSpace161);
                    tblinstructions.AddCell(cellSpace161);

                    PdfPCell cellExperiencphrase4 = new PdfPCell(new Phrase("Left Hand Thumb                                                         Impression of the Applicant", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase4.HorizontalAlignment = 1;
                    cellExperiencphrase4.Colspan = 2;
                    cellExperiencphrase4.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase4);


                    PdfPCell cellExperiencphrase3 = new PdfPCell(new Phrase("Signature of the Applicant", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase3.HorizontalAlignment = 1;
                    cellExperiencphrase3.Colspan = 2;
                    cellExperiencphrase3.Border = 0;
                    //cellExperiencphrase3.PaddingLe = -50;
                    tblinstructions.AddCell(cellExperiencphrase3);

                    PdfPCell cellExperiencphrase2 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase2.HorizontalAlignment = 1;
                    cellExperiencphrase2.Colspan = 2;
                    cellExperiencphrase2.Border = 0;
                    tblinstructions.AddCell(cellExperiencphrase2);

                    PdfPCell cellExperiencphrase1 = new PdfPCell(new Phrase(" Date:", FontFactory.GetFont(fontstyle, Fontsize3 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellExperiencphrase1.HorizontalAlignment = 1;
                    cellExperiencphrase1.Colspan = 2;
                    cellExperiencphrase1.Border = 0;
                    cellExperiencphrase1.PaddingLeft = -110;
                    cellExperiencphrase1.PaddingBottom = -40;
                    tblinstructions.AddCell(cellExperiencphrase1);

                    // document.Add(tblinstructions);


                    #endregion


                    #region Employee Finger Prints


                    document.NewPage();

                    PdfPTable tblFingerprints = new PdfPTable(6);
                    tblFingerprints.TotalWidth = 500f;
                    tblFingerprints.LockedWidth = true;
                    float[] widthfinger = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                    tblFingerprints.SetWidths(widthfinger);

                    #endregion Employee Finger Prints

                    #endregion

                    #endregion

                    document.NewPage();
                    #region for Declaration
                    Fontsize = 10;
                    fontsyle = "calibri";
                    string imagepath3 = Server.MapPath("assets/Images/ESIC-LOGO102.png");
                    string imagepathSealESI = Server.MapPath("assets/seal.jpg");
                    if (File.Exists(imagepath3))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath3);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }


                    #region Headings of the Pdf



                    table = new PdfPTable(6);
                    table.TotalWidth = 500f;
                    table.LockedWidth = true;
                    width = new float[] { 1.5f, 2f, 2f, 2f, 1.5f, 2f };
                    table.SetWidths(width);

                    PdfPCell celllogoHeadEmp = new PdfPCell(new Phrase("Employee: " + Idno + "    ESI Declaration", FontFactory.GetFont(fontsyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celllogoHeadEmp.HorizontalAlignment = 0;
                    celllogoHeadEmp.Colspan = 6;
                    celllogoHeadEmp.Border = 0;
                    celllogoHeadEmp.PaddingTop = -30f;
                    table.AddCell(celllogoHeadEmp);

                    cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 6;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell celllogoHead = new PdfPCell(new Phrase("", FontFactory.GetFont(fontsyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celllogoHead.HorizontalAlignment = 2;
                    celllogoHead.Colspan = 3;
                    celllogoHead.Border = 0;
                    table.AddCell(celllogoHead);

                    cellHead = new PdfPCell(new Phrase("DECLARATION FORM", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellHead.HorizontalAlignment = 1;
                    cellHead.Colspan = 6;
                    cellHead.Border = 0;
                    cellHead.PaddingLeft = -250;
                    table.AddCell(cellHead);

                    cellHead2 = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead2.HorizontalAlignment = 1;
                    cellHead2.Colspan = 6;
                    cellHead2.Border = 0;
                    table.AddCell(cellHead2);

                    cellHead4 = new PdfPCell(new Phrase("To be filled in the employee after reading instructions overleaf. Two postcard size photographs are to be attached this form.This form is free of cost", FontFactory.GetFont(fontsyle, 10, Font.NORMAL, BaseColor.BLACK)));
                    cellHead4.HorizontalAlignment = 0;
                    cellHead4.Colspan = 6;
                    cellHead4.Border = 0;
                    cellHead4.SetLeading(0f, 1.2f);
                    table.AddCell(cellHead4);
                    table.AddCell(cellspace);

                    PdfPCell cellHead5 = new PdfPCell(new Phrase("A) INSURED PERSON'S PARTICULARS", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellHead5.HorizontalAlignment = 0;
                    cellHead5.Colspan = 6;
                    cellHead5.Border = 0;
                    table.AddCell(cellHead5);
                    table.AddCell(cellspace);

                    document.Add(table);

                    #endregion


                    #region Basic Information of the Employee

                    table2 = new PdfPTable(6);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    width1 = new float[] { 5f, 1.5f, 2f, 2f, 1.5f, 2f };
                    table2.SetWidths(width1);

                    PdfPCell cellInsuranceno2 = new PdfPCell(new Phrase("1  Insurance No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno2.HorizontalAlignment = 0;
                    cellInsuranceno2.Colspan = 0;
                    cellInsuranceno2.Border = 0;
                    cellInsuranceno2.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno2);

                    PdfPCell cellInsuranceno4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno4.HorizontalAlignment = 0;
                    cellInsuranceno4.Colspan = 0;
                    cellInsuranceno4.Border = 0;
                    cellInsuranceno4.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno4);

                    PdfPCell cellInsuranceno3 = new PdfPCell(new Phrase(Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellInsuranceno3.HorizontalAlignment = 0;
                    cellInsuranceno3.Colspan = 3;
                    cellInsuranceno3.Border = 0;
                    cellInsuranceno3.PaddingTop = 5;
                    table2.AddCell(cellInsuranceno3);


                    PdfPCell cellspace4 = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellspace4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace4.Colspan = 1;
                    cellspace4.Border = 0;
                    table2.AddCell(cellspace4);

                    PdfPCell cellname2 = new PdfPCell(new Phrase("2  Name", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname2.HorizontalAlignment = 0;
                    cellname2.Colspan = 0;
                    cellname2.Border = 0;
                    cellname2.PaddingTop = 5;
                    table2.AddCell(cellname2);

                    PdfPCell cellname4 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellname4.HorizontalAlignment = 0;
                    cellname4.Colspan = 0;
                    cellname4.Border = 0;
                    cellname4.PaddingTop = 5;
                    table2.AddCell(cellname4);

                    PdfPCell cellname3 = new PdfPCell(new Phrase(name, FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellname3.HorizontalAlignment = 0;
                    cellname3.Colspan = 3;
                    cellname3.Border = 0;
                    cellname3.PaddingTop = 5;
                    table2.AddCell(cellname3);

                    table2.AddCell(cellspace4);

                    PdfPCell cellfather = new PdfPCell(new Phrase("3  Father / Husband's Name  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather.HorizontalAlignment = 0;
                    cellfather.Colspan = 0;
                    cellfather.Border = 0;
                    cellfather.PaddingTop = 5;
                    table2.AddCell(cellfather);


                    PdfPCell cellfather1 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather1.HorizontalAlignment = 0;
                    cellfather1.Colspan = 0;
                    cellfather1.Border = 0;
                    cellfather1.PaddingTop = 5;
                    table2.AddCell(cellfather1);


                    PdfPCell cellfather3 = new PdfPCell(new Phrase(FatherName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellfather3.HorizontalAlignment = 0;
                    cellfather3.Colspan = 3;
                    cellfather3.Border = 0;
                    cellfather3.PaddingTop = 5;
                    table2.AddCell(cellfather3);

                    table2.AddCell(cellspace4);

                    cellDateofbirth = new PdfPCell(new Phrase("4  Date of Birth & Sex ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth.HorizontalAlignment = 0;
                    cellDateofbirth.Colspan = 0;
                    cellDateofbirth.Border = 0;
                    cellDateofbirth.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth);

                    cellDateofbirth2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth2.HorizontalAlignment = 0;
                    cellDateofbirth2.Colspan = 0;
                    cellDateofbirth2.Border = 0;
                    cellDateofbirth2.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth2);

                    string value = "";
                    if (EmpDtofBirths.Length > 0)
                    {
                        value = EmpDtofBirths + " / " + Gender;

                    }
                    else
                    {
                        value = Gender;
                    }

                    cellDateofbirth1 = new PdfPCell(new Phrase(value, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateofbirth1.HorizontalAlignment = 0;
                    cellDateofbirth1.Colspan = 3;
                    cellDateofbirth1.Border = 0;
                    cellDateofbirth1.PaddingTop = 5;
                    table2.AddCell(cellDateofbirth1);

                    table2.AddCell(cellspace4);

                    PdfPCell Maritalstatus = new PdfPCell(new Phrase("5  Marital status", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus.HorizontalAlignment = 0;
                    Maritalstatus.Colspan = 0;
                    Maritalstatus.Border = 0;
                    Maritalstatus.PaddingTop = 5;
                    table2.AddCell(Maritalstatus);

                    PdfPCell Maritalstatus2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus2.HorizontalAlignment = 0;
                    Maritalstatus2.Colspan = 0;
                    Maritalstatus2.Border = 0;
                    Maritalstatus2.PaddingTop = 5;
                    table2.AddCell(Maritalstatus2);


                    PdfPCell Maritalstatus1 = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Maritalstatus1.HorizontalAlignment = 0;
                    Maritalstatus1.Colspan = 3;
                    Maritalstatus1.Border = 0;
                    Maritalstatus1.PaddingTop = 5;
                    Maritalstatus1.PaddingRight = -10;
                    table2.AddCell(Maritalstatus1);

                    table2.AddCell(cellspace4);

                    document.Add(table2);

                    #region Employee Addresses



                    tbldata2 = new PdfPTable(3);
                    tbldata2.TotalWidth = 500f;
                    tbldata2.LockedWidth = true;
                    widthdata2 = new float[] { 5f, 1.5f, 5f };

                    data2space = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    data2space.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    data2space.Colspan = 3;
                    data2space.Border = 0;
                    //tbldata2.AddCell(data2space);
                    //tbldata2.AddCell(data2space);
                    //tbldata2.AddCell(data2space);

                    cellPresentaddr = new PdfPCell(new Phrase("6  Permanent Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 0;
                    cellPresentaddr.Border = 0;
                    cellPresentaddr.PaddingTop = 5;
                    tbldata2.AddCell(cellPresentaddr);

                    PdfPCell cellPresentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddrcol.HorizontalAlignment = 0;
                    cellPresentaddrcol.Colspan = 0;
                    cellPresentaddrcol.Border = 0;
                    cellPresentaddrcol.PaddingTop = 5;
                    cellPresentaddrcol.PaddingLeft = 14;
                    tbldata2.AddCell(cellPresentaddrcol);




                    #region permanent address String array

                    string[] PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = " -" + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    string Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion

                    PdfPCell cellPresentaddr1 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPresentaddr1.HorizontalAlignment = 0;
                    cellPresentaddr1.Colspan = 0;
                    cellPresentaddr1.Border = 0;
                    cellPresentaddr1.PaddingTop = 5;
                    cellPresentaddr1.PaddingLeft = -98;
                    tbldata2.AddCell(cellPresentaddr1);


                    tbldata2.AddCell(data2space);



                    cellPerminentaddr = new PdfPCell(new Phrase("7  Current Address", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 0;
                    cellPerminentaddr.Border = 0;
                    cellPerminentaddr.PaddingTop = 5;
                    //cellPerminentaddr.PaddingLeft = -3;
                    tbldata2.AddCell(cellPerminentaddr);

                    PdfPCell cellPerminentaddrcol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddrcol.HorizontalAlignment = 0;
                    cellPerminentaddrcol.Colspan = 0;
                    cellPerminentaddrcol.Border = 0;
                    cellPerminentaddrcol.PaddingTop = 5;
                    cellPerminentaddrcol.PaddingLeft = 14;
                    //cellPerminentaddr.PaddingLeft = -3;
                    tbldata2.AddCell(cellPerminentaddrcol);

                    #region Present address String array

                    string[] PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = " -" + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    string Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion

                    PdfPCell cellPerminentaddr1 = new PdfPCell(new Phrase(Emppresentaddress.TrimStart(), FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellPerminentaddr1.HorizontalAlignment = 0;
                    cellPerminentaddr1.Colspan = 0;
                    cellPerminentaddr1.Border = 0;
                    cellPerminentaddr1.PaddingTop = 5;
                    cellPerminentaddr1.PaddingLeft = -98;
                    tbldata2.AddCell(cellPerminentaddr1);

                    PdfPCell cellBranchOffice = new PdfPCell(new Phrase("8  Branch Office / ESI Dispensary", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOffice.HorizontalAlignment = 0;
                    cellBranchOffice.Colspan = 0;
                    cellBranchOffice.Border = 0;
                    cellBranchOffice.PaddingTop = 5;
                    tbldata2.AddCell(cellBranchOffice);

                    PdfPCell cellBranchOfficecol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranchOfficecol.HorizontalAlignment = 0;
                    cellBranchOfficecol.Colspan = 0;
                    cellBranchOfficecol.Border = 0;
                    cellBranchOfficecol.PaddingTop = 5;
                    cellBranchOfficecol.PaddingLeft = 14;
                    tbldata2.AddCell(cellBranchOfficecol);


                    PdfPCell cellB = new PdfPCell(new Phrase(EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellB.HorizontalAlignment = 0;
                    cellB.Colspan = 0;
                    cellB.Border = 0;
                    cellB.PaddingTop = 5;
                    cellB.PaddingLeft = -98;
                    tbldata2.AddCell(cellB);

                    tbldata2.AddCell(data2space);

                    document.Add(tbldata2);

                    #endregion

                    table3 = new PdfPTable(6);
                    table3.TotalWidth = 500f;
                    table3.LockedWidth = true;
                    width2 = new float[] { 2f, 1.5f, 2f, 2f, 1.5f, 2f };
                    table3.SetWidths(width2);



                    cellphyst = new PdfPCell(new Phrase("B) EMPLOYER'S PARTICULARS   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellphyst.HorizontalAlignment = 0;
                    cellphyst.Colspan = 6;
                    cellphyst.Border = 0;
                    cellphyst.PaddingTop = 3;
                    cellphyst.PaddingLeft = -3;
                    table3.AddCell(cellphyst);




                    document.Add(table3);


                    data1 = new PdfPTable(3);
                    data1.TotalWidth = 500f;
                    data1.LockedWidth = true;
                    widthdate = new float[] { 5f, 1.5f, 5f };
                    data1.SetWidths(widthdate);



                    celldata15 = new PdfPCell(new Phrase("9  Employer's Code No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata15.HorizontalAlignment = 0;
                    celldata15.Colspan = 0;
                    celldata15.Border = 0;
                    celldata15.PaddingTop = 5;
                    data1.AddCell(celldata15);

                    celldatacol = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldatacol.HorizontalAlignment = 0;
                    celldatacol.Colspan = 0;
                    celldatacol.Border = 0;
                    celldatacol.PaddingTop = 5;
                    celldatacol.PaddingLeft = -35;
                    data1.AddCell(celldatacol);


                    PdfPCell celldataid = new PdfPCell(new Phrase(EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldataid.HorizontalAlignment = 0;
                    celldataid.Colspan = 0;
                    celldataid.Border = 0;
                    celldataid.PaddingTop = 5;
                    celldataid.PaddingLeft = -45;
                    data1.AddCell(celldataid);


                    PdfPCell cellAppointment = new PdfPCell(new Phrase("10  Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment.HorizontalAlignment = 0;
                    cellAppointment.Colspan = 0;
                    cellAppointment.Border = 0;
                    cellAppointment.PaddingTop = 5;
                    cellAppointment.PaddingLeft = -3;
                    data1.AddCell(cellAppointment);

                    PdfPCell cellAppointment2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment2.HorizontalAlignment = 0;
                    cellAppointment2.Colspan = 0;
                    cellAppointment2.Border = 0;
                    cellAppointment2.PaddingTop = 5;
                    cellAppointment2.PaddingLeft = -35;
                    data1.AddCell(cellAppointment2);


                    PdfPCell cellAppointment1 = new PdfPCell(new Phrase(doj, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAppointment1.HorizontalAlignment = 0;
                    cellAppointment1.Colspan = 0;
                    cellAppointment1.Border = 0;
                    cellAppointment1.PaddingTop = 5;
                    cellAppointment1.PaddingLeft = -45;
                    data1.AddCell(cellAppointment1);


                    PdfPCell cellNameadd = new PdfPCell(new Phrase("11  Name & Address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd.HorizontalAlignment = 0;
                    cellNameadd.Colspan = 0;
                    cellNameadd.Border = 0;
                    cellNameadd.PaddingTop = 5;
                    cellNameadd.PaddingLeft = -3;
                    data1.AddCell(cellNameadd);

                    PdfPCell cellNameadd2 = new PdfPCell(new Phrase(" :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd2.HorizontalAlignment = 0;
                    cellNameadd2.Colspan = 0;
                    cellNameadd2.Border = 0;
                    cellNameadd2.PaddingTop = 5;
                    cellNameadd2.PaddingLeft = -35;
                    data1.AddCell(cellNameadd2);


                    PdfPCell cellNameadd1 = new PdfPCell(new Phrase(CompanyName + "\n" + Address, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellNameadd1.HorizontalAlignment = 0;
                    cellNameadd1.Colspan = 0;
                    cellNameadd1.Border = 0;
                    cellNameadd1.PaddingTop = 5;
                    cellNameadd1.PaddingLeft = -45;
                    data1.AddCell(cellNameadd1);




                    document.Add(data1);



                    #endregion

                    data4 = new PdfPTable(2);
                    data4.TotalWidth = 500f;
                    data4.LockedWidth = true;
                    widthdate4 = new float[] { 2f, 1f };
                    data4.SetWidths(widthdate4);

                    cellempty = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempty.HorizontalAlignment = 0;
                    cellempty.Colspan = 2;
                    cellempty.Border = 0;
                    cellempty.PaddingTop = 5;


                    celldataref = new PdfPCell(new Phrase("12  In case of any previous employment please fill up the details as under", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldataref.HorizontalAlignment = 0;
                    celldataref.Colspan = 6;
                    celldataref.Border = 0;
                    celldataref.PaddingTop = 5;
                    celldataref.PaddingLeft = -3;
                    data4.AddCell(celldataref);

                    document.Add(data4);



                    #region Employee Reference Details



                    tblReferences = new PdfPTable(4);
                    tblReferences.TotalWidth = 500f;
                    tblReferences.LockedWidth = true;
                    widthRef = new float[] { 2f, 2f, 2f, 2f };
                    tblReferences.SetWidths(widthRef);

                    Refspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.NORMAL, BaseColor.BLACK)));
                    Refspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Refspace.Colspan = 4;
                    Refspace.Border = 0;




                    celldata26 = new PdfPCell(new Phrase("a) Previous ins No. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata26.HorizontalAlignment = 0;
                    celldata26.Colspan = 4;
                    celldata26.Border = 0;
                    celldata26.PaddingTop = 5;
                    celldata26.PaddingLeft = 20;
                    tblReferences.AddCell(celldata26);

                    celldata28 = new PdfPCell(new Phrase("b) Empir's Code No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldata28.HorizontalAlignment = 0;
                    celldata28.Colspan = 4;
                    celldata28.Border = 0;
                    celldata28.PaddingTop = 5;
                    celldata28.PaddingLeft = 20;
                    tblReferences.AddCell(celldata28);


                    PdfPCell cellnameemp = new PdfPCell(new Phrase("c) Name & address of the Employer", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellnameemp.HorizontalAlignment = 0;
                    cellnameemp.Colspan = 4;
                    cellnameemp.Border = 0;
                    cellnameemp.PaddingTop = 5;
                    cellnameemp.PaddingLeft = 20;
                    tblReferences.AddCell(cellnameemp);

                    tblReferences.AddCell(Refspace);

                    PdfPCell celldetaisnominee = new PdfPCell(new Phrase("C)Details of Nominees U/S 71 ESI Act 1948/Rule56(2) of ESI(Central) Rules, 1950 for payment of cash benefit in the event of death)", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    celldetaisnominee.HorizontalAlignment = 0;
                    celldetaisnominee.Colspan = 6;
                    celldetaisnominee.Border = 0;
                    celldetaisnominee.PaddingTop = 5;
                    celldetaisnominee.PaddingLeft = -3;
                    tblReferences.AddCell(celldetaisnominee);

                    PdfPCell cellnamedata = new PdfPCell(new Phrase("Name :  " + RNames, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellnamedata.HorizontalAlignment = 0;
                    cellnamedata.Colspan = 4;
                    cellnamedata.Border = 0;
                    cellnamedata.PaddingTop = 5;
                    cellnamedata.PaddingLeft = 20;
                    tblReferences.AddCell(cellnamedata);





                    string relationTypess = "";
                    if (relationTypess != "--Select--")
                    {
                        PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :  " + RTypes, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRelationship.HorizontalAlignment = 0;
                        cellRelationship.Colspan = 4;
                        cellRelationship.Border = 0;
                        cellRelationship.PaddingTop = 5;
                        cellRelationship.PaddingLeft = 20;
                        tblReferences.AddCell(cellRelationship);
                    }
                    else
                    {
                        PdfPCell cellRelationship = new PdfPCell(new Phrase("Relationship :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellRelationship.HorizontalAlignment = 0;
                        cellRelationship.Colspan = 4;
                        cellRelationship.Border = 0;
                        cellRelationship.PaddingTop = 5;
                        cellRelationship.PaddingLeft = 20;
                        tblReferences.AddCell(cellRelationship);
                    }

                    PdfPCell cellAddress = new PdfPCell(new Phrase("Address :", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.Border = 0;
                    cellAddress.PaddingLeft = 20;
                    cellAddress.PaddingTop = 5;
                    tblReferences.AddCell(cellAddress);

                    tblReferences.AddCell(Refspace);


                    #endregion

                    document.Add(tblReferences);


                    PdfPTable tblReference = new PdfPTable(6);
                    tblReference.TotalWidth = 500f;
                    tblReference.LockedWidth = true;
                    widths1 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    tblReference.SetWidths(widths1);

                    PdfPCell Refcspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    Refcspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Refcspace.Colspan = 6;
                    Refcspace.Border = 0;
                    //tblReference.AddCell(Refcspace);



                    PdfPCell cellPARTICULARS = new PdfPCell(new Phrase("D) FAMILY PARTICULARS OF INSURED PERSON ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellPARTICULARS.HorizontalAlignment = 0;
                    cellPARTICULARS.Colspan = 6;
                    cellPARTICULARS.Border = 0;
                    cellPARTICULARS.PaddingLeft = 0;
                    cellPARTICULARS.PaddingTop = 5;
                    tblReference.AddCell(cellPARTICULARS);



                    PdfPCell cnamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cnamec.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnamec.BorderWidthLeft = 0;
                    cnamec.BorderWidthRight = 0;
                    cnamec.BorderWidthTop = 0.5f;
                    cnamec.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(cnamec);

                    PdfPCell caddressc = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    caddressc.HorizontalAlignment = 1;//0=Left, 1=Centre, 2=Right
                    caddressc.BorderWidthLeft = 0;
                    caddressc.BorderWidthRight = 0;
                    caddressc.BorderWidthTop = 0.5f;
                    caddressc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(caddressc);

                    PdfPCell crelationshipc = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    crelationshipc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    crelationshipc.BorderWidthLeft = 0;
                    crelationshipc.BorderWidthRight = 0;
                    crelationshipc.BorderWidthTop = 0.5f;
                    crelationshipc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(crelationshipc);

                    PdfPCell cdobc = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cdobc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cdobc.BorderWidthLeft = 0;
                    cdobc.BorderWidthRight = 0;
                    cdobc.BorderWidthTop = 0.8f;
                    cdobc.BorderWidthBottom = 0.6f;
                    tblReference.AddCell(cdobc);

                    PdfPCell camtc = new PdfPCell(new Phrase("Whether residing With", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    camtc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    camtc.BorderWidthLeft = 0;
                    camtc.BorderWidthRight = 0;
                    camtc.BorderWidthTop = 0.5f;
                    camtc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(camtc);

                    PdfPCell cminorc = new PdfPCell(new Phrase("if No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cminorc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cminorc.BorderWidthLeft = 0;
                    cminorc.BorderWidthRight = 0;
                    cminorc.BorderWidthTop = 0.5f;
                    cminorc.BorderWidthBottom = 0.8f;
                    tblReference.AddCell(cminorc);

                    int s = 1;
                    if (dtesi.Rows.Count > 0)
                    {
                        for (k = 0; k < dtesi.Rows.Count; k++)
                        {
                            string Relnames = dtesi.Rows[k]["Rname"].ToString();
                            string RPlace = dtesi.Rows[k]["RPlace"].ToString();
                            Relage = dtesi.Rows[k]["age"].ToString();
                            RelDOFBirth = dtesi.Rows[k]["DOfBirth"].ToString();
                            if (Relage == "0")
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    Relage = "";
                                }
                                else
                                {
                                    Relage = RelDOFBirth;
                                }
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtesi.Rows[k]["age"].ToString();
                            }
                            else
                            {
                                Relage = "";
                            }


                            cellsno = new PdfPCell(new Phrase((s).ToString(), FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno.BorderWidthLeft = 0;
                            cellsno.BorderWidthRight = 0;
                            cellsno.BorderWidthTop = 0;
                            cellsno.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno);

                            PdfPCell cellsno4 = new PdfPCell(new Phrase(Relnames, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno4.BorderWidthLeft = 0;
                            cellsno4.BorderWidthRight = 0;
                            cellsno4.BorderWidthTop = 0;
                            cellsno4.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno4);



                            PdfPCell cellsno2 = new PdfPCell(new Phrase(Relage, FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                            cellsno2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellsno2.BorderWidthLeft = 0;
                            cellsno2.BorderWidthRight = 0;
                            cellsno2.BorderWidthTop = 0;
                            cellsno2.BorderWidthBottom = 0;
                            tblReference.AddCell(cellsno2);

                            string relationTypes = "";
                            string RelrelationType = dtesi.Rows[k]["RType"].ToString();
                            if (relationTypes != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(RelrelationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellsno4.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRType.BorderWidthLeft = 0;
                                cellRType.BorderWidthRight = 0;
                                cellRType.BorderWidthTop = 0;
                                cellRType.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRType.BorderWidthLeft = 0;
                                cellRType.BorderWidthRight = 0;
                                cellRType.BorderWidthTop = 0;
                                cellRType.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRType);
                            }


                            string RResidences = "";
                            string RResidenced = dtesi.Rows[k]["RResidence"].ToString();
                            if (RResidences != "--Select--")
                            {
                                PdfPCell cellRResidences = new PdfPCell(new Phrase(RResidenced, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellRResidences.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRResidences.BorderWidthLeft = 0;
                                cellRResidences.BorderWidthRight = 0;
                                cellRResidences.BorderWidthTop = 0;
                                cellRResidences.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRResidences);
                            }
                            else
                            {
                                PdfPCell cellRResidences1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRResidences1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellRResidences1.BorderWidthLeft = 0;
                                cellRResidences1.BorderWidthRight = 0;
                                cellRResidences1.BorderWidthTop = 0;
                                cellRResidences1.BorderWidthBottom = 0;
                                tblReference.AddCell(cellRResidences1);
                            }
                            if (RResidenced == "Yes")
                            {
                                //RPlace
                                cellplace = new PdfPCell(new Phrase(Emppresentaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellplace.BorderWidthLeft = 0;
                                cellplace.BorderWidthRight = 0;
                                cellplace.BorderWidthTop = 0;
                                cellplace.BorderWidthBottom = 0;
                                tblReference.AddCell(cellplace);
                            }
                            else if (RResidenced == "No")
                            {
                                //RPlace
                                cellplace = new PdfPCell(new Phrase(Emppermanentaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                                cellplace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                                cellplace.BorderWidthLeft = 0;
                                cellplace.BorderWidthRight = 0;
                                cellplace.BorderWidthTop = 0;
                                cellplace.BorderWidthBottom = 0;
                                tblReference.AddCell(cellplace);
                            }

                            s++;
                        }
                    }
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReferences.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);
                    tblReference.AddCell(Refcspace);





                    PdfPCell cpt1c = new PdfPCell(new Phrase("ESI Corporation Temporary Identity Card", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt1c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt1c.Colspan = 6;
                    cpt1c.Border = 0;
                    tblReference.AddCell(cpt1c);
                    PdfPCell cpt2c = new PdfPCell(new Phrase("Name ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c.Colspan = 2;
                    cpt2c.Border = 0;
                    tblReference.AddCell(cpt2c);

                    PdfPCell cpt2c1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c1.Colspan = 0;
                    cpt2c1.Border = 0;
                    // tblReference.AddCell(cpt2c1);

                    PdfPCell cpt2c2 = new PdfPCell(new Phrase(": " + Name, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cpt2c2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2c2.Colspan = 4;
                    cpt2c2.Border = 0;
                    tblReference.AddCell(cpt2c2);


                    PdfPCell Ins = new PdfPCell(new Phrase("Ins No.", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins.Colspan = 2;
                    Ins.Border = 0;
                    tblReference.AddCell(Ins);

                    PdfPCell Ins1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins1.Colspan = 0;
                    Ins1.Border = 0;
                    //  tblReference.AddCell(Ins1);

                    PdfPCell Ins2 = new PdfPCell(new Phrase(": " + Esino, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Ins2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Ins2.Colspan = 4;
                    Ins2.Border = 0;
                    tblReference.AddCell(Ins2);

                    PdfPCell Appointment = new PdfPCell(new Phrase("Date of Appointment ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment.Colspan = 2;
                    Appointment.Border = 0;
                    tblReference.AddCell(Appointment);


                    PdfPCell Appointment1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment1.Colspan = 0;
                    Appointment1.Border = 0;
                    //tblReference.AddCell(Appointment1);

                    PdfPCell Appointment2 = new PdfPCell(new Phrase(": " + doj, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Appointment2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Appointment2.Colspan = 4;
                    Appointment2.Border = 0;
                    tblReference.AddCell(Appointment2);

                    PdfPCell Branch = new PdfPCell(new Phrase("Branch Office", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Branch.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Branch.Colspan = 2;
                    Branch.Border = 0;
                    tblReference.AddCell(Branch);

                    PdfPCell Branch1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Branch1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Branch1.Colspan = 4;
                    Branch1.Border = 0;
                    tblReference.AddCell(Branch1);

                    PdfPCell Dispensary = new PdfPCell(new Phrase("ESI Dispensary ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary.Colspan = 2;
                    Dispensary.Border = 0;
                    tblReference.AddCell(Dispensary);


                    PdfPCell Dispensary1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary1.Colspan = 0;
                    Dispensary1.Border = 0;
                    // tblReference.AddCell(Dispensary1);

                    PdfPCell Dispensary2 = new PdfPCell(new Phrase(": " + EmpESIDispName, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Dispensary2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Dispensary2.Colspan = 4;
                    Dispensary2.Border = 0;
                    tblReference.AddCell(Dispensary2);

                    PdfPCell code = new PdfPCell(new Phrase("Employer's code No ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code.Colspan = 2;
                    code.Border = 0;
                    tblReference.AddCell(code);

                    PdfPCell code1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code1.Colspan = 0;
                    code1.Border = 0;
                    //tblReference.AddCell(code1);

                    PdfPCell code2 = new PdfPCell(new Phrase(": " + EmprCode, FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    code2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    code2.Colspan = 4;
                    code2.Border = 0;
                    tblReference.AddCell(code2);



                    PdfPCell Validity = new PdfPCell(new Phrase("Validity", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Validity.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Validity.Colspan = 2;
                    Validity.Border = 0;
                    tblReference.AddCell(Validity);


                    PdfPCell Validity1 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    Validity1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Validity1.Colspan = 4;
                    Validity1.Border = 0;
                    tblReference.AddCell(Validity1);

                    PdfPCell date1 = new PdfPCell(new Phrase("Date", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    date1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    date1.Colspan = 2;
                    date1.Border = 0;
                    tblReference.AddCell(date1);


                    PdfPCell date11 = new PdfPCell(new Phrase(":", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    date11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    date11.Colspan = 4;
                    date11.Border = 0;
                    tblReference.AddCell(date11);

                    tblReference.AddCell(Refcspace);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 6;
                        sealImg.PaddingLeft = -370f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblReference.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    cellsign = new PdfPCell(new Phrase("    Signature of T.I Of I.P   ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellsign.HorizontalAlignment = 0;
                    cellsign.Colspan = 3;
                    cellsign.Border = 0;
                    cellsign.PaddingTop = 5;
                    cellsign.PaddingLeft = 50;
                    tblReference.AddCell(cellsign);


                    cellrecrutment = new PdfPCell(new Phrase("Signature of B.M. With Seal  ", FontFactory.GetFont(fontsyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellrecrutment.HorizontalAlignment = 0;
                    cellrecrutment.Colspan = 3;
                    cellrecrutment.Border = 0;
                    cellrecrutment.PaddingTop = 5;
                    cellrecrutment.PaddingLeft = 50;
                    tblReference.AddCell(cellrecrutment);


                    document.Add(tblReference);

                    document.NewPage();


                    #region Employee Refer Details



                    PdfPTable tblRefer = new PdfPTable(2);
                    tblRefer.TotalWidth = 500f;
                    tblRefer.LockedWidth = true;
                    float[] widthRefer = new float[] { 5f, 5f };
                    tblRefer.SetWidths(widthRefer);

                    PdfPCell Referspace = new PdfPCell(new Phrase(" ", FontFactory.GetFont(fontsyle, 8, Font.BOLD, BaseColor.BLACK)));
                    Referspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    Referspace.Colspan = 4;
                    Referspace.Border = 0;

                    PdfPCell celldeclare = new PdfPCell(new Phrase("I declare that my dependent parents income from all sources is 1) Father's income Rs................... (2) Mother's income Rs.................... Total Rs................(Rupees.............................................) and he/she/they,is /are Wholly dependent on me and also resides with me. ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldeclare.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    celldeclare.Colspan = 2;
                    celldeclare.Border = 0;
                    celldeclare.PaddingTop = 5;
                    celldeclare.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(celldeclare);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);


                    PdfPCell cellhereby = new PdfPCell(new Phrase("I hereby declare that the particulars given by me are correct to the best of knowledge and belief.I undertake to intimate the corporation any changes in the membership of my family within 15 days of such change.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellhereby.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellhereby.Colspan = 2;
                    cellhereby.Border = 0;
                    cellhereby.PaddingLeft = 0;
                    cellhereby.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellhereby);


                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);


                    //

                    PdfPCell cellSRFDETECTIVE = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontsyle, 12, Font.BOLD, BaseColor.BLACK)));
                    cellSRFDETECTIVE.HorizontalAlignment = 0;
                    cellSRFDETECTIVE.Colspan = 2;
                    cellSRFDETECTIVE.Border = 0;
                    cellSRFDETECTIVE.PaddingTop = 5;
                    cellSRFDETECTIVE.PaddingLeft = 0;
                    tblRefer.AddCell(cellSRFDETECTIVE);


                    tblRefer.AddCell(Referspace);


                    PdfPCell cellAuthorised = new PdfPCell(new Phrase("Authorised signatory  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthorised.HorizontalAlignment = 0;
                    cellAuthorised.Colspan = 2;
                    cellAuthorised.Border = 0;
                    cellAuthorised.PaddingTop = 5;
                    cellAuthorised.PaddingLeft = 0;
                    tblRefer.AddCell(cellAuthorised);



                    PdfPCell cellCounter = new PdfPCell(new Phrase("Counter signature by the employer  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellCounter.HorizontalAlignment = 0;
                    cellCounter.Colspan = 2;
                    cellCounter.Border = 0;
                    cellCounter.PaddingTop = 5;
                    cellCounter.PaddingLeft = 0;
                    tblRefer.AddCell(cellCounter);

                    // tblRefer.AddCell(Referspace);

                    if (File.Exists(imagepathSealESI))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSealESI);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 2;
                        sealImg.PaddingLeft = -400f;
                        sealImg.PaddingTop = 0;
                        tblRefer.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    PdfPCell cellCounter1 = new PdfPCell(new Phrase("Signature with seal ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellCounter1.HorizontalAlignment = 0;
                    cellCounter1.Colspan = 1;
                    cellCounter1.Border = 0;
                    cellCounter1.PaddingTop = 5;
                    cellCounter1.PaddingLeft = 0;
                    tblRefer.AddCell(cellCounter1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 1;
                        sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        tblRefer.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cellseal = new PdfPCell(new Phrase("Dated:................... \n\n", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellseal.HorizontalAlignment = 0;
                    cellseal.Colspan = 0;
                    cellseal.Border = 0;
                    cellseal.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                    cellseal.BorderWidthBottom = 1.5f;
                    cellseal.PaddingBottom = 5;
                    tblRefer.AddCell(cellseal);





                    PdfPCell cellSignature = new PdfPCell(new Phrase("Signature / T.I & IP", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSignature.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellSignature.Colspan = 0;
                    cellSignature.Border = 0;
                    cellSignature.BorderColorBottom = new BaseColor(System.Drawing.Color.Black);
                    cellSignature.BorderWidthBottom = 1.5f;
                    cellSignature.PaddingBottom = 5;
                    cellSignature.PaddingLeft = 10;
                    tblRefer.AddCell(cellSignature);





                    tblRefer.AddCell(Referspace);

                    PdfPCell cellINSTRUCTIONS = new PdfPCell(new Phrase("INSTRUCTIONS  ", FontFactory.GetFont(fontsyle, Fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                    cellINSTRUCTIONS.HorizontalAlignment = 0;
                    cellINSTRUCTIONS.Colspan = 2;
                    cellINSTRUCTIONS.Border = 0;
                    cellINSTRUCTIONS.PaddingTop = 5;
                    cellINSTRUCTIONS.PaddingLeft = 0;
                    tblRefer.AddCell(cellINSTRUCTIONS);


                    PdfPCell cellSubmission = new PdfPCell(new Phrase(" 1. Submission of Form -1,is governed by regulations 11 & 12 of ESI (General) Regulations, 1950  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellSubmission.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellSubmission.Colspan = 2;
                    cellSubmission.Border = 0;
                    cellSubmission.PaddingTop = 5;
                    cellSubmission.PaddingLeft = 0;
                    cellSubmission.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellSubmission);



                    PdfPCell cellFamily = new PdfPCell(new Phrase(" 2. Family means all or any of the following relatives of an insured person namely:-(i) a spouse (ii) a minor legitimate or adopted child dependant upon the I.P.(iii) a child who is wholly dependent on the earnings of the I.P.and who is(a) receiving education, till he or she attains the age 21 yrs(b) an unmarried daughter ;(iv) a child who is infirm by reason of any physical or mental abononormally pr imjury and is wholly dependent on the earnings of the I.P.so lo9ng as the infirmity continues;(v) dependent parents(please seen section 2 clause 11 of the 7 ESI Act 1948 for details)   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellFamily.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellFamily.Colspan = 2;
                    cellFamily.Border = 0;
                    cellFamily.PaddingTop = 5;
                    cellFamily.PaddingLeft = 0;
                    cellFamily.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellFamily);




                    PdfPCell cellcards = new PdfPCell(new Phrase(" 3. Identity cards is Non-transferable.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellcards.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellcards.Colspan = 2;
                    cellcards.Border = 0;
                    cellcards.PaddingTop = 5;
                    cellcards.PaddingLeft = 0;
                    cellcards.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellcards);




                    PdfPCell cellidentity = new PdfPCell(new Phrase(" 4. Loss of identity card be reported to employer /Branch manger immediately   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellidentity.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellidentity.Colspan = 2;
                    cellidentity.Border = 0;
                    cellidentity.PaddingTop = 5;
                    cellidentity.PaddingLeft = 0;
                    cellidentity.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellidentity);



                    PdfPCell cellsubmission1 = new PdfPCell(new Phrase(" 5. Submission of faise informationsattracts penal action under section 84 of ESI .Act,1948   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellsubmission1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellsubmission1.Colspan = 2;
                    cellsubmission1.Border = 0;
                    cellsubmission1.PaddingTop = 5;
                    cellsubmission1.PaddingLeft = 0;
                    cellsubmission1.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellsubmission1);





                    PdfPCell cellduly = new PdfPCell(new Phrase(" 6. This form duly filled in must reach. the concerned Branch office within 10 days of appointment of an Employee .Dealy attracts penal action under section 85 of the ACT,against employer.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellduly.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellduly.Colspan = 2;
                    cellduly.Border = 0;
                    cellduly.PaddingTop = 5;
                    cellduly.PaddingLeft = 0;
                    cellduly.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellduly);




                    PdfPCell cellperson = new PdfPCell(new Phrase(" 7. As an insured person you and your dependent family members are entitled to full medical care.the other benetifits in cash  include (1) sickness benfit(2) temporary disablement benfit (3)permanent disablement benfit (4) dependents benefit and (5) maternity benfit(in case of women employees)subject to fulfilment of contribution conditions.  ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellperson.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellperson.Colspan = 2;
                    cellperson.Border = 0;
                    cellperson.PaddingTop = 5;
                    cellperson.PaddingLeft = 0;
                    cellperson.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellperson);



                    PdfPCell cellmore = new PdfPCell(new Phrase(" 8. For more details please visit website of ESIC at www.esic.org.in or contact regional office or branch office.   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellmore.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmore.Colspan = 2;
                    cellmore.Border = 0;
                    cellmore.PaddingTop = 5;
                    cellmore.PaddingLeft = 0;
                    cellmore.SetLeading(0f, 1.2f);
                    tblRefer.AddCell(cellmore);


                    tblRefer.AddCell(Referspace);




                    PdfPCell cellBRACH = new PdfPCell(new Phrase(" FOR BRANCH OFFICE USE ONLY   ", FontFactory.GetFont(fontsyle, 13, Font.BOLD, BaseColor.BLACK)));
                    cellBRACH.HorizontalAlignment = 1;
                    cellBRACH.Colspan = 2;
                    cellBRACH.Border = 0;
                    cellBRACH.PaddingTop = 5;
                    tblRefer.AddCell(cellBRACH);

                    tblRefer.AddCell(Referspace);

                    PdfPCell cellDateOfAllotment = new PdfPCell(new Phrase(" 1. Date Of Allotment Of Ins No:   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellDateOfAllotment.HorizontalAlignment = 0;
                    cellDateOfAllotment.Colspan = 2;
                    cellDateOfAllotment.Border = 0;
                    cellDateOfAllotment.PaddingTop = 5;
                    cellDateOfAllotment.PaddingLeft = 0;
                    tblRefer.AddCell(cellDateOfAllotment);


                    PdfPCell cellIssue = new PdfPCell(new Phrase(" 2. Date Of Issue Of TIC:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellIssue.HorizontalAlignment = 0;
                    cellIssue.Colspan = 2;
                    cellIssue.Border = 0;
                    cellIssue.PaddingTop = 5;
                    cellIssue.PaddingLeft = 0;
                    tblRefer.AddCell(cellIssue);


                    PdfPCell cellDisp = new PdfPCell(new Phrase(" 3. Name / No. Of Disp:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellDisp.HorizontalAlignment = 0;
                    cellDisp.Colspan = 2;
                    cellDisp.Border = 0;
                    cellDisp.PaddingTop = 5;
                    cellDisp.PaddingLeft = 0;
                    tblRefer.AddCell(cellDisp);

                    PdfPCell cellMedical = new PdfPCell(new Phrase(" 4. Whether reciprocal Medical arrangement involved ? If yes, please indicate:   ", FontFactory.GetFont(fontsyle, 11, Font.NORMAL, BaseColor.BLACK)));
                    cellMedical.HorizontalAlignment = 0;
                    cellMedical.Colspan = 2;
                    cellMedical.Border = 0;
                    cellMedical.PaddingTop = 5;
                    cellMedical.PaddingLeft = 0;
                    tblRefer.AddCell(cellMedical);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);

                    PdfPCell cellBranch = new PdfPCell(new Phrase(" Signature of Branch Manger   ", FontFactory.GetFont(fontsyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellBranch.HorizontalAlignment = 0;
                    cellBranch.Colspan = 2;
                    cellBranch.Border = 0;
                    cellBranch.PaddingTop = 5;
                    cellBranch.PaddingLeft = 300;
                    tblRefer.AddCell(cellBranch);

                    tblRefer.AddCell(Referspace);
                    tblRefer.AddCell(Referspace);
                    document.Add(tblRefer);

                    #endregion Employee Refer Details

                    PdfPTable tblReferen = new PdfPTable(6);
                    tblReferen.TotalWidth = 500f;
                    tblReferen.LockedWidth = true;
                    float[] widths3 = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    tblReferen.SetWidths(widths3);

                    PdfPCell Referencspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    Referencspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Referencspace.Colspan = 6;
                    Referencspace.Border = 0;
                    tblReferen.AddCell(Referencspace);




                    PdfPCell canamec = new PdfPCell(new Phrase("Sl.No.  ", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    canamec.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    canamec.BorderWidthLeft = 0;
                    canamec.BorderWidthRight = 0;
                    canamec.BorderWidthTop = 0;
                    canamec.BorderWidthBottom = 0;
                    tblReferen.AddCell(canamec);

                    PdfPCell caddressca = new PdfPCell(new Phrase("Name", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    caddressca.HorizontalAlignment = 0;//0=Left, 1=Centre, 2=Right
                    caddressca.BorderWidthLeft = 0;
                    caddressca.BorderWidthRight = 0;
                    caddressca.BorderWidthTop = 0;
                    caddressca.BorderWidthBottom = 0;
                    tblReferen.AddCell(caddressca);

                    PdfPCell crelationshipca = new PdfPCell(new Phrase("Date of birth/Age as on date of filling form", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    crelationshipca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    crelationshipca.BorderWidthLeft = 0;
                    crelationshipca.BorderWidthRight = 0;
                    crelationshipca.BorderWidthTop = 0;
                    crelationshipca.BorderWidthBottom = 0;
                    tblReferen.AddCell(crelationshipca);

                    PdfPCell cdobca = new PdfPCell(new Phrase("Relationship with the Employee", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cdobca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdobca.BorderWidthLeft = 0;
                    cdobca.BorderWidthRight = 0;
                    cdobca.BorderWidthTop = 0;
                    cdobca.BorderWidthBottom = 0;

                    tblReferen.AddCell(cdobca);

                    PdfPCell camtca = new PdfPCell(new Phrase("Whether residing With him/her", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    camtca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camtca.BorderWidthLeft = 0;
                    camtca.BorderWidthRight = 0;
                    camtca.BorderWidthTop = 0;
                    camtca.BorderWidthBottom = 0;
                    tblReferen.AddCell(camtca);

                    PdfPCell cminorca = new PdfPCell(new Phrase("If No,state place of residence", FontFactory.GetFont(fontsyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cminorca.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminorca.BorderWidthLeft = 0;
                    cminorca.BorderWidthRight = 0;
                    cminorca.BorderWidthTop = 0;
                    cminorca.BorderWidthBottom = 0f;
                    tblReferen.AddCell(cminorca);



                    //document.Add(tblReferen);

                    #endregion

                    document.NewPage();
                    #region for PFForm

                    Fontsize = 9;

                    table = new PdfPTable(3);
                    table.TotalWidth = 550f;
                    table.LockedWidth = true;
                    width = new float[] { 3f, 0.3f, 3f };
                    table.SetWidths(width);

                    #region for image
                    if (File.Exists(imagepathPFLogo))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathPFLogo);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50f);
                        gif2.SetAbsolutePosition(60f, 885f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion

                    PdfPCell cellstart = new PdfPCell(new Phrase("Employee : " + Idno + "   PF Declaration", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellstart.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellstart.Colspan = 3;
                    cellstart.Border = 0;
                    cellstart.PaddingTop = -30f;
                    table.AddCell(cellstart);

                    cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 3;
                    cellspace.Border = 0;
                    //cellspace.PaddingTop = -5;
                    table.AddCell(cellspace);

                    cellheading = new PdfPCell(new Phrase("EMPLOYEES' PROVIDENT FUND ORGANISATION", headfont));
                    cellheading.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading.Colspan = 3;
                    cellheading.Border = 0;
                    table.AddCell(cellheading);


                    PdfPCell cellheading1 = new PdfPCell(new Phrase("NOMINATION AND DECLARATION FORM ", Subheadfont));
                    cellheading1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading1.Colspan = 3;
                    cellheading1.PaddingLeft = -30f;
                    cellheading1.Border = 0;
                    table.AddCell(cellheading1);

                    PdfPCell cellheadingg1 = new PdfPCell(new Phrase("FOR UNEXEMPTED / EXEMPTED ESTABLISHMENTS", Subheadfont));
                    cellheadingg1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheadingg1.Colspan = 3;
                    cellheadingg1.Border = 0;
                    table.AddCell(cellheadingg1);

                    table.AddCell(cellspace);


                    PdfPCell cellheading2 = new PdfPCell(new Phrase("Declaration and Nomination form under the Employees' Provident Funds and Employee's Pension Scheme", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cellheading2.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading2.Colspan = 3;
                    cellheading2.Border = 0;
                    table.AddCell(cellheading2);

                    PdfPCell cellheading3 = new PdfPCell(new Phrase("(Paragraph 33 & 61 of the Employees' Provident Fund Schema, 1952 and Paragraph 18 of the Employees' Pension Scheme, 1995 )", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cellheading3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellheading3.Colspan = 3;
                    cellheading3.Border = 0;

                    table.AddCell(cellheading3);

                    table.AddCell(cellspace);


                    PdfPCell cellnamehead = new PdfPCell(new Phrase("1. Name ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellnamehead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellnamehead.Colspan = 0;
                    cellnamehead.Border = 0;
                    table.AddCell(cellnamehead);

                    PdfPCell cellnamecol = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellnamecol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellnamecol.Colspan = 0;
                    cellnamecol.Border = 0;
                    table.AddCell(cellnamecol);

                    //PdfPCell cellname = new PdfPCell();
                    //var cellaaffsc = new Phrase();
                    //cellaaffsc.Add(new Chunk(name + "                              Employee No ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    //cellaaffsc.Add(new Chunk(Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));

                    PdfPCell cellname = new PdfPCell(new Phrase(name + "  Employee No : " + Idno, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    //cellname.AddElement(cellaaffsc);
                    cellname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellname.Colspan = 0;
                    cellname.Border = 0;
                    //cellname.PaddingLeft = -150f;
                    table.AddCell(cellname);


                    table.AddCell(cellspace);


                    PdfPCell cellFathershead = new PdfPCell(new Phrase("2. Father's/Husband's Name\n    (In case of married woman)", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellFathershead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFathershead.Colspan = 0;
                    cellFathershead.Border = 0;
                    table.AddCell(cellFathershead);

                    PdfPCell cellFatherscol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellFatherscol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFatherscol.Colspan = 0;
                    cellFatherscol.Border = 0;
                    table.AddCell(cellFatherscol);

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }

                    PdfPCell cellFathername = new PdfPCell(new Phrase(FatherSpouseName, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellFathername.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellFathername.Colspan = 0;
                    cellFathername.Border = 0;
                    table.AddCell(cellFathername);

                    table.AddCell(cellspace);


                    PdfPCell cellDOBhead = new PdfPCell(new Phrase("3. Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOBhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOBhead.Colspan = 0;
                    cellDOBhead.Border = 0;
                    table.AddCell(cellDOBhead);

                    PdfPCell cellDOBcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOBcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOBcol.Colspan = 0;
                    cellDOBcol.Border = 0;
                    table.AddCell(cellDOBcol);

                    PdfPCell cellDOB = new PdfPCell(new Phrase(EmpDtofBirths, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellDOB.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOB.Colspan = 0;
                    cellDOB.Border = 0;
                    table.AddCell(cellDOB);

                    table.AddCell(cellspace);

                    PdfPCell cellSexhead = new PdfPCell(new Phrase("4. Gender", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellSexhead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSexhead.Colspan = 0;
                    cellSexhead.Border = 0;
                    table.AddCell(cellSexhead);

                    PdfPCell cellSexcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellSexcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSexcol.Colspan = 0;
                    cellSexcol.Border = 0;
                    table.AddCell(cellSexcol);

                    PdfPCell cellSex = new PdfPCell(new Phrase(Gender.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellSex.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellSex.Colspan = 0;
                    cellSex.Border = 0;
                    table.AddCell(cellSex);

                    table.AddCell(cellspace);

                    PdfPCell cellMSHead = new PdfPCell(new Phrase("5. Marital Status", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellMSHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMSHead.Colspan = 0;
                    cellMSHead.Border = 0;
                    table.AddCell(cellMSHead);

                    PdfPCell cellMScol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellMScol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMScol.Colspan = 0;
                    cellMScol.Border = 0;
                    table.AddCell(cellMScol);

                    PdfPCell cellMS = new PdfPCell(new Phrase(maritalstatus.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellMS.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellMS.Colspan = 0;
                    cellMS.Border = 0;
                    table.AddCell(cellMS);

                    table.AddCell(cellspace);

                    PdfPCell cellANHead = new PdfPCell(new Phrase("6. Account No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellANHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellANHead.Colspan = 0;
                    cellANHead.Border = 0;
                    table.AddCell(cellANHead);

                    PdfPCell cellANcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellANcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellANcol.Colspan = 0;
                    cellANcol.Border = 0;
                    table.AddCell(cellANcol);

                    PdfPCell cellAN = new PdfPCell(new Phrase(cmpnyinfo + "" + PFNO, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellAN.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellAN.Colspan = 0;
                    cellAN.Border = 0;
                    table.AddCell(cellAN);

                    table.AddCell(cellspace);



                    cellPerminentaddr = new PdfPCell(new Phrase("7. Permanent Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPerminentaddr.HorizontalAlignment = 0;
                    cellPerminentaddr.Colspan = 0;
                    cellPerminentaddr.Border = 0;
                    table.AddCell(cellPerminentaddr);

                    PdfPCell cellPerminentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPerminentaddr2.HorizontalAlignment = 0;
                    cellPerminentaddr2.Colspan = 0;
                    cellPerminentaddr2.Border = 0;

                    table.AddCell(cellPerminentaddr2);

                    #region Permanent address String array

                    PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = "Landmark :  " + pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = "Vill : " + peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = "Taluka : " + peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = "City : " + pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = "State : " + peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = ", Pincode : " + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion


                    cellPerminentaddr1 = new PdfPCell(new Phrase(Emppermanentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellPerminentaddr1.HorizontalAlignment = 0;
                    cellPerminentaddr1.Colspan = 0;
                    cellPerminentaddr1.Border = 0;
                    //cellPerminentaddr1.PaddingLeft = -140;
                    table.AddCell(cellPerminentaddr1);

                    table.AddCell(cellspace);

                    cellPresentaddr = new PdfPCell(new Phrase("8. Current Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPresentaddr.HorizontalAlignment = 0;
                    cellPresentaddr.Colspan = 0;
                    cellPresentaddr.Border = 0;
                    table.AddCell(cellPresentaddr);

                    PdfPCell cellPresentaddr2 = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPresentaddr2.HorizontalAlignment = 0;
                    cellPresentaddr2.Colspan = 0;
                    cellPresentaddr2.Border = 0;
                    table.AddCell(cellPresentaddr2);

                    #region Present address String array

                    PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = "Landmark :  " + prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = "Vill :  " + prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = "Taluka : " + prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = "City : " + prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = "State : " + prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = ", Pincode : " + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion

                    cellPresentaddr1 = new PdfPCell(new Phrase(Emppresentaddress.TrimStart(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellPresentaddr1.HorizontalAlignment = 0;
                    cellPresentaddr1.Colspan = 0;
                    cellPresentaddr1.Border = 0;
                    //cellPresentaddr1.PaddingLeft = -140;i
                    table.AddCell(cellPresentaddr1);
                    table.AddCell(cellspace);

                    table.AddCell(cellspace);


                    PdfPCell cellDOJHead = new PdfPCell(new Phrase("9. Date of Joining", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellDOJHead.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJHead.Colspan = 0;
                    cellDOJHead.Border = 0;
                    //table.AddCell(cellDOJHead);

                    PdfPCell cellDOJcol = new PdfPCell(new Phrase(":", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellDOJcol.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJcol.Colspan = 0;
                    cellDOJcol.Border = 0;
                    //table.AddCell(cellDOJcol);

                    PdfPCell cellDOJ = new PdfPCell(new Phrase(date.ToString(), FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    cellDOJ.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellDOJ.Colspan = 0;
                    cellDOJ.Border = 0;
                    //table.AddCell(cellDOJ);

                    table.AddCell(cellspace);
                    table.AddCell(cellspace);
                    table.AddCell(cellspace);

                    PdfPCell cellPartA = new PdfPCell(new Phrase("PART - A (EPF) Para 18", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cellPartA.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellPartA.Colspan = 3;
                    cellPartA.Border = 0;
                    table.AddCell(cellPartA);

                    PdfPCell cellPartAdesc = new PdfPCell(new Phrase("I hereby nominate the person(s)/cancel the nomination made by me previously and nominate the person(s), mentioned below to receive the amount standing to my credit in the Employee's Provident Fund in the event of my death.", Subheadfont));
                    cellPartAdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cellPartAdesc.Colspan = 3;
                    cellPartAdesc.Border = 0;
                    cellPartAdesc.PaddingTop = 20;
                    table.AddCell(cellPartAdesc);

                    document.Add(table);

                    table2 = new PdfPTable(6);
                    table2.TotalWidth = 550f;
                    table2.LockedWidth = true;
                    float[] widths = new float[] { 2.2f, 2f, 2f, 2f, 2.5f, 2.5f };
                    table2.SetWidths(widths);

                    PdfPCell cspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cspace.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cspace.Colspan = 6;
                    cspace.Border = 0;
                    table2.AddCell(cspace);

                    PdfPCell cname = new PdfPCell(new Phrase("Name & Address Nominee/Nominees  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cname.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cname.Colspan = 2;
                    table2.AddCell(cname);

                    PdfPCell caddress = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    caddress.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    caddress.Colspan = 0;
                    //table2.AddCell(caddress);

                    PdfPCell crelationship = new PdfPCell(new Phrase("Nominee's relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    crelationship.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    crelationship.Colspan = 2;
                    table2.AddCell(crelationship);

                    PdfPCell cdob = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cdob.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdob.Colspan = 2;
                    table2.AddCell(cdob);






                    if (dtpf.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtpf.Rows.Count; i++)
                        {
                            Fname = dtpf.Rows[i]["RName"].ToString();
                            PdfPCell cnamedesc = new PdfPCell(new Phrase(Fname, bodyfontnormal));
                            cnamedesc.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cnamedesc.Colspan = 2;
                            cnamedesc.MinimumHeight = 30;
                            table2.AddCell(cnamedesc);

                            place = dtpf.Rows[i]["RPlace"].ToString();
                            PdfPCell caddressdesc = new PdfPCell(new Phrase(place, bodyfontnormal));
                            caddressdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            caddressdesc.Colspan = 0;
                            // table2.AddCell(caddressdesc);

                            relationType = dtpf.Rows[i]["RType"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell crelationshipdesc = new PdfPCell(new Phrase(relationType, bodyfontnormal));
                                crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                crelationshipdesc.Colspan = 2;
                                table2.AddCell(crelationshipdesc);
                            }
                            else
                            {

                                PdfPCell crelationshipdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                                crelationshipdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                                crelationshipdesc.Colspan = 2;
                                table2.AddCell(crelationshipdesc);
                            }

                            Relage = dtpf.Rows[i]["DateOfBirth"].ToString();
                            RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();
                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtpf.Rows[i]["DateOfBirth"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + "\nAge : " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }


                            PdfPCell cdobnodesc = new PdfPCell(new Phrase(RelDOFBirth, bodyfontnormal));
                            cdobnodesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cdobnodesc.Colspan = 2;
                            table2.AddCell(cdobnodesc);

                            PdfPCell camtdesc = new PdfPCell(new Phrase("", bodyfontnormal));
                            camtdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            camtdesc.Colspan = 0;
                            //table2.AddCell(camtdesc);

                            PdfPCell cminordesc = new PdfPCell(new Phrase("", bodyfontnormal));
                            cminordesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cminordesc.Colspan = 0;
                            //table2.AddCell(cminordesc);




                        }


                    }

                    PdfPCell camt = new PdfPCell(new Phrase("Total amount of share of accumulation in Provident Fund to be paid to each nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    camt.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camt.Colspan = 3;
                    camt.Border = 0;
                    table2.AddCell(camt);

                    PdfPCell camt11 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    camt11.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    camt11.Colspan = 3;
                    camt11.Border = 0;
                    table2.AddCell(camt11);

                    PdfPCell cminor = new PdfPCell(new Phrase("If the nominee is a minor, name & relationship & address of the guardian who may receive the amount during the minority of nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cminor.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminor.Colspan = 3;
                    cminor.Border = 0;
                    table2.AddCell(cminor);

                    PdfPCell cminor1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cminor1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cminor1.Colspan = 3;
                    cminor1.Border = 0;
                    table2.AddCell(cminor1);

                    table2.AddCell(cspace);
                    table2.AddCell(cspace);

                    PdfPCell cpt1 = new PdfPCell(new Phrase("1.  *Certified that I have no family as defined in para 2(g) of the Employees' Provident Fund Scheme,1952 and should I acquire a family hereafter the above nomination should be deemed as cancelled.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpt1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt1.Colspan = 6;
                    cpt1.Border = 0;
                    table2.AddCell(cpt1);

                    PdfPCell cpt2 = new PdfPCell(new Phrase("2.  *Certified that my father/mother is/are dependant upon me.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpt2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt2.Colspan = 6;
                    cpt2.Border = 0;
                    table2.AddCell(cpt2);

                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);
                    table2.AddCell(cspace);

                    PdfPCell cpt3 = new PdfPCell(new Phrase("I hereby furnish below particulars of the members of my family who would be eligible to receive Widow / Widower / Children Pension in the event of my death :-", Subheadfont));
                    cpt3.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpt3.Colspan = 6;
                    cpt3.Border = 0;
                    table2.AddCell(cpt3);

                    PdfPCell csign = new PdfPCell(new Phrase("Signature or thumb impression of the Subscriber", Subheadfont));
                    csign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csign.Colspan = 3;
                    csign.Border = 0;
                    //table2.AddCell(csign);
                    document.Add(table2);

                    table2.AddCell(cellspace);

                    document.NewPage();






                    table3 = new PdfPTable(6);
                    table3.TotalWidth = 550f;
                    table3.LockedWidth = true;
                    width2 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f };
                    table3.SetWidths(width2);

                    PdfPCell cpartBemp = new PdfPCell(new Phrase("", headfont));
                    cpartBemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cpartBemp.Colspan = 6;
                    cpartBemp.Border = 0;
                    table3.AddCell(cpartBemp);

                    PdfPCell cpartB = new PdfPCell(new Phrase("PART B (EPS) (Para 18)", headfont));
                    cpartB.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cpartB.Colspan = 6;
                    cpartB.Border = 0;
                    cpartB.PaddingTop = 5;
                    table3.AddCell(cpartB);

                    //table3.AddCell(cellspace);

                    PdfPCell cpartBdesc = new PdfPCell(new Phrase("I hereby furnish below particular of the members of my family who would be eligible to receive widow/ children pension in the event of my death", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpartBdesc.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cpartBdesc.Colspan = 6;
                    cpartBdesc.Border = 0;
                    cpartBdesc.PaddingTop = 5;
                    //table3.AddCell(cpartBdesc);
                    table3.AddCell(cspace);

                    PdfPCell csno = new PdfPCell(new Phrase("S.No", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    csno.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csno.Colspan = 1;
                    // table3.AddCell(csno);

                    PdfPCell cnameaddress = new PdfPCell(new Phrase("Name of the family member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnameaddress.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnameaddress.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 1;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 1;
                    table3.AddCell(cnameaddress);

                    PdfPCell cndob = new PdfPCell(new Phrase("Address", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cndob.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cndob.Colspan = 3;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(cndob);

                    PdfPCell cnrelationship = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnrelationship.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnrelationship.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(cnrelationship);

                    PdfPCell csnonoemp = new PdfPCell(new Phrase("Relation with member", bodyfont));
                    csnonoemp.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csnonoemp.Colspan = 1;
                    cnameaddress.BorderWidthBottom = 1;
                    cnameaddress.BorderWidthLeft = 0;
                    cnameaddress.BorderWidthRight = 0;
                    cnameaddress.BorderWidthTop = 0;
                    table3.AddCell(csnonoemp);


                    PdfPCell csnonoemp123 = new PdfPCell(new Phrase("", bodyfont));
                    csnonoemp123.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    csnonoemp123.Colspan = 1;
                    csnonoemp123.PaddingTop = 15f;
                    csnonoemp123.Border = 0;
                    //table3.AddCell(csnonoemp123);

                    RelDOFBirth = "";

                    if (dtfamilydetails.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtfamilydetails.Rows.Count; i++)
                        {



                            Fname = dtfamilydetails.Rows[i]["RName"].ToString();
                            PdfPCell cellRName = new PdfPCell(new Phrase(Fname, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellRName.HorizontalAlignment = 0;
                            cellRName.Colspan = 1;
                            cellRName.MinimumHeight = 30;
                            table3.AddCell(cellRName);

                            place = dtfamilydetails.Rows[i]["RPlace"].ToString();
                            if (place.Length > 0)
                            {
                                RelationPlace = place;
                            }
                            else if (RRes.Length > 0)
                            {
                                RelationPlace = RRes;
                            }
                            else
                            {

                                RelationPlace = "";
                            }

                            PdfPCell cellres1 = new PdfPCell(new Phrase(RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellres1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                            cellres1.Colspan = 3;
                            cellres1.MinimumHeight = 20;
                            table3.AddCell(cellres1);

                            RelDOFBirth = dtfamilydetails.Rows[i]["dbirth"].ToString();
                            Relage = dtfamilydetails.Rows[i]["age"].ToString();

                            if (RelDOFBirth.Length > 0)
                            {
                                if (RelDOFBirth == "01/01/1900")
                                {
                                    RelDOFBirth = "";
                                }
                                else
                                {
                                    RelDOFBirth = dtfamilydetails.Rows[i]["dbirth"].ToString();

                                }
                            }


                            relationAge = dtfamilydetails.Rows[i]["age"].ToString();

                            if (relationAge.Length > 0 && relationAge != "0")
                            {
                                relationAge = "\nAge: " + dtfamilydetails.Rows[i]["age"].ToString();
                            }
                            else
                            {

                                relationAge = "";
                            }






                            PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth + relationAge, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellreldob1.Colspan = 1;
                            cellreldob1.MinimumHeight = 20;
                            table3.AddCell(cellreldob1);



                            relationType = dtfamilydetails.Rows[i]["rtype"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);


                            }



                        }


                    }

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);

                    PdfPCell cpnt1 = new PdfPCell(new Phrase("** Certified that I have no family as defined in para 2(vii) of Employees' Pension Scheme 1995 and should I acquire a family hereafter I shall furnish particulars thereon in the above form.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt1.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    cpnt1.Colspan = 6;
                    cpnt1.Border = 0;
                    cpnt1.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -100f;
                        sealImg.PaddingRight = -130f;
                        sealImg.PaddingTop = 0;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cpnt121 = new PdfPCell(new Phrase("Signature of thumb impression of the subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt121.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cpnt121.Colspan = 6;
                    cpnt121.PaddingTop = 10f;
                    cpnt121.Border = 0;
                    cpnt121.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt121);



                    PdfPCell cpnt2 = new PdfPCell(new Phrase("I hereby nominate the following person for receiving the monthly Pension (admissible under para 16(2)(g)(i) and (ii) in the event of my death without leaving any eligible family member for receiving pension.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cpnt2.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    cpnt2.Colspan = 6;
                    cpnt2.Border = 0;
                    cpnt2.PaddingTop = 5;
                    cpnt2.SetLeading(0f, 1.2f);
                    table3.AddCell(cpnt2);


                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);


                    PdfPCell cnameaddressp3 = new PdfPCell(new Phrase("Name and Address of the Nominee", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnameaddressp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnameaddressp3.Colspan = 3;
                    cnameaddressp3.MinimumHeight = 30;
                    table3.AddCell(cnameaddressp3);

                    PdfPCell cndobp3 = new PdfPCell(new Phrase("Date of Birth", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cndobp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cndobp3.Colspan = 2;
                    table3.AddCell(cndobp3);

                    PdfPCell cnrelationshipp3 = new PdfPCell(new Phrase("Relationship with the member", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnrelationshipp3.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnrelationshipp3.Colspan = 1;
                    table3.AddCell(cnrelationshipp3);




                    if (dtpf.Rows.Count > 0)
                    {
                        for (int i = 0; i < dtpf.Rows.Count; i++)
                        {


                            place = dtpf.Rows[i]["RPlace"].ToString();
                            if (place.Length > 0)
                            {
                                RelationPlace = place;
                            }
                            else if (RRes.Length > 0)
                            {
                                RelationPlace = RRes;
                            }
                            else
                            {

                                RelationPlace = "";
                            }

                            Fname = dtpf.Rows[i]["RName"].ToString();
                            PdfPCell cellRName = new PdfPCell(new Phrase(Fname + "\n" + RelationPlace, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellRName.HorizontalAlignment = 1;
                            cellRName.Colspan = 3;
                            cellRName.MinimumHeight = 30;
                            table3.AddCell(cellRName);



                            RelDOFBirth = dtpf.Rows[i]["DateOfBirth"].ToString();


                            if (Relage == "0")
                            {
                                Relage = "";
                            }
                            else if (Relage.Length > 0 && Relage != "0")
                            {
                                Relage = dtpf.Rows[i]["age"].ToString();
                            }



                            if (RelDOFBirth != "" && Relage.Length > 0 && Relage != "0")
                            {
                                RelDOFBirth = RelDOFBirth + "\nAge : " + Relage;
                            }
                            else if (Relage.Length > 0 && Relage != "0" && RelDOFBirth == "")
                            {
                                RelDOFBirth = Relage;
                            }
                            else if (RelDOFBirth != "" && (Relage.Length == 0 || Relage == "0"))
                            {
                                RelDOFBirth = RelDOFBirth;
                            }







                            PdfPCell cellreldob1 = new PdfPCell(new Phrase(RelDOFBirth, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                            cellreldob1.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                            cellreldob1.Colspan = 2;
                            cellreldob1.MinimumHeight = 20;
                            table3.AddCell(cellreldob1);



                            relationType = dtpf.Rows[i]["rtype"].ToString();
                            if (relationType != "--Select--")
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase(relationType, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);
                            }
                            else
                            {
                                PdfPCell cellRType = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                                cellRType.HorizontalAlignment = 1;
                                cellRType.Colspan = 1;
                                table3.AddCell(cellRType);


                            }



                        }


                    }



                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -30f;
                        sealImg.PaddingRight = -80f;
                        sealImg.PaddingTop = 30;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cdate = new PdfPCell(new Phrase("Date : ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cdate.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cdate.Colspan = 3;
                    cdate.PaddingTop = 5;
                    cdate.Border = 0;
                    table3.AddCell(cdate);

                    PdfPCell cnsign = new PdfPCell(new Phrase("Signature of thumb impression of the Subscriber", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    cnsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnsign.Colspan = 3;
                    cnsign.Border = 0;
                    cnsign.PaddingTop = 30;
                    table3.AddCell(cnsign);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);



                    PdfPCell ForUse = new PdfPCell(new Phrase("FOR OFFICE USE ONLY", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    ForUse.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    ForUse.Colspan = 6;
                    ForUse.Border = 0;
                    table3.AddCell(ForUse);

                    PdfPCell DojPf = new PdfPCell(new Phrase("Dt. of Joining E.P.F         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojPf.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojPf.Colspan = 3;
                    DojPf.BorderWidthTop = 1;
                    DojPf.BorderWidthLeft = 1;
                    DojPf.BorderWidthRight = 1;
                    DojPf.BorderWidthBottom = 0;
                    table3.AddCell(DojPf);

                    PdfPCell DojPf1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojPf1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojPf1.Colspan = 1;
                    DojPf1.BorderWidthTop = 1;
                    DojPf1.BorderWidthLeft = 0;
                    DojPf1.BorderWidthRight = 1;
                    DojPf1.BorderWidthBottom = 0;
                    table3.AddCell(DojPf1);

                    PdfPCell Entries = new PdfPCell(new Phrase("ENTRIES VERIFIED", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    Entries.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    Entries.Colspan = 2;
                    Entries.BorderWidthTop = 1;
                    Entries.BorderWidthLeft = 0;
                    Entries.BorderWidthRight = 1;
                    Entries.BorderWidthBottom = 0;
                    table3.AddCell(Entries);

                    PdfPCell PastService = new PdfPCell(new Phrase("Past Service         ..............Year", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    PastService.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService.Colspan = 3;
                    PastService.BorderWidthTop = 0;
                    PastService.BorderWidthLeft = 1;
                    PastService.BorderWidthRight = 1;
                    PastService.BorderWidthBottom = 0;
                    table3.AddCell(PastService);

                    PdfPCell PastService1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    PastService1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService1.Colspan = 1;
                    PastService1.BorderWidthTop = 0;
                    PastService1.BorderWidthLeft = 0;
                    PastService1.BorderWidthRight = 1;
                    PastService1.BorderWidthBottom = 0;
                    table3.AddCell(PastService1);

                    PdfPCell PastService2 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    PastService2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    PastService2.Colspan = 2;
                    PastService2.BorderWidthTop = 0;
                    PastService2.BorderWidthLeft = 0;
                    PastService2.BorderWidthRight = 1;
                    PastService2.BorderWidthBottom = 0;
                    table3.AddCell(PastService2);

                    PdfPCell DojEps = new PdfPCell(new Phrase("Date of Joining EPS         ............../20", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojEps.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps.Colspan = 3;
                    DojEps.BorderWidthTop = 0;
                    DojEps.BorderWidthLeft = 1;
                    DojEps.BorderWidthRight = 1;
                    DojEps.BorderWidthBottom = 1;
                    table3.AddCell(DojEps);

                    PdfPCell DojEps1 = new PdfPCell(new Phrase("", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK))); ;
                    DojEps1.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps1.Colspan = 1;
                    DojEps1.BorderWidthTop = 0;
                    DojEps1.BorderWidthLeft = 0;
                    DojEps1.BorderWidthRight = 1;
                    DojEps1.BorderWidthBottom = 1;
                    table3.AddCell(DojEps1);

                    PdfPCell DojEps2 = new PdfPCell(new Phrase("DA            SS            A.A.O.", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK))); ;
                    DojEps2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    DojEps2.Colspan = 2;
                    DojEps2.BorderWidthTop = 0;
                    DojEps2.BorderWidthLeft = 0;
                    DojEps2.BorderWidthRight = 1;
                    DojEps2.BorderWidthBottom = 1;
                    table3.AddCell(DojEps2);




                    PdfPCell cstrike = new PdfPCell(new Phrase("** Strike out whichever is not applicable", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.BOLD, BaseColor.BLACK))); ;
                    cstrike.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cstrike.Colspan = 6;
                    cstrike.Border = 0;
                    // table3.AddCell(cstrike);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);




                    PdfPCell ccert = new PdfPCell(new Phrase("CERTIFICATE BY EMPLOYER", headfont));
                    ccert.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    ccert.Colspan = 6;
                    ccert.Border = 0;
                    table3.AddCell(ccert);

                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);
                    table3.AddCell(cpartBemp);


                    PdfPCell ccertdesc = new PdfPCell(new Phrase("Certified that the above declaration and nomination has been signed/thumb impressed before me by Shri/Smt./Kum. " + name + " employed in my establishment after he/she has read the entries/ entries been read over to him/her by me and got confirmed by him/her", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    ccertdesc.HorizontalAlignment = Element.ALIGN_JUSTIFIED; //0=Left, 1=Centre, 2=Right
                    ccertdesc.Colspan = 6;
                    ccertdesc.Border = 0;
                    ccertdesc.SetLeading(0f, 1.2f);
                    table3.AddCell(ccertdesc);

                    table3.AddCell(cpartBemp);

                    PdfPCell cnplace = new PdfPCell(new Phrase("For " + CompanyName, Subheadfont));
                    cnplace.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnplace.Colspan = 6;
                    cnplace.PaddingTop = 30;
                    cnplace.Border = 0;
                    cnplace.PaddingBottom = 30;
                    table3.AddCell(cnplace);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -400f;
                        sealImg.PaddingRight = -400f;
                        sealImg.PaddingBottom = -20f;
                        sealImg.PaddingTop = 0;
                        table3.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    PdfPCell cnemp = new PdfPCell(new Phrase("Authorized Signatory", Subheadfont));
                    cnemp.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnemp.Colspan = 6;
                    cnemp.Border = 0;
                    cnemp.PaddingTop = 30;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp);
                    table3.AddCell(cpartBemp);

                    PdfPCell cnemp11 = new PdfPCell(new Phrase("Designation : ", Subheadfont));
                    cnemp11.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnemp11.Colspan = 6;
                    cnemp11.Border = 0;
                    cnemp11.PaddingTop = 25;
                    cnemp11.PaddingLeft = 270;
                    table3.AddCell(cnemp11);
                    table3.AddCell(cpartBemp);

                    PdfPCell cnemp11w2 = new PdfPCell(new Phrase("Date :", Subheadfont));
                    cnemp11w2.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cnemp11w2.Colspan = 2;
                    cnemp11w2.Border = 0;
                    //cnemp11w2.PaddingTop = 25;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp11w2);

                    PdfPCell cnemp11w = new PdfPCell(new Phrase(CompanyName, Subheadfont));
                    cnemp11w.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnemp11w.Colspan = 4;
                    cnemp11w.Border = 0;
                    cnemp11w.PaddingTop = 10;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnemp11w);
                    // table3.AddCell(cpartBemp);



                    PdfPCell cnempaddrw = new PdfPCell(new Phrase(companyaddress, FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 1, Font.NORMAL, BaseColor.BLACK)));
                    cnempaddrw.HorizontalAlignment = 2; //0=Left, 1=Centre, 2=Right
                    cnempaddrw.Colspan = 6;
                    cnempaddrw.Border = 0;
                    cnempaddrw.PaddingTop = 10;
                    // cnemp.PaddingBottom = 30;
                    table3.AddCell(cnempaddrw);
                    // table3.AddCell(cpartBemp);





                    PdfPCell cnbxsign = new PdfPCell(new Phrase(" ", bodyfont));
                    cnbxsign.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cnbxsign.Colspan = 2;
                    cnbxsign.MinimumHeight = 100;
                    //table3.AddCell(cnbxsign);

                    PdfPCell cnsgn = new PdfPCell(new Phrase("  Signature of the employer or other Authorized Officers of the\n  Establishment \n\n\n  Destination __________________", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cnsgn.HorizontalAlignment = 0; //0=Left, 1=Centre, 2=Right
                    cnsgn.Colspan = 4;
                    cnsgn.Border = 0;
                    //cnsgn.PaddingTop = 30;
                    table3.AddCell(cnsgn);

                    document.Add(table3);

                    #endregion for PFForm

                    document.NewPage();
                    #region for Appointment Form

                    Fontsize = 10;
                    fontsize1 = 8;
                    fontsize2 = 6;
                    Fontsize3 = 11;

                    PdfPTable table1 = new PdfPTable(2);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    float[] widthh1 = new float[] { 0.4f, 6f };
                    table1.SetWidths(widthh1);
                    PdfPCell cell;

                    cell = new PdfPCell(new Phrase("Emp Id: " + Idno + "  Appointment Form", FontStyle7));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    cell.PaddingTop = -30f;
                    table1.AddCell(cell);

                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(50);
                        gif2.SetAbsolutePosition(16f, 895f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }

                    cell = new PdfPCell(new Phrase(CompanyName, FontStyleHeading));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(companyaddress, FontStyle3));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("Date :" + ((DateTime.Now).ToString("dd/MM/yyy")), FontStyle1));
                    cell.HorizontalAlignment = 2;
                    cell.Colspan = 2;
                    cell.PaddingTop = 30;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    var phrase1 = new Phrase();
                    phrase1.Add(new Chunk("Mr. / Mrs. ", FontStyle1));
                    phrase1.Add(new Chunk(name, FontStyle4));
                    PdfPCell cell131 = new PdfPCell();
                    cell131.AddElement(phrase1);
                    cell131.HorizontalAlignment = 0;
                    cell131.Colspan = 2;
                    cell131.Border = 0;
                    table1.AddCell(cell131);

                    cell = new PdfPCell(new Phrase(Emppermanentaddress, FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Dear Sir / Madam :", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 10f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Sub : APPOINTMENT", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 15f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    var phrase = new Phrase();
                    phrase.Add(new Chunk("With Reference to your application for employment and the subsequent interviews/s you had with us, we are pleased to offer you an appointment as ", FontStyle4));
                    phrase.Add(new Chunk(designation, FontStyle1));
                    phrase.Add(new Chunk(" w.e.f ", FontStyle4));
                    phrase.Add(new Chunk(doj, FontStyle1));
                    phrase.Add(new Chunk(" in our organization on the following terms and conditions :-", FontStyle4));
                    PdfPCell cell13 = new PdfPCell();
                    cell13.AddElement(phrase);
                    cell13.HorizontalAlignment = 0;
                    cell13.Colspan = 2;
                    cell13.Border = 0;
                    table1.AddCell(cell13);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("1. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will be on probation for a period of six months from the date you report to duty.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    //cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Your probationary period may be extended for a further period of six months at the sole discretion of the Management, and the same will be communicated to you in writing. On satisfactory completion of your probationary period and / or any extended period thereafter, you may be confirmed in writing by the Management.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("2. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("You will be paid a gross salary of Rs ............................ only (Rupees as per statutory post and grade) per month.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("3. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("At the end of the period of probation and / or any extended period thereafter, if no written confirmation is received by you, you will be deemed to have been confirmed.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("4. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("During the period of probation, your services will be liable to be terminated without any Notice or without assigning any reason or compensation.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("5. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will also be eligible for PF, ESI Gratuity, Leave and other benefits as per rules and as applicable to all other employees in your cadre.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("6. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("During the period of your employment, you shall agree to work in shifts. You shall accept to work at any security post within the same factory or to any other clients of the Company and the rules and regulations applicable to the new place of posting shall be applicable to you.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("7. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("You will also be required to carry out jobs and responsibilities entrusted to you by your superiors irrespective of your nature of work to which you have been appointed.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);


                    cell = new PdfPCell(new Phrase("8. ", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.SetLeading(0, 1.2f);
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("During the period of service with the Company, you shall not carry on any business of your own either part time or otherwise.", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    cell.SetLeading(0, 1.2f);
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStyle4));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.PaddingBottom = 20f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    document.Add(table1);

                    document.NewPage();

                    PdfPTable table11 = new PdfPTable(2);
                    table11.TotalWidth = 500f;
                    table11.LockedWidth = true;
                    float[] width1y = new float[] { 0.4f, 6f };
                    table11.SetWidths(width1y);
                    PdfPCell cell1;



                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    cell1.PaddingTop = 50f;
                    //cell.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("9. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("You shall not, at any time, disclose to anyone any information, know-how knowledge, secret methods, plans, etc., of the Company.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("10. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.3f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("You will be responsible for the work, machinery, tools and other items/materials entrusted to you from time to time.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.3f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("11. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("This offer of appointment is purely based on the information furnished by you, and should there be any material information not being disclosed or if found at a later stage that the information furnished by you is false, you will be subject to strict disciplinary action including  termination of employment  without any notice or compensation.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("12. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("In addition to the above conditions, you will be governed by the Certified Standing Orders of the company applicable to workers and to such other rules and regulations that may be framed from time to time.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("13. ", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("You shall retire from the services of the Company on attaining the age of 58 years.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    cell1.SetLeading(0, 1.2f);
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Please sign the duplicate of this letter in token of your acceptance of the same.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 30;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("For " + CompanyName, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 2;
                        sealImg.PaddingLeft = -400f;
                        // sealImg.PaddingRight = -400f;
                        sealImg.PaddingTop = 0;
                        table11.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Authorized Signatory", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("The above terms and conditions of employment has been read over and explained to me in Kannada / ..................... and I voluntarily and willingly accept all the above terms & conditions.", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingBottom = 20f;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Place : " + area, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 2;
                        //sealImg.PaddingLeft = -60f;
                        sealImg.PaddingBottom = -10f;
                        sealImg.PaddingRight = -260f;
                        sealImg.PaddingTop = 0;
                        table11.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Signature of Employee", FontStyle4));
                    cell1.HorizontalAlignment = 2;
                    cell1.Colspan = 2;
                    cell1.SetLeading(0, 1.2f);
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Date : " + doj, FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.Border = 0;
                    table11.AddCell(cell1);

                    document.Add(table11);

                    #endregion for Appointment Form

                    document.NewPage();
                    #region for Movement

                    Font FontStylee4 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.NORMAL, BaseColor.BLACK);
                    Font FontStylee3 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 10, Font.NORMAL, BaseColor.BLACK);
                    Font FontStylee2 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 13, Font.BOLD, BaseColor.BLACK);
                    Font FontStylee1 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 12, Font.BOLD, BaseColor.BLACK);
                    Font FontStylee5 = FontFactory.GetFont("TIMES_ROMAN", BaseFont.CP1252, BaseFont.EMBEDDED, 9, Font.BOLD, BaseColor.BLACK);
                    Fontsize = 10;

                    table1 = new PdfPTable(3);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    width = new float[] { 2f, 2f, 2f };
                    table1.SetWidths(width);


                    cell = new PdfPCell(new Phrase("Employee: " + Idno + "   Movement Order", FontStylee5));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = -40f;
                    table1.AddCell(cell);

                    #region for image
                    imagepath2 = Server.MapPath("assets/Images/");
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(14.5f);
                        gif2.SetAbsolutePosition(250f, 900f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion

                    cell = new PdfPCell(new Phrase(CompanyName, FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    cell.PaddingTop = 60f;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Place: ", FontStylee1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("MOVEMENT ORDER", FontStylee1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Date: " + ((DateTime.Now).ToString("dd/MM/yyyy")), FontStylee1));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("Service No., Name & Rank", FontStylee3));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 1;
                    cell.PaddingBottom = 5f;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase(Empid + "             " + name + "            " + postappliedfor, FontStylee3));
                    cell.HorizontalAlignment = 0;
                    cell.Colspan = 2;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    cell = new PdfPCell(new Phrase("", FontStylee2));
                    cell.HorizontalAlignment = 1;
                    cell.Colspan = 3;
                    cell.Border = 0;
                    table1.AddCell(cell);

                    document.Add(table1);

                    table2 = new PdfPTable(4);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    width2 = new float[] { 2f, 4f, 2f, 4f };
                    table2.SetWidths(width2);
                    // PdfPCell cell1;

                    cell1 = new PdfPCell(new Phrase("E.S.I No", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(Esino, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("P.F.No", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(PFno, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Date of Posting", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    table2.AddCell(cell1);



                    cell1 = new PdfPCell(new Phrase(Dateofjoining, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Area", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(area, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Reporting to", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(RprtMngr, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Zone", FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase(division, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.PaddingBottom = 5f;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Height  " + height + "                                                        Weight " + weight + "                                     Chest " + chest, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStylee2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Identification Mark  " + EmpIdMark1, FontStylee3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 0;
                        sealImg.Colspan = 4;
                        sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -40f;
                        //sealImg.PaddingRight = -260f;
                        sealImg.PaddingTop = 40f;
                        table2.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }

                    cell1 = new PdfPCell(new Phrase("Sig. of Individual", FontStyle6));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 2;
                    cell1.PaddingTop = 0;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sig. of Authorised Officer", FontStyle6));
                    cell1.HorizontalAlignment = 2;
                    cell1.Colspan = 2;
                    cell1.PaddingTop = 0;
                    cell1.Border = 0;
                    table2.AddCell(cell1);

                    document.Add(table2);

                    #endregion

                    #region for IDCard

                    #region for range ID Card Display


                    PdfPTable MainIDCarddetails = new PdfPTable(18);
                    MainIDCarddetails.TotalWidth = 800f;
                    MainIDCarddetails.LockedWidth = true;
                    MainIDCarddetails.DefaultCell.HorizontalAlignment = Element.ALIGN_LEFT;
                    MainIDCarddetails.DefaultCell.VerticalAlignment = Element.ALIGN_TOP;
                    float[] width4 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    MainIDCarddetails.SetWidths(width4);



                    PdfPCell emptycellgap = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    emptycellgap.HorizontalAlignment = 1;
                    emptycellgap.Border = 0;
                    emptycellgap.Colspan = 18;
                    emptycellgap.MinimumHeight = 100;
                    MainIDCarddetails.AddCell(emptycellgap);


                    PdfPTable IDCarddetails = new PdfPTable(10);
                    IDCarddetails.TotalWidth = 370f;
                    IDCarddetails.LockedWidth = true;
                    width = new float[] { 5f, 2f, 2f, 2f, 0.2f, 5f, 2f, 2f, 2f, 2.4f };
                    IDCarddetails.SetWidths(width);

                    PdfPTable IDCardTemptable1 = new PdfPTable(4);
                    IDCardTemptable1.TotalWidth = 185f;
                    // IDCardTemptable1.HorizontalAlignment = 0;
                    IDCardTemptable1.LockedWidth = true;
                    width1 = new float[] { 2.4f, 2.4f, 2.4f, 2.4f };
                    IDCardTemptable1.SetWidths(width1);


                    iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath2);
                    srflogo.ScaleAbsolute(40f, 35f);
                    PdfPCell companylogo = new PdfPCell();
                    Paragraph cmplogo = new Paragraph();
                    cmplogo.Add(new Chunk(srflogo, 80f, 10f));
                    companylogo.AddElement(cmplogo);
                    companylogo.HorizontalAlignment = 0;
                    companylogo.Colspan = 4;
                    companylogo.PaddingLeft = -13;
                    companylogo.Border = 0;
                    IDCardTemptable1.AddCell(companylogo);

                    PdfPCell cellSymbol = new PdfPCell(new Phrase("''A Symbol of Quality Services''", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    cellSymbol.HorizontalAlignment = 1;
                    cellSymbol.Border = 0;
                    cellSymbol.Colspan = 4;
                    cellSymbol.PaddingTop = -10f;
                    IDCardTemptable1.AddCell(cellSymbol);

                    BaseColor color1 = new BaseColor(255, 0, 0);
                    PdfPCell cellCertification = new PdfPCell(new Phrase("ISO 9001:2008", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, color1)));
                    cellCertification.HorizontalAlignment = 1;
                    cellCertification.Border = 0;
                    cellCertification.Colspan = 4;
                    cellCertification.PaddingTop = -1;
                    cellCertification.PaddingLeft = 10;
                    IDCardTemptable1.AddCell(cellCertification);

                    if (Image.Length > 0)
                    {
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + Image);
                        //Empphoto.ScalePercent(25f);
                        Empphoto.ScaleAbsolute(80f, 80f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 70f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 1;
                        EmpImage.PaddingLeft = -15f;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);
                    }
                    else
                    {
                        PdfPCell EmpImage = new PdfPCell();
                        EmpImage.HorizontalAlignment = 2;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);

                    }

                    PdfPCell cellName = new PdfPCell(new Phrase(Name, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellName.HorizontalAlignment = 1;
                    cellName.Border = 0;
                    cellName.Colspan = 4;
                    IDCardTemptable1.AddCell(cellName);

                    PdfPCell cellIDNo = new PdfPCell(new Phrase("P.No : " + Empid, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellIDNo.HorizontalAlignment = 1;
                    cellIDNo.Border = 0;
                    cellIDNo.Colspan = 4;
                    IDCardTemptable1.AddCell(cellIDNo);

                    PdfPCell cellRank = new PdfPCell(new Phrase("Rank : " + Designation, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellRank.HorizontalAlignment = 1;
                    cellRank.Border = 0;
                    cellRank.Colspan = 4;
                    IDCardTemptable1.AddCell(cellRank);

                    PdfPCell cellDtIssued = new PdfPCell(new Phrase("Date of Issue : " + IDcardIssued, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);
                    //sss


                    PdfPCell cellDtValid = new PdfPCell(new Phrase("Valid Upto : " + IDcardvalid, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtValid.HorizontalAlignment = 1;
                    cellDtValid.Border = 0;
                    cellDtValid.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtValid);

                    cellDtIssued = new PdfPCell(new Phrase("ESI No : " + Esino, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);

                    if (EmpSign.Length > 0)
                    {
                        iTextSharp.text.Image Sign = iTextSharp.text.Image.GetInstance(imagepath3 + EmpSign);
                        //Sign.ScalePercent(10f);
                        Sign.ScaleAbsolute(50f, 8f);
                        PdfPCell Signature = new PdfPCell();
                        Paragraph signlogo = new Paragraph();
                        signlogo.Add(new Chunk(Sign, 25f, 0));
                        Signature.AddElement(signlogo);
                        Signature.HorizontalAlignment = 1;
                        Signature.PaddingLeft = 5f;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        IDCardTemptable1.AddCell(Signature);
                    }
                    else
                    {

                        PdfPCell Signature = new PdfPCell();
                        Signature.HorizontalAlignment = 1;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        Signature.FixedHeight = 15;
                        IDCardTemptable1.AddCell(Signature);

                    }

                    iTextSharp.text.Image IssuingAuth = iTextSharp.text.Image.GetInstance(imagepath6 + "Authority.png");
                    //IssuingAuth.ScalePercent(10f);
                    IssuingAuth.ScaleAbsolute(60f, 8f);
                    PdfPCell Authority = new PdfPCell();
                    Paragraph Authoritylogo = new Paragraph();
                    Authoritylogo.Add(new Chunk(IssuingAuth, 10f, 0));
                    Authority.AddElement(Authoritylogo);
                    Authority.HorizontalAlignment = 0;
                    Authority.Colspan = 2;
                    Authority.PaddingTop = -2f;
                    Authority.Border = 0;
                    IDCardTemptable1.AddCell(Authority);

                    PdfPCell cellEmpSign = new PdfPCell(new Phrase("Signature of \nCard Holder", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellEmpSign.HorizontalAlignment = 1;
                    cellEmpSign.Border = 0;
                    cellEmpSign.Colspan = 2;
                    cellEmpSign.PaddingLeft = 20f;
                    IDCardTemptable1.AddCell(cellEmpSign);

                    PdfPCell cellAuthority = new PdfPCell(new Phrase("Issuing Authority", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthority.HorizontalAlignment = 1;
                    cellAuthority.Border = 0;
                    cellAuthority.Colspan = 2;
                    cellAuthority.PaddingTop = 5;
                    IDCardTemptable1.AddCell(cellAuthority);

                    childTable1 = new PdfPCell(IDCardTemptable1);
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 4;
                    IDCarddetails.AddCell(childTable1);

                    PdfPTable IDCardTemptable41 = new PdfPTable(1);
                    IDCardTemptable41.TotalWidth = 6f;
                    IDCardTemptable41.LockedWidth = true;
                    float[] width41 = new float[] { 0.8f };
                    IDCardTemptable41.SetWidths(width41);

                    PdfPCell cellempcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell1.Border = 0;
                    cellempcell1.Colspan = 1;
                    IDCardTemptable41.AddCell(cellempcell1);


                    PdfPCell childTable4 = new PdfPCell(IDCardTemptable41);
                    childTable4.HorizontalAlignment = 0;
                    childTable4.Colspan = 1;
                    childTable4.Border = 0;

                    IDCarddetails.AddCell(childTable4);


                    PdfPTable IDCardTemptable2 = new PdfPTable(4);
                    IDCardTemptable2.TotalWidth = 180f;
                    IDCardTemptable2.LockedWidth = true;
                    width2 = new float[] { 2.3f, 2.3f, 2.3f, 2.3f };
                    IDCardTemptable2.SetWidths(width2);


                    PdfPCell cellInstructions = new PdfPCell(new Phrase("Instructions :", FontFactory.GetFont(fontstyle, fontsize1 + 1, Font.BOLD, BaseColor.BLACK)));
                    cellInstructions.HorizontalAlignment = 0;
                    cellInstructions.Border = 0;
                    cellInstructions.Colspan = 4;
                    //cellInstructions.PaddingTop = -20f;
                    IDCardTemptable2.AddCell(cellInstructions);

                    PdfPCell cellInstructions1 = new PdfPCell(new Phrase("1) ID Card to be worn by employee \n    at all times while on duty.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions1.HorizontalAlignment = 0;
                    cellInstructions1.Border = 0;
                    cellInstructions1.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions1);

                    PdfPCell cellInstructions2 = new PdfPCell(new Phrase("2) Loss or Recovery of the Card shall be \n    reported to HR / Admin Dept.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions2.HorizontalAlignment = 0;
                    cellInstructions2.Border = 0;
                    cellInstructions2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions2);

                    PdfPCell cellInstructions3 = new PdfPCell(new Phrase("3) The Finder May Please return to:", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions3.HorizontalAlignment = 0;
                    cellInstructions3.Border = 0;
                    cellInstructions3.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions3);


                    PdfPCell cellInstructions4 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions4.HorizontalAlignment = 0;
                    cellInstructions4.Border = 0;
                    cellInstructions4.Colspan = 4;
                    cellInstructions4.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellInstructions4);

                    PdfPCell cellComp = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, fontsize1 - 1, Font.BOLD, BaseColor.BLACK)));
                    cellComp.HorizontalAlignment = 0;
                    cellComp.Border = 0;
                    cellComp.Colspan = 4;
                    //cellComp.PaddingTop = 20;
                    IDCardTemptable2.AddCell(cellComp);

                    cellAddress = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize2 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Border = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.SetLeading(0f, 1.2f);
                    cellAddress.VerticalAlignment = 13;
                    IDCardTemptable2.AddCell(cellAddress);

                    PdfPCell cellmobile = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile.Border = 0;
                    cellmobile.Colspan = 4;
                    IDCardTemptable2.AddCell(cellmobile);

                    PdfPCell cellmobile1 = new PdfPCell(new Phrase("Fax : " + Faxno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile1.Border = 0;
                    cellmobile1.Colspan = 4;
                    cellmobile1.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellmobile1);

                    PdfPCell cellEmergency = new PdfPCell(new Phrase("Mail ID : " + Emailid, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                    cellEmergency.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellEmergency.Border = 0;
                    cellEmergency.Colspan = 4;
                    //cellEmergency.PaddingTop = 5;
                    IDCardTemptable2.AddCell(cellEmergency);

                    PdfPCell cellpolice = new PdfPCell(new Phrase("Emergency Contacts", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpolice.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpolice.Border = 0;
                    cellpolice.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpolice);

                    PdfPCell cellpol = new PdfPCell(new Phrase("Police : 100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpol.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpol.Border = 0;
                    cellpol.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpol);

                    PdfPCell cellfire = new PdfPCell(new Phrase("Fire : 101", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellfire.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellfire.Border = 0;
                    cellfire.Colspan = 4;
                    IDCardTemptable2.AddCell(cellfire);

                    PdfPCell celltraffic = new PdfPCell(new Phrase("Traffic : 103", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    celltraffic.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    celltraffic.Border = 0;
                    celltraffic.Colspan = 4;
                    IDCardTemptable2.AddCell(celltraffic);

                    PdfPCell cellamb = new PdfPCell(new Phrase("Ambulance : 102/108", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellamb.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellamb.Border = 0;
                    cellamb.Colspan = 4;
                    IDCardTemptable2.AddCell(cellamb);

                    PdfPCell cellteror = new PdfPCell(new Phrase("Anti Terrorist Squad : 10193", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellteror.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellteror.Border = 0;
                    cellteror.Colspan = 4;
                    IDCardTemptable2.AddCell(cellteror);

                    PdfPCell cellhelpl = new PdfPCell(new Phrase("Uniq Helpline : 9591990099", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellhelpl.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellhelpl.BorderWidthTop = 0;
                    cellhelpl.BorderWidthRight = 0;
                    cellhelpl.BorderWidthLeft = 0;
                    cellhelpl.BorderWidthBottom = 0;
                    cellhelpl.Colspan = 4;
                    IDCardTemptable2.AddCell(cellhelpl);

                    PdfPCell cellteror2 = new PdfPCell(new Phrase("Control Room : 9591990100", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellteror2.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellteror2.Border = 0;
                    cellteror2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellteror2);



                    childTable2 = new PdfPCell(IDCardTemptable2);
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 4;
                    childTable2.PaddingLeft = 20;
                    IDCarddetails.AddCell(childTable2);



                    PdfPTable IDCardTemptable31 = new PdfPTable(1);
                    IDCardTemptable31.TotalWidth = 2f;
                    IDCardTemptable31.LockedWidth = true;
                    float[] width31 = new float[] { 1f };
                    IDCardTemptable31.SetWidths(width31);

                    PdfPCell cellempcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize2, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell.Border = 0;
                    cellempcell.Colspan = 1;
                    IDCardTemptable31.AddCell(cellempcell);

                    PdfPCell childTable3 = new PdfPCell(IDCardTemptable31);
                    childTable3.HorizontalAlignment = 0;
                    childTable3.Colspan = 1;
                    childTable3.Border = 0;
                    IDCarddetails.AddCell(childTable3);


                    ///

                    PdfPCell childTable6 = new PdfPCell(IDCarddetails);
                    childTable6.HorizontalAlignment = 0;
                    childTable6.Colspan = 18;
                    childTable6.Border = 0;
                    childTable6.PaddingLeft = -180;
                    childTable6.PaddingBottom = 10;
                    MainIDCarddetails.AddCell(childTable6);

                    #endregion for range ID Card Display

                    PdfPCell empcellnew = new PdfPCell();
                    empcellnew.HorizontalAlignment = 0;
                    empcellnew.Colspan = 9;
                    empcellnew.Border = 0;
                    MainIDCarddetails.AddCell(empcellnew);

                    document.Add(MainIDCarddetails);

                    #endregion

                    document.NewPage();
                    #region for police form
                    PdfPTable tablen1 = new PdfPTable(4);
                    tablen1.TotalWidth = 500f;
                    tablen1.LockedWidth = true;
                    float[] widthn1 = new float[] { 1f, 5f, 3f, 2f };
                    tablen1.SetWidths(widthn1);
                    //PdfPCell cell1;

                    #region for image
                    imagepath2 = Server.MapPath("assets/Images/Karnataka-State-Police-logo.jpg");
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(14.5f);
                        gif2.SetAbsolutePosition(270f, 945f);
                        document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }
                    #endregion


                    cell1 = new PdfPCell(new Phrase("Emp Id : " + Idno + " Police Verification", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingTop = -25f;
                    tablen1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Karnataka State Police", FontStyle4));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingTop = 8;
                    tablen1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("APPLICATION FOR POLICE VERIFICATION / CLEARANCE CERTIFICATE\n(For Indian Only)", FontStyle4));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 4;
                    cell1.Border = 0;
                    cell1.PaddingBottom = 5;
                    tablen1.AddCell(cell1);


                    temptable1 = new PdfPTable(3);
                    temptable1.TotalWidth = 410f;
                    temptable1.LockedWidth = true;
                    tempwidth1 = new float[] { 1f, 5f, 3f };
                    temptable1.SetWidths(tempwidth1);

                    cell1 = new PdfPCell(new Phrase("To", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    cell1.PaddingTop = 10;
                    temptable1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("The Commissioner of Police", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    cell1.PaddingTop = 10;
                    temptable1.AddCell(cell1);


                    cell1 = new PdfPCell(new Phrase("________________________City", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    temptable1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sir,", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.PaddingTop = 10;
                    cell1.Border = 0;
                    temptable1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Sub: - Application to issue Police Verification / Clearance Certificate\nfor the Purpose of...............................................................", FontStyle4));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 3;
                    cell1.Border = 0;
                    cell1.PaddingTop = 10;
                    cell1.PaddingLeft = 50;
                    cell1.PaddingBottom = 40;
                    cell1.SetLeading(0f, 1.3f);
                    temptable1.AddCell(cell1);

                    childTable1 = new PdfPCell(temptable1);
                    childTable1.Border = 0;
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 3;
                    tablen1.AddCell(childTable1);


                    temptable2 = new PdfPTable(1);
                    temptable2.TotalWidth = 90f;
                    temptable2.LockedWidth = true;
                    tempwidth2 = new float[] { 2f };
                    temptable2.SetWidths(tempwidth2);






                    if (dtEmpdetails.Rows[0]["Image"].ToString() != "")
                    {
                        iTextSharp.text.Image empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + dtEmpdetails.Rows[0]["Image"].ToString());
                        //empphoto.ScalePercent(23f);
                        empphoto.ScaleAbsolute(110.7f, 140.5f);
                        PdfPCell employeephoto = new PdfPCell();
                        Paragraph logo = new Paragraph();
                        // logo.Add(new Chunk(empphoto, 0, 0));
                        employeephoto.AddElement(logo);
                        employeephoto.HorizontalAlignment = 2;
                        employeephoto.Border = 0;
                        employeephoto.PaddingLeft = -20;
                        employeephoto.Colspan = 1;
                        // temptable2.AddCell(employeephoto);

                    }


                    childTable2 = new PdfPCell(temptable2);
                    childTable2.Border = 0;
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 1;
                    tablen1.AddCell(childTable2);

                    document.Add(tablen1);

                    table1 = new PdfPTable(4);
                    table1.TotalWidth = 500f;
                    table1.LockedWidth = true;
                    width1 = new float[] { 1f, 5f, 2f, 3f };
                    table1.SetWidths(width1);


                    cell1 = new PdfPCell(new Phrase("Sl.No", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Name of the Verification Certificate ", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Amount in Rupees", FontStyle2));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Select appropriate Service Sought", FontStyle2));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(1)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    cell1.PaddingTop = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(2)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(3)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(4)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate & other companies ANTECEDENTS VERIFICATION ONLY(as per police station records)", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate (PVC/PCC) for Job Purpose to MNCs / Private Sector / Corporate / &other companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION amount to be paid by the company.  ", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for job aspirants(General) ANTECEDENTS along with ADDRESS VERIFICATION", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(4.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION ONLY", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(5.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Domestic servants / House Keeping ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n750/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(6.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate of Institutions /Companies ANTECEDENTS VERIFICATION along with ADDRESS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n1,500/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(7.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Marriage Alliances ANTECEDENTS VERIFICATION", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n450/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(8.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Training/Apprenticeship at Public sector undertakings or for Trainees / Workers working on daily wages at Government Institutions. ANTECEDENTS VERIFICATION. ", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(9.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for NCC / NSS Students attending training camps ANTECEDENTS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n75/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(10.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Cooli / Loader / Class IV security staff / supervisor at Airport. (Individual applicants only) ANTECEDENTS VERIFICATION", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n150/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(11.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Verification Certificate for Central / State Government Employees request directly by employee. ANTECEDENTS VERIFICATION.", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n375/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(12.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police Clearance Certificate (PCC) for going abroad (Visa for studies) ", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    cell1.SetLeading(0, 1.2f);
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("(13.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Verification and comparison of Finger Print-Fees for each Verification", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n500/-\n500/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);


                    cell1 = new PdfPCell(new Phrase("(14.)", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("Police clearance Certificate for Indian citizens/For accepting or Donating Kidney/Adoption of child/for purchase of property in other", FontStyle3));
                    cell1.HorizontalAlignment = 0;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("\n200/-", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);

                    cell1 = new PdfPCell(new Phrase("", FontStyle3));
                    cell1.HorizontalAlignment = 1;
                    cell1.Colspan = 1;
                    table1.AddCell(cell1);


                    document.Add(table1);
                    document.NewPage();

                    table2 = new PdfPTable(4);
                    table2.TotalWidth = 500f;
                    table2.LockedWidth = true;
                    width2 = new float[] { 1f, 5f, 3f, 2f };
                    table2.SetWidths(width2);
                    PdfPCell cell2;

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 4;
                    cell2.PaddingTop = 50;
                    cell2.Border = 0;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(1.)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Verification of service local Jurisdiction.", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(2.)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Verification of service outside Jurisdiction.", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(3.)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Any other purpose", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    cell2.PaddingBottom = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("The verification done through Department as per Government Order’s : -", FontStyle2));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 4;
                    cell2.Border = 0;
                    cell2.PaddingBottom = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(1)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(2)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(3)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("(4)", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("1.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("PIO / OCI Cards", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("2.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Pakistan Visa", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("3.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Verification of Citizenships", FontStyle3));
                    cell2.HorizontalAlignment = 0; ;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("4.", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Government Employees Job Verification done through the department", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("As per Govt Order", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("", FontStyle3));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 1;
                    cell2.PaddingRight = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("Note: - Please tick the appropriate one.", FontStyle2));
                    cell2.HorizontalAlignment = 1;
                    cell2.Colspan = 4;
                    cell2.Border = 0;
                    cell2.PaddingBottom = 50;
                    table2.AddCell(cell2);

                    cell2 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                    cell2.HorizontalAlignment = 0;
                    cell2.Colspan = 4;
                    cell2.PaddingBottom = 30;
                    cell2.Border = 0;
                    table2.AddCell(cell2);


                    // document.Add(table2);

                    table3 = new PdfPTable(3);
                    table3.TotalWidth = 500f;
                    table3.LockedWidth = true;
                    float[] width3 = new float[] { 0.8f, 3.2f, 9f };
                    table3.SetWidths(width3);
                    PdfPCell cell3;


                    cell3 = new PdfPCell(new Phrase("With regard to the above following are the personal details for whom the PVC / PCC is required.", FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 4;
                    cell3.PaddingBottom = 30;
                    cell3.Border = 0;
                    table3.AddCell(cell3);



                    cell3 = new PdfPCell(new Phrase("1.", FontStyle4));
                    cell3.HorizontalAlignment = 1;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("Name", FontStyle4));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase(name, FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);




                    cell3 = new PdfPCell(new Phrase("2.", FontStyle4));
                    cell3.HorizontalAlignment = 1;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("Father/Husband name", FontStyle4));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    string Relationname = "";
                    //string FatherSpouseName = "";
                    string MaritalStatus = "";

                    if (Gender == "Male")
                    {
                        FatherSpouseName = FatherName;
                    }
                    else if (Gender == "Female")
                    {
                        if (MaritalStatus == "Unmarried")
                        {
                            FatherSpouseName = FatherName;
                        }
                        else
                        {
                            FatherSpouseName = SpouseName;

                        }
                    }

                    cell3 = new PdfPCell(new Phrase(FatherSpouseName, FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    // cell3.PaddingTop = 5;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("3.", FontStyle4));
                    cell3.HorizontalAlignment = 1;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase("Nationality", FontStyle4));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    cell3 = new PdfPCell(new Phrase(Nationality, FontStyle3));
                    cell3.HorizontalAlignment = 0;
                    cell3.Colspan = 1;
                    cell3.PaddingTop = 5;
                    cell3.PaddingBottom = 5;
                    table3.AddCell(cell3);

                    document.Add(table3);

                    PdfPTable table4 = new PdfPTable(6);
                    table4.TotalWidth = 500f;
                    table4.LockedWidth = true;
                    width4 = new float[] { 0.6f, 2.5f, 1.9f, 1f, 2f, 2f };
                    table4.SetWidths(width4);
                    PdfPCell cell4;

                    cell4 = new PdfPCell(new Phrase("4.", FontStyle4));
                    cell4.HorizontalAlignment = 1;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);

                    cell4 = new PdfPCell(new Phrase("Date of Birth & Age", FontStyle4));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    //cell4.PaddingLeft = 0;
                    table4.AddCell(cell4);


                    cell4 = new PdfPCell(new Phrase(EmpDtofBirths, FontStyle3));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);

                    cell4 = new PdfPCell(new Phrase("Age", FontStyle4));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 1;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);

                    cell4 = new PdfPCell(new Phrase(dateofbirth + " years", FontStyle3));
                    cell4.HorizontalAlignment = 0;
                    cell4.Colspan = 2;
                    cell4.PaddingTop = 5;
                    cell4.PaddingBottom = 5;
                    table4.AddCell(cell4);



                    document.Add(table4);

                    PdfPTable table5 = new PdfPTable(3);
                    table5.TotalWidth = 500f;
                    table5.LockedWidth = true;
                    float[] width5 = new float[] { 0.8f, 3.2f, 9f };
                    table5.SetWidths(width5);
                    PdfPCell cell5;

                    cell5 = new PdfPCell(new Phrase("5.", FontStyle4));
                    cell5.HorizontalAlignment = 1;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 10;
                    cell5.PaddingBottom = 10;
                    table5.AddCell(cell5);


                    cell5 = new PdfPCell(new Phrase("Address needs to be verified with period of stay", FontStyle4));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 10;
                    cell5.PaddingBottom = 10;
                    //cell5.PaddingTop = 50;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase(presentORperadd, FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 10;
                    cell5.PaddingBottom = 10;
                    table5.AddCell(cell5);


                    cell5 = new PdfPCell(new Phrase("6.", FontStyle4));
                    cell5.HorizontalAlignment = 1;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 5;
                    cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("Period of stay", FontStyle4));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 5;
                    cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase(periodofstay, FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.PaddingTop = 5;
                    cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);

                    cell5 = new PdfPCell(new Phrase("", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.Border = 0;
                    cell5.BorderWidthLeft = 0.5f;
                    //cell5.PaddingBottom = 5;
                    table5.AddCell(cell5);


                    cell5 = new PdfPCell(new Phrase("(Enclose additional sheet for more than one address)", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 2;
                    cell5.BorderWidthRight = 0.5f;
                    cell5.BorderWidthLeft = 0.5f;
                    table5.AddCell(cell5);



                    #region Present address String array

                    PrAdress = new string[8];
                    if (prLmark.Length > 0)
                    {
                        PrAdress[0] = "Landmark :  " + prLmark + ", ";
                    }
                    else
                    {
                        PrAdress[0] = "";
                    }
                    if (prTown.Length > 0)
                    {
                        PrAdress[1] = "Vill :  " + prTown + ", ";
                    }
                    else
                    {
                        PrAdress[1] = "";
                    }

                    if (prPostOffice.Length > 0)
                    {
                        PrAdress[2] = "Postoffice :  " + prPostOffice + ", ";
                    }
                    else
                    {
                        PrAdress[2] = "";
                    }
                    if (prTaluka.Length > 0)
                    {
                        PrAdress[3] = "Taluka : " + prTaluka + ", ";
                    }
                    else
                    {
                        PrAdress[3] = "";
                    }
                    if (prPoliceStation.Length > 0)
                    {
                        PrAdress[4] = "Policestation : " + prPoliceStation + ", ";
                    }
                    else
                    {
                        PrAdress[4] = "";
                    }
                    if (prcity.Length > 0)
                    {
                        PrAdress[5] = "City : " + prcity + ", ";
                    }
                    else
                    {
                        PrAdress[5] = "";
                    }

                    if (prState.Length > 0)
                    {
                        PrAdress[6] = "State : " + prState + " ";
                    }
                    else
                    {
                        PrAdress[6] = ".";
                    }


                    if (prPincode.Length > 0)
                    {
                        PrAdress[7] = ", Pincode : " + prPincode + ".";
                    }
                    else
                    {
                        PrAdress[7] = "";
                    }

                    Address1 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address1 += PrAdress[i];
                    }


                    #endregion



                    cell5 = new PdfPCell(new Phrase("", FontStyle3));
                    cell5.HorizontalAlignment = 0;
                    cell5.Colspan = 1;
                    cell5.Border = 0;
                    cell5.PaddingBottom = 10;
                    table5.AddCell(cell5);


                    #region Permanent address String array

                    PeAdress = new string[8];

                    if (pelmark.Length > 0)
                    {
                        PeAdress[0] = "Landmark :  " + pelmark + ", ";
                    }
                    else
                    {
                        PeAdress[0] = "";
                    }
                    if (peTown.Length > 0)
                    {
                        PeAdress[1] = "Vill : " + peTown + ", ";
                    }
                    else
                    {
                        PeAdress[1] = "";
                    }

                    if (pePostOffice.Length > 0)
                    {
                        PeAdress[2] = "Postoffice : " + pePostOffice + ", ";
                    }
                    else
                    {
                        PeAdress[2] = "";
                    }
                    if (peTaluka.Length > 0)
                    {
                        PeAdress[3] = "Taluka : " + peTaluka + ", ";
                    }
                    else
                    {
                        PeAdress[3] = " ";
                    }
                    if (pePoliceStation.Length > 0)
                    {
                        PeAdress[4] = "Policestation : " + pePoliceStation + ", ";
                    }
                    else
                    {
                        PeAdress[4] = " ";
                    }
                    if (pecity.Length > 0)
                    {
                        PeAdress[5] = "City : " + pecity + ", ";
                    }
                    else
                    {
                        PeAdress[5] = " ";
                    }

                    if (peState.Length > 0)
                    {
                        PeAdress[6] = "State : " + peState + " ";
                    }
                    else
                    {
                        PeAdress[6] = ".";
                    }


                    if (pePincode.Length > 0)
                    {
                        PeAdress[7] = ", Pincode : " + pePincode + ".";
                    }
                    else
                    {
                        PeAdress[7] = "";
                    }

                    Address2 = string.Empty;

                    for (int i = 0; i < 8; i++)
                    {
                        Address2 += PeAdress[i];
                    }


                    #endregion




                    document.Add(table5);

                    //document.NewPage();


                    PdfPTable table6 = new PdfPTable(6);
                    table6.TotalWidth = 500f;
                    table6.LockedWidth = true;
                    float[] width6 = new float[] { 0.6f, 2.4f, 2f, 1f, 2f, 2f };
                    table6.SetWidths(width6);
                    PdfPCell cell6;



                    cell6 = new PdfPCell(new Phrase("7.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    cell6.Colspan = 1;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Name of the Jurisdiction Police Station.", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase(prPoliceStation, FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    //  table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("8.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Contact telephone Number.", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase(MobileNumber, FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    cell6.PaddingRight = 100;
                    table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("9.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Passport Number", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Validity", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 1;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    table6.AddCell(cell6);
                    cell6 = new PdfPCell(new Phrase("Bangalore One Challan Trans.No.:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    cell6.BorderWidthRight = 0;
                    table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("(Original Challan has to be enclosed)", FontStyle5));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 2;
                    cell6.PaddingTop = 5;
                    cell6.PaddingBottom = 5;
                    cell6.BorderWidthLeft = 0;
                    table6.AddCell(cell6);


                    //document.Add(table61);


                    #region
                    cell6 = new PdfPCell(new Phrase(" (a) Landline", FontStyle3));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 2;
                    cell6.PaddingLeft = 70;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);
                    cell6 = new PdfPCell(new Phrase("", FontStyle4));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 2;
                    cell6.PaddingRight = 100;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("(b) Mobile", FontStyle3));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 2;
                    cell6.PaddingLeft = 70;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase(MobileNumber, FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 2;
                    cell6.Border = 0;
                    cell6.PaddingRight = 100;
                    //table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("10.", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    cell6.PaddingBottom = 30;
                    //table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Details of fee remitted:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 2;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("(a) Transaction Number of Bangalore One / Karnataka One: ", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("(Please enter the 12 digit transaction number in the boxes above. First 3 characters are Alphabetical and rest 9 characters are Numerical.).Original Receipt has to be enclosed", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    cell6.PaddingBottom = 30;
                    // table6.AddCell(cell6);
                    //

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    //  table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("(b) Treasury / Bank:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    //  table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    //table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("(Pl enter the challan Number)", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -38;
                    // table6.AddCell(cell6);



                    cell6 = new PdfPCell(new Phrase("If yes furnish particulars as below", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 4;
                    cell6.PaddingRight = 30;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);
                    #endregion


                    cell6 = new PdfPCell(new Phrase("", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    cell6.PaddingTop = 40;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("The information furnished in this application is true to the best of my / our knowledge & belief. No information has been suppressed.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 45;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("Please verify the ANTECEDENTS and / or the STAY DETAILS of the above named person at the given address for the given period of stay and issue the PVC / PCC.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 4;
                    cell6.PaddingRight = 30;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    //table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Thanking you", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 20;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Yours faithfully", FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = -40;
                    cell6.PaddingBottom = 30;
                    cell6.Border = 0;
                    table6.AddCell(cell6);


                    cell6 = new PdfPCell(new Phrase("Date :", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.PaddingBottom = 20;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);
                    //EmpDtofJoining
                    cell6 = new PdfPCell(new Phrase(doj, FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.PaddingLeft = -40;
                    cell6.PaddingBottom = 20;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Place:", FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 1;
                    cell6.Border = 0;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase(area, FontStyle4));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 3;
                    cell6.Border = 0;
                    cell6.PaddingLeft = -40;
                    //table6.AddCell(cell6);

                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 6;
                        //sealImg.PaddingLeft = -480f;
                        sealImg.PaddingBottom = -10f;
                        sealImg.PaddingRight = -245f;
                        //sealImg.PaddingTop = 40f;
                        table6.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    cell6 = new PdfPCell(new Phrase("Signature of the Applicant / \nthe I / c of the Company / firm", FontStyle3));
                    cell6.HorizontalAlignment = 2;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = -40;
                    cell6.SetLeading(0f, 1.3f);
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("From Address:", FontStyle2));
                    cell6.HorizontalAlignment = 1;
                    cell6.Colspan = 4;
                    cell6.Border = 0;
                    cell6.PaddingTop = 20;
                    cell6.PaddingRight = 20;
                    cell6.PaddingBottom = 50;
                    // table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("Instructions.", FontStyle2));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("1. Applicant should furnish one of the approved documents by the State Government for the purpose of address proof.(Passport, Pan card, Ration Card, Voter ID, BSNL Telephone Bill, Gas Bill, Water Bill, Electricity Bill, Driving License)", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    cell6.SetLeading(0, 1.3f);
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("2. Enclose two additional passport size photos along with the application.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("3. Furnish the proof of date of birth.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    table6.AddCell(cell6);

                    cell6 = new PdfPCell(new Phrase("4. The PVC / PCC issued shall not be used for any other purpose other than the purpose specified in the application.", FontStyle3));
                    cell6.HorizontalAlignment = 0;
                    cell6.Colspan = 6;
                    cell6.PaddingLeft = 40;
                    cell6.Border = 0;
                    table6.AddCell(cell6);


                    document.Add(table6);

                    #endregion for police form

                    document.NewPage();
                    #region for form11

                    #region

                    Fontsize = 8;
                    fontsize1 = 8;
                    fontsize2 = 6;
                    Fontsize3 = 11;
                    string Fontstyle = "Tahoma";

                    PdfPTable tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    width = new float[] { 1f, 5f, 2f, 2f };
                    tablespf.SetWidths(width);

                    cellspace = new PdfPCell(new Phrase("  ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellspace.HorizontalAlignment = 1; //0=Left, 1=Centre, 2=Right
                    cellspace.Colspan = 4;
                    cellspace.Border = 0;
                    cellspace.PaddingTop = -5;

                    PdfPCell cellpfform1 = new PdfPCell(new Phrase("New Form No.11- Declaration Form ", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    cellpfform1.HorizontalAlignment = 2;
                    cellpfform1.Colspan = 4;
                    cellpfform1.Border = 0;
                    tablespf.AddCell(cellpfform1);

                    PdfPCell cellpfdeclaration = new PdfPCell(new Phrase("(To be retained by the employer for future reference)", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfdeclaration.HorizontalAlignment = 2;
                    cellpfdeclaration.Colspan = 4;
                    cellpfdeclaration.Border = 0;
                    tablespf.AddCell(cellpfdeclaration);

                    tablespf.AddCell(cellspace);


                    string imagepathpf1 = Server.MapPath("assets/images");

                    string imagepathpf = Server.MapPath("assets/images");
                    iTextSharp.text.Image headtext = iTextSharp.text.Image.GetInstance(imagepathpf + "/EPFLogo.PNG");
                    headtext.ScalePercent(50f);
                    PdfPCell esiclogo = new PdfPCell();
                    Paragraph p9 = new Paragraph();
                    p9.Add(new Chunk(headtext, 0, 0));
                    esiclogo.AddElement(p9);
                    esiclogo.HorizontalAlignment = 0;
                    esiclogo.Colspan = 1;
                    esiclogo.Border = 0;
                    esiclogo.PaddingBottom = -10;
                    tablespf.AddCell(esiclogo);

                    var celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Employees’ Provident Fund Organization \n", FontFactory.GetFont(Fontstyle, Fontsize + 4, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("Employees provident funds scheme, 1952 (paragraph 34 & 57) & \nEmployees pension scheme 1995 (paragraph 24) ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PdfPCell cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 1;
                    cellpfMandatory1s.Border = 0;
                    tablespf.AddCell(cellpfMandatory1s);

                    celldescriptionf = new Phrase();
                    celldescriptionf.Add(new Chunk("Emp Code: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(Empid, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk("\nCompany: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    celldescriptionf.Add(new Chunk(CompanyName, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));

                    celldescriptionf.Add(new Chunk("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    cellpfMandatory1s = new PdfPCell();
                    cellpfMandatory1s.AddElement(celldescriptionf);
                    cellpfMandatory1s.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfMandatory1s.Colspan = 2;
                    cellpfMandatory1s.SetLeading(0f, -1.2f);
                    tablespf.AddCell(cellpfMandatory1s);


                    PdfPCell PFCell;


                    PFCell = new PdfPCell(new Phrase("(Declaration by a person taking up employment in any establishment on which EPF Scheme, 1952 end /of EPS1995 is applicable)", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 4;
                    PFCell.Border = 0;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    document.Add(tablespf);
                    tablespf = new PdfPTable(4);
                    tablespf.TotalWidth = 560f;
                    tablespf.LockedWidth = true;
                    width = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tablespf.SetWidths(width);


                    PFCell = new PdfPCell(new Phrase("1", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Name of  the member", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Title + ". " + name, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    PFCell.PaddingTop = 3;
                    tablespf.AddCell(PFCell);

                    Relationname = "";


                    imagepath2 = Server.MapPath("assets/Images/Rightlogo.png");

                    if (FatherName.Length > 0)
                    {
                        FatherSpouseName = FatherName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (SpouseName.Length > 0)
                    {
                        FatherSpouseName = SpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(220f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else if (FSpouseName.Length > 0)
                    {
                        FatherSpouseName = FSpouseName;

                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath2);

                            gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                            // gif2.SpacingBefore = 50;
                            gif2.ScalePercent(5f);
                            gif2.SetAbsolutePosition(120f, 825f);
                            document.Add(new Paragraph(" "));
                            document.Add(gif2);
                        }
                    }
                    else
                    {
                        FatherSpouseName = "";
                    }


                    PFCell = new PdfPCell(new Phrase("2", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Father’s Name (      ) Spouse’s Name(       )\n(Please Tick Whichever Is Applicable) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("MR. " + FatherSpouseName, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("3", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Date of Birth (DD/MM/YYYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(EmpDtofBirths, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("4", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Gender: ( male / Female /Transgender ) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(Gender, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("5", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Marital Status (married /Unmarried /widow/divorce)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(maritalstatus, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("6", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("(a)Email ID:\n\n(b)Mobile No: ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(email + "\n\n" + contactno, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("7*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘provident Fund Scheme 1952", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    if (UANNumber.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase("        Yes          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("        No          ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("8*", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("Whether earlier a member of Employees ‘Pension Scheme ,1995", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("        Yes          No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0.5f;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("If response to any or both of (7) & (8) above is yes. MANDATORY FILL UP THE (COLUMN 9) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Universal Account Number(UAN)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(UANNumber, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) Previous PF a/c No", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("9", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Date of exit from previous employment  (DD/MM/YYY)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Scheme  Certificate No (if Issued )", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("e) Pension Payment Order (PPO)No (if Issued)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) International Worker:", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("10", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) If Yes , State Country Of Origin (India /Name  of Other Country)", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Passport No ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("d) Validity Of Passport (DD/MM/YYY) to(DD/MM/YYY) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("KYC Details: (attach Self attested copies of following KYCs) ** ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1;
                    PFCell.Colspan = 3;
                    tablespf.AddCell(PFCell);



                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("a) Bank Account No .& IFS code", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);

                    if (EmpBankAcNo.Length > 0)
                    {
                        PFCell = new PdfPCell(new Phrase(EmpBankAcNo + " & " + IFSCCOde, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }
                    else
                    {
                        PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                        PFCell.HorizontalAlignment = 0;
                        PFCell.Colspan = 2;
                        tablespf.AddCell(PFCell);
                    }


                    PFCell = new PdfPCell(new Phrase("11", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 1; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("b) AADHAR Number (12 Digit) ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(AadharCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0; PFCell.MinimumHeight = 18;
                    PFCell.Colspan = 1;
                    PFCell.BorderWidthBottom = 0.5f;
                    PFCell.BorderWidthLeft = 0.5f;
                    PFCell.BorderWidthRight = 0.5f;
                    PFCell.BorderWidthTop = 0;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("c) Permanent Account Number (PAN),If available ", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    tablespf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase(PanCardNo, FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.BOLD, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 2;
                    tablespf.AddCell(PFCell);


                    document.Add(tablespf);

                    PdfPTable tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    float[] widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);



                    PdfPCell cellpfUNDERTAKING = new PdfPCell(new Phrase("UNDERTAKING:", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfUNDERTAKING.HorizontalAlignment = 1;
                    cellpfUNDERTAKING.Colspan = 4;
                    cellpfUNDERTAKING.Border = 0;
                    tbliepf.AddCell(cellpfUNDERTAKING);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("1) Certified that  the Particulars  are true to the best of my Knowledge ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("2) I authorize  EPFO to use my Aadhar for verification / e KYC purpose for service delivery ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1; PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("3) Kindly transfer the funds  and service details, if applicable if applicable, from the previous PF account as declared above to the present P.F Account(The Transfer Would be possible only if the identified KYC details approved by previous employer has been verified by present employer ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PFCell = new PdfPCell(new Phrase("4) In case of changes In above details the same Will be intimate to employer at the earliest ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 3;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDATE1 = new PdfPCell(new Phrase("DATE: " + date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE1.HorizontalAlignment = 0;
                    cellpfDATE1.Colspan = 2;
                    cellpfDATE1.Border = 0;
                    tbliepf.AddCell(cellpfDATE1);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 100f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 1;
                        //sealImg.PaddingRight = -630f;
                        //sealImg.PaddingTop = -150f;
                        // tbliepf.AddCell(sealImg);
                    }


                    if (File.Exists(imagepathArrow))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathArrow);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(80f);
                        gif2.SetAbsolutePosition(65f, 925f);
                        PdfPCell sealImg = new PdfPCell();
                        sealImg.AddElement(gif2);
                        sealImg.Border = 0;
                        sealImg.HorizontalAlignment = 2;
                        sealImg.Colspan = 2;
                        //sealImg.PaddingLeft = -480f;
                        //sealImg.PaddingBottom = -10f;
                        //sealImg.PaddingRight = -245f;
                        //sealImg.PaddingTop = 40f;
                        tbliepf.AddCell(sealImg);
                        //    document.Add(new Paragraph(" "));
                        //    document.Add(gif2);
                    }


                    PdfPCell cellpfPLACE = new PdfPCell(new Phrase("PLACE: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfPLACE.HorizontalAlignment = 0;
                    cellpfPLACE.Colspan = 2;
                    cellpfPLACE.Border = 0;
                    tbliepf.AddCell(cellpfPLACE);
                    PdfPCell cellpfSIGNATURE1 = new PdfPCell(new Phrase("SIGNATURE OF MEMBER", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE1.HorizontalAlignment = 2;
                    cellpfSIGNATURE1.Colspan = 2;
                    cellpfSIGNATURE1.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE1);

                    tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);
                    //tbliepf.AddCell(cellspace);

                    PdfPCell cellpfDECLARATION = new PdfPCell(new Phrase("DECLARATION BY PRESENT EMPLOYER ", FontFactory.GetFont(Fontstyle, Fontsize + 2, Font.UNDERLINE | Font.BOLD, BaseColor.BLACK)));
                    cellpfDECLARATION.HorizontalAlignment = 1;
                    cellpfDECLARATION.Colspan = 4;
                    cellpfDECLARATION.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);

                    var celldescription1 = new Phrase();
                    celldescription1.Add(new Chunk("A.The member Mr./Ms./Mrs ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(name, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" .has  joined  on  ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(" and has been allotted PF Number ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    celldescription1.Add(new Chunk(PFno, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    PdfPCell cellpfCERTIFY11a = new PdfPCell();
                    cellpfCERTIFY11a.HorizontalAlignment = 0;
                    cellpfCERTIFY11a.AddElement(celldescription1);
                    cellpfCERTIFY11a.Colspan = 3;
                    cellpfCERTIFY11a.Border = 0;
                    cellpfCERTIFY11a.PaddingTop = -5;
                    tbliepf.AddCell(cellpfCERTIFY11a);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfCERTIFY11 = new PdfPCell(new Phrase("B) In case person was earlier not a member of EPF Scheme ,1952 and EPS,1995 ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY11.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpfCERTIFY11.Colspan = 3;
                    cellpfCERTIFY11.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY11);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfEARLIER = new PdfPCell(new Phrase("•  (Post allotment of UAN ) The UAN Allotted for the member is………….. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfEARLIER.HorizontalAlignment = 0;
                    cellpfEARLIER.Colspan = 3;
                    cellpfEARLIER.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfENSURED = new PdfPCell(new Phrase("•  Please tick the Appropriate Option: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED.HorizontalAlignment = 0;
                    cellpfENSURED.Colspan = 3;
                    cellpfENSURED.Border = 0;
                    tbliepf.AddCell(cellpfENSURED);

                    PFCell = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize + 1, Font.NORMAL, BaseColor.BLACK)));
                    PFCell.HorizontalAlignment = 0;
                    PFCell.Colspan = 1;
                    PFCell.Border = 0;
                    tbliepf.AddCell(PFCell);
                    PdfPCell cellpfIIDETAILS = new PdfPCell(new Phrase("The KYC  details of the above member in the UAN database ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS.HorizontalAlignment = 0;
                    cellpfIIDETAILS.Colspan = 3;
                    cellpfIIDETAILS.Border = 0;
                    tbliepf.AddCell(cellpfIIDETAILS);

                    document.Add(tbliepf);
                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop11 = new PdfPCell(sqpng);
                    tickop11.HorizontalAlignment = 2;
                    tickop11.Colspan = 1;
                    tickop11.Border = 0;
                    tbliepf.AddCell(tickop11);

                    PdfPCell cellpfHAVE = new PdfPCell(new Phrase("Have not been uploaded", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE.HorizontalAlignment = 0;
                    cellpfHAVE.Colspan = 4;
                    cellpfHAVE.Border = 0;
                    tbliepf.AddCell(cellpfHAVE);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng4 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop12 = new PdfPCell(sqpng4);
                    tickop12.HorizontalAlignment = 2;
                    tickop12.Colspan = 1;
                    tickop12.Border = 0;
                    tbliepf.AddCell(tickop12);

                    PdfPCell cellpfIII1 = new PdfPCell(new Phrase("Have been uploaded but not approved", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIII1.HorizontalAlignment = 0;
                    cellpfIII1.Colspan = 4;
                    cellpfIII1.Border = 0;
                    tbliepf.AddCell(cellpfIII1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng1 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop13 = new PdfPCell(sqpng1);
                    tickop13.HorizontalAlignment = 2;
                    tickop13.Colspan = 1;
                    tickop13.Border = 0;
                    tbliepf.AddCell(tickop13);

                    PdfPCell cellpfDECLARATION1 = new PdfPCell(new Phrase("Have been uploaded and approved with DSC", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfDECLARATION1.HorizontalAlignment = 0;
                    cellpfDECLARATION1.Colspan = 4;
                    cellpfDECLARATION1.Border = 0;
                    tbliepf.AddCell(cellpfDECLARATION1);

                    tbliepf.AddCell(cellspace);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.4f, 5.6f, 2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    PdfPCell cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfCERTIFY1 = new PdfPCell(new Phrase("C) In case the person was earlier a member of EPF Scheme ,1952 and EPS, 1995: ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfCERTIFY1.HorizontalAlignment = 0;
                    cellpfCERTIFY1.Colspan = 3;
                    cellpfCERTIFY1.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfEARLIER1 = new PdfPCell(new Phrase("•  The above PF account number /UAN  of the member as mentioned in (a) above has been tagged with his /her UAN/previous member ID as declared by member ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfEARLIER1.HorizontalAlignment = 0;
                    cellpfEARLIER1.Colspan = 3;
                    cellpfEARLIER1.Border = 0;
                    tbliepf.AddCell(cellpfEARLIER1);

                    cellpfCERTIFY1w = new PdfPCell(new Phrase("", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfCERTIFY1w.HorizontalAlignment = 0;
                    cellpfCERTIFY1w.Colspan = 1;
                    cellpfCERTIFY1w.Border = 0;
                    tbliepf.AddCell(cellpfCERTIFY1w);
                    PdfPCell cellpfENSURED1 = new PdfPCell(new Phrase("•  Please Tick the Appropriate Option ", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfENSURED1.HorizontalAlignment = 0;
                    cellpfENSURED1.Colspan = 3;
                    cellpfENSURED1.Border = 0;
                    tbliepf.AddCell(cellpfENSURED1);

                    document.Add(tbliepf);

                    tbliepf = new PdfPTable(4);
                    tbliepf.TotalWidth = 560f;
                    tbliepf.LockedWidth = true;
                    widthpf = new float[] { 0.5f, 0.5f, 2.2f, 2f };
                    tbliepf.SetWidths(widthpf);

                    iTextSharp.text.Image sqpng2 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop14 = new PdfPCell(sqpng2);
                    tickop14.HorizontalAlignment = 2;
                    tickop14.Colspan = 1;
                    tickop14.Border = 0;
                    tickop14.PaddingTop = 5;
                    tbliepf.AddCell(tickop14);

                    PdfPCell cellpfIIDETAILS1 = new PdfPCell(new Phrase("The KYC details of the above member in the UAN database have been approved with digital signature Certificate and transfer request has been generated on portal. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfIIDETAILS1.HorizontalAlignment = 0;
                    cellpfIIDETAILS1.Colspan = 4;
                    cellpfIIDETAILS1.Border = 0;
                    cellpfIIDETAILS1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfIIDETAILS1);

                    tbliepf.AddCell(cellspace);

                    iTextSharp.text.Image sqpng3 = iTextSharp.text.Image.GetInstance(imagepathpf1 + "/checkbox1.png");
                    PdfPCell tickop15 = new PdfPCell(sqpng3);
                    tickop15.HorizontalAlignment = 2;
                    tickop15.Colspan = 1;
                    tickop15.Border = 0;
                    tickop15.PaddingTop = 5;
                    tbliepf.AddCell(tickop15);

                    PdfPCell cellpfHAVE1 = new PdfPCell(new Phrase(" As the DSC of establishment are not registered With EPFO the member has been informed to file physical claim (Form13) for transfer of funds from his previous establishment. ", FontFactory.GetFont(Fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellpfHAVE1.HorizontalAlignment = 0;
                    cellpfHAVE1.Colspan = 4;
                    cellpfHAVE1.Border = 0;
                    cellpfHAVE1.SetLeading(0f, 1.2f);
                    tbliepf.AddCell(cellpfHAVE1);

                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);
                    tbliepf.AddCell(cellspace);


                    PdfPCell cellpfDATE = new PdfPCell(new Phrase("DATE: " + date, FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfDATE.HorizontalAlignment = 0;
                    cellpfDATE.Colspan = 2;
                    cellpfDATE.Border = 0;
                    tbliepf.AddCell(cellpfDATE);

                    if (File.Exists(imagepathSeal))
                    {
                        iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepathSeal);

                        gif2.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        // gif2.SpacingBefore = 50;
                        gif2.ScalePercent(70f);
                        gif2.SetAbsolutePosition(400f, 85f);
                        //document.Add(new Paragraph(" "));
                        document.Add(gif2);
                    }



                    PdfPCell cellpfSIGNATURE = new PdfPCell(new Phrase("SIGNATURE OF EMPLOYER WITH SEAL OF ESTABLISHMENT", FontFactory.GetFont(Fontstyle, Fontsize, Font.BOLD, BaseColor.BLACK)));
                    cellpfSIGNATURE.HorizontalAlignment = 2;
                    cellpfSIGNATURE.Colspan = 2;
                    cellpfSIGNATURE.Border = 0;
                    tbliepf.AddCell(cellpfSIGNATURE);

                    document.Add(tbliepf);

                    #endregion

                    #endregion
                }
                string filename = "Biodata.pdf";


                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=" + filename);
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }



            else
            {
                ScriptManager.RegisterStartupScript(this, GetType(), "Showalert", "alert('Duration expired');", true);
                return;
            }
        }

        protected void txtEmpid_TextChanged(object sender, EventArgs e)
        {
            GetEmpName();
        }

        protected void GetEmpName()
        {
            if (txtEmpid.Text.Length > 0)
            {
                string Sqlqry = "select (empfname+' '+empmname+' '+emplname) as empname,EmpDesgn from empdetails where Branch in (" + BranchID + ") and  empid='" + txtEmpid.Text + "' ";
                DataTable dt = Config.ExecuteReaderWithQueryAsync(Sqlqry).Result;

                if (dt.Rows.Count > 0)
                {
                    try
                    {
                        txtName.Text = dt.Rows[0]["empname"].ToString();

                    }
                    catch (Exception ex)
                    {
                        // MessageLabel.Text = ex.Message;
                    }
                }
                else
                {
                    // MessageLabel.Text = "There Is No Name For The Selected Employee";
                }
            }

        }

        protected void GetEmpid()
        {

            #region  Old Code
            string Sqlqry = "select  empid+' - '+Oldempid Empid from empdetails where Branch in (" + BranchID + ") and  (empfname+' '+empmname+' '+emplname)  like '" + txtName.Text + "' ";
            DataTable dt = Config.ExecuteReaderWithQueryAsync(Sqlqry).Result;
            if (dt.Rows.Count > 0)
            {
                try
                {
                    txtEmpid.Text = dt.Rows[0]["Empid"].ToString();
                    txtfromempid.Text = dt.Rows[0]["Empid"].ToString();
                    txttoempid.Text = dt.Rows[0]["Empid"].ToString();

                }
                catch (Exception ex)
                {
                    // MessageLabel.Text = ex.Message;
                }
            }
            else
            {
                // MessageLabel.Text = "There Is No Name For The Selected Employee";
            }
            #endregion // End Old Code


        }

        protected void txtName_TextChanged(object sender, EventArgs e)
        {
            GetEmpid();
        }

        protected void btndownload_Click(object sender, EventArgs e)
        {
            if (ddloption.SelectedIndex == 0)
            {
                PDFS();
            }

            if (ddloption.SelectedIndex == 1)
            {
                btnEnrolmentForm_Click(sender, e);
                return;
            }
            if (ddloption.SelectedIndex == 2)
            {
                btnESIDeclaration_Click(sender, e);
                return;
            }
            if (ddloption.SelectedIndex == 3)
            {
                btnPFForm_Click(sender, e);
                return;
            }

            if (ddloption.SelectedIndex == 4)
            {
                btnAppointmentForm_Click(sender, e);
                return;
            }
            if (ddloption.SelectedIndex == 5)
            {
                btnMovementOrder_Click(sender, e);
                return;
            }
            if (ddloption.SelectedIndex == 6)
            {
                BtnIDCard_Click(sender, e);
                return;
            }

            if (ddloption.SelectedIndex == 7)
            {
                btnPoliceVfctn_Click(sender, e);
                return;
            }

            if (ddloption.SelectedIndex == 8)
            {
                btnPFForm11_Click(sender, e);
                return;
            }

            if (ddloption.SelectedIndex == 9)
            {
                btnOfferLetter_Click(sender, e);
                return;
            }



        }

        protected void btnOfferLetter_Click(object sender, EventArgs e)
        {



            string fontstyle = "Calibri";
     


            #region for Variable Declaration

            string Empid = "";
            string FromEmpid = "";
            string ToEmpid = "";
            string Name = "";
            string Designation = "";
            string IDcardIssued = "";
            string IDcardvalid = "";
            string BloodGroup = "";
            string Image = "";
            string EmpSign = "";
            string EmpESINo = "";
            string doj = "";


            #endregion for Variable Declaration

            #region for companyinfo
            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;

            string CompanyName = "";
            string Address = "";
            string Emailid = "";
            string Website = "";
            string Phoneno = "";
            string Faxno = "";
            string Idno = "";
            string name = "";
            string Gender = "";
            string Dateofjoining = "";
            string postappliedfor = "";
            string MobileNumber = "";
            string SpouseName = "";
            string MotherName = "";
            string contactno = "";


            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();
                Phoneno = DtCompanyInfo.Rows[0]["Phoneno"].ToString();
                Faxno = DtCompanyInfo.Rows[0]["Faxno"].ToString();
                Emailid = DtCompanyInfo.Rows[0]["Emailid"].ToString();
                Website = DtCompanyInfo.Rows[0]["Website"].ToString();


            }
            #endregion for companyinfo

            string query = "";
            DataTable dtEmpdetails = new DataTable();
            var spname = "";

            Hashtable ht = new Hashtable();
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                Empid = txtEmpid.Text;
                spname = "EmpBiodataPDF";
                ht.Add("@Empid", Empid);
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                FromEmpid = txtfromempid.Text;
                ToEmpid = txttoempid.Text;
                spname = "EmpBiodataBulk";
                ht.Add("@fromEmpid", FromEmpid);
                ht.Add("@toEmpid", ToEmpid);

            }

            string query1 = "select top (1) basic, HRA,Gross ,ESI,ESIEmpr,TDSDed,PF, PF PFEmpr, ProfTax,SplAllowance from EmpPaySheet where EmpId = '" + txtEmpid.Text + "' order by Month desc ";
            DataTable dt = Config.ExecuteAdaptorAsyncWithQueryParams(query1).Result;

            string basic = dt.Rows[0]["basic"].ToString();
            string HRA = dt.Rows[0]["HRA"].ToString();
            string PF = dt.Rows[0]["PF"].ToString();
            string SplAllowance = dt.Rows[0]["SplAllowance"].ToString();
            string ProfTax = dt.Rows[0]["ProfTax"].ToString();
            string PFEmpr = dt.Rows[0]["PFEmpr"].ToString();
            string Gross = dt.Rows[0]["Gross"].ToString();
            string TDSDed = dt.Rows[0]["TDSDed"].ToString();
            string ESI = dt.Rows[0]["ESI"].ToString();
            string ESIEmpr = dt.Rows[0]["ESIEmpr"].ToString();

            string THnet = Convert.ToString(Convert.ToInt32(dt.Rows[0]["Gross"])-((Convert.ToInt32(dt.Rows[0]["ProfTax"] ) + Convert.ToInt32(dt.Rows[0]["TDSDed"]) + Convert.ToInt32(dt.Rows[0]["PF"] )+ (Convert.ToInt32(dt.Rows[0]["ESI"])))));
            string ctc = Convert.ToString(((Convert.ToInt32(dt.Rows[0]["PFEmpr"])+ (Convert.ToInt32(dt.Rows[0]["ESIEmpr"])) + (Convert.ToInt32(dt.Rows[0]["Gross"])))));









            dtEmpdetails = Config.ExecuteAdaptorAsyncWithParams(spname, ht).Result;
           

          if (dtEmpdetails.Rows.Count > 0)
          {
                Idno = dtEmpdetails.Rows[0]["EmpId"].ToString();
                name = dtEmpdetails.Rows[0]["Fullname"].ToString();
                Gender = dtEmpdetails.Rows[0]["EmpSex"].ToString();
                Dateofjoining = dtEmpdetails.Rows[0]["EmpDtofJoining"].ToString();               
                postappliedfor = dtEmpdetails.Rows[0]["EmpDesgn"].ToString();               
                MobileNumber = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
                SpouseName = dtEmpdetails.Rows[0]["EmpSpouseName"].ToString();
                MotherName = dtEmpdetails.Rows[0]["EmpMotherName"].ToString();                
                contactno = dtEmpdetails.Rows[0]["EmpPhone"].ToString();
               
                



                MemoryStream ms = new MemoryStream();
            Document document = new Document(PageSize.A4);
            var writer = PdfWriter.GetInstance(document, ms);
            document.Open();


            PdfPCell cell;

            int fontsize = 10;
            int fontsize1 = 12;
            int fontsize2 = 14;

            PdfPTable table = new PdfPTable(2);
            table.TotalWidth = 350f;
            table.LockedWidth = true;
            float[] width = new float[] { 4f, 4f };
            table.SetWidths(width);


            string imagepath1 = "";
            imagepath1 = Server.MapPath("~/assets/SKPlogo.png");
            if (File.Exists(imagepath1))
                if (File.Exists(imagepath1))
                {
                    iTextSharp.text.Image gif2 = iTextSharp.text.Image.GetInstance(imagepath1);
                    gif2.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                    gif2.ScalePercent(80f);
                    gif2.SetAbsolutePosition(80f, 720f);
                    document.Add(gif2);
                }

                string imagepath11 = "";
                imagepath11 = Server.MapPath("~/assets/SKPlogo1.png");
                if (File.Exists(imagepath11))
                    if (File.Exists(imagepath11))
                    {
                        iTextSharp.text.Image gif21 = iTextSharp.text.Image.GetInstance(imagepath11);
                        gif21.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif21.ScalePercent(80f);
                        gif21.SetAbsolutePosition(18f, 220f);
                        document.Add(gif21);
                    }

                string imagepath17 = "";
                imagepath17 = Server.MapPath("~/assets/SKPlogo2.png");
                if (File.Exists(imagepath17))
                    if (File.Exists(imagepath17))
                    {
                        iTextSharp.text.Image gif27 = iTextSharp.text.Image.GetInstance(imagepath17);
                        gif27.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif27.ScalePercent(70f);
                        gif27.SetAbsolutePosition(18f, 70f);
                        document.Add(gif27);
                    }
                string imagepath18 = "";
                imagepath18 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath18))
                    if (File.Exists(imagepath18))
                    {
                        iTextSharp.text.Image gif18 = iTextSharp.text.Image.GetInstance(imagepath18);
                        gif18.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif18.ScalePercent(60f);
                        gif18.SetAbsolutePosition(5f, 470f);
                        document.Add(gif18);
                    }

                string imagepath19 = "";
                imagepath19 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath19))
                    if (File.Exists(imagepath19))
                    {
                        iTextSharp.text.Image gif19 = iTextSharp.text.Image.GetInstance(imagepath19);
                        gif19.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif19.ScalePercent(59f);
                        gif19.SetAbsolutePosition(4.18f, 130f);
                        document.Add(gif19);
                    }


                document.Add(table);

            PdfPTable table1 = new PdfPTable(2);
            table1.TotalWidth = 430f;
            table1.LockedWidth = true;
            float[] width1 = new float[] { 4f, 4f };
            table1.SetWidths(width1);


            cell = new PdfPCell(new Phrase("Sub: Order of Appointment - "+ postappliedfor , FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingTop = 100;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("Dear "+name+"," ,FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingTop = 25;
            table1.AddCell(cell);


           


                PdfPCell custDet5 = new PdfPCell();
                Paragraph p3 = new Paragraph();
                p3.Add(new Phrase("Congratulations! We welcome you on board Shri Kartikeya Pharma in the role of           ", FontFactory.GetFont(FontFactory.TIMES_ROMAN, fontsize +2, Font.NORMAL, BaseColor.BLACK)));
                p3.Add(new Phrase(             postappliedfor , FontFactory.GetFont(FontFactory.TIMES_ROMAN, fontsize, Font.BOLD, BaseColor.BLACK)));
                p3.Add(new Phrase("  with effect from  " , FontFactory.GetFont(FontFactory.TIMES_ROMAN, fontsize + 2, Font.NORMAL, BaseColor.BLACK)));
                p3.Add(new Phrase( Dateofjoining, FontFactory.GetFont(FontFactory.TIMES_ROMAN, fontsize + 2, Font.BOLD, BaseColor.BLACK)));
                custDet5.AddElement(p3);
                custDet5.HorizontalAlignment = 0;
                custDet5.Colspan = 3;
                custDet5.Border = 0;
                custDet5.PaddingTop = 10;
                table1.AddCell(custDet5);

                cell = new PdfPCell(new Phrase("This appointment is made under the following terms and conditions:", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.PaddingTop = 15;
            cell.Colspan = 2;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("TERMS AND CONDITIONS:", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingTop = 15;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("1. You are expected to perform to the best of your ability, all duties and tasks assigned to you or as per your role at Shri Kartikeya Pharma.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
                cell.PaddingLeft = 15;
            cell.PaddingTop = 15;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("2. You will be confirmed after 6 Months of probation. This period may be extended based on your performance.Upon successful confirmation, all employee benefits will be extendible to you.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("3. Normal business hours for the company are 9:00 am - 6:00 pm from Monday to Saturday. However,it is important for employees to put in additional time in order to fulfil required duties if required.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingLeft = 15; 
            cell.PaddingTop = 15;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("4. Your Annual Salary is fixed as mentioned in the annexure. Salary is payable monthly within the first week of the following month.The salary amount, net of deductions of Income tax and other statutory deductibles would be paid directly into your bank account.The breakup is in the annexure to this mail.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingLeft = 15;
            cell.PaddingTop = 15;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase("5. You will be entitled to take leaves in agreement with the Company’s Leave Policy. While we follow a limited Leaves Policy, prior approval from management for all leaves is a must so there is no hindrance to workflow.Any planned vacation more than a calendar week will have to be approved by the management at least a month in advance.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingLeft = 15;
            cell.PaddingTop = 15;
            table1.AddCell(cell);


            cell = new PdfPCell(new Phrase(" Absence for a continuous period of 3 days without prior approval of your superior (including overstay of leave), can lead to termination of your services without notice or explanation by Shri Kartikeya Pharma.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingLeft = 15;
            cell.PaddingTop = 15;
            table1.AddCell(cell);

            cell = new PdfPCell(new Phrase("  6. Shri Kartikeya Pharma reserves the right to terminate your employment on grounds of policy, misconduct or unsatisfactory job performance.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
            cell.HorizontalAlignment = 0;
            cell.Border = 0;
            cell.Colspan = 2;
            cell.PaddingLeft = 15;
            cell.PaddingTop = 10;
            table1.AddCell(cell);



                //cell = new PdfPCell(new Phrase("------------------------------------------------------------------------------------------------------------------------------------", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 130;
                //table1.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;              
                //cell.PaddingTop = 5;
                //table1.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Phoneno + Faxno , FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;              
                //cell.PaddingTop = 5;
                //table1.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Emailid + Website , FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;                
                //cell.PaddingTop = 5;
                //table1.AddCell(cell);

                document.Add(table1);


                document.NewPage();


                PdfPTable table3 = new PdfPTable(2);
                table3.TotalWidth = 500f;
                table3.LockedWidth = true;
                float[] width3 = new float[] { 4f, 4f };
                table3.SetWidths(width3);


                string imagepath2 = "";
                imagepath2 = Server.MapPath("~/assets/SKPlogo.png");
                if (File.Exists(imagepath2))
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image gif = iTextSharp.text.Image.GetInstance(imagepath2);
                        gif.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif.ScalePercent(80f);
                        gif.SetAbsolutePosition(80f, 720f);
                        document.Add(gif);
                    }

                string imagepath12 = "";
                imagepath12 = Server.MapPath("~/assets/SKPlogo1.png");
                if (File.Exists(imagepath12))
                    if (File.Exists(imagepath12))
                    {
                        iTextSharp.text.Image gif22 = iTextSharp.text.Image.GetInstance(imagepath12);
                        gif22.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif22.ScalePercent(80f);
                        gif22.SetAbsolutePosition(18f, 220f);
                        document.Add(gif22);
                    }

                string imagepath22 = "";
                imagepath22 = Server.MapPath("~/assets/SKPlogo2.png");
                if (File.Exists(imagepath22))
                    if (File.Exists(imagepath22))
                    {
                        iTextSharp.text.Image gif22 = iTextSharp.text.Image.GetInstance(imagepath22);
                        gif22.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif22.ScalePercent(70f);
                        gif22.SetAbsolutePosition(18f, 80f);
                        document.Add(gif22);
                    }
                string imagepath28 = "";
                imagepath28 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath28))
                    if (File.Exists(imagepath28))
                    {
                        iTextSharp.text.Image gif28 = iTextSharp.text.Image.GetInstance(imagepath28);
                        gif28.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif28.ScalePercent(60f);
                        gif28.SetAbsolutePosition(5f, 470f);
                        document.Add(gif28);
                    }

                string imagepath29 = "";
                imagepath29 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath29))
                    if (File.Exists(imagepath29))
                    {
                        iTextSharp.text.Image gif29 = iTextSharp.text.Image.GetInstance(imagepath29);
                        gif29.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif29.ScalePercent(59f);
                        gif29.SetAbsolutePosition(4.19f, 130f);
                        document.Add(gif29);
                    }



                document.Add(table3);

                PdfPTable table4 = new PdfPTable(2);
                table4.TotalWidth = 430;
                table4.LockedWidth = true;
                float[] width4 = new float[] { 4f, 4f };
                table4.SetWidths(width4);
               


                cell = new PdfPCell(new Phrase("7. Whilst employed by Shri Kartikeya Pharma:", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 100;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("You will not be permitted to undertake any other employment or engage in any external activities of a commercial nature.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;          
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("You will be required to effectively carry out all duties assigned to you by your manager and others authorized by the Company to assign such duties and responsibilities.Your performance will be subject to regular appraisal by your manager", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("Except if required by Shri Kartikeya Pharma in the course of your employment, or,thereafter, you shall not divulge to any third party, information regarding the affairs or business matters of the Company or information regarding its customers.All information that comes to your knowledge by reasons of employment with the company is deemed to be confidential.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);


                cell = new PdfPCell(new Phrase("You will be signing a confidentiality agreement with the company at the time of joining.You will be required to apply and maintain the highest standards of personal conduct and integrity and comply with all Company policies and procedures.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("Any intentional violation of these or any other Company procedures can result in disciplinary action being taken against you, which may result in termination of your employment with or without notice or compensation.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);


                cell = new PdfPCell(new Phrase("You confirm that you have disclosed fully all of your business interests to Shri Kartikeya Pharma whether or not they are similar to or in conflict with the business or activities of the Company, and all circumstances in respect of which there is, or there might be perceived, a conflict of interest between Shri Kartikeya Pharma and you or any immediate relatives.Also,you agree to disclose fully and immediately to the Company any such interests or circumstances which may arise during your employment", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("Upon separation from the Company on account of either resignation or termination, you need to immediately return to the Company all the assets and property(including any leased properties) of the company software and hardware including documents, files, books, papers and memos in your possession or custody. ", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("Your assignment, salary, and benefits are effective from the date you join Shri Kartikeya Pharma and complete all joining formalities which includes undergoing any training that is provided.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("The terms of this offer are intended to be kept strictly confidential.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);

                cell = new PdfPCell(new Phrase("If in case you decide to leave or resign from the organization, you will have to serve a notice period of 2 months.During these two months, you will have to be physically present at the office and make sure that you inculcate your entire job - related knowledge to the person who will be filling in your position.You can attend interviews during this period with prior information to the management.If you fail to serve this period then you will have pay 2 month’s salary to the company.The management can also choose to release you early.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingLeft = 15;
                cell.PaddingTop = 15;
                table4.AddCell(cell);






                //cell = new PdfPCell(new Phrase("------------------------------------------------------------------------------------------------------------------------------------", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 60;
                //table4.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 5;
                //table4.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Phoneno + Faxno, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 5;
                //table4.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Emailid + Website, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 5;
                //table4.AddCell(cell);

                document.Add(table4);

                document.NewPage();

                PdfPTable table5 = new PdfPTable(2);
                table5.TotalWidth = 500f;
                table5.LockedWidth = true;
                float[] width5 = new float[] { 4f, 4f };
                table5.SetWidths(width5);


                string imagepath3 = "";
                imagepath3 = Server.MapPath("~/assets/SKPlogo.png");
                if (File.Exists(imagepath3))
                    if (File.Exists(imagepath3))
                    {
                        iTextSharp.text.Image gif1 = iTextSharp.text.Image.GetInstance(imagepath3);
                        gif1.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif1.ScalePercent(80f);
                        gif1.SetAbsolutePosition(80f, 720f);
                        document.Add(gif1);
                    }

                string imagepath13 = "";
                imagepath13 = Server.MapPath("~/assets/SKPlogo1.png");
                if (File.Exists(imagepath13))
                    if (File.Exists(imagepath13))
                    {
                        iTextSharp.text.Image gif23 = iTextSharp.text.Image.GetInstance(imagepath13);
                        gif23.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif23.ScalePercent(80f);
                        gif23.SetAbsolutePosition(18f, 220f);
                        document.Add(gif23);
                    }

                string imagepath31 = "";
                imagepath31 = Server.MapPath("~/assets/SKPlogo2.png");
                if (File.Exists(imagepath31))
                    if (File.Exists(imagepath31))
                    {
                        iTextSharp.text.Image gif31 = iTextSharp.text.Image.GetInstance(imagepath31);
                        gif31.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif31.ScalePercent(70f);
                        gif31.SetAbsolutePosition(18f, 70f);
                        document.Add(gif31);
                    }

                string imagepath52 = "";
                imagepath52 = Server.MapPath("~/assets/SKPlogo4.png");
                if (File.Exists(imagepath52))
                    if (File.Exists(imagepath52))
                    {
                        iTextSharp.text.Image gif52 = iTextSharp.text.Image.GetInstance(imagepath52);
                        gif52.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif52.ScalePercent(60f);
                        gif52.SetAbsolutePosition(180f, 280f);
                        document.Add(gif52);
                    }

                string imagepath38 = "";
                imagepath38 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath38))
                    if (File.Exists(imagepath38))
                    {
                        iTextSharp.text.Image gif38 = iTextSharp.text.Image.GetInstance(imagepath38);
                        gif38.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif38.ScalePercent(60f);
                        gif38.SetAbsolutePosition(5f, 470f);
                        document.Add(gif38);
                    }

                string imagepath39 = "";
                imagepath39 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath39))
                    if (File.Exists(imagepath39))
                    {
                        iTextSharp.text.Image gif39 = iTextSharp.text.Image.GetInstance(imagepath39);
                        gif39.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif39.ScalePercent(59f);
                        gif39.SetAbsolutePosition(4.13f, 130f);
                        document.Add(gif39);
                    }



                document.Add(table5);

                PdfPTable table6 = new PdfPTable(2);
                table6.TotalWidth = 430;
                table6.LockedWidth = true;
                float[] width6 = new float[] { 4f, 4f };
                table6.SetWidths(width6);



                cell = new PdfPCell(new Phrase("8. This order of appointment by Shri Kartikeya Pharma is conditional to the satisfactory completion of all regulatory and background checks.Please note that failure to clear any one of the above will lead to immediate withdrawal of this appointment order and thus termination of your employment with Shri Kartikeya Pharma.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 100;
                table6.AddCell(cell);


                cell = new PdfPCell(new Phrase("9. You are required to confirm by email to the undersigned within the next week that you agree to abide by the policies here", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 20;
                table6.AddCell(cell);

                cell = new PdfPCell(new Phrase("Salary Annexure to the Appointment Order", FontFactory.GetFont(FontFactory.TIMES_BOLD, fontsize, Font.UNDERLINE, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2; 
                cell.PaddingTop = 20;
                cell.PaddingBottom = 20;
                table6.AddCell(cell);
                document.Add(table6);



                PdfPTable table11 = new PdfPTable(2);
                table11.TotalWidth = 200;
                table11.LockedWidth = true;
                float[] width11 = new float[] { 2f,2f, };
                table11.SetWidths(width11);


                cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                cell.Border = 0;
                cell.PaddingTop = 50;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                cell.PaddingTop = 50;
                cell.Border = 0;
                table11.AddCell(cell);

                BaseColor color = new BaseColor(221, 226, 222);

                cell = new PdfPCell(new Phrase("Designation", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(postappliedfor, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);


                cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                cell.PaddingTop = 10;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                cell.PaddingTop = 10;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("Basic", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;                
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(basic, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;             
                 table11.AddCell(cell);


                cell = new PdfPCell(new Phrase("HRA", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;               
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(HRA, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;               
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("Special Allowance", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;               
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(SplAllowance, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;               
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("Gross", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(Gross, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("PT", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(ProfTax, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("PF", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(PF, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);



                cell = new PdfPCell(new Phrase("TDS (As Per IT Rule)", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(TDSDed, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("ESIC", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(ESI, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("Ded Employee", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("TH Net", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(THnet, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);


                cell = new PdfPCell(new Phrase("PF Employer", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(PFEmpr, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("ESIC Employer", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(ESIEmpr, FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("Ded Employer", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                table11.AddCell(cell);


                cell = new PdfPCell(new Phrase("CTC", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Colspan = 1;
                cell.BackgroundColor = color;
                table11.AddCell(cell);

                cell = new PdfPCell(new Phrase(ctc, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 2;
                cell.Colspan = 1;
                cell.BackgroundColor = color;

                table11.AddCell(cell);
                
                document.Add(table11);


                //PdfPTable table12 = new PdfPTable(2);
                //table12.TotalWidth = 500f;
                //table12.LockedWidth = true;
                //float[] width12 = new float[] { 4f, 4f };
                //table12.SetWidths(width12);





                //cell = new PdfPCell(new Phrase("------------------------------------------------------------------------------------------------------------------------------------", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 230;
                //table12.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 5;
                //table12.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Phoneno + Faxno, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 5;
                //table12.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Emailid + Website, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 2;
                //cell.PaddingTop = 5;
                //table12.AddCell(cell);


                //document.Add(table12);


                document.NewPage();

                PdfPTable table7 = new PdfPTable(4);
                table7.TotalWidth = 500f;
                table7.LockedWidth = true;
                float[] width7 = new float[] { 1.5f,1f,0.7f,1f };
                table7.SetWidths(width7);


                string imagepath4 = "";
                imagepath4 = Server.MapPath("~/assets/SKPlogo.png");
                if (File.Exists(imagepath4))
                    if (File.Exists(imagepath4))
                    {
                        iTextSharp.text.Image gif3 = iTextSharp.text.Image.GetInstance(imagepath4);
                        gif3.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif3.ScalePercent(80f);
                        gif3.SetAbsolutePosition(80f, 720f);
                        document.Add(gif3);
                    }


                string imagepath14 = "";
                imagepath14 = Server.MapPath("~/assets/SKPlogo1.png");
                if (File.Exists(imagepath14))
                    if (File.Exists(imagepath14))
                    {
                        iTextSharp.text.Image gif24 = iTextSharp.text.Image.GetInstance(imagepath14);
                        gif24.Alignment = (iTextSharp.text.Image.ALIGN_MIDDLE | iTextSharp.text.Image.UNDERLYING);
                        gif24.ScalePercent(80f);
                        gif24.SetAbsolutePosition(18f, 220f);
                        document.Add(gif24);
                    }

                string imagepath15 = "";
                imagepath15 = Server.MapPath("~/assets/SKPlogo2.png");
                if (File.Exists(imagepath15))
                    if (File.Exists(imagepath15))
                    {
                        iTextSharp.text.Image gif25 = iTextSharp.text.Image.GetInstance(imagepath15);
                        gif25.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif25.ScalePercent(70f);
                        gif25.SetAbsolutePosition(18f, 80f);
                        document.Add(gif25);
                    }
                string imagepath51 = "";
                imagepath51 = Server.MapPath("~/assets/SKPlogo3.png");
                if (File.Exists(imagepath51))
                    if (File.Exists(imagepath51))
                    {
                        iTextSharp.text.Image gif51 = iTextSharp.text.Image.GetInstance(imagepath51);
                        gif51.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif51.ScalePercent(50f);
                        gif51.SetAbsolutePosition(100f, 380f);
                        document.Add(gif51);
                    }

                string imagepath58 = "";
                imagepath58 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath58))
                    if (File.Exists(imagepath58))
                    {
                        iTextSharp.text.Image gif58 = iTextSharp.text.Image.GetInstance(imagepath58);
                        gif58.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif58.ScalePercent(60f);
                        gif58.SetAbsolutePosition(5f, 470f);
                        document.Add(gif58);
                    }

                string imagepath59 = "";
                imagepath59 = Server.MapPath("~/assets/SKPlogo5.png");
                if (File.Exists(imagepath59))
                    if (File.Exists(imagepath59))
                    {
                        iTextSharp.text.Image gif59 = iTextSharp.text.Image.GetInstance(imagepath59);
                        gif59.Alignment = (iTextSharp.text.Image.ALIGN_LEFT | iTextSharp.text.Image.UNDERLYING);
                        gif59.ScalePercent(59f);
                        gif59.SetAbsolutePosition(4.15f, 130f);
                        document.Add(gif59);
                    }

                document.Add(table7);


                PdfPTable table8 = new PdfPTable(4);
                table8.TotalWidth = 430f;
                table8.LockedWidth = true;
                float[] width8 = new float[] { 1.5f, 1f, 0.7f, 1f };
                table8.SetWidths(width8);



                cell = new PdfPCell(new Phrase("Documents required:", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingTop = 80;
                table8.AddCell(cell);


                cell = new PdfPCell(new Phrase("The following documents need to be submitted to the HR department at the of joining. ", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingTop = 10;
                table8.AddCell(cell);


                cell = new PdfPCell(new Phrase("1.   Updated Resume ", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 20;
                cell.PaddingTop = 10;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("2.   3 Passport size Photos", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 20;              
                cell.PaddingTop = 5;
                table8.AddCell(cell);


                cell = new PdfPCell(new Phrase("3.   All Educational Documents", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 20;
                cell.PaddingTop = 5;
                table8.AddCell(cell);


                cell = new PdfPCell(new Phrase("4.   Identity Proofs: Any two of Following:", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 20;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Aadhar Card (Compulsory)", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Voter Identity Card", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Driving License.", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Passport", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);


                cell = new PdfPCell(new Phrase("Photo Ration Card", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Pan Card (Compulsory)", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Latest Bank statement/Passbook", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Relieving Letter or Experience letter", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Latest 3 Months Payslips of current organization", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;
                cell.PaddingLeft = 50;
                cell.PaddingTop = 5;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Wishing you a brilliant career with us!", FontFactory.GetFont(fontstyle, fontsize, Font.NORMAL, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 4;                
                cell.PaddingTop = 15;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("For Shri Kartikeya Pharma,", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 15;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Accepted & Signed", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 15;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Kartikeya Baldwa", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 30;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("Name:", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 30;
                table8.AddCell(cell);

                cell = new PdfPCell(new Phrase("C.E.O", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 5;
                table8.AddCell(cell);


                cell = new PdfPCell(new Phrase(" Date:", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                cell.HorizontalAlignment = 0;
                cell.Border = 0;
                cell.Colspan = 2;
                cell.PaddingTop = 5;
                table8.AddCell(cell);










                //cell = new PdfPCell(new Phrase("----------------------------------------------------------------------------------------------------------------------------------------------", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 4;
                //cell.PaddingTop = 180;
                //table7.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 1;
                //cell.Border = 0;
                //cell.Colspan = 4;
                //cell.PaddingTop = 5;
                //table7.AddCell(cell);

                //cell = new PdfPCell(new Phrase("Phone :", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 1;
                //cell.PaddingLeft = 70;
                //cell.PaddingTop = 5;
                //table7.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Phoneno + Faxno, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 1;                
                //cell.PaddingTop = 5;
                //table7.AddCell(cell);

                //cell = new PdfPCell(new Phrase("Website :", FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 1;
                //cell.PaddingRight = 30;
                //cell.PaddingTop = 5;
                //table7.AddCell(cell);

                //cell = new PdfPCell(new Phrase(Emailid + Website, FontFactory.GetFont(fontstyle, fontsize, Font.BOLD, BaseColor.BLACK)));
                //cell.HorizontalAlignment = 0;
                //cell.Border = 0;
                //cell.Colspan = 1;
                //cell.PaddingRight = 70;
                //cell.PaddingTop = 5;
                //table7.AddCell(cell);


                document.Add(table8);





                string filename = txtName.Text + " - " + txtEmpid.Text + " - " + "Biodata.pdf";

            document.Close();
            Response.ContentType = "application/pdf";
            Response.AddHeader("content-disposition", "attachment;filename=" + filename);
            Response.Buffer = true;
            Response.Clear();
            Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
            Response.OutputStream.Flush();
            Response.End();
        }

        }

        protected void BtnIDCard_Click(object sender, EventArgs e)
        {
            int totalfonts = FontFactory.RegisterDirectory("c:\\WINDOWS\\fonts");
            StringBuilder sa = new StringBuilder();
            foreach (string fontname in FontFactory.RegisteredFonts)
            {
                sa.Append(fontname + "\n");
            }

            int Fontsize = 12;
            int fontsize2 = 6;// font for company address
            int fontsize1 = 8;
            string fontstyle = "Calibri";
            string fontstyleArial = "Arial";
            string fontstyleTimesRoman = "Times New Roman";
            string fontstyleBookMan = "Book Man Old Style";
            string fontstyleArialUniStyle = "Arial Unicode MS Regular";


            #region for Variable Declaration

            string Empid = "";
            string FromEmpid = "";
            string ToEmpid = "";
            string Name = "";
            string Designation = "";
            string IDcardIssued = "";
            string IDcardvalid = "";
            string BloodGroup = "";
            string Image = "";
            string EmpSign = "";
            string EmpESINo = "";
            string doj = "";


            #endregion for Variable Declaration

            #region for companyinfo
            string QueryCompanyInfo = "select * from companyinfo";
            DataTable DtCompanyInfo = Config.ExecuteReaderWithQueryAsync(QueryCompanyInfo).Result;

            string CompanyName = "";
            string Address = "";
            string Emailid = "";
            string Website = "";
            string Phoneno = "";
            string Faxno = "";

            if (DtCompanyInfo.Rows.Count > 0)
            {
                CompanyName = DtCompanyInfo.Rows[0]["CompanyName"].ToString();
                Address = DtCompanyInfo.Rows[0]["Address"].ToString();
                Phoneno = DtCompanyInfo.Rows[0]["Phoneno"].ToString();
                Faxno = DtCompanyInfo.Rows[0]["Faxno"].ToString();
                Emailid = DtCompanyInfo.Rows[0]["Emailid"].ToString();
                Website = DtCompanyInfo.Rows[0]["Website"].ToString();


            }
            #endregion for companyinfo

            string query = "";
            DataTable dt = new DataTable();
            var spname = "";

            Hashtable ht = new Hashtable();
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                Empid = txtEmpid.Text;
                spname = "EmpBiodataPDF";
                ht.Add("@Empid", Empid);
            }
            else if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                FromEmpid = txtfromempid.Text;
                ToEmpid = txttoempid.Text;
                spname = "EmpBiodataBulk";
                ht.Add("@fromEmpid", FromEmpid);
                ht.Add("@toEmpid", ToEmpid);

            }



            dt = Config.ExecuteAdaptorAsyncWithParams(spname, ht).Result;






            if (dt.Rows.Count > 0)
            {



                MemoryStream ms = new MemoryStream();

                BaseFont bf = BaseFont.CreateFont(BaseFont.TIMES_ROMAN, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                string imagepath1 = Server.MapPath("assets/EmpPhotos/");
                string imagepath3 = Server.MapPath("assets/EmpSign/");
                string imagepath2 = Server.MapPath("assets/Images/");
                string imagepath4 = Server.MapPath("assets/Images/IDCardLogo.jpg");


                Document document = new Document(PageSize.A4);
                var writer = PdfWriter.GetInstance(document, ms);
                document.Open();


                if (ddlEmpIDoptions.SelectedIndex == 0)
                {
                    #region Id Card Format

                    Empid = dt.Rows[0]["Empid"].ToString();
                    Name = dt.Rows[0]["Fullname"].ToString();
                    Designation = dt.Rows[0]["EmpDesgn"].ToString();
                    IDcardIssued = dt.Rows[0]["IDCardIssued"].ToString();
                    IDcardvalid = dt.Rows[0]["IDCardValid"].ToString();
                    BloodGroup = dt.Rows[0]["EmpBloodGroup"].ToString();
                    Image = dt.Rows[0]["Image"].ToString();
                    EmpSign = dt.Rows[0]["EmpSign"].ToString();
                    EmpESINo = dt.Rows[0]["EmpESINo"].ToString();
                    doj = dt.Rows[0]["EmpDtofJoining"].ToString();

                    PdfPTable MainIDCarddetails = new PdfPTable(18);
                    MainIDCarddetails.TotalWidth = 800f;
                    MainIDCarddetails.LockedWidth = true;
                    MainIDCarddetails.DefaultCell.HorizontalAlignment = Element.ALIGN_LEFT;
                    MainIDCarddetails.DefaultCell.VerticalAlignment = Element.ALIGN_TOP;
                    float[] width4 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                    MainIDCarddetails.SetWidths(width4);


                    PdfPTable IDCarddetails = new PdfPTable(10);
                    IDCarddetails.TotalWidth = 370f;
                    IDCarddetails.LockedWidth = true;
                    float[] width = new float[] { 5f, 2f, 2f, 2f, 0.2f, 5f, 2f, 2f, 2f, 2.4f };
                    IDCarddetails.SetWidths(width);

                    PdfPTable IDCardTemptable1 = new PdfPTable(4);
                    IDCardTemptable1.TotalWidth = 185f;
                    // IDCardTemptable1.HorizontalAlignment = 0;
                    //IDCardTemptable1.LockedWidth = true;
                    float[] width1 = new float[] { 2.4f, 2.4f, 2.4f, 2.4f };
                    IDCardTemptable1.SetWidths(width1);

                    #region
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath2);
                        srflogo.ScaleAbsolute(40f, 35f);
                        PdfPCell companylogo = new PdfPCell();
                        Paragraph cmplogo = new Paragraph();
                        cmplogo.Add(new Chunk(srflogo, 80f, 10f));
                        companylogo.AddElement(cmplogo);
                        companylogo.HorizontalAlignment = 0;
                        companylogo.Colspan = 4;
                        companylogo.PaddingLeft = -13;
                        companylogo.Border = 0;
                        IDCardTemptable1.AddCell(companylogo);
                    }
                    PdfPCell cellSymbol = new PdfPCell(new Phrase("''A Symbol of Quality Services''", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                    cellSymbol.HorizontalAlignment = 1;
                    cellSymbol.Border = 0;
                    cellSymbol.Colspan = 4;
                    cellSymbol.PaddingTop = -10f;
                    IDCardTemptable1.AddCell(cellSymbol);

                    BaseColor color = new BaseColor(255, 0, 0);
                    PdfPCell cellCertification = new PdfPCell(new Phrase("ISO 9001:2008", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, color)));
                    cellCertification.HorizontalAlignment = 1;
                    cellCertification.Border = 0;
                    cellCertification.Colspan = 4;
                    cellCertification.PaddingTop = -1;
                    cellCertification.PaddingLeft = 10;
                    IDCardTemptable1.AddCell(cellCertification);

                    if (Image.Length > 0)
                    {
                        iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + Image);
                        //Empphoto.ScalePercent(25f);
                        Empphoto.ScaleAbsolute(80f, 80f);
                        PdfPCell EmpImage = new PdfPCell();
                        Paragraph Emplogo = new Paragraph();
                        Emplogo.Add(new Chunk(Empphoto, 70f, 0));
                        EmpImage.AddElement(Emplogo);
                        EmpImage.HorizontalAlignment = 1;
                        EmpImage.PaddingLeft = -15f;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);
                    }
                    else
                    {
                        PdfPCell EmpImage = new PdfPCell();
                        EmpImage.HorizontalAlignment = 2;
                        EmpImage.Colspan = 4;
                        EmpImage.Border = 0;
                        IDCardTemptable1.AddCell(EmpImage);

                    }

                    PdfPCell cellName = new PdfPCell(new Phrase(Name, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellName.HorizontalAlignment = 1;
                    cellName.Border = 0;
                    cellName.Colspan = 4;
                    IDCardTemptable1.AddCell(cellName);

                    PdfPCell cellIDNo = new PdfPCell(new Phrase("P.No : " + Empid, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellIDNo.HorizontalAlignment = 1;
                    cellIDNo.Border = 0;
                    cellIDNo.Colspan = 4;
                    IDCardTemptable1.AddCell(cellIDNo);

                    PdfPCell cellRank = new PdfPCell(new Phrase("Rank : " + Designation, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                    cellRank.HorizontalAlignment = 1;
                    cellRank.Border = 0;
                    cellRank.Colspan = 4;
                    IDCardTemptable1.AddCell(cellRank);

                    PdfPCell cellDtIssued = new PdfPCell(new Phrase("Date of Issue : " + IDcardIssued, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtIssued.HorizontalAlignment = 1;
                    cellDtIssued.Border = 0;
                    cellDtIssued.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtIssued);

                    PdfPCell cellDtValid = new PdfPCell(new Phrase("Valid Upto : " + IDcardvalid, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                    cellDtValid.HorizontalAlignment = 1;
                    cellDtValid.Border = 0;
                    cellDtValid.Colspan = 4;
                    IDCardTemptable1.AddCell(cellDtValid);

                    if (EmpSign.Length > 0)
                    {
                        iTextSharp.text.Image Sign = iTextSharp.text.Image.GetInstance(imagepath3 + EmpSign);
                        //Sign.ScalePercent(10f);
                        Sign.ScaleAbsolute(50f, 8f);
                        PdfPCell Signature = new PdfPCell();
                        Paragraph signlogo = new Paragraph();
                        signlogo.Add(new Chunk(Sign, 25f, 0));
                        Signature.AddElement(signlogo);
                        Signature.HorizontalAlignment = 1;
                        Signature.PaddingLeft = 5f;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        IDCardTemptable1.AddCell(Signature);
                    }
                    else
                    {

                        PdfPCell Signature = new PdfPCell();
                        Signature.HorizontalAlignment = 1;
                        Signature.Colspan = 2;
                        Signature.PaddingTop = -2f;
                        Signature.Border = 0;
                        Signature.FixedHeight = 15;
                        IDCardTemptable1.AddCell(Signature);

                    }
                    if (File.Exists(imagepath2))
                    {
                        iTextSharp.text.Image IssuingAuth = iTextSharp.text.Image.GetInstance(imagepath2 + "Authority.png");
                        //IssuingAuth.ScalePercent(10f);
                        IssuingAuth.ScaleAbsolute(60f, 8f);
                        PdfPCell Authority = new PdfPCell();
                        Paragraph Authoritylogo = new Paragraph();
                        Authoritylogo.Add(new Chunk(IssuingAuth, 10f, 0));
                        Authority.AddElement(Authoritylogo);
                        Authority.HorizontalAlignment = 0;
                        Authority.Colspan = 2;
                        Authority.PaddingTop = -2f;
                        Authority.Border = 0;
                        IDCardTemptable1.AddCell(Authority);
                    }
                    PdfPCell cellEmpSign = new PdfPCell(new Phrase("Signature of \nCard Holder", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellEmpSign.HorizontalAlignment = 1;
                    cellEmpSign.Border = 0;
                    cellEmpSign.Colspan = 2;
                    cellEmpSign.PaddingLeft = 20f;
                    IDCardTemptable1.AddCell(cellEmpSign);

                    PdfPCell cellAuthority = new PdfPCell(new Phrase("Issuing Authority", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                    cellAuthority.HorizontalAlignment = 1;
                    cellAuthority.Border = 0;
                    cellAuthority.Colspan = 2;
                    cellAuthority.PaddingTop = 5;
                    IDCardTemptable1.AddCell(cellAuthority);

                    PdfPCell childTable1 = new PdfPCell(IDCardTemptable1);
                    childTable1.HorizontalAlignment = 0;
                    childTable1.Colspan = 4;
                    IDCarddetails.AddCell(childTable1);

                    PdfPTable IDCardTemptable41 = new PdfPTable(1);
                    IDCardTemptable41.TotalWidth = 6f;
                    //IDCardTemptable41.LockedWidth = true;
                    float[] width41 = new float[] { 0.8f };
                    IDCardTemptable41.SetWidths(width41);

                    PdfPCell cellempcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell1.Border = 0;
                    cellempcell1.Colspan = 1;
                    IDCardTemptable41.AddCell(cellempcell1);

                    PdfPCell childTable4 = new PdfPCell(IDCardTemptable41);
                    childTable4.HorizontalAlignment = 0;
                    childTable4.Colspan = 1;
                    childTable4.Border = 0;
                    IDCarddetails.AddCell(childTable4);

                    PdfPTable IDCardTemptable2 = new PdfPTable(4);
                    IDCardTemptable2.TotalWidth = 180f;
                    IDCardTemptable2.LockedWidth = true;
                    float[] width2 = new float[] { 2.3f, 2.3f, 2.3f, 2.3f };
                    IDCardTemptable2.SetWidths(width2);

                    PdfPCell cellInstructions = new PdfPCell(new Phrase("Instructions :", FontFactory.GetFont(fontstyle, fontsize1 + 1, Font.BOLD, BaseColor.BLACK)));
                    cellInstructions.HorizontalAlignment = 0;
                    cellInstructions.Border = 0;
                    cellInstructions.Colspan = 4;
                    //cellInstructions.PaddingTop = -20f;
                    IDCardTemptable2.AddCell(cellInstructions);

                    PdfPCell cellInstructions1 = new PdfPCell(new Phrase("1) ID Card to be worn by employee \n    at all times while on duty.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions1.HorizontalAlignment = 0;
                    cellInstructions1.Border = 0;
                    cellInstructions1.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions1);

                    PdfPCell cellInstructions2 = new PdfPCell(new Phrase("2) Loss or Recovery of the Card shall be \n    reported to HR / Admin Dept.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions2.HorizontalAlignment = 0;
                    cellInstructions2.Border = 0;
                    cellInstructions2.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions2);

                    PdfPCell cellInstructions3 = new PdfPCell(new Phrase("3) The Finder May Please return to:", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions3.HorizontalAlignment = 0;
                    cellInstructions3.Border = 0;
                    cellInstructions3.Colspan = 4;
                    IDCardTemptable2.AddCell(cellInstructions3);

                    PdfPCell cellInstructions4 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellInstructions4.HorizontalAlignment = 0;
                    cellInstructions4.Border = 0;
                    cellInstructions4.Colspan = 4;
                    cellInstructions4.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellInstructions4);

                    PdfPCell cellComp = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                    cellComp.HorizontalAlignment = 0;
                    cellComp.Border = 0;
                    cellComp.Colspan = 4;
                    //cellComp.PaddingTop = 20;
                    IDCardTemptable2.AddCell(cellComp);

                    PdfPCell cellAddress = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize2 + 1, Font.NORMAL, BaseColor.BLACK)));
                    cellAddress.HorizontalAlignment = 0;
                    cellAddress.Border = 0;
                    cellAddress.Colspan = 4;
                    cellAddress.SetLeading(0f, 1.2f);
                    cellAddress.VerticalAlignment = 13;
                    IDCardTemptable2.AddCell(cellAddress);

                    PdfPCell cellmobile = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile.Border = 0;
                    cellmobile.Colspan = 4;
                    IDCardTemptable2.AddCell(cellmobile);

                    PdfPCell cellmobile1 = new PdfPCell(new Phrase("Fax : " + Faxno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellmobile1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellmobile1.Border = 0;
                    cellmobile1.Colspan = 4;
                    cellmobile1.PaddingBottom = 5f;
                    IDCardTemptable2.AddCell(cellmobile1);

                    PdfPCell cellEmergency = new PdfPCell(new Phrase("Email : " + Emailid, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                    cellEmergency.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellEmergency.Border = 0;
                    cellEmergency.Colspan = 4;
                    //cellEmergency.PaddingTop = 5;
                    IDCardTemptable2.AddCell(cellEmergency);

                    PdfPCell cellpolice = new PdfPCell(new Phrase("Helpline : " + Phoneno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellpolice.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellpolice.Border = 0;
                    cellpolice.Colspan = 4;
                    IDCardTemptable2.AddCell(cellpolice);

                    PdfPCell cellFire = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellFire.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellFire.Border = 0;
                    cellFire.Colspan = 4;
                    IDCardTemptable2.AddCell(cellFire);

                    PdfPCell cellATS = new PdfPCell(new Phrase("ESI No. : " + EmpESINo, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellATS.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellATS.Border = 0;
                    cellATS.Colspan = 4;
                    IDCardTemptable2.AddCell(cellATS);

                    PdfPCell cellBloodGroup = new PdfPCell(new Phrase("Blood Group : " + BloodGroup, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                    cellBloodGroup.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellBloodGroup.Border = 0;
                    cellBloodGroup.Colspan = 4;
                    IDCardTemptable2.AddCell(cellBloodGroup);

                    PdfPCell childTable2 = new PdfPCell(IDCardTemptable2);
                    childTable2.HorizontalAlignment = 0;
                    childTable2.Colspan = 4;
                    childTable2.PaddingLeft = 20;
                    IDCarddetails.AddCell(childTable2);

                    PdfPTable IDCardTemptable31 = new PdfPTable(1);
                    IDCardTemptable31.TotalWidth = 2f;
                    IDCardTemptable31.LockedWidth = true;
                    float[] width31 = new float[] { 1f };
                    IDCardTemptable31.SetWidths(width31);

                    PdfPCell cellempcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize2, Font.NORMAL, BaseColor.BLACK)));
                    cellempcell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                    cellempcell.Border = 0;
                    cellempcell.Colspan = 1;
                    IDCardTemptable31.AddCell(cellempcell);

                    PdfPCell childTable3 = new PdfPCell(IDCardTemptable31);
                    childTable3.HorizontalAlignment = 0;
                    childTable3.Colspan = 1;
                    childTable3.Border = 0;
                    IDCarddetails.AddCell(childTable3);

                    PdfPCell childTable6 = new PdfPCell(IDCarddetails);
                    childTable6.HorizontalAlignment = 0;
                    childTable6.Colspan = 18;
                    childTable6.Border = 0;
                    childTable6.PaddingLeft = -180;
                    childTable6.PaddingBottom = 10;
                    MainIDCarddetails.AddCell(childTable6);

                    #endregion for range ID Card Display

                    PdfPCell empcellnew = new PdfPCell();
                    empcellnew.HorizontalAlignment = 0;
                    empcellnew.Colspan = 9;
                    empcellnew.Border = 0;
                    MainIDCarddetails.AddCell(empcellnew);

                    document.Add(MainIDCarddetails);


                    #endregion for range ID Card Display
                }
                if (ddlEmpIDoptions.SelectedIndex == 1)
                {
                    #region for range ID Card Display

                    for (int k = 0; k < dt.Rows.Count; k++)
                    {

                        Empid = dt.Rows[k]["Empid"].ToString();
                        Name = dt.Rows[k]["Fullname"].ToString();
                        Designation = dt.Rows[k]["EmpDesgn"].ToString();
                        IDcardIssued = dt.Rows[k]["IDCardIssued"].ToString();
                        IDcardvalid = dt.Rows[k]["IDCardValid"].ToString();
                        BloodGroup = dt.Rows[k]["EmpBloodGroup"].ToString();
                        Image = dt.Rows[k]["Image"].ToString();
                        EmpSign = dt.Rows[k]["EmpSign"].ToString();
                        EmpESINo = dt.Rows[k]["EmpESINo"].ToString();
                        doj = dt.Rows[k]["EmpDtofJoining"].ToString();

                        PdfPTable MainIDCarddetails = new PdfPTable(18);
                        MainIDCarddetails.TotalWidth = 800f;
                        MainIDCarddetails.LockedWidth = true;
                        MainIDCarddetails.DefaultCell.HorizontalAlignment = Element.ALIGN_LEFT;
                        MainIDCarddetails.DefaultCell.VerticalAlignment = Element.ALIGN_TOP;
                        float[] width4 = new float[] { 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f };
                        MainIDCarddetails.SetWidths(width4);


                        PdfPTable IDCarddetails = new PdfPTable(10);
                        IDCarddetails.TotalWidth = 370f;
                        IDCarddetails.LockedWidth = true;
                        float[] width = new float[] { 5f, 2f, 2f, 2f, 0.2f, 5f, 2f, 2f, 2f, 2.4f };
                        IDCarddetails.SetWidths(width);

                        PdfPTable IDCardTemptable1 = new PdfPTable(4);
                        IDCardTemptable1.TotalWidth = 185f;
                        // IDCardTemptable1.HorizontalAlignment = 0;
                        //IDCardTemptable1.LockedWidth = true;
                        float[] width1 = new float[] { 2.4f, 2.4f, 2.4f, 2.4f };
                        IDCardTemptable1.SetWidths(width1);

                        #region
                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image srflogo = iTextSharp.text.Image.GetInstance(imagepath2);
                            srflogo.ScaleAbsolute(40f, 35f);
                            PdfPCell companylogo = new PdfPCell();
                            Paragraph cmplogo = new Paragraph();
                            cmplogo.Add(new Chunk(srflogo, 80f, 10f));
                            companylogo.AddElement(cmplogo);
                            companylogo.HorizontalAlignment = 0;
                            companylogo.Colspan = 4;
                            companylogo.PaddingLeft = -13;
                            companylogo.Border = 0;
                            IDCardTemptable1.AddCell(companylogo);
                        }
                        PdfPCell cellSymbol = new PdfPCell(new Phrase("''A Symbol of Quality Services''", FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLDITALIC, BaseColor.BLACK)));
                        cellSymbol.HorizontalAlignment = 1;
                        cellSymbol.Border = 0;
                        cellSymbol.Colspan = 4;
                        cellSymbol.PaddingTop = -10f;
                        IDCardTemptable1.AddCell(cellSymbol);

                        BaseColor color = new BaseColor(255, 0, 0);
                        PdfPCell cellCertification = new PdfPCell(new Phrase("ISO 9001:2008", FontFactory.GetFont(fontstyle, Fontsize, Font.BOLD, color)));
                        cellCertification.HorizontalAlignment = 1;
                        cellCertification.Border = 0;
                        cellCertification.Colspan = 4;
                        cellCertification.PaddingTop = -1;
                        cellCertification.PaddingLeft = 10;
                        IDCardTemptable1.AddCell(cellCertification);

                        if (Image.Length > 0)
                        {
                            iTextSharp.text.Image Empphoto = iTextSharp.text.Image.GetInstance(imagepath1 + Image);
                            //Empphoto.ScalePercent(25f);
                            Empphoto.ScaleAbsolute(80f, 80f);
                            PdfPCell EmpImage = new PdfPCell();
                            Paragraph Emplogo = new Paragraph();
                            Emplogo.Add(new Chunk(Empphoto, 70f, 0));
                            EmpImage.AddElement(Emplogo);
                            EmpImage.HorizontalAlignment = 1;
                            EmpImage.PaddingLeft = -15f;
                            EmpImage.Colspan = 4;
                            EmpImage.Border = 0;
                            IDCardTemptable1.AddCell(EmpImage);
                        }
                        else
                        {
                            PdfPCell EmpImage = new PdfPCell();
                            EmpImage.HorizontalAlignment = 2;
                            EmpImage.Colspan = 4;
                            EmpImage.Border = 0;
                            IDCardTemptable1.AddCell(EmpImage);

                        }

                        PdfPCell cellName = new PdfPCell(new Phrase(Name, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                        cellName.HorizontalAlignment = 1;
                        cellName.Border = 0;
                        cellName.Colspan = 4;
                        IDCardTemptable1.AddCell(cellName);

                        PdfPCell cellIDNo = new PdfPCell(new Phrase("P.No : " + Empid, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                        cellIDNo.HorizontalAlignment = 1;
                        cellIDNo.Border = 0;
                        cellIDNo.Colspan = 4;
                        IDCardTemptable1.AddCell(cellIDNo);

                        PdfPCell cellRank = new PdfPCell(new Phrase("Rank : " + Designation, FontFactory.GetFont(fontstyle, Fontsize - 1, Font.BOLD, BaseColor.BLACK)));
                        cellRank.HorizontalAlignment = 1;
                        cellRank.Border = 0;
                        cellRank.Colspan = 4;
                        IDCardTemptable1.AddCell(cellRank);

                        PdfPCell cellDtIssued = new PdfPCell(new Phrase("Date of Issue : " + IDcardIssued, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                        cellDtIssued.HorizontalAlignment = 1;
                        cellDtIssued.Border = 0;
                        cellDtIssued.Colspan = 4;
                        IDCardTemptable1.AddCell(cellDtIssued);

                        PdfPCell cellDtValid = new PdfPCell(new Phrase("Valid Upto : " + IDcardvalid, FontFactory.GetFont(fontstyle, Fontsize - 2, Font.BOLD, BaseColor.BLACK)));
                        cellDtValid.HorizontalAlignment = 1;
                        cellDtValid.Border = 0;
                        cellDtValid.Colspan = 4;
                        IDCardTemptable1.AddCell(cellDtValid);

                        if (EmpSign.Length > 0)
                        {
                            iTextSharp.text.Image Sign = iTextSharp.text.Image.GetInstance(imagepath3 + EmpSign);
                            //Sign.ScalePercent(10f);
                            Sign.ScaleAbsolute(50f, 8f);
                            PdfPCell Signature = new PdfPCell();
                            Paragraph signlogo = new Paragraph();
                            signlogo.Add(new Chunk(Sign, 25f, 0));
                            Signature.AddElement(signlogo);
                            Signature.HorizontalAlignment = 1;
                            Signature.PaddingLeft = 5f;
                            Signature.Colspan = 2;
                            Signature.PaddingTop = -2f;
                            Signature.Border = 0;
                            IDCardTemptable1.AddCell(Signature);
                        }
                        else
                        {

                            PdfPCell Signature = new PdfPCell();
                            Signature.HorizontalAlignment = 1;
                            Signature.Colspan = 2;
                            Signature.PaddingTop = -2f;
                            Signature.Border = 0;
                            Signature.FixedHeight = 15;
                            IDCardTemptable1.AddCell(Signature);

                        }
                        if (File.Exists(imagepath2))
                        {
                            iTextSharp.text.Image IssuingAuth = iTextSharp.text.Image.GetInstance(imagepath2 + "Authority.png");
                            //IssuingAuth.ScalePercent(10f);
                            IssuingAuth.ScaleAbsolute(60f, 8f);
                            PdfPCell Authority = new PdfPCell();
                            Paragraph Authoritylogo = new Paragraph();
                            Authoritylogo.Add(new Chunk(IssuingAuth, 10f, 0));
                            Authority.AddElement(Authoritylogo);
                            Authority.HorizontalAlignment = 0;
                            Authority.Colspan = 2;
                            Authority.PaddingTop = -2f;
                            Authority.Border = 0;
                            IDCardTemptable1.AddCell(Authority);
                        }
                        PdfPCell cellEmpSign = new PdfPCell(new Phrase("Signature of \nCard Holder", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellEmpSign.HorizontalAlignment = 1;
                        cellEmpSign.Border = 0;
                        cellEmpSign.Colspan = 2;
                        cellEmpSign.PaddingLeft = 20f;
                        IDCardTemptable1.AddCell(cellEmpSign);

                        PdfPCell cellAuthority = new PdfPCell(new Phrase("Issuing Authority", FontFactory.GetFont(fontstyle, Fontsize - 2, Font.NORMAL, BaseColor.BLACK)));
                        cellAuthority.HorizontalAlignment = 1;
                        cellAuthority.Border = 0;
                        cellAuthority.Colspan = 2;
                        cellAuthority.PaddingTop = 5;
                        IDCardTemptable1.AddCell(cellAuthority);

                        PdfPCell childTable1 = new PdfPCell(IDCardTemptable1);
                        childTable1.HorizontalAlignment = 0;
                        childTable1.Colspan = 4;
                        IDCarddetails.AddCell(childTable1);

                        PdfPTable IDCardTemptable41 = new PdfPTable(1);
                        IDCardTemptable41.TotalWidth = 6f;
                        //IDCardTemptable41.LockedWidth = true;
                        float[] width41 = new float[] { 0.8f };
                        IDCardTemptable41.SetWidths(width41);

                        PdfPCell cellempcell1 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, Fontsize, Font.NORMAL, BaseColor.BLACK)));
                        cellempcell1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellempcell1.Border = 0;
                        cellempcell1.Colspan = 1;
                        IDCardTemptable41.AddCell(cellempcell1);

                        PdfPCell childTable4 = new PdfPCell(IDCardTemptable41);
                        childTable4.HorizontalAlignment = 0;
                        childTable4.Colspan = 1;
                        childTable4.Border = 0;
                        IDCarddetails.AddCell(childTable4);

                        PdfPTable IDCardTemptable2 = new PdfPTable(4);
                        IDCardTemptable2.TotalWidth = 180f;
                        IDCardTemptable2.LockedWidth = true;
                        float[] width2 = new float[] { 2.3f, 2.3f, 2.3f, 2.3f };
                        IDCardTemptable2.SetWidths(width2);

                        PdfPCell cellInstructions = new PdfPCell(new Phrase("Instructions :", FontFactory.GetFont(fontstyle, fontsize1 + 1, Font.BOLD, BaseColor.BLACK)));
                        cellInstructions.HorizontalAlignment = 0;
                        cellInstructions.Border = 0;
                        cellInstructions.Colspan = 4;
                        //cellInstructions.PaddingTop = -20f;
                        IDCardTemptable2.AddCell(cellInstructions);

                        PdfPCell cellInstructions1 = new PdfPCell(new Phrase("1) ID Card to be worn by employee \n    at all times while on duty.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions1.HorizontalAlignment = 0;
                        cellInstructions1.Border = 0;
                        cellInstructions1.Colspan = 4;
                        IDCardTemptable2.AddCell(cellInstructions1);

                        PdfPCell cellInstructions2 = new PdfPCell(new Phrase("2) Loss or Recovery of the Card shall be \n    reported to HR / Admin Dept.", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions2.HorizontalAlignment = 0;
                        cellInstructions2.Border = 0;
                        cellInstructions2.Colspan = 4;
                        IDCardTemptable2.AddCell(cellInstructions2);

                        PdfPCell cellInstructions3 = new PdfPCell(new Phrase("3) The Finder May Please return to:", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions3.HorizontalAlignment = 0;
                        cellInstructions3.Border = 0;
                        cellInstructions3.Colspan = 4;
                        IDCardTemptable2.AddCell(cellInstructions3);

                        PdfPCell cellInstructions4 = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellInstructions4.HorizontalAlignment = 0;
                        cellInstructions4.Border = 0;
                        cellInstructions4.Colspan = 4;
                        cellInstructions4.PaddingBottom = 5f;
                        IDCardTemptable2.AddCell(cellInstructions4);

                        PdfPCell cellComp = new PdfPCell(new Phrase(CompanyName, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                        cellComp.HorizontalAlignment = 0;
                        cellComp.Border = 0;
                        cellComp.Colspan = 4;
                        //cellComp.PaddingTop = 20;
                        IDCardTemptable2.AddCell(cellComp);

                        PdfPCell cellAddress = new PdfPCell(new Phrase(Address, FontFactory.GetFont(fontstyle, fontsize2 + 1, Font.NORMAL, BaseColor.BLACK)));
                        cellAddress.HorizontalAlignment = 0;
                        cellAddress.Border = 0;
                        cellAddress.Colspan = 4;
                        cellAddress.SetLeading(0f, 1.2f);
                        cellAddress.VerticalAlignment = 13;
                        IDCardTemptable2.AddCell(cellAddress);

                        PdfPCell cellmobile = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellmobile.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellmobile.Border = 0;
                        cellmobile.Colspan = 4;
                        IDCardTemptable2.AddCell(cellmobile);

                        PdfPCell cellmobile1 = new PdfPCell(new Phrase("Fax : " + Faxno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellmobile1.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellmobile1.Border = 0;
                        cellmobile1.Colspan = 4;
                        cellmobile1.PaddingBottom = 5f;
                        IDCardTemptable2.AddCell(cellmobile1);

                        PdfPCell cellEmergency = new PdfPCell(new Phrase("Email : " + Emailid, FontFactory.GetFont(fontstyle, fontsize1, Font.BOLD, BaseColor.BLACK)));
                        cellEmergency.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellEmergency.Border = 0;
                        cellEmergency.Colspan = 4;
                        //cellEmergency.PaddingTop = 5;
                        IDCardTemptable2.AddCell(cellEmergency);

                        PdfPCell cellpolice = new PdfPCell(new Phrase("Helpline : " + Phoneno, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellpolice.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellpolice.Border = 0;
                        cellpolice.Colspan = 4;
                        IDCardTemptable2.AddCell(cellpolice);

                        PdfPCell cellFire = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellFire.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellFire.Border = 0;
                        cellFire.Colspan = 4;
                        IDCardTemptable2.AddCell(cellFire);

                        PdfPCell cellATS = new PdfPCell(new Phrase("ESI No. : " + EmpESINo, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellATS.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellATS.Border = 0;
                        cellATS.Colspan = 4;
                        IDCardTemptable2.AddCell(cellATS);

                        PdfPCell cellBloodGroup = new PdfPCell(new Phrase("Blood Group : " + BloodGroup, FontFactory.GetFont(fontstyle, fontsize1, Font.NORMAL, BaseColor.BLACK)));
                        cellBloodGroup.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellBloodGroup.Border = 0;
                        cellBloodGroup.Colspan = 4;
                        IDCardTemptable2.AddCell(cellBloodGroup);

                        PdfPCell childTable2 = new PdfPCell(IDCardTemptable2);
                        childTable2.HorizontalAlignment = 0;
                        childTable2.Colspan = 4;
                        childTable2.PaddingLeft = 20;
                        IDCarddetails.AddCell(childTable2);

                        PdfPTable IDCardTemptable31 = new PdfPTable(1);
                        IDCardTemptable31.TotalWidth = 2f;
                        IDCardTemptable31.LockedWidth = true;
                        float[] width31 = new float[] { 1f };
                        IDCardTemptable31.SetWidths(width31);

                        PdfPCell cellempcell = new PdfPCell(new Phrase("", FontFactory.GetFont(fontstyle, fontsize2, Font.NORMAL, BaseColor.BLACK)));
                        cellempcell.HorizontalAlignment = Element.ALIGN_JUSTIFIED;
                        cellempcell.Border = 0;
                        cellempcell.Colspan = 1;
                        IDCardTemptable31.AddCell(cellempcell);

                        PdfPCell childTable3 = new PdfPCell(IDCardTemptable31);
                        childTable3.HorizontalAlignment = 0;
                        childTable3.Colspan = 1;
                        childTable3.Border = 0;
                        IDCarddetails.AddCell(childTable3);

                        PdfPCell childTable6 = new PdfPCell(IDCarddetails);
                        childTable6.HorizontalAlignment = 0;
                        childTable6.Colspan = 18;
                        childTable6.Border = 0;
                        childTable6.PaddingLeft = -180;
                        childTable6.PaddingBottom = 10;
                        MainIDCarddetails.AddCell(childTable6);

                        #endregion for range ID Card Display

                        PdfPCell empcellnew = new PdfPCell();
                        empcellnew.HorizontalAlignment = 0;
                        empcellnew.Colspan = 9;
                        empcellnew.Border = 0;
                        MainIDCarddetails.AddCell(empcellnew);

                        document.Add(MainIDCarddetails);



                    }
                    #endregion for range ID Card Display
                }

                document.Close();
                Response.ContentType = "application/pdf";
                Response.AddHeader("content-disposition", "attachment;filename=IDCard.pdf");
                Response.Buffer = true;
                Response.Clear();
                Response.OutputStream.Write(ms.GetBuffer(), 0, ms.GetBuffer().Length);
                Response.OutputStream.Flush();
                Response.End();

            }

        }

        protected void ddlEmpIDoptions_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (ddlEmpIDoptions.SelectedIndex == 0)
            {
                lblfrmempid.Visible = false;
                txtfromempid.Visible = false;
                lbltoempid.Visible = false;
                txttoempid.Visible = false;

                lblempid.Visible = true;
                txtEmpid.Visible = true;
                lblempname.Visible = true;
                txtName.Visible = true;
            }

            if (ddlEmpIDoptions.SelectedIndex == 1)
            {
                lblfrmempid.Visible = true;
                txtfromempid.Visible = true;
                lbltoempid.Visible = true;
                txttoempid.Visible = true;
                lblempid.Visible = false;
                txtEmpid.Visible = false;
                lblempname.Visible = false;
                txtName.Visible = false;
            }
        }
    }
}